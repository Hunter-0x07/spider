{"你们都是怎么学 Python 的？": "<p>给大家推荐一个Python资源。</p><p>有位名叫骆昊 (jackfrued) 的资深程序员，为大家规划了一条从“<b>从新手到大师</b>”的百天之路。</p><p>从全方位熟悉语言，到Python的进阶用法，再到天南地北的实战攻略：只要沿着这条路走下去，就都会遇到的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-b0e06d7dfb78d45050c0af41a8171ff0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1224\" data-rawheight=\"580\" class=\"origin_image zh-lightbox-thumb\" width=\"1224\" data-original=\"https://pic4.zhimg.com/v2-b0e06d7dfb78d45050c0af41a8171ff0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1224'%20height='580'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1224\" data-rawheight=\"580\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1224\" data-original=\"https://pic4.zhimg.com/v2-b0e06d7dfb78d45050c0af41a8171ff0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-b0e06d7dfb78d45050c0af41a8171ff0_720w.jpg?source=54b3c3a5\"></figure><p>这个项目已经在GitHub摘下<b>8100星</b>。</p><p>骆先生还在日程表的上方，温柔地鼓励了大家：</p><blockquote>Python是一个“优雅”、“明确”、“简单”的编程语言。<br>学习曲线低，非专业人士也能上手。</blockquote><p>你一定也想知道，这100天都会经历些什么。</p><h2><b>开始是萌新</b></h2><p>最初的15天，都是<b>Python语言基础</b>的修炼。基本功很重要，每日内容也很丰满：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.jpg?source=54b3c3a5\" class=\"content_image\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='0'%20height='0'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.gif?source=54b3c3a5\"></figure><p>第一天，按照教程的步骤，搭好编程环境，充实的生活就可以展开了。</p><p>第二天是<b>语言元素</b>，第三天<b>分支结构</b>，第四天<b>循环结构</b>。比如，打开循环结构这一小节，会看到这类结构的用途讲解，各种语句的有毒基础用法，以及小练习 (如下) 。</p><p>while循环：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-4fbcb83552a634cd678e4a1c3d32b7be_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"770\" data-rawheight=\"1024\" class=\"origin_image zh-lightbox-thumb\" width=\"770\" data-original=\"https://pic2.zhimg.com/v2-4fbcb83552a634cd678e4a1c3d32b7be_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='770'%20height='1024'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"770\" data-rawheight=\"1024\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"770\" data-original=\"https://pic2.zhimg.com/v2-4fbcb83552a634cd678e4a1c3d32b7be_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-4fbcb83552a634cd678e4a1c3d32b7be_720w.jpg?source=54b3c3a5\"><figcaption>△智商余额不足</figcaption></figure><p><br><br>第五天，就是初步总结和小测的日子了。看上去，测试题还很生动：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-c4bfeb13eb6e31f343ef3e2fbb033914_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"215\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-c4bfeb13eb6e31f343ef3e2fbb033914_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='215'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"215\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-c4bfeb13eb6e31f343ef3e2fbb033914_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-c4bfeb13eb6e31f343ef3e2fbb033914_720w.jpg?source=54b3c3a5\"></figure><p>后面的10天，大致是这样：</p><blockquote>第六天：函数和模块的使用<br>第七天：字符串和常用数据结构<br>第八天：面向对象编程基础<br>第九天：面向对象进阶<br>第十天：图形用户界面和游戏开发<br>第十一天：文件和异常<br>第十二天：字符串和正则表达式<br>第十三天：进程和线程<br>第十四天A：网络编程入门<br>第十四天B：网络应用开发<br>第十五天：图像和文档处理</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-45d5ffa62ffb9ea8cf9014d85d405a1f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" class=\"content_image\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='0'%20height='0'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" class=\"content_image lazy\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-45d5ffa62ffb9ea8cf9014d85d405a1f_720w.jpg?source=54b3c3a5\"></figure><p>其中，第十章是真·游戏课，会讲到“炮弹打中了飞机”“箱子摔在了地面上”这样的<b>碰撞</b>该怎么写，还要写个“<b>大球吃小球</b>”的游戏。</p><p>节奏这样欢快，这样治愈，你就不会放弃了吧。</p><p>至少，过了这15天，就不是个纯纯的萌新了。</p><h2><b>进阶与实践</b></h2><p>基础打好之后，第16-20天，是<b>Python语言进阶</b>修炼。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-932e2026bcc7057baf22863d95fbaed5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"396\" class=\"origin_image zh-lightbox-thumb\" width=\"654\" data-original=\"https://pic4.zhimg.com/v2-932e2026bcc7057baf22863d95fbaed5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='654'%20height='396'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"396\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"654\" data-original=\"https://pic4.zhimg.com/v2-932e2026bcc7057baf22863d95fbaed5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-932e2026bcc7057baf22863d95fbaed5_720w.jpg?source=54b3c3a5\"></figure><p>你会把前面15天的修炼成果升级一波：用上不同的数据结构、算法，熟悉各种高级的操作。</p><p>这5天里，依然有许多有趣又经典的例子，比如在讲<b>贪心算法</b>的时候：</p><blockquote>假设小偷有一个背包，最多能装20公斤赃物，他闯入一户人家，发现如下表所示的物品。显然，他不能把所有物品都装进背包，所以必须确定拿走哪些物品，留下哪些物品。</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-cba79c08b9b29a5b54f76d4b35488582_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"548\" class=\"origin_image zh-lightbox-thumb\" width=\"654\" data-original=\"https://pic2.zhimg.com/v2-cba79c08b9b29a5b54f76d4b35488582_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='654'%20height='548'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"548\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"654\" data-original=\"https://pic2.zhimg.com/v2-cba79c08b9b29a5b54f76d4b35488582_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-cba79c08b9b29a5b54f76d4b35488582_720w.jpg?source=54b3c3a5\"></figure><p>当然，游戏还是不能少，本章有纸牌游戏可以写着玩。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-0998d7e78527e676fe6e4827496da869_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" class=\"content_image\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='0'%20height='0'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" class=\"content_image lazy\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-0998d7e78527e676fe6e4827496da869_720w.jpg?source=54b3c3a5\"></figure><p>完成前20天的任务，你就是个小有经验的Python程序猿了。</p><p>再经过20天的姿势补充，就变得更加丰盈：</p><blockquote>第21-30天：Web前端入门<br>第31-35天：玩转Linux操作系统<br>第36-40天：数据库基础和进阶</blockquote><p>这时，可以走出家门，去广阔的天地里实践了：</p><blockquote>第41-55天：Django实战<br>第55-65天：Flask实战<br>第66-75天：爬虫开发<br><b>第76-90天：数据处理和机器学习</b><br>第90-100天：团队项目开发</blockquote><p>你可能已经发现了，“数据处理和机器学习”是最持久的一章，<b>历时15天</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-b3ae73c4aaa6c62ea332161d00e17cc7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"674\" data-rawheight=\"1408\" class=\"origin_image zh-lightbox-thumb\" width=\"674\" data-original=\"https://pic2.zhimg.com/v2-b3ae73c4aaa6c62ea332161d00e17cc7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='674'%20height='1408'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"674\" data-rawheight=\"1408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"674\" data-original=\"https://pic2.zhimg.com/v2-b3ae73c4aaa6c62ea332161d00e17cc7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-b3ae73c4aaa6c62ea332161d00e17cc7_720w.jpg?source=54b3c3a5\"></figure><p>从各类Python库的用法，到决策树、贝叶斯分类、支持向量机这些常用方法，再到机器学习实战，这个章节都覆盖了。</p><p>美中不足，这章的教程似乎还没有更新完全。不过，但前面的75天，已经可以尽情探索了。</p><p>就算你已经不是纯纯的萌新，还是可以找到自己需要的章节，定点修炼。</p><p>那么，快开始吧：</p><p>项目传送门：<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/jackfrued/Py</span><span class=\"invisible\">thon-100-Days</span><span class=\"ellipsis\"></span></a></p><p>— <b>完</b> —<br>量子位 · QbitAI<br>վ'ᴗ' ի 追踪AI技术和产品新动态</p><a href=\"https://www.zhihu.com/org/liang-zi-wei-48\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-ca6e7ffc10a0d10edbae635cee82d007_l.jpg?source=54b3c3a5\" data-image-width=\"250\" data-image-height=\"250\" class=\"internal\">量子位</a><p>欢迎大家关注我们，以及订阅<a href=\"https://zhuanlan.zhihu.com/qbitai\" class=\"internal\">我们的知乎专栏</a></p>", "学 Python 都用来干嘛的？": "<h2>python能做太多有趣的事了，看看我是怎么玩的</h2><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ca959a5a318379b3998e1ca2147d9d9a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"425\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-92f0ae93e9ac0753a09f7bc68b95d53c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic2.zhimg.com/v2-ca959a5a318379b3998e1ca2147d9d9a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='500'%20height='425'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"425\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-92f0ae93e9ac0753a09f7bc68b95d53c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"500\" data-original=\"https://pic2.zhimg.com/v2-ca959a5a318379b3998e1ca2147d9d9a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ca959a5a318379b3998e1ca2147d9d9a_720w.jpg?source=54b3c3a5\"></figure><h2>自动发邮件</h2><a href=\"https://zhuanlan.zhihu.com/p/89868804\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-e28b0d5c3ff2dd167cc10426897c81d2_bh.jpg?source=54b3c3a5\" data-image-width=\"1280\" data-image-height=\"716\" class=\"internal\">朱卫军：干货 | 解放双手,用Python实现自动发送邮件</a><h2>自动化操作excel</h2><a href=\"https://zhuanlan.zhihu.com/p/82783751\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-ebc8e030d2cc941a6d54bbec300e8ca1_bh.jpg?source=54b3c3a5\" data-image-width=\"1200\" data-image-height=\"500\" class=\"internal\">朱卫军：xlwings，让excel飞起来！</a><a href=\"https://zhuanlan.zhihu.com/p/104524969\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-00ddd51bdde15b8411bdebb86a434b11_bh.jpg?source=54b3c3a5\" data-image-width=\"980\" data-image-height=\"506\" class=\"internal\">朱卫军：python读写excel等数据文件方法汇总</a><a href=\"https://www.zhihu.com/question/358012330/answer/963749700\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-67f5e81ae7d6d8981649b768667ea8a4_l.jpg?source=54b3c3a5\" data-image-width=\"1005\" data-image-height=\"942\" class=\"internal\">用python进行办公自动化都需要学习什么知识呢？</a><p>最近做了个Python办公自动化的Live讲座，里面对技术讲得更加详细</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><h2>定制酷炫二维码</h2><a href=\"https://zhuanlan.zhihu.com/p/78402705\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-098f4b94ef60604708a38bad7e056ceb_bh.jpg?source=54b3c3a5\" data-image-width=\"824\" data-image-height=\"387\" class=\"internal\">朱卫军：教你使用Python制作酷炫二维码</a><h2>下载视频、MP3</h2><a href=\"https://zhuanlan.zhihu.com/p/78096018\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-bbfb7a7215fb7730188eb272cca29a89_bh.jpg?source=54b3c3a5\" data-image-width=\"1008\" data-image-height=\"580\" class=\"internal\">朱卫军：教你使用Python下载b站等各大主流网站音视频</a><h2>爬虫</h2><a href=\"https://zhuanlan.zhihu.com/p/79378718\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-eb3541a021dc27a86ef8314c3016fff0_bh.jpg?source=54b3c3a5\" data-image-width=\"1080\" data-image-height=\"608\" class=\"internal\">朱卫军：哪吒票房超复联4，100行python代码抓取豆瓣短评，看看网友怎么说</a><a href=\"https://zhuanlan.zhihu.com/p/83968537\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-8e6f6848b826a6140a54fa31e6405a93_bh.jpg?source=54b3c3a5\" data-image-width=\"877\" data-image-height=\"341\" class=\"internal\">朱卫军：使用requests爬取python岗位招聘数据</a><a href=\"https://zhuanlan.zhihu.com/p/77560712\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-3d13d5be2b663f6e9a1fb316c369ae96_bh.jpg?source=54b3c3a5\" data-image-width=\"863\" data-image-height=\"517\" class=\"internal\">朱卫军：小白如何入门 Python 爬虫？</a><a href=\"https://www.zhihu.com/question/21358581/answer/938126439\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-ea1b6eb85398400cb749de06c1453092_l.jpg?source=54b3c3a5\" data-image-width=\"959\" data-image-height=\"1080\" class=\"internal\">你是如何开始能写 Python 爬虫？</a><a href=\"https://zhuanlan.zhihu.com/p/73742321\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-23f8cffe631834d936bf11efe4aa6b73_bh.jpg?source=54b3c3a5\" data-image-width=\"518\" data-image-height=\"300\" class=\"internal\">朱卫军：干货！python爬虫100个入门项目</a><a href=\"https://zhuanlan.zhihu.com/p/259626718\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-f311fd38456be5aeb18eb42ef9c89350_bh.jpg?source=54b3c3a5\" data-image-width=\"801\" data-image-height=\"323\" class=\"internal\">朱卫军：selenium入门详细指南（附淘宝抢购案例）</a><h2>HTML\\网页自动生成PDF</h2><a href=\"https://zhuanlan.zhihu.com/p/94608155\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-8d3f7869111bd92a7cf8b72860ce7b8f_bh.jpg?source=54b3c3a5\" data-image-width=\"1137\" data-image-height=\"649\" class=\"internal\">朱卫军：pdfkit | 利用python实现html文件转pdf</a><h2>制作可视化图表</h2><a href=\"https://zhuanlan.zhihu.com/p/113312256\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-002ec20e97f75ebeecaefc1b0194328b_bh.jpg?source=54b3c3a5\" data-image-width=\"867\" data-image-height=\"421\" class=\"internal\">朱卫军：使用pyecharts绘制词云图-淘宝商品评论展示</a><a href=\"https://zhuanlan.zhihu.com/p/84600119\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-f71714ff623a0722f31c82052d4da687_bh.jpg?source=54b3c3a5\" data-image-width=\"600\" data-image-height=\"271\" class=\"internal\">朱卫军：干货 | Bokeh交互式数据可视化快速入门</a><a href=\"https://zhuanlan.zhihu.com/p/83231415\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-e3540a6cc23d378459c34b99bbd47c11_bh.jpg?source=54b3c3a5\" data-image-width=\"1282\" data-image-height=\"553\" class=\"internal\">朱卫军：干货 | 使用pyecharts绘制交互式动态地图</a><a href=\"https://zhuanlan.zhihu.com/p/81553421\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-110ca1ecb79a502bf21535e6ae7e820b_bh.jpg?source=54b3c3a5\" data-image-width=\"850\" data-image-height=\"382\" class=\"internal\">朱卫军：数据可视化，Seaborn画图原来这么好看</a><a href=\"https://zhuanlan.zhihu.com/p/80410924\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-dbc7f5db840949c8b057662cb4da6c81_bh.jpg?source=54b3c3a5\" data-image-width=\"1251\" data-image-height=\"660\" class=\"internal\">朱卫军：教你用pyecharts制作交互式桑基图，赶快学起来吧！</a><a href=\"https://www.zhihu.com/question/24590883/answer/729452252\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-736d0a17b98ec47ffcbf2616bc3e28c8_l.jpg?source=54b3c3a5\" data-image-width=\"3170\" data-image-height=\"3950\" class=\"internal\">哪些 Python 库让你相见恨晚？</a><a href=\"https://www.zhihu.com/question/33783546/answer/960303400\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-f311b4d9f47ff5426ced37ca6ee5136b_bh.jpg?source=54b3c3a5\" data-image-width=\"886\" data-image-height=\"668\" class=\"internal\">python如何画出漂亮的地图？</a><h2>地理空间分析</h2><a href=\"https://zhuanlan.zhihu.com/p/80210579\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-2188187bf77ce8935853a63b17c84f71_bh.jpg?source=54b3c3a5\" data-image-width=\"656\" data-image-height=\"379\" class=\"internal\">朱卫军：geopandas，用python分析地理空间数据原来这么简单！</a><h2>数据分析</h2><a href=\"https://zhuanlan.zhihu.com/p/85967505\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-4da2802068c6e1b5ba9be703e0444d47_bh.jpg?source=54b3c3a5\" data-image-width=\"736\" data-image-height=\"408\" class=\"internal\">朱卫军：pandas_profiling ：教你一行代码生成数据分析报告</a><a href=\"https://zhuanlan.zhihu.com/p/82251858\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-e6852943717d0141c4bd741fa7911303_bh.jpg?source=54b3c3a5\" data-image-width=\"979\" data-image-height=\"572\" class=\"internal\">朱卫军：Python数据分析案例 | 台风最喜欢在我国哪个省市登陆</a><a href=\"https://zhuanlan.zhihu.com/p/87403131\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-13c1fffe7e3b20db5d7aa0cce53abdc2_bh.jpg?source=54b3c3a5\" data-image-width=\"954\" data-image-height=\"616\" class=\"internal\">朱卫军：JupyterLab，极其强大的下一代notebook！</a><a href=\"https://zhuanlan.zhihu.com/p/101070029\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-ff135f26c3a322b1f83371a59edc903a_bh.jpg?source=54b3c3a5\" data-image-width=\"1181\" data-image-height=\"674\" class=\"internal\">朱卫军：15个好用到爆炸的Jupyter Lab插件</a><a href=\"https://zhuanlan.zhihu.com/p/267208129\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-858ffa7b9cc416ae4d573ca083714771_bh.jpg?source=54b3c3a5\" data-image-width=\"982\" data-image-height=\"388\" class=\"internal\">朱卫军：在pandas中使用数据透视表</a><a href=\"https://zhuanlan.zhihu.com/p/240797772\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-4c1d490a503db426046e42a5736387bd_bh.jpg?source=54b3c3a5\" data-image-width=\"758\" data-image-height=\"233\" class=\"internal\">朱卫军：Vaex ：突破pandas，快速分析100G大数据量</a><h2>连接数据库</h2><a href=\"https://zhuanlan.zhihu.com/p/45533287\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">朱卫军：如何通过Python将CSV文件导入MySQL数据库？</a><a href=\"https://zhuanlan.zhihu.com/p/37552115\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">朱卫军：如何使用python连接数据库？</a><a href=\"https://zhuanlan.zhihu.com/p/196807781\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-ecfa83c6ea7731fad5b979ba2cb7ba64_bh.jpg?source=54b3c3a5\" data-image-width=\"864\" data-image-height=\"363\" class=\"internal\">朱卫军：Python sqlite3数据库模块使用攻略</a><h2>机器学习</h2><a href=\"https://zhuanlan.zhihu.com/p/53278304\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-f851ed71d4258ed18a4069bbeee0c8c9_bh.jpg?source=54b3c3a5\" data-image-width=\"566\" data-image-height=\"202\" class=\"internal\">朱卫军：如何使用Python scikit-learn机器学习库做分类和回归预测</a><a href=\"https://zhuanlan.zhihu.com/p/51812293\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">朱卫军：Keras中的多变量时间序列预测-LSTMs</a><a href=\"https://zhuanlan.zhihu.com/p/75285353\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-99c1ffd6ad947b5089cb85af91cb22ca_bh.jpg?source=54b3c3a5\" data-image-width=\"775\" data-image-height=\"377\" class=\"internal\">朱卫军：Python机器学习·微教程</a><a href=\"https://zhuanlan.zhihu.com/p/74616776\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-fdcf86596d1e37ff459eceba76402416_bh.jpg?source=54b3c3a5\" data-image-width=\"709\" data-image-height=\"522\" class=\"internal\">朱卫军：深入了解机器学习 (Descending into ML)：线性回归</a><h2>如果你不知道如何学习python，入门困难</h2><a href=\"https://www.zhihu.com/question/60402355/answer/770025809\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-8d5a07443afad75dcf1161284bf1ea4f_bh.jpg?source=54b3c3a5\" data-image-width=\"1315\" data-image-height=\"892\" class=\"internal\">为什么自学Python看不进去？</a><a href=\"https://www.zhihu.com/question/37180159/answer/761102349\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-d5c7e46dd43e9bcfb11cca04dbac0825_200x0.jpg?source=54b3c3a5\" data-image-width=\"386\" data-image-height=\"508\" class=\"internal\">如何系统地学习Python 中 matplotlib, numpy, scipy, pandas？</a><a href=\"https://www.zhihu.com/question/34907211/answer/754625411\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">Python 有哪些好的学习资料或者博客？</a><a href=\"https://www.zhihu.com/question/20702054/answer/567265973\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-12b2524e259e4f1a2d406c3db21dd995_l.jpg?source=54b3c3a5\" data-image-width=\"917\" data-image-height=\"849\" class=\"internal\">你是如何自学 Python 的？</a><h2>如果你想从事数据分析，学习分析技术</h2><a href=\"https://www.zhihu.com/question/19755921/answer/842390681\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-0e9fe26fa86713a38be62b10117c710a_bh.jpg?source=54b3c3a5\" data-image-width=\"1323\" data-image-height=\"753\" class=\"internal\">超级菜鸟怎么学习数据分析？</a><a href=\"https://www.zhihu.com/question/336897569/answer/763169270\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">使用python进行数据分析工作，要掌握哪些数学知识?</a><a href=\"https://www.zhihu.com/question/319677527/answer/751962703\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">数据挖掘和机器学习到底有什么区别？</a><a href=\"https://www.zhihu.com/question/323405763/answer/719963073\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-3a721945447231f464bc615b16e7c0e7_200x0.jpg?source=54b3c3a5\" data-image-width=\"1403\" data-image-height=\"4096\" class=\"internal\">数据库，SQL，Power BI，Tableau哪里学效果好？</a><a href=\"https://zhuanlan.zhihu.com/p/98094833\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-794a8575f409a8b0b108f6d5128a9ffc_bh.jpg?source=54b3c3a5\" data-image-width=\"811\" data-image-height=\"340\" class=\"internal\">朱卫军：干货 | 50题带你玩转numpy</a><a href=\"https://zhuanlan.zhihu.com/p/231591842\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-c0a9ec23c9a5c9ef751bc6a031149fc6_bh.jpg?source=54b3c3a5\" data-image-width=\"556\" data-image-height=\"297\" class=\"internal\">朱卫军：6个pandas数据处理小技巧，提升效率必备</a><a href=\"https://zhuanlan.zhihu.com/p/185044102\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-818daf8126982f07f1b74d85c43c301a_bh.jpg?source=54b3c3a5\" data-image-width=\"982\" data-image-height=\"423\" class=\"internal\">朱卫军：高效的10个Pandas函数，你都用过了吗？</a><a href=\"https://zhuanlan.zhihu.com/p/166165379\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-7615bdc4a9403b4bc814ab16eda16833_bh.jpg?source=54b3c3a5\" data-image-width=\"952\" data-image-height=\"359\" class=\"internal\">朱卫军：泣血整理，Jupyter Notebook最常用的五大配置技巧</a><a href=\"https://zhuanlan.zhihu.com/p/125696272\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-e41869450c23aeda8349ef959b23098f_bh.jpg?source=54b3c3a5\" data-image-width=\"816\" data-image-height=\"433\" class=\"internal\">朱卫军：Numpy基础20问</a><h2>如果你想学习sql</h2><a href=\"https://www.zhihu.com/question/26601075/answer/743345343\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-82abbed1c5d9983e55d37d8e9b7af113_200x0.jpg?source=54b3c3a5\" data-image-width=\"720\" data-image-height=\"1138\" class=\"internal\">没有任何基础的人怎么学SQL？</a><a href=\"https://www.zhihu.com/question/379694223/answer/1588502438\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-94e5c92d036360f657ed65143b76b71b_bh.jpg?source=54b3c3a5\" data-image-width=\"1468\" data-image-height=\"1132\" class=\"internal\">数据分析人员需要掌握sql到什么程度？</a><h2>如果你想学习tableau</h2><a href=\"https://www.zhihu.com/question/29478254/answer/745600500\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-0c3ddce90f36581bc74668838f866951_bh.jpg?source=54b3c3a5\" data-image-width=\"1436\" data-image-height=\"1124\" class=\"internal\">如何学习tableau？</a><h2>如果你想选择一些好的python技术书</h2><a href=\"https://www.zhihu.com/question/314024044/answer/1557377061\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-5d14e871dd0881ebfcbca2796dcb9e91_bh.jpg?source=54b3c3a5\" data-image-width=\"1237\" data-image-height=\"540\" class=\"internal\">有什么好的自学 Python 的书籍推荐？</a><a href=\"https://www.zhihu.com/question/281789365/answer/889933723\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-f715613c5caf6effe81df05c74f20a85_l.jpg?source=54b3c3a5\" data-image-width=\"400\" data-image-height=\"400\" class=\"internal\">入门python有什么好的书籍推荐？</a><a href=\"https://www.zhihu.com/question/374036160/answer/1393470104\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">有什么关于python的书值得阅读？</a><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><h2>Python基础知识小技巧</h2><a href=\"https://zhuanlan.zhihu.com/p/96384066\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-a559499123e5a054b878b8787d88b19b_bh.jpg?source=54b3c3a5\" data-image-width=\"990\" data-image-height=\"512\" class=\"internal\">朱卫军：一文搞懂python日期时间处理</a><a href=\"https://zhuanlan.zhihu.com/p/81011370\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-3954968b53d43ad00cab995276093e85_bh.jpg?source=54b3c3a5\" data-image-width=\"581\" data-image-height=\"260\" class=\"internal\">朱卫军：一文搞懂Python循环小技巧</a><a href=\"https://zhuanlan.zhihu.com/p/79748741\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-e5c4edd139f32a806756050ae56b66a9_bh.jpg?source=54b3c3a5\" data-image-width=\"708\" data-image-height=\"341\" class=\"internal\">朱卫军：一文搞懂Python错误和异常</a><a href=\"https://zhuanlan.zhihu.com/p/78698111\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-3987fa37f724629c1be587a0b7d88fc7_bh.jpg?source=54b3c3a5\" data-image-width=\"500\" data-image-height=\"289\" class=\"internal\">朱卫军：一文搞懂Python匿名函数</a><a href=\"https://zhuanlan.zhihu.com/p/78330811\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-f66badf9a32333b594c4a699e878554c_bh.jpg?source=54b3c3a5\" data-image-width=\"1277\" data-image-height=\"821\" class=\"internal\">朱卫军：一文搞懂Python文件读写</a><a href=\"https://zhuanlan.zhihu.com/p/77311224\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-87f0325ba5253f6b5560ae17ca64ebef_bh.jpg?source=54b3c3a5\" data-image-width=\"537\" data-image-height=\"290\" class=\"internal\">朱卫军：一文搞懂python的map、reduce函数</a><a href=\"https://zhuanlan.zhihu.com/p/76831058\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-939b50e26547b9aa4a9148403e5a3b15_bh.jpg?source=54b3c3a5\" data-image-width=\"750\" data-image-height=\"300\" class=\"internal\">朱卫军：一文搞懂Python迭代器和生成器</a><a href=\"https://zhuanlan.zhihu.com/p/104524108\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-5447df1ab8936d844e0e9993d4f865db_bh.jpg?source=54b3c3a5\" data-image-width=\"744\" data-image-height=\"419\" class=\"internal\">朱卫军：50个关于IPython的使用技巧，get起来！</a><a href=\"https://zhuanlan.zhihu.com/p/114526251\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-15f77cf329ba0feacd87e2036dea3527_bh.jpg?source=54b3c3a5\" data-image-width=\"1115\" data-image-height=\"549\" class=\"internal\">朱卫军：8个超好用的Python内置函数，提升效率必备</a><a href=\"https://zhuanlan.zhihu.com/p/108713135\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-8f1b4fb7beaa4d5b712e53c7a18fa25f_bh.jpg?source=54b3c3a5\" data-image-width=\"1063\" data-image-height=\"585\" class=\"internal\">朱卫军：用好collections模块，对李白诗集进行字频统计</a><a href=\"https://zhuanlan.zhihu.com/p/268605982\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-0715d23901fd6f7e4ce5c77fd1c6ee4e_bh.jpg?source=54b3c3a5\" data-image-width=\"1021\" data-image-height=\"423\" class=\"internal\">朱卫军：如何理解Python中的yield用法?</a><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d96fe6f27bf5b2b48e61e0d240ac0883_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"899\" data-rawheight=\"355\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7ae01c495bb4679b7f28249aa4633db4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"899\" data-original=\"https://pic1.zhimg.com/v2-d96fe6f27bf5b2b48e61e0d240ac0883_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='899'%20height='355'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"899\" data-rawheight=\"355\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7ae01c495bb4679b7f28249aa4633db4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"899\" data-original=\"https://pic1.zhimg.com/v2-d96fe6f27bf5b2b48e61e0d240ac0883_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d96fe6f27bf5b2b48e61e0d240ac0883_720w.jpg?source=54b3c3a5\"></figure><p></p>", "编程零基础应当如何开始学习 Python？": "<p>零基础学编程，用python入门是个不错的选择，虽然国内基本上还是以c语言作为入门开发语言，但在国外，已经有很多的学校使用python作为入门编程语言。此外，python在机器学习，人工智能领域也非常流行，算得上是算法工程师的标配编程语言。</p><p><b>下面的内容由浅入深，建议按照先后顺序阅读学习。如果你觉得内容不错，希望别做松鼠党，收藏了就不了了之，坚持读完，有条件的最好是购买书籍阅读效果更好。本文分享的内容和文末推荐的书籍均出自vamei君。</b></p><h2>一. Python基础</h2><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/05/28/2521650.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础01 Hello World!</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/05/28/2522385.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础02 基本数据类型</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/05/28/2522677.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础03 序列</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/05/29/2524376.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础04 运算</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/05/29/2524706.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础05 缩进和选择</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/05/30/2526357.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础06 循环</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/06/01/2529500.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础07 函数</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/06/02/2531515.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础08 面向对象的基本概念</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/06/02/2532018.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础09 面向对象的进一步拓展</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/06/02/2532274.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础10 反过头来看看</a></p><h2>二. Python进阶</h2><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/06/06/2537436.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python进阶01 词典</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/06/06/2537868.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python进阶02 文本文件的输入输出 </a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/07/03/2574436.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python进阶03 模块 </a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/07/08/2581264.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python进阶04 函数的参数传递 </a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/07/09/2582435.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python进阶05 循环设计 </a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/07/09/2582499.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python进阶06 循环对象 </a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/07/10/2582772.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python进阶07 函数对象 </a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/07/10/2582787.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python进阶08 错误处理 </a></p><h2>三. Python深入 </h2><p>到现在为止，Python学习已经可以告一段落。下面的部分，我想讨论Python的高级语法和底层实现。这一部分的内容并不是使用Python所必须的。但如果你想从事一些大型的Python开发(比如制作Python工具、写一个框架等)，你会希望对这一部分内容有所的了解。 <br><br><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/11/19/2772441.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python深入01 特殊方法与多范式</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/11/23/2772445.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python深入02 上下文管理器</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/12/11/2772448.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python深入03 对象的属性</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/12/15/2772451.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python深入04 闭包</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2013/02/16/2820212.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python深入05 装饰器</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/p/3232088.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python深入06 内存管理</a></p><h2>四. Python标准库 </h2><p>Python标准库的重要性在于：</p><ul><li>标准库是Python的一个组成部分。</li><li>Python的哲学是一个问题只有一个最好的解决方法。这些标准库为许多问题提供了一个标准的解决方案。</li></ul><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/07/18/2597212.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库——走马观花</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/07/23/2605345.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库的学习准备</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/08/31/2661870.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库01 正则表达式 (re包)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/09/03/2669426.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库02 时间与日期 (time, datetime包)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/09/05/2671198.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库03 路径与文件 (os.path包, glob包)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/09/14/2684775.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库04 文件管理 (部分os包，shutil包)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/09/15/2684781.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库05 存储对象 (pickle包，cPickle包)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/09/23/2698014.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库06 子进程 (subprocess包)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/10/06/2712683.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库07 信号 (signal包)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/10/11/2720042.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库08 多线程与同步 (threading包)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/10/12/2721016.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库09 进程信息 (部分os包)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/10/12/2721484.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库10 多进程初步 (multiprocessing包)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/10/13/2722254.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库11 多进程探索 (multiprocessing包)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/10/26/2741702.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库12 数学与随机数 (math包，random包)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/p/3174796.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库13 循环器 (itertools)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/p/3794388.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库14 数据库 (sqlite3)</a></p><p><br></p><p><b>最后推荐知名博主vamei君的书，非常非常值得推荐的一本书。是对上述内容的一个整理提炼与扩充。</b></p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p>附《从Python开始学编程》作者简介：</p><blockquote>张腾飞， 笔名 Vamei，中国科学技术大学学士，南洋理工大学博士。著有《从Python开始学编程》等书，并写作 Java、网络协议、数据分析等方面的教程。他的博客访问量超过800万。现从事智能农业领域的创新创业，任睿畜科技首席技术官。2019年2月28日夜因抑郁症去世。</blockquote><p>在朋友圈看到他去世的消息，震惊又难过，RIP！</p>", "Python 的练手项目有哪些值得推荐？": "<p>2020年6月16日更新：</p><p>重新检查整理了下面推荐的项目教程，有些版本老的、内容过期的都做了更新，现在推荐的都是保证可以使用在线环境完成的，大家可以选择自己感兴趣的练习。Learn by doing才是正确的技术学习姿势。</p><p>………………………………………………分隔线………………………………………………</p><p>最近几天刚好在整理Python项目，项目由易到难，代码量从几十行到几千行，在实验环境里保证可以全部完成。找到你认为有趣的去实现它，把项目做出来，知识才能变成自己的：）</p><p>(建议PC端访问，边看教程边在环境里动手实践，手机上仅可查看教程)</p><p>入门和进阶篇均为免费课程，可以免费使用在线练习环境。</p><p><b>入门篇</b></p><p>0. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1330\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 新手入门</a></p><p>首先给完全没有编程基础的同学推荐下这个入门教程，做项目也要先上手基础语法，这份教程中的几个实验可以让完全零基础的同学在一下午时间入门 Linux、Python 基础和Github 常用命令，不信可以试试：）</p><p>1.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/370\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python - Python 图片转字符画</a></p><p>50 行 Python 代码完成图片转字符画小工具。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/739f35ab6c535fcb83d16a02693fa5f4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" class=\"content_image\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='0'%20height='0'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" class=\"content_image lazy\" data-actualsrc=\"https://pic1.zhimg.com/50/739f35ab6c535fcb83d16a02693fa5f4_720w.jpg?source=54b3c3a5\"></figure><p>2.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/368\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python - 200行Python代码实现2048</a></p><p>仅用200行的python代码完成2048小游戏的编写。</p><p>3.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1126\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 生成个性二维码</a></p><p>使用 Python 基于MyQR实现生成普通二维码，带图片的艺术二维码，动态二维码。</p><p>4.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/970\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 实现文字聊天室_Python</a></p><p>实现一个简单的图形界面聊天系统。我们可以通过图形客户端登录聊天室，并与其他成员进行聊天。</p><p>5.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/408\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python - 全面解析PythonChallenge</a></p><p>本课程带领大家一步一步攻克Python Challenge中的难题，在一个又一个脑洞大开的 Python 问题中提升自己的 Python 水平。 </p><p>6.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1041\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用 Python 创建照片马赛克</a></p><p>使用 Python 创建照片马赛克。我们将目标图像划分成较小图像的网格，并用适当的图像替换网格中的每一小块，创建原始图像的照片马赛克。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-0ba3a39d1ba1e9829d27385f5caac7ad_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"1280\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-833163f711caeac9fa8c8dfa7771828f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1280\" data-original=\"https://pic2.zhimg.com/v2-0ba3a39d1ba1e9829d27385f5caac7ad_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1280'%20height='1280'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"1280\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-833163f711caeac9fa8c8dfa7771828f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1280\" data-original=\"https://pic2.zhimg.com/v2-0ba3a39d1ba1e9829d27385f5caac7ad_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-0ba3a39d1ba1e9829d27385f5caac7ad_720w.jpg?source=54b3c3a5\"></figure><p>7.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/302\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python - 基于 Python 的文件备份</a></p><p>Python 做个简单的备份脚本程序，可以备份主目录和系统文件等。</p><p>8.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/70\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python - Python文本解析器</a><br>使用Python来解析纯文本生成一个HTML页面的小程序。</p><p>9.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/364\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python - Python 破解验证码</a><br>通过一个简单的例子来讲解破解验证码的原理。</p><p>10.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/427\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python - 用Python做2048游戏</a><br>通过GUI来体验编程的乐趣。</p><p>11.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/552\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python - Python实现简单的Web服务器</a><br>使用 Python 语言实现一个 Web 服务器，探索 HTTP 协议和 Web 服务的基本原理。<br></p><p><b>进阶篇</b></p><p>12.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/589\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python - Python3 色情图片识别</a></p><p>使用 Python3 去识别图片是否为色情图片，我们会使用到 PIL 这个图像处理库，会编写算法来完成对划分图像的皮肤区域。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/76521ab2e38570a3204c65abcc5276a6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" class=\"content_image\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='0'%20height='0'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" class=\"content_image lazy\" data-actualsrc=\"https://pic4.zhimg.com/50/76521ab2e38570a3204c65abcc5276a6_720w.jpg?source=54b3c3a5\"></figure><p>13.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/561\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python - Python实现3D建模工具</a></p><p>本课程将基于OpenGL实现一般CAD软件都会具备的基础功能：渲染显示3D空间的画面并可以操作3D空间中物体。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/c3e9179777646c1af504f0f855078ac9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" class=\"content_image\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='0'%20height='0'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" class=\"content_image lazy\" data-actualsrc=\"https://pic3.zhimg.com/50/c3e9179777646c1af504f0f855078ac9_720w.jpg?source=54b3c3a5\"></figure><p>14. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/705\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PyQt 实现简易浏览器</a></p><p>基于 Python 3.4 和 PyQt 5 来学习 GUI 编程，课程分为两次实验，第一次实验先简单了解 Qt 各个组件的使用方法，第二次课程将尝试实现一个浏览器。</p><p>15. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/677\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基于共现提取《釜山行》人物关系</a></p><p>针对《釜山行》剧本的文本，使用python编写代码分析文本中人物的共现关系，完成对《釜山行》文本的人物关系提取，并利用Gephi软件对提取的人物关系绘制人物关系图。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-438fef09e3e9c512e19287f217acad5f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" class=\"content_image\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='0'%20height='0'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" class=\"content_image lazy\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-438fef09e3e9c512e19287f217acad5f_720w.jpg?source=54b3c3a5\"></figure><p>16.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/554\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python - Python实现Python解释器</a></p><p>从实现一个玩具解释器开始学习解释器基本知识,然后考察Python字节码进一步学习理解Python解释器的内部机制，最终实现一个500行以内的Python解释器。</p><p>17.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/599\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python - 高德API+Python解决租房问题</a></p><p>编写Python脚本爬取某租房网站的房源信息，利用高德的 js API 在地图上标出房源地点，划出距离工作地点1小时内可到达的范围，附上公交路径规划功能查看不同路径的用时。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/a54f86931f81b48790b50736bf542ac2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" class=\"content_image\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='0'%20height='0'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" class=\"content_image lazy\" data-actualsrc=\"https://pic4.zhimg.com/50/a54f86931f81b48790b50736bf542ac2_720w.jpg?source=54b3c3a5\"></figure><p>18.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/359\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python - 基于Flask/RethinkDB/Backbone.js实现TODO List</a></p><p>使用 RethinkDB，Flask 与 Backbone.js 制作一个简单的 todo list。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e394231718fc16e82ac41ee58ebbb679_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"517\" data-rawheight=\"278\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-556baac0788f259686056e4acd7542b1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"517\" data-original=\"https://pic4.zhimg.com/v2-e394231718fc16e82ac41ee58ebbb679_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='517'%20height='278'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"517\" data-rawheight=\"278\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-556baac0788f259686056e4acd7542b1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"517\" data-original=\"https://pic4.zhimg.com/v2-e394231718fc16e82ac41ee58ebbb679_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e394231718fc16e82ac41ee58ebbb679_720w.jpg?source=54b3c3a5\"></figure><p>19.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/780\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 气象数据分析</a></p><p>对意大利北部沿海地区的气象数据进行分析与可视化。</p><p>20.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/782\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">NBA常规赛结果预测--利用Python进行比赛数据分析</a></p><p>利用NBA在2015~2016年的比赛统计数据进行回归模型建立，最终在今年2016~2017的常规赛中预测每场比赛的输赢情况。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-b0912d1326b1d4928b833f2494574255_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"983\" data-rawheight=\"289\" class=\"origin_image zh-lightbox-thumb\" width=\"983\" data-original=\"https://pic4.zhimg.com/v2-b0912d1326b1d4928b833f2494574255_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='983'%20height='289'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"983\" data-rawheight=\"289\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"983\" data-original=\"https://pic4.zhimg.com/v2-b0912d1326b1d4928b833f2494574255_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-b0912d1326b1d4928b833f2494574255_720w.jpg?source=54b3c3a5\"></figure><p>21.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/993\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Django打造文件分享系统</a></p><p>介绍如何使用Django框架快速打造文件分享系统，实现搜索功能，分享功能，用户分享文件查询。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-da056468adda19103dc5f6dcfcf11e0d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1293\" data-rawheight=\"395\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-98a6d58045d7535327f60adad0eb5a1f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1293\" data-original=\"https://pic1.zhimg.com/v2-da056468adda19103dc5f6dcfcf11e0d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1293'%20height='395'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1293\" data-rawheight=\"395\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-98a6d58045d7535327f60adad0eb5a1f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1293\" data-original=\"https://pic1.zhimg.com/v2-da056468adda19103dc5f6dcfcf11e0d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-da056468adda19103dc5f6dcfcf11e0d_720w.jpg?source=54b3c3a5\"></figure><p><b>综合篇</b></p><p>以下项目都是比较综合、系统的，内容质量都不错，因这些项目需要联网实现或占用环境资源较大，现在是属于会员及训练营项目。</p><p>22. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1181\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">基于 Django 实现问答社区</a></p><p>使用 Django 打造一个完整成熟的社区框架，实现了用户注册，发布讨论，回复讨论，站内搜索等主要功能。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ebdfac1139d9349f19ac6e282bd6bf94_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2568\" data-rawheight=\"1372\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-516667f0535b9248af42a669784146c0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2568\" data-original=\"https://pic1.zhimg.com/v2-ebdfac1139d9349f19ac6e282bd6bf94_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2568'%20height='1372'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2568\" data-rawheight=\"1372\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-516667f0535b9248af42a669784146c0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2568\" data-original=\"https://pic1.zhimg.com/v2-ebdfac1139d9349f19ac6e282bd6bf94_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ebdfac1139d9349f19ac6e282bd6bf94_720w.jpg?source=54b3c3a5\"></figure><p>23. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1212\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">基于 React + Flask 打造私人专属网盘</a></p><p>使用 React 作为前端技术，Python Flask 作为后端技术，实现一个小型的私人网盘应用。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d5de9a95dfad75009609a017b2b294cf_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"454\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-989ca26da8cfee43542987e75b0ecaca_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1024\" data-original=\"https://pic1.zhimg.com/v2-d5de9a95dfad75009609a017b2b294cf_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1024'%20height='454'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"454\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-989ca26da8cfee43542987e75b0ecaca_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1024\" data-original=\"https://pic1.zhimg.com/v2-d5de9a95dfad75009609a017b2b294cf_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d5de9a95dfad75009609a017b2b294cf_720w.jpg?source=54b3c3a5\"></figure><p>24. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1196\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 实现搜索引擎</a></p><p>首先会讲解爬虫基础并利用 Python 异步特性实现异步爬虫系统，而后会一步一步地将构建索引、索引压缩、排名算法等步骤讲解清楚并编码实现，最后利用异步 web 框架 sanic 构建后端实现一个完整的垂直搜索引擎站点。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-8cd29e8892940346f5bc744e87940707_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2560\" data-rawheight=\"1406\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-27f836900e67f92fa9cdb4033848db19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2560\" data-original=\"https://pic1.zhimg.com/v2-8cd29e8892940346f5bc744e87940707_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2560'%20height='1406'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2560\" data-rawheight=\"1406\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-27f836900e67f92fa9cdb4033848db19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2560\" data-original=\"https://pic1.zhimg.com/v2-8cd29e8892940346f5bc744e87940707_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-8cd29e8892940346f5bc744e87940707_720w.jpg?source=54b3c3a5\"></figure><p><br>25. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1144\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">基于 Django 实现 Upwork 众包网站</a></p><p>使用 Django 框架实现了世界最大的外包网站 Upwork。在实现过程中，将其分为三大应用模块：用户模块，任务模块，私信消息模块。每个模块都严格按照 Django 框架中的 MTV （Model-Template-View） 模式完成。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-916b5d1ff4181c8bbfa8d884990643ad_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2464\" data-rawheight=\"1490\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-1562935b1f2c8b565e5b52807ea53080_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2464\" data-original=\"https://pic4.zhimg.com/v2-916b5d1ff4181c8bbfa8d884990643ad_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2464'%20height='1490'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2464\" data-rawheight=\"1490\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-1562935b1f2c8b565e5b52807ea53080_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2464\" data-original=\"https://pic4.zhimg.com/v2-916b5d1ff4181c8bbfa8d884990643ad_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-916b5d1ff4181c8bbfa8d884990643ad_720w.jpg?source=54b3c3a5\"></figure><p>26. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1162\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 使用机器学习玩转 Flappy Bird 游戏</a></p><p>通过学习使用纯人工操作，传统计算机视觉，深度学习这三种不同的方式来玩转 pygame 版的 flappy bird 游戏。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-476b6c96bc643b0cbe9468fb32870be9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"691\" data-rawheight=\"702\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-79a3757d5be70c5468fc4b61a47d2a72_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"691\" data-original=\"https://pic2.zhimg.com/v2-476b6c96bc643b0cbe9468fb32870be9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='691'%20height='702'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"691\" data-rawheight=\"702\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-79a3757d5be70c5468fc4b61a47d2a72_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"691\" data-original=\"https://pic2.zhimg.com/v2-476b6c96bc643b0cbe9468fb32870be9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-476b6c96bc643b0cbe9468fb32870be9_720w.jpg?source=54b3c3a5\"></figure><p>27. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1197\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 利用 itchat 进行好友分析和生成好友点赞屏保</a></p><p>使用 itchat 获取微信好友相关数据，利用 pyecharts 进行可视化分析生成微信好友性别比例图、好友省级分布图以及好友城市分布 Top10 柱状图，最后使用 pillow 库对微信好友的头像进行拼接生成屏保。</p><p>28. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/789\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用 Python3 编写 Github 自动周报生成器</a></p><p>使用 Python 从 Github 中获取对应代码仓库的贡献度（Commit 信息）及活跃度（Issue 评论内容）等。</p><p>29. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/884\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 实现简单邮件客户端</a></p><p>利用 python 标准库实现一个简单邮件客户端，实现对 qq 邮箱的登陆，发送格式简单的邮件，以及接收邮件。</p><p>30. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1068\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">仿 StackOverflow 开发在线问答系统</a></p><p>使用Python Flask Web开发框架实现类似StackOverflow的在线问答平台LouQA，具备提问，回答，评论等功能。学习数据库设计，Python Web 开发相关知识。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-7b288552aaacdcd04db42c77105be21b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1195\" data-rawheight=\"880\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8af01a8f1e48b416259f64725dff6ce4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1195\" data-original=\"https://pic4.zhimg.com/v2-7b288552aaacdcd04db42c77105be21b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1195'%20height='880'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1195\" data-rawheight=\"880\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8af01a8f1e48b416259f64725dff6ce4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1195\" data-original=\"https://pic4.zhimg.com/v2-7b288552aaacdcd04db42c77105be21b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-7b288552aaacdcd04db42c77105be21b_720w.jpg?source=54b3c3a5\"></figure><p>31. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/828\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 实现中文错别字高亮系统</a></p><p>上线一个错别字高亮系统，输入我们的 MarkDown 文档，输出一个高亮过疑似错别字的HTML文件。</p><p>32. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/869\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 二手房信息爬取与数据呈现</a></p><p>使用python爬取二手房信息，并且使用matplotlib 绘图包对爬取的信息进行分析，绘制简单的图表。</p><p>33. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/940\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">基于Pygame开发贪吃蛇和俄罗斯方块</a></p><p>基于Pygame开发贪吃蛇和俄罗斯方块，通过逐步学习Pygame基础知识，到从零开始实现游戏开发</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-9b142322d61bef07e1fbca7169667208_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"772\" data-rawheight=\"602\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-36a0e69312dc1f9b243202402c376308_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"772\" data-original=\"https://pic4.zhimg.com/v2-9b142322d61bef07e1fbca7169667208_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='772'%20height='602'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"772\" data-rawheight=\"602\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-36a0e69312dc1f9b243202402c376308_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"772\" data-original=\"https://pic4.zhimg.com/v2-9b142322d61bef07e1fbca7169667208_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-9b142322d61bef07e1fbca7169667208_720w.jpg?source=54b3c3a5\"></figure><p>34. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/672\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python实现简易局域网视频聊天工具</a></p><p>Python基于OpenCV和PyAudio实现的局域网内视频聊天工具，支持IPv6。优点是校园网/IPv6下不走流量。</p><p>35. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/722\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Twitter数据情感分析</a></p><p>使用Spark MLlib对Twitter上的流数据进行情感分析，并且利用Python的工具包basemap可视化美国不同的州对于曾经的总统候选人希拉里及川普的情感分析结果，通过地理信息可视化我们可直观的感受到这两位候选人的受欢迎程度。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-6d0d137f003b4ddff4ee73f0f73fadcf_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"668\" data-rawheight=\"558\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-4770881e824656ee9f2ed0df661f4f4e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"668\" data-original=\"https://pic1.zhimg.com/v2-6d0d137f003b4ddff4ee73f0f73fadcf_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='668'%20height='558'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"668\" data-rawheight=\"558\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-4770881e824656ee9f2ed0df661f4f4e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"668\" data-original=\"https://pic1.zhimg.com/v2-6d0d137f003b4ddff4ee73f0f73fadcf_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-6d0d137f003b4ddff4ee73f0f73fadcf_720w.jpg?source=54b3c3a5\"></figure><p>36. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/623\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 实现火车票查询工具</a></p><p>使用 Python3 抓取 12306 网站信息提供一个命令行的火车票查询工具。通过该项目的实现，可以熟悉 Python3 基础及网络编程，以及 docopt，requests，prettytable 等库的使用。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-56e497b7dbab2ceeb06830a4afa65100_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1230\" data-rawheight=\"558\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3ec622bc6485ca5cab57962fff443069_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1230\" data-original=\"https://pic1.zhimg.com/v2-56e497b7dbab2ceeb06830a4afa65100_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1230'%20height='558'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1230\" data-rawheight=\"558\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3ec622bc6485ca5cab57962fff443069_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1230\" data-original=\"https://pic1.zhimg.com/v2-56e497b7dbab2ceeb06830a4afa65100_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-56e497b7dbab2ceeb06830a4afa65100_720w.jpg?source=54b3c3a5\"></figure><p>37. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/633\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">基于 Flask 与 MySQL 实现番剧推荐系统</a></p><p>基于 Python 的 Flask 框架和 MySQL 实现的简单的番剧推荐系统。将学到如何用 Python 连接 MySQL 数据库，如何查询和展示数据及设计推荐算法等知识。</p><p></p>", "Python学到什么程度可以面试工作？": "<p><b>0710更新：</b></p><p>不多说，上干货！！！最近得到了一张比较全面的Python图谱，直接分享给你们！！！（我看过，知识点还是很全面的，基础知识、数据分析、爬虫实战、后台开发实战以及人工智能实战项目，都包含了）</p><p><b>一、基础知识</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8660f9c1ada4394095bbd6f4d6a0f109_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"611\" data-rawheight=\"588\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7e956cb55d98263ca59576fc869dd58a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"611\" data-original=\"https://pic1.zhimg.com/v2-8660f9c1ada4394095bbd6f4d6a0f109_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='611'%20height='588'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"611\" data-rawheight=\"588\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7e956cb55d98263ca59576fc869dd58a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"611\" data-original=\"https://pic1.zhimg.com/v2-8660f9c1ada4394095bbd6f4d6a0f109_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8660f9c1ada4394095bbd6f4d6a0f109_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-be6178044a20936e03727bb81778a092_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"670\" data-rawheight=\"612\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-35a06db4aae8c333a90b3df9c700b864_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"670\" data-original=\"https://pic2.zhimg.com/v2-be6178044a20936e03727bb81778a092_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='670'%20height='612'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"670\" data-rawheight=\"612\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-35a06db4aae8c333a90b3df9c700b864_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"670\" data-original=\"https://pic2.zhimg.com/v2-be6178044a20936e03727bb81778a092_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-be6178044a20936e03727bb81778a092_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-988ecc0e86fb89f7a031bf639de1f119_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"582\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-b4b9b4b3f23c5b2a064199e9f2efb49e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic2.zhimg.com/v2-988ecc0e86fb89f7a031bf639de1f119_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='832'%20height='582'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"582\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-b4b9b4b3f23c5b2a064199e9f2efb49e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"832\" data-original=\"https://pic2.zhimg.com/v2-988ecc0e86fb89f7a031bf639de1f119_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-988ecc0e86fb89f7a031bf639de1f119_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>2、数据分析</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-56ea62d8505c1799af2280441e3f12d7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"624\" data-rawheight=\"614\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8ddc9f970a2cd58f683843ee27455099_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"624\" data-original=\"https://pic4.zhimg.com/v2-56ea62d8505c1799af2280441e3f12d7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='624'%20height='614'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"624\" data-rawheight=\"614\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8ddc9f970a2cd58f683843ee27455099_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"624\" data-original=\"https://pic4.zhimg.com/v2-56ea62d8505c1799af2280441e3f12d7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-56ea62d8505c1799af2280441e3f12d7_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-0781c78e11b91604389c2bed56164e52_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"826\" data-rawheight=\"617\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-115f7b12566e774bebf0fd45c3e9f1bd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"826\" data-original=\"https://pic4.zhimg.com/v2-0781c78e11b91604389c2bed56164e52_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='826'%20height='617'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"826\" data-rawheight=\"617\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-115f7b12566e774bebf0fd45c3e9f1bd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"826\" data-original=\"https://pic4.zhimg.com/v2-0781c78e11b91604389c2bed56164e52_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0781c78e11b91604389c2bed56164e52_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a5e41a4d03d3ae7de6cd20b8c2a74906_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"609\" data-rawheight=\"1238\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1c94e780a7299a62bc63215ab26ebb93_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"609\" data-original=\"https://pic2.zhimg.com/v2-a5e41a4d03d3ae7de6cd20b8c2a74906_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='609'%20height='1238'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"609\" data-rawheight=\"1238\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1c94e780a7299a62bc63215ab26ebb93_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"609\" data-original=\"https://pic2.zhimg.com/v2-a5e41a4d03d3ae7de6cd20b8c2a74906_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a5e41a4d03d3ae7de6cd20b8c2a74906_720w.jpg?source=54b3c3a5\"></figure><p><b>3、爬虫</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-44fe8f1acf8c17ee8e8f187b00fa8e58_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"481\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-38820c38ce73de341eef2ac055442e97_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"550\" data-original=\"https://pic1.zhimg.com/v2-44fe8f1acf8c17ee8e8f187b00fa8e58_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='550'%20height='481'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"481\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-38820c38ce73de341eef2ac055442e97_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"550\" data-original=\"https://pic1.zhimg.com/v2-44fe8f1acf8c17ee8e8f187b00fa8e58_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-44fe8f1acf8c17ee8e8f187b00fa8e58_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-d8ab4cea5b9410d0eeddd043da61ea25_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"614\" data-rawheight=\"832\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a84f10ddf1a2cd01583d50401855d56c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"614\" data-original=\"https://pic2.zhimg.com/v2-d8ab4cea5b9410d0eeddd043da61ea25_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='614'%20height='832'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"614\" data-rawheight=\"832\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a84f10ddf1a2cd01583d50401855d56c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"614\" data-original=\"https://pic2.zhimg.com/v2-d8ab4cea5b9410d0eeddd043da61ea25_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-d8ab4cea5b9410d0eeddd043da61ea25_720w.jpg?source=54b3c3a5\"></figure><p><b>4、后台开发实战</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-e00a69021d74e177562e24af30afc40f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"650\" data-rawheight=\"571\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-22f277afafa1e1707309a7c638570268_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"650\" data-original=\"https://pic2.zhimg.com/v2-e00a69021d74e177562e24af30afc40f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='650'%20height='571'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"650\" data-rawheight=\"571\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-22f277afafa1e1707309a7c638570268_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"650\" data-original=\"https://pic2.zhimg.com/v2-e00a69021d74e177562e24af30afc40f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e00a69021d74e177562e24af30afc40f_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-23ebefbeb0de2bc396bf4bada335bd7b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"634\" data-rawheight=\"613\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9274561692ab2427766a9a58bccaef99_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"634\" data-original=\"https://pic1.zhimg.com/v2-23ebefbeb0de2bc396bf4bada335bd7b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='634'%20height='613'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"634\" data-rawheight=\"613\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9274561692ab2427766a9a58bccaef99_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"634\" data-original=\"https://pic1.zhimg.com/v2-23ebefbeb0de2bc396bf4bada335bd7b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-23ebefbeb0de2bc396bf4bada335bd7b_720w.jpg?source=54b3c3a5\"></figure><p><b>5、人工智能基础</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-c80a046a9cdabeb1f8d3f44bcdf3c2dc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"969\" data-rawheight=\"612\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-6d476ed17f966a047145ce2af0a6c015_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"969\" data-original=\"https://pic2.zhimg.com/v2-c80a046a9cdabeb1f8d3f44bcdf3c2dc_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='969'%20height='612'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"969\" data-rawheight=\"612\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-6d476ed17f966a047145ce2af0a6c015_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"969\" data-original=\"https://pic2.zhimg.com/v2-c80a046a9cdabeb1f8d3f44bcdf3c2dc_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-c80a046a9cdabeb1f8d3f44bcdf3c2dc_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-534d32a4acfed974d1644344c48c8d47_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"979\" data-rawheight=\"580\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-4de28fb643c85b8b93874bd06889f632_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"979\" data-original=\"https://pic4.zhimg.com/v2-534d32a4acfed974d1644344c48c8d47_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='979'%20height='580'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"979\" data-rawheight=\"580\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-4de28fb643c85b8b93874bd06889f632_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"979\" data-original=\"https://pic4.zhimg.com/v2-534d32a4acfed974d1644344c48c8d47_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-534d32a4acfed974d1644344c48c8d47_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-770b38488808657edf94a78d2e4db963_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1156\" data-rawheight=\"618\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8dcd48171a7423ec01ec1941b0b7a887_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1156\" data-original=\"https://pic2.zhimg.com/v2-770b38488808657edf94a78d2e4db963_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1156'%20height='618'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1156\" data-rawheight=\"618\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8dcd48171a7423ec01ec1941b0b7a887_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1156\" data-original=\"https://pic2.zhimg.com/v2-770b38488808657edf94a78d2e4db963_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-770b38488808657edf94a78d2e4db963_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-0d1210d2c231e168e7123dba2c4d8d5f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"917\" data-rawheight=\"506\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-875c7acdf40d8cecfb1b70c6e9c9fc1f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"917\" data-original=\"https://pic1.zhimg.com/v2-0d1210d2c231e168e7123dba2c4d8d5f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='917'%20height='506'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"917\" data-rawheight=\"506\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-875c7acdf40d8cecfb1b70c6e9c9fc1f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"917\" data-original=\"https://pic1.zhimg.com/v2-0d1210d2c231e168e7123dba2c4d8d5f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-0d1210d2c231e168e7123dba2c4d8d5f_720w.jpg?source=54b3c3a5\"></figure><p><b>6、人工智能实战</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7c72059feabc3a9a6a93b462bd36818f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"695\" data-rawheight=\"508\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-5291c1a4b663c3bfe798ab2359c9b5cb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"695\" data-original=\"https://pic1.zhimg.com/v2-7c72059feabc3a9a6a93b462bd36818f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='695'%20height='508'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"695\" data-rawheight=\"508\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-5291c1a4b663c3bfe798ab2359c9b5cb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"695\" data-original=\"https://pic1.zhimg.com/v2-7c72059feabc3a9a6a93b462bd36818f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7c72059feabc3a9a6a93b462bd36818f_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-c47be4eb9c234d3c3242aa4880a80597_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"634\" data-rawheight=\"596\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-efa11eeedb05328d26d5eb3c1966ac8e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"634\" data-original=\"https://pic1.zhimg.com/v2-c47be4eb9c234d3c3242aa4880a80597_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='634'%20height='596'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"634\" data-rawheight=\"596\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-efa11eeedb05328d26d5eb3c1966ac8e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"634\" data-original=\"https://pic1.zhimg.com/v2-c47be4eb9c234d3c3242aa4880a80597_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-c47be4eb9c234d3c3242aa4880a80597_720w.jpg?source=54b3c3a5\"></figure><p>我觉得这张图谱是按照从毫无基础学Python到Python应用，再到人工智能的基本学习流程，至少我和我身边的朋友都是按这个顺序学习的。</p><p>就我自己而言，我是先把基础都看完，再去往深了应用去训练，不过现在学完再回过头看，还是更赞成边学知识点边做配合练习，这样才能巩固知识。</p><p>今天分几部分来跟你说说我的Python学习之旅</p><h2>一、Python安装及基础学习</h2><p><b>1、Python</b></p><p>Python初学者的法宝，如果你想下载Python，最好还是在这个网址去下，不要想着用一些不明来源的安装包。在这里，你不仅可以下载各种版本的Python源代码和安装程序，更有各种文献资料、Python交流社区，还会告诉你Python的最新行情，不得不感叹，这功能太强大！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1227\" data-rawheight=\"235\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c3ff6a926f09ecf7de0e8cff74f12030_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1227\" data-original=\"https://pic1.zhimg.com/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1227'%20height='235'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1227\" data-rawheight=\"235\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c3ff6a926f09ecf7de0e8cff74f12030_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1227\" data-original=\"https://pic1.zhimg.com/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.python.org/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">python.org/</span><span class=\"invisible\"></span></a><p><b>2、廖雪峰的官方网站</b></p><p>这个网站属于内容全，页面却绝对不是华而不实的那种，比较适合没有基础的小伙伴来学习。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-bf21bcc0ac598da7d31071d4f6b11e36_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"384\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-cf66cf5c7d74d51fdf183b7bacb6b0ab_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1366\" data-original=\"https://pic1.zhimg.com/v2-bf21bcc0ac598da7d31071d4f6b11e36_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1366'%20height='384'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"384\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-cf66cf5c7d74d51fdf183b7bacb6b0ab_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1366\" data-original=\"https://pic1.zhimg.com/v2-bf21bcc0ac598da7d31071d4f6b11e36_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-bf21bcc0ac598da7d31071d4f6b11e36_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.liaoxuefeng.com/wiki/1016959663602400\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-12e9112fa7fe73b723c819cca088fb96_bh.jpg?source=54b3c3a5\" data-image-width=\"640\" data-image-height=\"360\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python教程</a><p><b>3、菜鸟教程</b></p><p>站内的知识点很全面，无论你想学习哪种领域，都可以轻松在这里找到合适的资料。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1278\" data-rawheight=\"142\" class=\"origin_image zh-lightbox-thumb\" width=\"1278\" data-original=\"https://pic1.zhimg.com/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1278'%20height='142'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1278\" data-rawheight=\"142\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1278\" data-original=\"https://pic1.zhimg.com/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.runoob.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">菜鸟教程 - 学的不仅是技术，更是梦想！</a><p><b>4、Codecademy</b></p><p>这个学习网站很大的优势就是在浏览器上直接编写代码，轻松解决了初学者程序环境安装的困扰</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"944\" data-rawheight=\"136\" class=\"origin_image zh-lightbox-thumb\" width=\"944\" data-original=\"https://pic2.zhimg.com/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='944'%20height='136'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"944\" data-rawheight=\"136\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"944\" data-original=\"https://pic2.zhimg.com/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.codecademy.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">codecademy.com/</span><span class=\"invisible\"></span></a><p><b>5、CSDN</b></p><p>我知道不少适用于编程学习的网站，内容是真的经得住考验，但是都比较要求英文水平，想了解的小伙伴可以私信问我。如果说你的英文是难题，给你推荐CSDN，是国内老牌程序员社区，里边有各领域博文、资料、课程，基本很多专业问题都可以在这里查。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1105\" data-rawheight=\"201\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-fc2258a955c3632a9c11c8ce1aa8c044_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1105\" data-original=\"https://pic1.zhimg.com/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1105'%20height='201'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1105\" data-rawheight=\"201\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-fc2258a955c3632a9c11c8ce1aa8c044_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1105\" data-original=\"https://pic1.zhimg.com/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net%3Futm_source%3Deduxy_zhihu_0714_thdz_edu\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CSDN学院-IT实战派</a><h2>二、APP推荐</h2><p>说起面试，除了你的自身知识掌握要熟练，平时对于面试题的练习也不能少，网页版的应用场景比较受限制，使用app的话，可以利用上碎片化的时间。</p><p><b>1、Leaflet</b></p><p>这个主要是针对算法类的面试题练习</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-7adfa14be57b21c04b18d65a4c65ae23_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1125\" data-rawheight=\"1466\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1c91a0dadc252864fdb9f000d92dfa58_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1125\" data-original=\"https://pic4.zhimg.com/v2-7adfa14be57b21c04b18d65a4c65ae23_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1125'%20height='1466'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1125\" data-rawheight=\"1466\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1c91a0dadc252864fdb9f000d92dfa58_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1125\" data-original=\"https://pic4.zhimg.com/v2-7adfa14be57b21c04b18d65a4c65ae23_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-7adfa14be57b21c04b18d65a4c65ae23_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-3548dfec8f41c2b04771654f4a9983a7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1125\" data-rawheight=\"2436\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d97afb8d331ffc95215224249fcf3f9d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1125\" data-original=\"https://pic3.zhimg.com/v2-3548dfec8f41c2b04771654f4a9983a7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1125'%20height='2436'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1125\" data-rawheight=\"2436\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d97afb8d331ffc95215224249fcf3f9d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1125\" data-original=\"https://pic3.zhimg.com/v2-3548dfec8f41c2b04771654f4a9983a7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-3548dfec8f41c2b04771654f4a9983a7_720w.jpg?source=54b3c3a5\"></figure><p><b>2、牛客网</b></p><p>这里是综合类的面试题，有各个知识点的专项练习，有小组正确率，你可以及时了解自己对某一类型面试题的掌握程度。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-254085916aeb60c6ef76a0532e546bbc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1125\" data-rawheight=\"1440\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-03afec73b7c84dee27d7480219bcf858_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1125\" data-original=\"https://pic2.zhimg.com/v2-254085916aeb60c6ef76a0532e546bbc_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1125'%20height='1440'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1125\" data-rawheight=\"1440\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-03afec73b7c84dee27d7480219bcf858_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1125\" data-original=\"https://pic2.zhimg.com/v2-254085916aeb60c6ef76a0532e546bbc_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-254085916aeb60c6ef76a0532e546bbc_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-21ac487ca646527b29c84278da583075_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1125\" data-rawheight=\"2436\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d84ee67905dd18e9dc6bd6268315b055_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1125\" data-original=\"https://pic1.zhimg.com/v2-21ac487ca646527b29c84278da583075_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1125'%20height='2436'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1125\" data-rawheight=\"2436\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d84ee67905dd18e9dc6bd6268315b055_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1125\" data-original=\"https://pic1.zhimg.com/v2-21ac487ca646527b29c84278da583075_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-21ac487ca646527b29c84278da583075_720w.jpg?source=54b3c3a5\"></figure><h2>三、课程推荐</h2><p>其实，除了学习网站和书籍，我还在网易云课堂、51、慕课、CSDN学院买了不下10套关于Python入门的课，在得到也买了时间管理课。</p><p>我自己的话，因为我是想进行系统学习，也想节省一些学习时间，加上我也比较懒，非得有人督促着才能坚持不懈，所以我选了CSDN的Python训练营。</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/topic/python115%3Futm_source%3Deduxy_zwzhihu_xtk_0714\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-e059f149d5f1062e4b6e4831078ae220_bh.jpg?source=54b3c3a5\" data-image-width=\"750\" data-image-height=\"320\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python工程师-CSDN学院</a><p>最近正在学习Python的进阶领域-AI，这回同样参与了一个训练营，深刻感受到监督使人进步！不为别的，也是希望自己以后的工作范围更广，也能跟上时代的脚步。</p><a href=\"https://link.zhihu.com/?target=https%3A//marketing.csdn.net/p/b3bca8ef2345fbda9e52fe414d5f28d9%3Futm_source%3Deduxy_zwzhihu_xtk\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">人工智能工程师</a><p>其实很多人都是学完Python就一直用下去了，我为什么还要逼自己继续学AI？</p><p>百度创始人、董事长兼首席执行官李彦宏说过：</p><p>“一家真正的AI公司，不仅在技术层面跟AI是紧密结合的，它的文化也必须是AI化的。这就意味着公司的发展必须遵循AI伦理的四个原则：第一，AI的最高原则是安全可控。第二，AI的创新愿景是促进人类更加平等的获得技术能力。第三，AI存在的价值是要教人学习，让人成长，而不是取代人、超越人。第四，AI的终极理想是为人类带来更多的自由和可能。”</p><p>无论是AI本身的未来发展，还是作为一个会AI技能的程序员的前途，都是一片光明、无可阻挡的！</p><p>我选择的是从零开始全方向提升，因为我想着，既然要痛苦，就直接痛苦这一次。上边就是我学过的系统课，内容很全，不过价格也相对更贵。</p><p>如果有的同学目前是打算一步一步慢慢来，或者之前已经有一些基础，只是想突破单个方向，下边这几门课程我也在刚接触Python的时候买来学的，价格更便宜，内容却丝毫不打折扣，是比较值得学习的！</p><p><b>1、基础知识</b></p><p>如果是毫无基础可言，甚至不知道如何下载Python， 比较推荐齐伟老师的《8小时Python零基础轻松入门》。细节全面，适合小白入门。</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/29122%3Futm_source%3Deduxy_zhihu_0714_thdz_29122\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-dd4861c32c105a3aa9b53a8be092d34f_200x0.jpg?source=54b3c3a5\" data-image-width=\"375\" data-image-height=\"5037\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【免费】8小时Python零基础轻松入门-1-为什么要学习编程-齐伟的在线视频教程</a><p><b>2、爬虫</b></p><p>这回是偏基础点的，之前也分享过两门免费的，都可以进行参考。</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/24756%3Futm_source%3Deduxy_zhihu_0714_thdz_24756\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-c2f8874caaf9356013677e7eb10048af_200x0.jpg?source=54b3c3a5\" data-image-width=\"584\" data-image-height=\"1887\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【免费】150讲轻松搞定Python网络爬虫-1-爬虫介绍（资料在第一节中下载）-黄勇的在线视频教程</a><p><br></p><p><b>3、数据分析</b></p><p>我买过两类数据分析课，零基础入门和多方位学习，现在直接发出来，也是为了方便不同需求的同学。</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/25326%3Futm_source%3Deduxy_zhihu_0714_thdz_25326\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-a5fd30085baa7d5d1f58331906050229_200x0.jpg?source=54b3c3a5\" data-image-width=\"750\" data-image-height=\"1703\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【免费】数据挖掘基础：零基础学Python数据分析-1-Why Python?-李洪磊的在线视频教程</a><a href=\"https://link.zhihu.com/?target=https%3A//study.163.com/course/introduction/1209819804.htm\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2020Python全能型数据分析师技能 - 网易云课堂</a><p><br></p><p><b>4、机器学习</b></p><p>基础知识配实战，这样学习起来相对也更容易</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/10184%3Futm_source%3Deduxy_zhihu_0714_thdz_10184\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【免费】10小时玩转机器学习-1-人工智能入学指南-唐宇迪的在线视频教程</a><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/10085%3Futm_source%3Deduxy_zhihu_0714_thdz_10085\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【免费】Python机器学习进阶实战视频教学-1-线性判别分析要解决的问题-唐宇迪的在线视频教程</a><hr><p><b>更新：</b></p><p><b>有很多朋友私信问我Python学习有没有什么好的资料，我给大家找了几门不错的免费课，想学的可以看看。</b></p><p>《Python入门教程》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/24459%3Futm_source%3Deduxy_zhihuylrs_24459_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门教程--Python视频教程-编程语言-CSDN学院</a><p>《Python初级入门精讲》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/6521%3Futm_source%3Deduxy_zhihuylrs_6521_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python初级入门精讲--Python视频教程-编程语言-CSDN学院</a><p>《Python爬虫开发》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/24454%3Futm_source%3Deduxy_zhihuylrs_24454_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫开发--Python视频教程-编程语言-CSDN学院</a><p>《Python实战编程》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/19711%3Futm_source%3Deduxy_zhihuylrs_19711_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python实战编程--Python视频教程-编程语言-CSDN学院</a><p>《1小时掌握Python爬虫+高效学习法则》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/25062%3Futm_source%3Deduxy_zhihuylxf_25062_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">1小时掌握Python爬虫+高效学习法则--Python视频教程-编程语言-CSDN学院</a><p><br></p><p><b>原回答：</b></p><p>这里有2019年最新的Python最常见的180道面试题解析。</p><p>当你发现这些题你差不多都能回答上来，那说明你的水平已经可以去面试工作了。</p><hr><p>网上有网友搜集了 180 道 2019 年最新的 Python 面试题解析，让你最短时间内掌握核心知识点，一举通过Python 面试！</p><p><br></p><blockquote>1.列出 5 个常用 Python 标准库？<br>2.Python 内建数据类型有哪些？<br>3.简述 with 方法打开处理文件帮我我们做了什么？<br>4.列出 Python 中可变数据类型和不可变数据类型，为什么？<br>5.Python 获取当前日期？<br>6.统计字符串每个单词出现的次数<br>7.用 python 删除文件和用 linux 命令删除文件方法<br>8.写一段自定义异常代码<br>9.举例说明异常模块中 try except else finally 的相关意义<br>10.遇到 bug 如何处理</blockquote><h2>语言特性</h2><p><br></p><blockquote>1.谈谈对 Python 和其他语言的区别<br>2.简述解释型和编译型编程语言<br>3.Python 的解释器种类以及相关特点？<br>4.说说你知道的Python3 和 Python2 之间的区别？<br>5.Python3 和 Python2 中 int 和 long 区别？<br>6.xrange 和 range 的区别？</blockquote><p><br></p><h2>编码规范</h2><p><br></p><blockquote>7.什么是 PEP8?<br>8.了解 Python 之禅么？<br>9.了解 docstring 么？<br>10.了解类型注解么？<br>11.例举你知道 Python 对象的命名规范，例如方法或者类等<br>12.Python 中的注释有几种？<br>13.如何优雅的给一个函数加注释？<br>14.如何给变量加注释？<br>15.Python 代码缩进中是否支持 Tab 键和空格混用。<br>16.是否可以在一句 import 中导入多个库?<br>17.在给 Py 文件命名的时候需要注意什么?<br>18.例举几个规范 Python 代码风格的工具</blockquote><p><br></p><h2>数据类型</h2><h2>字符串</h2><p><br></p><blockquote>19.列举 Python 中的基本数据类型？<br>20.如何区别可变数据类型和不可变数据类型<br>21.将\"hello world\"转换为首字母大写\"Hello World\"<br>22.如何检测字符串中只含有数字?<br>23.将字符串\"ilovechina\"进行反转<br>24.Python 中的字符串格式化方式你知道哪些？<br>25.有一个字符串开头和末尾都有空格，比如“ adabdw ”,要求写一个函数把这个字符串的前后空格都去掉。<br>26.获取字符串”123456“最后的两个字符。<br>27.一个编码为 GBK 的字符串 S，要将其转成 UTF-8 编码的字符串，应如何操作？<br>28. (1)s=\"info：xiaoZhang 33 shandong\"，用正则切分字符串输出['info', 'xiaoZhang', '33', 'shandong'](2) a = \"你好 中国 \"，去除多余空格只留一个空格。<br>29. (1)怎样将字符串转换为小写 (2)单引号、双引号、三引号的区别？</blockquote><p><br></p><h2>列表</h2><p><br></p><blockquote>30.已知 AList = [1,2,3,1,2],对 AList 列表元素去重，写出具体过程。<br>31.如何实现 \"1,2,3\" 变成 [\"1\",\"2\",\"3\"]<br>32.给定两个 list，A 和 B，找出相同元素和不同元素<br>33.[[1,2],[3,4],[5,6]]一行代码展开该列表，得出[1,2,3,4,5,6]<br>34.合并列表[1,5,7,9]和[2,2,6,8]<br>35.如何打乱一个列表的元素？</blockquote><p><br></p><h2>字典</h2><p><br></p><blockquote>36.字典操作中 del 和 pop 有什么区别<br>37.按照字典的内的年龄排序</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f0c87fcad0839af06187a4def1706f51_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"834\" data-rawheight=\"124\" class=\"origin_image zh-lightbox-thumb\" width=\"834\" data-original=\"https://pic4.zhimg.com/v2-f0c87fcad0839af06187a4def1706f51_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='834'%20height='124'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"834\" data-rawheight=\"124\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"834\" data-original=\"https://pic4.zhimg.com/v2-f0c87fcad0839af06187a4def1706f51_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f0c87fcad0839af06187a4def1706f51_720w.jpg?source=54b3c3a5\"></figure><blockquote>38.请合并下面两个字典 a = {\"A\":1,\"B\":2},b = {\"C\":3,\"D\":4}<br>39.如何使用生成式的方式生成一个字典，写一段功能代码。<br>40.如何把元组(\"a\",\"b\")和元组(1,2)，变为字典{\"a\":1,\"b\":2}</blockquote><p><br></p><h2>综合</h2><p><br></p><blockquote>41.Python 常用的数据结构的类型及其特性？</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-3774e05a878688a01233e58eedd189a4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"829\" data-rawheight=\"103\" class=\"origin_image zh-lightbox-thumb\" width=\"829\" data-original=\"https://pic4.zhimg.com/v2-3774e05a878688a01233e58eedd189a4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='829'%20height='103'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"829\" data-rawheight=\"103\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"829\" data-original=\"https://pic4.zhimg.com/v2-3774e05a878688a01233e58eedd189a4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-3774e05a878688a01233e58eedd189a4_720w.jpg?source=54b3c3a5\"></figure><blockquote>42.如何交换字典 {\"A\"：1,\"B\"：2}的键和值？<br>43.Python 里面如何实现 tuple 和 list 的转换？<br>44.我们知道对于列表可以使用切片操作进行部分元素的选择，那么如何对生成器类型的对象实现相同的功能呢？<br>45.请将[i for i in range(3)]改成生成器<br>46.a=\"hello\"和 b=\"你好\"编码成 bytes 类型<br>47.下面的代码输出结果是什么？</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-9ece529b1810bbd9052e929e4dbb760a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"837\" data-rawheight=\"59\" class=\"origin_image zh-lightbox-thumb\" width=\"837\" data-original=\"https://pic4.zhimg.com/v2-9ece529b1810bbd9052e929e4dbb760a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='837'%20height='59'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"837\" data-rawheight=\"59\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"837\" data-original=\"https://pic4.zhimg.com/v2-9ece529b1810bbd9052e929e4dbb760a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-9ece529b1810bbd9052e929e4dbb760a_720w.jpg?source=54b3c3a5\"></figure><blockquote>48.下面的代码输出的结果是什么?</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e8e5e086d9e9c7b45861717d33de5986_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"59\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic1.zhimg.com/v2-e8e5e086d9e9c7b45861717d33de5986_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='832'%20height='59'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"59\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"832\" data-original=\"https://pic1.zhimg.com/v2-e8e5e086d9e9c7b45861717d33de5986_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e8e5e086d9e9c7b45861717d33de5986_720w.jpg?source=54b3c3a5\"></figure><h2>操作类题目</h2><p><br></p><blockquote>49.Python 交换两个变量的值<br>50.在读文件操作的时候会使用 read、readline 或者 readlines，简述它们各自的作用<br>51.json 序列化时，可以处理的数据类型有哪些？如何定制支持 datetime 类型？<br>52.json 序列化时，默认遇到中文会转换成 unicode，如果想要保留中文怎么办？<br>53.有两个磁盘文件 A 和 B，各存放一行字母，要求把这两个文件中的信息合并(按字母顺序排列)，输出到一个新文件 C 中。<br>54.如果当前的日期为 20190530，要求写一个函数输出 N 天后的日期，(比如 N 为 2，则输出 20190601)。<br>55.写一个函数，接收整数参数 n，返回一个函数，函数的功能是把函数的参数和 n 相乘并把结果返回。<br>56.下面代码会存在什么问题，如何改进？</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-474f556cb8cd7d2ea7a47b0cba51c9cd_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"834\" data-rawheight=\"125\" class=\"origin_image zh-lightbox-thumb\" width=\"834\" data-original=\"https://pic4.zhimg.com/v2-474f556cb8cd7d2ea7a47b0cba51c9cd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='834'%20height='125'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"834\" data-rawheight=\"125\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"834\" data-original=\"https://pic4.zhimg.com/v2-474f556cb8cd7d2ea7a47b0cba51c9cd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-474f556cb8cd7d2ea7a47b0cba51c9cd_720w.jpg?source=54b3c3a5\"></figure><blockquote>57.一行代码输出 1-100 之间的所有偶数。<br>58.with 语句的作用，写一段代码？<br>59.python 字典和 json 字符串相互转化方法<br>60.请写一个 Python 逻辑，计算一个文件中的大写字母数量<br>61. 请写一段 Python连接 Mongo 数据库，然后的查询代码。<br>62.说一说 Redis 的基本类型。<br>63. 请写一段 Python连接 Redis 数据库的代码。<br>64. 请写一段 Python 连接 MySQL 数据库的代码。<br>65.了解 Redis 的事务么？<br>66.了解数据库的三范式么？<br>67.了解分布式锁么？<br>68.用 Python 实现一个 Reids 的分布式锁的功能。<br>69.写一段 Python 使用 Mongo 数据库创建索引的代码。</blockquote><p><br></p><h2>高级特性</h2><p><br></p><blockquote>70.函数装饰器有什么作用？请列举说明？<br>71.Python 垃圾回收机制？<br>72.魔法函数 __call__怎么使用?<br>73.如何判断一个对象是函数还是方法？<br>74.@classmethod 和@staticmethod 用法和区别<br>75.Python 中的接口如何实现？<br>76.Python 中的反射了解么?<br>77.metaclass 作用？以及应用场景？<br>78.hasattr() getattr() setattr()的用法<br>79.请列举你知道的 Python 的魔法方法及用途。<br>80.如何知道一个 Python 对象的类型？<br>81.Python 的传参是传值还是传址？<br>82.Python 中的元类(metaclass)使用举例<br>83.简述 any()和 all()方法<br>84.filter 方法求出列表所有奇数并构造新列表，a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]<br>85.什么是猴子补丁？<br>86.在 Python 中是如何管理内存的？<br>87.当退出 Python 时是否释放所有内存分配？</blockquote><h2>正则表达式</h2><p><br></p><blockquote>88.使用正则表达式匹配出&lt;html&gt;&lt;h1&gt;<a href=\"https://link.zhihu.com/?target=http%3A//www.baidu.com\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">百度一下，你就知道</a>&lt;/html&gt;中的地址    a=\"张明 98 分\"，用 re.sub，将 98 替换为 100<br>89.正则表达式匹配中(.*)和(.*?)匹配区别？<br>90.写一段匹配邮箱的正则表达式</blockquote><p><br></p><h2>其他内容</h2><p><br></p><blockquote>91.解释一下 python 中 pass 语句的作用？<br>92.简述你对 input()函数的理解<br>93.python 中的 is 和==<br>94.Python 中的作用域<br>95.三元运算写法和应用场景？<br>96.了解 enumerate 么？<br>97.列举 5 个 Python 中的标准模块<br>98.如何在函数中设置一个全局变量<br>99.pathlib 的用法举例<br>100.Python 中的异常处理，写一个简单的应用场景<br>101.Python 中递归的最大次数，那如何突破呢？<br>102.什么是面向对象的 mro<br>103.isinstance 作用以及应用场景？<br>104.什么是断言？应用场景？<br>105.lambda 表达式格式以及应用场景？<br>106.新式类和旧式类的区别<br>107.dir()是干什么用的？<br>108.一个包里有三个模块，<a href=\"https://link.zhihu.com/?target=http%3A//demo1.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">demo1.py</a>, <a href=\"https://link.zhihu.com/?target=http%3A//demo2.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">demo2.py</a>, <a href=\"https://link.zhihu.com/?target=http%3A//demo3.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">demo3.py</a>，但使用 from tools import *导入模块时，如何保证只有 demo1、demo3 被导入了。<br>109.列举 5 个 Python 中的异常类型以及其含义<br>110.copy 和 deepcopy 的区别是什么？<br>111.代码中经常遇到的*args, **kwargs 含义及用法。<br>112.Python 中会有函数或成员变量包含单下划线前缀和结尾，和双下划线前缀结尾，区别是什么?<br>113.w、a+、wb 文件写入模式的区别<br>114.举例 sort 和 sorted 的区别<br>115.什么是负索引？<br>116.pprint 模块是干什么的？<br>117.解释一下 Python 中的赋值运算符<br>118.解释一下 Python 中的逻辑运算符<br>119.讲讲 Python 中的位运算符<br>120.在 Python 中如何使用多进制数字？<br>121.怎样声明多个变量并赋值？</blockquote><p><br></p><h2>算法和数据结构</h2><blockquote>122.已知：</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f78e20b47b593dc30d2892c34e1c5a7b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"53\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic1.zhimg.com/v2-f78e20b47b593dc30d2892c34e1c5a7b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='832'%20height='53'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"53\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"832\" data-original=\"https://pic1.zhimg.com/v2-f78e20b47b593dc30d2892c34e1c5a7b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f78e20b47b593dc30d2892c34e1c5a7b_720w.jpg?source=54b3c3a5\"></figure><blockquote>(1) 从 AList 和 BSet 中 查找 4，最坏时间复杂度那个大？<br>(2) 从 AList 和 BSet 中 插入 4，最坏时间复杂度那个大？<br>123.用 Python 实现一个二分查找的函数<br>124.python 单例模式的实现方法<br>125.使用 Python 实现一个斐波那契数列<br>126.找出列表中的重复数字<br>127.找出列表中的单个数字<br>128.写一个冒泡排序<br>129.写一个快速排序<br>130.写一个拓扑排序<br>131.python 实现一个二进制计算<br>132.有一组“+”和“-”符号，要求将“+”排到左边，“-”排到右边，写出具体的实现方法。<br>133.单链表反转<br>134.交叉链表求交点<br>135.用队列实现栈<br>136.找出数据流的中位数<br>137.二叉搜索树中第 K 小的元素</blockquote><h2>爬虫相关</h2><p><br></p><blockquote>138.在 requests 模块中，requests.content 和 requests.text 什么区别<br>139.简要写一下 lxml 模块的使用方法框架<br>140.说一说 scrapy 的工作流程<br>141.scrapy 的去重原理<br>142.scrapy 中间件有几种类，你用过哪些中间件<br>143.你写爬虫的时候都遇到过什么？反爬虫措施，你是怎么解决的？<br>144.为什么会用到代理？<br>145.代理失效了怎么处理？<br>146.列出你知道 header 的内容以及信息<br>147.说一说打开浏览器访问 <a href=\"https://link.zhihu.com/?target=http%3A//www.baidu.com\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">百度一下，你就知道</a> 获取到结果，整个流程。<br>148.爬取速度过快出现了验证码怎么处理<br>149.scrapy 和 scrapy-redis 有什么区别？为什么选择 redis 数据库？<br>150.分布式爬虫主要解决什么问题<br>151.写爬虫是用多进程好？还是多线程好？ 为什么？<br>152.解析网页的解析器使用最多的是哪几个<br>153.需要登录的网页，如何解决同时限制 ip，cookie,session（其中有一些是动态生成的）在不使用动态爬取的情况下？<br>154.验证码的解决（简单的：对图像做处理后可以得到的，困难的：验证码是点击，拖动等动态进行的？）<br>155.使用最多的数据库（mysql，mongodb，redis 等），对他的理解？</blockquote><p><br></p><h2>网络编程</h2><p><br></p><blockquote>156.TCP 和 UDP 的区别？<br>157.简要介绍三次握手和四次挥手<br>158.什么是粘包？ socket 中造成粘包的原因是什么？ 哪些情况会发生粘包现象？</blockquote><p><br></p><h2>并发</h2><p><br></p><blockquote>159.举例说明 conccurent.future 的中线程池的用法<br>160.说一说多线程，多进程和协程的区别。<br>161.简述 GIL<br>162.进程之间如何通信<br><a href=\"https://link.zhihu.com/?target=http%3A//163.IO\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">163.IO</a> 多路复用的作用？<br><a href=\"https://link.zhihu.com/?target=http%3A//164.select\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">164.select</a>、poll、epoll 模型的区别？<br>165.什么是并发和并行？<br>166.一个线程 1 让线程 2 去调用一个函数怎么实现？<br>167.解释什么是异步非阻塞？<br>168.threading.local 的作用？</blockquote><p><br></p><h2>Git 面试题</h2><p><br></p><blockquote>169.说说你知道的 git 命令<br>170.git 如何查看某次提交修改的内容</blockquote><p>—————————————————————————————————————</p><p>公号：聊聊Python，日常更新一些干货，欢迎一起来聊~一起学习Python</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-b6baeeb5cc2c9acd1d09cb46f43c3d41_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"300\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-804368b1f28bad5dbde217cab2194dea_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"300\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='300'%20height='300'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"300\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-804368b1f28bad5dbde217cab2194dea_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"300\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-b6baeeb5cc2c9acd1d09cb46f43c3d41_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>文章转载自CSDN博客</p><p>来源：<a href=\"https://link.zhihu.com/?target=https%3A//blog.csdn.net/csdngkk/article/details/99116607\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">blog.csdn.net/csdngkk/a</span><span class=\"invisible\">rticle/details/99116607</span><span class=\"ellipsis\"></span></a></p><p></p>", "一行代码可以做什么？": "<p>就下面这一行代码。</p><p>你看完之后，别忘了给我点赞就好。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>document.body.contentEditable='true';\n</code></pre></div><p><br></p><p>操作如下：</p><ol><li>在网页中点击F12，任意页面都行。</li><li>在弹出的调试面板最上面选中Console，然后输入上面这行代码，回车。</li><li>好了，整个网页你可以随便编辑了。</li></ol><p>如下面视频所示：</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/1236443767449587712\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"\" data-name=\"一行让你为所欲为的代码\" data-poster=\"https://pic4.zhimg.com/v2-6509f137aeaea516bb1e3e8430bf8c2a.jpg\" data-lens-id=\"1236443767449587712\">              <img class=\"thumbnail\" src=\"https://pic4.zhimg.com/v2-6509f137aeaea516bb1e3e8430bf8c2a.jpg\">              <span class=\"content\">                <span class=\"title\">一行让你为所欲为的代码<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/1236443767449587712</span>              </span>            </a>            <hr><p>行了，我知道你想去<b>修改支付宝余额</b>了。</p><p>装逼不用那么着急。</p><p>先给我<b>点个赞</b>再去。</p><p><br></p><hr><p>我啊？</p><p>我不装逼。</p><p>下面的余额都是真的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-94527cb89403c3462b3c78695461ca01_720w.jpg?source=54b3c3a5\" data-rawwidth=\"612\" data-rawheight=\"150\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-85c77655c1fbea981c23e3e8e84baf0d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"612\" data-original=\"https://pic1.zhimg.com/v2-94527cb89403c3462b3c78695461ca01_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='612'%20height='150'&gt;&lt;/svg&gt;\" data-rawwidth=\"612\" data-rawheight=\"150\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-85c77655c1fbea981c23e3e8e84baf0d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"612\" data-original=\"https://pic1.zhimg.com/v2-94527cb89403c3462b3c78695461ca01_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-94527cb89403c3462b3c78695461ca01_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>钱都是我作<b>软件架构师</b>赚的。</p><p>不信啊？</p><p>那，<b>关注我</b>，我会偶尔分享<b>软件架构</b>和<b>编程</b>方面的知识，带你一起赚（xie）大（dai）钱(ma)。</p><hr><p><br></p><hr><p><br></p><p>好的，不开玩笑了。</p><p>其实，一行代码说明不了什么。如果是<b>程序员要多读优秀的源码</b>才能提升自己的编程能力。在这里，给大家推荐一本<b>教你阅读源码的书籍</b>。</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p>淘宝则更便宜些：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//detail.tmall.com/item.htm%3Fid%3D623287891462\" data-image=\"https://pic1.zhimg.com/v2-c6a9cc09bf88561fd767156457b34ffc_200x0.jpg?source=54b3c3a5\" data-image-width=\"298\" data-image-height=\"430\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">官方正版 通用源码阅读指导书--MyBatis源码详解 易哥 架构师程序员提升源码阅读系统架构软件开发能力书籍 电子工业出版社</a><p></p>", "请问自学 Python 有必要买课程吗？": "<p><b>没必要</b></p><blockquote>目前网上优质、实用的免费课程有很多，而一些收费的课程目的并不在于授业解惑，而是在于盈利。如果本着分享的目的，获取一些回报自然无可厚非，只怕绝大多数提供课程的出发点就带着商业行为，这样对于刚入门、不了解情况的初学者是一个非常严重的误导，不仅花费冤枉钱，而且掉进坑里费心费力，文末有“<b>惊喜</b>”。</blockquote><hr><p>说一下我关于Python学习的看法，我认为Python作为一个较为简单的编程语言没必要看一些视频课程，这样会花费大量时间，而对于编程最高效的学习路线莫过于以下几步：</p><ul><li>看书或者一些教程进行入门学习，掌握语言的语法和常用方法</li><li>找一些小项目练手，查漏补缺，熟练语法的基础上明确自己的不足</li><li>找一个方向，做一些相应的实战，进一步巩固</li></ul><hr><blockquote><b>专注Python、AI、大数据 </b><a class=\"member_mention\" href=\"https://www.zhihu.com/people/25cd73f8fd6c6fdaacd95ae1091b5edb\" data-hash=\"25cd73f8fd6c6fdaacd95ae1091b5edb\" data-hovercard=\"p$b$25cd73f8fd6c6fdaacd95ae1091b5edb\">@七步编程</a> </blockquote><p>我认为，Python可以分三个阶段进行系统学习：</p><ul><li>入门</li><li>进阶</li><li>实战</li></ul><h2><b>1.入门</b></h2><blockquote>知乎和其他论文关于Python入门的讨论已经有很多，有不少博主上来就是推荐一波书籍，我认为人的精力和时间是有限的，推荐的书籍和教程太多，难免学不过来，倒不如选择一两本好书，仔仔细细学习一边。尤其对于编程语言，更多的需要在实践过程中不断的踩坑，才能意识到怎么做会更好，就比如<b>面向对象、函数式编程、类的特殊方法</b>等等，只有我们去实战中用到的时候，才能更加真切的体会到它的作用和优点。对于入门，书籍和在线教程分别推荐一份。</blockquote><h2><b>书籍</b></h2><ul><li><b>Python cookbook</b></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-3dde8bc738ab1c07a3800b1605ac34fe_720w.jpg?source=54b3c3a5\" data-rawwidth=\"381\" data-rawheight=\"500\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-46fd15c1c8b2c7429aa7f28bccc9a5f5_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"381\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='381'%20height='500'&gt;&lt;/svg&gt;\" data-rawwidth=\"381\" data-rawheight=\"500\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-46fd15c1c8b2c7429aa7f28bccc9a5f5_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"381\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-3dde8bc738ab1c07a3800b1605ac34fe_720w.jpg?source=54b3c3a5\"></figure><p>也可以查看在线链接：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//python3-cookbook.readthedocs.io/zh_CN/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Cookbook 3rd Edition Documentation</a><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-fa73662b983a96f7ae1d76e891d69142_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1067\" data-rawheight=\"707\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-48d40af9ae4e4d003e7dcc7566c7ed7a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1067\" data-original=\"https://pic2.zhimg.com/v2-fa73662b983a96f7ae1d76e891d69142_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1067'%20height='707'&gt;&lt;/svg&gt;\" data-rawwidth=\"1067\" data-rawheight=\"707\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-48d40af9ae4e4d003e7dcc7566c7ed7a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1067\" data-original=\"https://pic2.zhimg.com/v2-fa73662b983a96f7ae1d76e891d69142_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-fa73662b983a96f7ae1d76e891d69142_720w.jpg?source=54b3c3a5\"></figure><blockquote>毫无疑问，这是一本很不错的书籍，有人会考虑，这本书适合入门吗？我的回答是肯定的。当然，这本书比着有些\"入门书籍\"要稍微深一些，这正是我推荐这本书而不推荐其他书籍的原因，我觉得《Python Cookbook》和其他入门书籍、教程一样，都是在围绕数据结构、基本概念在展开，但是它对比于其他教程\"蜻蜓点水\"式的阐述，我觉得这本书做了更多延伸，讲解了更多高阶用法，我觉得高阶用法你不一定要记住，但是知道有这么一回事，对后期进阶、实战会有很多帮助。如果觉得这本书知识太深，可以结合下面介绍的<b>菜鸟教程</b>、<b>廖雪峰Python</b>进行入门学习，可以在学习基础语法、了解基本概念之后看一下《Python Cookbook》，有助于加深对Python的理解。</blockquote><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p>除此之外，还有一些不错的Python书籍可以选择：</p><ul><li>《Python编程：从入门到实践》</li></ul><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><ul><li>《Python编程快速上手》</li></ul><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><ul><li>《像计算机科学家一样思考Python (第2版)》</li></ul><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><ul><li>《流畅的Python》</li></ul><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><h2><b>在线教程</b></h2><ul><li><b>菜鸟教程</b></li></ul><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=http%3A//www.runoob.com/python/python-tutorial.html\" data-image=\"https://pic2.zhimg.com/v2-9cda30d52521c24d01db00efeef2836e_bh.jpg?source=54b3c3a5\" data-image-width=\"220\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 基础教程 | 菜鸟教程</a><p>或者，</p><ul><li><b>廖雪峰的官方网站</b></li></ul><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000\" data-image=\"https://pic1.zhimg.com/v2-9b1d6bcba2cb2fd17869a50569c57acb_bh.jpg?source=54b3c3a5\" data-image-width=\"640\" data-image-height=\"360\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python教程</a><blockquote>想了解Python配置内容的可以查看我的另一篇回答【<a href=\"https://www.zhihu.com/question/289779838/answer/613456459\" class=\"internal\">Jackpop：初学 Python 需要安装哪些软件？</a>】</blockquote><h2><b>2.进阶</b></h2><blockquote>掌握了Python的基础语法，例如<b>运算符、条件语句、循环语句、数据结构、函数、类</b>等，要想加深印象，需要一些练手的小项目来进一步增强对Python的认知，关于进阶项目，我推荐以下几个。</blockquote><ul><li><b>Python 练习册，每天一个小程序</b></li></ul><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//github.com/Yixiaohan/show-me-the-code\" data-image=\"https://pic2.zhimg.com/v2-2b1e868fb240520b97d83e95987da4a8_l.jpg?source=54b3c3a5\" data-image-width=\"128\" data-image-height=\"128\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Yixiaohan/show-me-the-code</a><blockquote>github将近<b>8k</b>个star的学习项目。</blockquote><ul><li><b>500 line or less</b></li></ul><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Index of /en/500L</a><blockquote>一本Python神书，而且还有源码。</blockquote><ul><li><b>the5fire的技术博客</b></li></ul><p><a href=\"https://link.zhihu.com/?target=https%3A//www.the5fire.com/python-practice-1.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python项目练习一：即时标记</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.the5fire.com/python-reportlab.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python项目练习二：画幅好画</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.the5fire.com/python-pro-powerfullxml.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python项目练习三：万能的XML</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.the5fire.com/python-pro4-newsagent.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python项目练习四：新闻聚合</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.the5fire.com/python-project5-socketchat.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python项目练习五：虚拟茶话会</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.the5fire.com/python-project6-cgi.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python项目练习六：使用CGI进行远程编辑</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.the5fire.com/python-project7-board.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python项目练习七：自定义公告板</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.the5fire.com/python-project8-xml-rpc.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python项目练习八：使用XML-RPC进行远程文件共享</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.the5fire.com/python-project9-p2p-gui.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python项目练习九：文件共享2-GUI版本</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.the5fire.com/python-project10-diy-game.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python项目练习十：DIY街机游戏</a></p><blockquote>覆盖面很广的十个练手项目。</blockquote><h2>3.实战</h2><p>学完基础语法并了解Python一下高阶方法之后该做些什么？</p><p>我认为首要的是先选择一个方向，</p><ul><li>机器学习</li><li>图像处理</li><li>自然语言</li><li>数据分析</li><li>web</li><li>......</li></ul><p>这样才清楚自己该朝着哪个方向努力、该拿哪些项目练手，对编程能力进一步巩固，这样要比“无头苍蝇”式的漫无目的学习效率要高很多。</p><p>其次，可以找一些比较优秀的项目进行实战，扩展自己知识面的同时对编程能力进行巩固。</p><p><b>首先</b>，以<b>机器学习、深度学习框架</b>为例，推荐几个github上热门的学习项目。</p><h2>tensorflow_course</h2><p>如果觉得官方文档不能够让你变成tensorflow熟手，那就试着用tensorflow完成几个机器学习算法的搭建，tensorflow_course是一个gihub资源，目前已经<b>10k+</b>个star，受欢迎程度可见一斑，上面有传统算法，例如线性回归、支持向量机，也有深度学习算法，例如卷积神经网络，能够让你在学习机器学习的过程中进一步熟练tensorflow。</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//github.com/nfmcclure/tensorflow_cookbook\" data-image=\"https://pic2.zhimg.com/v2-cdc62f75eecf047f76daedb16e0d549e_l.jpg?source=54b3c3a5\" data-image-width=\"235\" data-image-height=\"235\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">nfmcclure/tensorflow_cookbook</a><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-6cdac2693c643a248dc09e10c51151fa_720w.jpg?source=54b3c3a5\" data-rawwidth=\"901\" data-rawheight=\"622\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0da7469bd6de2dda06f92ab28e09475c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"901\" data-original=\"https://pic1.zhimg.com/v2-6cdac2693c643a248dc09e10c51151fa_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='901'%20height='622'&gt;&lt;/svg&gt;\" data-rawwidth=\"901\" data-rawheight=\"622\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0da7469bd6de2dda06f92ab28e09475c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"901\" data-original=\"https://pic1.zhimg.com/v2-6cdac2693c643a248dc09e10c51151fa_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-6cdac2693c643a248dc09e10c51151fa_720w.jpg?source=54b3c3a5\"></figure><h2>tensorflow_cookbook</h2><p>这也是一个github项目资源，虽然不如上面这个火热，但是目前也拥有<b>4.2k+</b>个star，和上面这个资源有些类似之处，包括传统算法和深度学习算法的实现，可以边学习机器学习知识、边学习深度学习平台。</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//github.com/nfmcclure/tensorflow_cookbook\" data-image=\"https://pic1.zhimg.com/v2-cdc62f75eecf047f76daedb16e0d549e_l.jpg?source=54b3c3a5\" data-image-width=\"235\" data-image-height=\"235\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">nfmcclure/tensorflow_cookbook</a><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a28cb0f746da9160c1918a92705d2ae3_720w.jpg?source=54b3c3a5\" data-rawwidth=\"481\" data-rawheight=\"457\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-87077eacdcc22c3a84d3ab1ec352c41f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"481\" data-original=\"https://pic1.zhimg.com/v2-a28cb0f746da9160c1918a92705d2ae3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='481'%20height='457'&gt;&lt;/svg&gt;\" data-rawwidth=\"481\" data-rawheight=\"457\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-87077eacdcc22c3a84d3ab1ec352c41f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"481\" data-original=\"https://pic1.zhimg.com/v2-a28cb0f746da9160c1918a92705d2ae3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a28cb0f746da9160c1918a92705d2ae3_720w.jpg?source=54b3c3a5\"></figure><h2>Awesome-pytorch-list</h2><p>如果觉得官方文档内容不够，可以看一下这个github资源，目前<b>5.8k+</b>个star，这个资源可以称得上是大合集，包括计算机视觉、自然语言处理、教程和示例、优秀文章的实现，非常全面。</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//github.com/bharathgs/Awesome-pytorch-list\" data-image=\"https://pic4.zhimg.com/v2-18c33ba66b5335339740e517975d1df1_l.jpg?source=54b3c3a5\" data-image-width=\"400\" data-image-height=\"400\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">bharathgs/Awesome-pytorch-list</a><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-a8d65c364d287d5f8d8c84641c5da016_720w.jpg?source=54b3c3a5\" data-rawwidth=\"442\" data-rawheight=\"325\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-21895560877afc6d9c08687e81e75841_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"442\" data-original=\"https://pic1.zhimg.com/v2-a8d65c364d287d5f8d8c84641c5da016_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='442'%20height='325'&gt;&lt;/svg&gt;\" data-rawwidth=\"442\" data-rawheight=\"325\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-21895560877afc6d9c08687e81e75841_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"442\" data-original=\"https://pic1.zhimg.com/v2-a8d65c364d287d5f8d8c84641c5da016_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-a8d65c364d287d5f8d8c84641c5da016_720w.jpg?source=54b3c3a5\"></figure><p><b>然后</b>，再推荐一下廖雪峰大神的Web App实战教程。</p><h2>Web App</h2><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001432170876125c96f6cc10717484baea0c6da9bee2be4000\" data-image=\"https://pic4.zhimg.com/v2-9b1d6bcba2cb2fd17869a50569c57acb_bh.jpg?source=54b3c3a5\" data-image-width=\"640\" data-image-height=\"360\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">实战</a><blockquote>从搭建环境，到构建前端，再到部署Web App。</blockquote><h2>资源下载</h2><p>更多Python学习相关资源下载，请见访问下方链接：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//docs.qq.com/doc/DQUNLa2lmRHZ4eHNq\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python资源</a></p><hr><blockquote>想了解更多关于Python配置的内容？请查看我的另一篇文章【<a href=\"https://www.zhihu.com/question/289779838/answer/613456459\" class=\"internal\">初学 Python 需要安装哪些软件？ - Jackpop的回答</a>】，教你选取合适的Python IDE、配置高速的pip源、高效使用Python虚拟环境。</blockquote><hr><h2>干货</h2><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzI0NTM1MzA2Mw%3D%3D%26mid%3D2247484955%26idx%3D1%26sn%3Dfa9827493c135096729fac6cd8b54fb2%26chksm%3De94e9913de391005dc83393528bef4530875108a2fc5fbe0e9de0da87a96a4b146621288f7f8%26token%3D2086279066%26lang%3Dzh_CN%23rd\" data-image=\"https://pic2.zhimg.com/v2-c6753c8e8cef925c923ebcd8c099b6cc_bh.jpg?source=54b3c3a5\" data-image-width=\"1085\" data-image-height=\"461\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">干货 | 2019年共享免费资源整理(上)：学习资源篇</a><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzI0NTM1MzA2Mw%3D%3D%26mid%3D2247484959%26idx%3D1%26sn%3D628c532c9504cbdb17bcd75fee354292%26chksm%3De94e9917de391001c367b78cedc19276a398c8675e9c9b5c590d02e90efdd1fc5f2e3e816db9%26token%3D2086279066%26lang%3Dzh_CN%23rd\" data-image=\"https://pic2.zhimg.com/v2-981d19e9c9cc72055048bf606f19d7a9_bh.jpg?source=54b3c3a5\" data-image-width=\"1085\" data-image-height=\"455\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">干货 | 2019年共享免费资源整理(下)：实用工具篇</a><h2>个人主页</h2><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//jackpopc.github.io/\" data-image=\"https://pic2.zhimg.com/v2-34e2fc5ea1949cd76a50e9ca192a7718_bh.jpg?source=54b3c3a5\" data-image-width=\"480\" data-image-height=\"320\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">平凡而诗意</a><h2>更多我的作品</h2><p><a href=\"https://zhuanlan.zhihu.com/p/79671074\" class=\"internal\">Jackpop：目录 | 精选CV、Python等系列教程</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/84590108\" class=\"internal\">Jackpop：大数据处理 | Spark&amp;HDFS集群配置及基本使用</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/86349140\" class=\"internal\">Jackpop：实用工具 | 推荐3款令人惊艳的截图工具</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/89172998\" class=\"internal\">Jackpop：强烈推荐 | 这将会成为一个优质的github项目</a></p><p><a href=\"https://www.zhihu.com/question/339417870/answer/869171272\" class=\"internal\">Jackpop：计算机小白如何开始机器学习的学习，有入门课程推荐吗?</a></p><p><a href=\"https://www.zhihu.com/question/27608145/answer/870130099\" class=\"internal\">Jackpop：C盘快满了，该如何清理？</a></p><p><a href=\"https://www.zhihu.com/question/352525266/answer/874444395\" class=\"internal\">Jackpop：学习pytorch该怎么提高自己的代码能力?</a></p><p><a href=\"https://www.zhihu.com/question/334587481/answer/875038400\" class=\"internal\">Jackpop：2019 年双十一有哪些值得购买的东西？</a></p>", "如何系统地自学 Python？": "<p><b>0709更：</b></p><p>上周旁听了一个大学学长组织的线上Python交流会，里边不乏充斥着各位行业大牛，讲的内容确实精彩，可能对于Python经验5年+的人来说，是受益匪浅，欢迎程度极高，恨不得跳出屏幕来表示赞同，毕竟很多提到的问题，我在工作中也很常见，但是作为资历一般的程序员，有一些理解起来还是有些困难，评论区里同时也还有另外一种声音：</p><blockquote>听不懂啊，还可以再细讲一些吗？<br>刚毕业，刚开始学Python，可以说说入门的吗？<br>走了走了，零基础满脸懵……<br>太难了，放弃Python了</blockquote><p><br></p><p>我很能理解“另一种声音”，我当初也是自学Python，刚开始的时候，我连循环结构和分支结构都搞不明白谁是谁，去找有经验的人问，结果问了几回人家就烦了，所以，学习这种事，还是得靠自己。</p><p>根据我自己的经验来说，想从零开始学Python，以后也确实想找相关的工作，基本是下边这三种方式：</p><ul><li>继续上学。报个这方面的专业，学上两三年，老师就在身边，有啥不懂的问题，直接办公室走一趟，毕业的时候去找工作不成大问题；</li><li>看书自学。这块可以看看我之前推荐的GitHub【Python百天之路】-骆昊，对细节把握很到位！</li><li>在网上找视频课自学。你可以利用碎片时间去学，时间上会更节省，我为了苦学Python大概买了十多门课吧。</li></ul><p>读研读博这件事时间成本比较高，我对自己没有完全的自信，所以我思考再三，还是决定踏入社会浪潮了。（但是对于学习能力强，本科也比较优秀的学生，非常建议继续读研读博，未来踏入社会起薪会非常高，我现在身边就有两个博士大神，我只能膜拜了。。。）</p><p>进入社会之后，我基本就是买书和看视频自学，这回给你们来个全方位安利：</p><h2>一、网站推荐</h2><p><b>1、Python </b></p><p>Python初学者的法宝，如果你想下载Python，最好还是在这个网址去下，不要想着用一些不明来源的安装包。在这里，你不仅可以下载各种版本的Python源代码和安装程序，更有各种文献资料、Python交流社区，还会告诉你Python的最新行情，不得不感叹，这功能太强大！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1227\" data-rawheight=\"235\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c3ff6a926f09ecf7de0e8cff74f12030_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1227\" data-original=\"https://pic4.zhimg.com/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1227'%20height='235'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1227\" data-rawheight=\"235\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c3ff6a926f09ecf7de0e8cff74f12030_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1227\" data-original=\"https://pic4.zhimg.com/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.python.org/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-ff06c339780f23112c1cbbbb284158ff_l.jpg?source=54b3c3a5\" data-image-width=\"200\" data-image-height=\"200\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Welcome to Python.org</a><p><b>2、菜鸟教程</b></p><p>站内的知识点很全面，无论你想学习哪种领域，都可以轻松在这里找到合适的资料。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1278\" data-rawheight=\"142\" class=\"origin_image zh-lightbox-thumb\" width=\"1278\" data-original=\"https://pic2.zhimg.com/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1278'%20height='142'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1278\" data-rawheight=\"142\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1278\" data-original=\"https://pic2.zhimg.com/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.runoob.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">菜鸟教程 - 学的不仅是技术，更是梦想！</a><p><b>3、Codecademy</b></p><p>这个学习网站很大的优势就是在浏览器上直接编写代码，轻松解决了初学者程序环境安装的困扰。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"944\" data-rawheight=\"136\" class=\"origin_image zh-lightbox-thumb\" width=\"944\" data-original=\"https://pic1.zhimg.com/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='944'%20height='136'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"944\" data-rawheight=\"136\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"944\" data-original=\"https://pic1.zhimg.com/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.codecademy.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">codecademy.com/</span><span class=\"invisible\"></span></a><p><b>4、Coursera</b></p><p>如果你英文比较好，交流没有问题的话，比较推荐这个网站。这是一个课程学习网站，内容涵盖编程各个领域，目前已经和200+所大学合作课程，还可以在线读学士、硕士学位。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-81745d14b1bde5ecd1bd04a48d24be28_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1072\" data-rawheight=\"212\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-73b40b638b9e768fb56ec0a6dabe2ec6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1072\" data-original=\"https://pic1.zhimg.com/v2-81745d14b1bde5ecd1bd04a48d24be28_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1072'%20height='212'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1072\" data-rawheight=\"212\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-73b40b638b9e768fb56ec0a6dabe2ec6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1072\" data-original=\"https://pic1.zhimg.com/v2-81745d14b1bde5ecd1bd04a48d24be28_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-81745d14b1bde5ecd1bd04a48d24be28_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.coursera.org/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">coursera.org/</span><span class=\"invisible\"></span></a><p><b>5、CSDN</b></p><p>如果说你的英文是难题，给你推荐CSDN，是国内老牌程序员社区，里边有各领域博文、资料、课程，基本很多专业问题都可以在这里查。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1105\" data-rawheight=\"201\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-fc2258a955c3632a9c11c8ce1aa8c044_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1105\" data-original=\"https://pic4.zhimg.com/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1105'%20height='201'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1105\" data-rawheight=\"201\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-fc2258a955c3632a9c11c8ce1aa8c044_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1105\" data-original=\"https://pic4.zhimg.com/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net%3Futm_source%3Deduxy_zhihu_0710_thdz_edu\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CSDN学院-IT实战派</a><h2>二、书籍推荐</h2><p><b>1、《笨办法学Python》</b></p><p>如果是初学Python的话，没有什么编程基础，还是比较适合从这本开始学的。整体是以习题的方式开始引导初学者学习编程。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-fa3d4da81eac4d25263f7558eec368e1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"640\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-a717b8b1b9764379ebb730bd3608e9c1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-fa3d4da81eac4d25263f7558eec368e1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='640'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"640\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-a717b8b1b9764379ebb730bd3608e9c1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-fa3d4da81eac4d25263f7558eec368e1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-fa3d4da81eac4d25263f7558eec368e1_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//m.tb.cn/h.VJQdwV1\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">笨办法学Python</a><p><b>2、《Python Cookbook》</b></p><p>这本书既有知识点的详细讲解，又有更多高阶用法的延伸，对于已经有一定基础但是掌握不牢的同学来说，无疑是值得拥有的好书。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-7949fe082eca48c4cb65728598006c0e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"469\" data-rawheight=\"617\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8d63fe117497e9b67a8cb8487a981a19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"469\" data-original=\"https://pic1.zhimg.com/v2-7949fe082eca48c4cb65728598006c0e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='469'%20height='617'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"469\" data-rawheight=\"617\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8d63fe117497e9b67a8cb8487a981a19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"469\" data-original=\"https://pic1.zhimg.com/v2-7949fe082eca48c4cb65728598006c0e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-7949fe082eca48c4cb65728598006c0e_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//m.tb.cn/h.VqHmgp4\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Cookbook</a><p><b>3、《流畅的Python》</b></p><p>这本书对于Python的高级用法探究很深入，涵盖了数据结构、对象、并行与并发、元编程等多个方向。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-fb5f1217be61867e0b90dbbc6fc099ed_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"924\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2b2ce74a87239f5fbd9d9ebba9701fdf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"700\" data-original=\"https://pic2.zhimg.com/v2-fb5f1217be61867e0b90dbbc6fc099ed_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='700'%20height='924'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"924\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2b2ce74a87239f5fbd9d9ebba9701fdf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"700\" data-original=\"https://pic2.zhimg.com/v2-fb5f1217be61867e0b90dbbc6fc099ed_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-fb5f1217be61867e0b90dbbc6fc099ed_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//m.tb.cn/h.VJQ6Gsz\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">流畅的Python</a><h2>三、课程推荐</h2><p>其实，除了学习网站和书籍，我还在网易云课堂、51、慕课、CSDN学院买了不下10套关于Python入门的课，在得到也买了时间管理课。</p><p>我自己的话，因为我是想进行系统学习，也想节省一些学习时间，加上我也比较懒，非得有人督促着才能坚持不懈，所以我选了CSDN的Python训练营。</p><a href=\"https://link.zhihu.com/?target=https%3A//t.csdnimg.cn/eEpR\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-e059f149d5f1062e4b6e4831078ae220_bh.jpg?source=54b3c3a5\" data-image-width=\"750\" data-image-height=\"320\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python工程师-CSDN学院</a><p><br></p><p>最近正在学习Python的进阶领域-AI，这回同样参与了一个训练营，深刻感受到监督使人进步！不为别的，也是希望自己以后的工作范围更广，也能跟上时代的脚步。</p><a href=\"https://link.zhihu.com/?target=https%3A//marketing.csdn.net/p/b3bca8ef2345fbda9e52fe414d5f28d9%3Futm_source%3Deduxy_zwzhihu_xtk\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CSDN</a><p>也许有人会问：“你干嘛把自己逼得那么紧，安安稳稳的不就很好了吗？”</p><p>作为一个人，如果长期处于一个舒适安逸的环境，慢慢就会被这种安逸笼罩，变得懒惰，原本拥有的能力也会逐步减弱，当有一天危险来临，所在的舒适圈被打破，连生存下去都是个难题！</p><p>所以，为了好好活下去，要不跳出舒适圈，要不就扩大你的舒适圈。</p><p>跳出舒适圈，意味着你要彻底离开现在的区域，也许是换个城市、换个工作、甚至换个行业，让自己重新拥有危机感，让新环境逼着你去成长；扩大舒适圈，就是让自己能生存的舒适范围更大，主动学习、提升你的能力。</p><p>我选择的是从零开始全方向提升，因为我想着，既然要痛苦，就直接痛苦这一次。上边就是我学过的系统课，内容很全，不过价格也相对更贵。</p><p>如果有的同学目前是打算一步一步慢慢来，或者之前已经有一些基础，只是想突破单个方向，下边这几门课程我也在刚接触Python的时候买来学的，价格更便宜，内容却丝毫不打折扣，是比较值得学习的！</p><p><br></p><p><b>1、基础知识</b></p><p>如果是毫无基础可言，甚至不知道如何下载Python， 比较推荐齐伟老师的《8小时Python零基础轻松入门》或者是董付国的《Python可以这样学》。细节全面，适合小白入门。</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/29122%3Futm_source%3Deduxy_zhihu_0710_thdz_29122\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-dd4861c32c105a3aa9b53a8be092d34f_200x0.jpg?source=54b3c3a5\" data-image-width=\"375\" data-image-height=\"5037\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">8小时Python零基础轻松入门</a><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/4118%3Futm_source%3Deduxy_zhihu_0710_thdz_4118\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-18d0ea957c739defa96e39f148a630a6_bh.jpg?source=54b3c3a5\" data-image-width=\"777\" data-image-height=\"538\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python可以这样学（第一季：Python内功修炼）</a><p><b>2、爬虫</b></p><p>这回是偏基础点的，之前也分享过两门，都可以进行参考。</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/24756%3Futm_source%3Deduxy_zhihu_0710_thdz_24756\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-c2f8874caaf9356013677e7eb10048af_200x0.jpg?source=54b3c3a5\" data-image-width=\"584\" data-image-height=\"1887\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">150讲轻松搞定Python网络爬虫</a><p><br></p><p><b>3、数据分析</b></p><p>我买过两类数据分析课，零基础入门和多方位学习，现在直接发出来，也是为了方便不同需求的同学。</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/25326%3Futm_source%3Deduxy_zhihu_0710_thdz_25326\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-a5fd30085baa7d5d1f58331906050229_200x0.jpg?source=54b3c3a5\" data-image-width=\"750\" data-image-height=\"1703\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据挖掘基础：零基础学Python数据分析</a><a href=\"https://link.zhihu.com/?target=https%3A//study.163.com/course/introduction/1209819804.htm\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2020Python全能型数据分析师技能 - 网易云课堂</a><p><br></p><p><b>4、机器学习</b></p><p>说起人工智能讲的好的老师，必说唐宇迪（感觉真的霸榜各个学习平台）。</p><p>他是计算机的博士，好像还参与了挺多国家级项目，我听过几次他的课和直播，老师的讲课风格很幽默，经常会举例子，让你更清晰的搞懂知识点，我觉得自己是在学习中享受。</p><p>（基础知识配实战，这样学习起来相对也更容易）</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/10184%3Futm_source%3Deduxy_zhihu_0710_thdz_10184\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">10小时玩转机器学习</a><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/10085%3Futm_source%3Deduxy_zhihu_0710_thdz_10085\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python机器学习进阶实战视频教学</a><p>今天先说到这里，下回我会跟大家细说这回学AI心酸与快乐，满心干货！</p><p>我的目标是进阿里，祝我幸运进阶！</p><hr><p><b>更新：</b></p><p><b>有很多朋友私信问我Python学习有没有什么好的资料，我给大家找了几门不错的免费课，想学的可以看看。</b></p><p>《Python入门教程》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/24459%3Futm_source%3Deduxy_zhihuylrs_24459_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门教程--Python视频教程-编程语言-CSDN学院</a><p>《Python初级入门精讲》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/6521%3Futm_source%3Deduxy_zhihuylrs_6521_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python初级入门精讲--Python视频教程-编程语言-CSDN学院</a><p>《Python爬虫开发》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/24454%3Futm_source%3Deduxy_zhihuylrs_24454_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫开发--Python视频教程-编程语言-CSDN学院</a><p>《Python实战编程》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/19711%3Futm_source%3Deduxy_zhihuylrs_19711_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python实战编程--Python视频教程-编程语言-CSDN学院</a><p>《1小时掌握Python爬虫+高效学习法则》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/25062%3Futm_source%3Deduxy_zhihuylxf_25062_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">1小时掌握Python爬虫+高效学习法则--Python视频教程-编程语言-CSDN学院</a><p><br>————————————————————————————————</p><p><br></p><p><br></p><p>更新：说明几个事</p><p>1.很多小伙伴纠结于这个一百天的时间，我觉得完全没有必要，也违背了我最初放这个大纲上来的初衷，我是觉得这个学习大纲还不错，自学按照这个来也能相对系统的学习知识，而不是零散细碎的知识最后无法整合，每个人的基础以及学习进度都不一样，没有必要纠结于一百天这个时间，甭管你是用三个月还是用一年来学习这些东西，最后学到了不就是收获吗？何必纠结于这一百天，觉得这一百天学习不完我就放弃了呢？（另，项目后面没有更新完，大家可以按照这个框架去学习，没有更新完的大家可以自行找资料。）</p><p><br></p><p>2.还有小伙伴说这是广告，那请这位项目创作者看见这条“广告”给我打钱。真的很没劲，这个项目多少人知道，在github上也非常火，火有火的道理，对于一些学习者来说的确很有参考价值。谁打广告不找个几万分的大V，来找我这个小弟弟？</p><p>更搞笑的还有说我是成都某机构培训老师？本人坐标北京谢谢，也不是什么老师，只是一名普普通通的程序员。自认为我的水平还担不起什么老师。</p><p><br></p><p>下面是原文：</p><p>Github上位名叫骆昊 (jackfrued) 的资深程序员，为大家规划了一条从“从新手到大师”的百天之路！我觉得这个模式你可以参考一下。</p><p>现在已经有5w+星了！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-853cafba51a782833e6cc98faa88b0a0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1007\" data-rawheight=\"470\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-4c2711ea96da55b0759e086ad81bc391_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1007\" data-original=\"https://pic2.zhimg.com/v2-853cafba51a782833e6cc98faa88b0a0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1007'%20height='470'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1007\" data-rawheight=\"470\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-4c2711ea96da55b0759e086ad81bc391_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1007\" data-original=\"https://pic2.zhimg.com/v2-853cafba51a782833e6cc98faa88b0a0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-853cafba51a782833e6cc98faa88b0a0_720w.jpg?source=54b3c3a5\"></figure><p>给初学者的几个建议：</p><ul><li>Make English as your working language.</li><li>Practice makes perfect.</li><li>All experience comes from mistakes.</li><li>Don't be one of the leeches.</li><li>Either stand out or kicked out.</li></ul><p><br></p><p><br>先附上github地址：</p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://github.com/jackfrued/Python-100-Day</a><p><br></p><p>下面是这个一百天计划里面的学习框架，我在这里放上来。</p><h2>Day01~15 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python语言基础</a></h2><blockquote>Day01 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/01.%25E5%2588%259D%25E8%25AF%2586Python.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">初识Python</a></blockquote><p>Python简介 - Python的历史 / Python的优缺点 / Python的应用领域</p><p>搭建编程环境 - Windows环境 / Linux环境 / MacOS环境</p><p>从终端运行Python程序 - Hello, world / print函数 / 运行程序</p><p>使用IDLE - 交互式环境(REPL) / 编写多行代码 / 运行程序 / 退出IDLE</p><p>注释 - 注释的作用 / 单行注释 / 多行注释</p><blockquote>Day02 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/02.%25E8%25AF%25AD%25E8%25A8%2580%25E5%2585%2583%25E7%25B4%25A0.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">语言元素</a></blockquote><p>程序和进制 - 指令和程序 / 冯诺依曼机 / 二进制和十进制 / 八进制和十六进制</p><p>变量和类型 - 变量的命名 / 变量的使用 / input函数 / 检查变量类型 / 类型转换</p><p>数字和字符串 - 整数 / 浮点数 / 复数 / 字符串 / 字符串基本操作 / 字符编码</p><p>运算符 - 数学运算符 / 赋值运算符 / 比较运算符 / 逻辑运算符 / 身份运算符 / 运算符的优先级</p><p>应用案例 - 华氏温度转换成摄氏温度 / 输入圆的半径计算周长和面积 / 输入年份判断是否是闰年</p><blockquote>Day03 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/03.%25E5%2588%2586%25E6%2594%25AF%25E7%25BB%2593%25E6%259E%2584.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">分支结构</a></blockquote><p>分支结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图</p><p>if语句 - 简单的if / if-else结构 / if-elif-else结构 / 嵌套的if</p><p>应用案例 - 用户身份验证 / 英制单位与公制单位互换 / 掷骰子决定做什么 / 百分制成绩转等级制 / 分段函数求值 / 输入三条边的长度如果能构成三角形就计算周长和面积</p><blockquote>Day04 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/04.%25E5%25BE%25AA%25E7%258E%25AF%25E7%25BB%2593%25E6%259E%2584.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">循环结构</a></blockquote><p>循环结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图</p><p>while循环 - 基本结构 / break语句 / continue语句</p><p>for循环 - 基本结构 / range类型 / 循环中的分支结构 / 嵌套的循环 / 提前结束程序</p><p>应用案例 - 1~100求和 / 判断素数 / 猜数字游戏 / 打印九九表 / 打印三角形图案 / 猴子吃桃 / 百钱百鸡</p><blockquote>Day05 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/05.%25E6%259E%2584%25E9%2580%25A0%25E7%25A8%258B%25E5%25BA%258F%25E9%2580%25BB%25E8%25BE%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">构造程序逻辑</a></blockquote><p>基础练习 - 水仙花数 / 完美数 / 五人分鱼 / Fibonacci数列 / 回文素数</p><p>综合练习 - Craps赌博游戏</p><blockquote>Day06 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/06.%25E5%2587%25BD%25E6%2595%25B0%25E5%2592%258C%25E6%25A8%25A1%25E5%259D%2597%25E7%259A%2584%25E4%25BD%25BF%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">函数和模块的使用</a></blockquote><p>函数的作用 - 代码的坏味道 / 用函数封装功能模块</p><p>定义函数 - def语句 / 函数名 / 参数列表 / return语句 / 调用自定义函数</p><p>调用函数 - Python内置函数 / 导入模块和函数</p><p>函数的参数 - 默认参数 / 可变参数 / 关键字参数 / 命名关键字参数</p><p>函数的返回值 - 没有返回值 / 返回单个值 / 返回多个值</p><p>作用域问题 - 局部作用域 / 嵌套作用域 / 全局作用域 / 内置作用域 / 和作用域相关的关键字</p><p>用模块管理函数 - 模块的概念 / 用自定义模块管理函数 / 命名冲突的时候会怎样（同一个模块和不同的模块）</p><blockquote>Day07 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/07.%25E5%25AD%2597%25E7%25AC%25A6%25E4%25B8%25B2%25E5%2592%258C%25E5%25B8%25B8%25E7%2594%25A8%25E6%2595%25B0%25E6%258D%25AE%25E7%25BB%2593%25E6%259E%2584.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">字符串和常用数据结构</a></blockquote><p>字符串的使用 - 计算长度 / 下标运算 / 切片 / 常用方法</p><p>列表基本用法 - 定义列表 / 用下表访问元素 / 下标越界 / 添加元素 / 删除元素 / 修改元素 / 切片 / 循环遍历</p><p>列表常用操作 - 连接 / 复制(复制元素和复制数组) / 长度 / 排序 / 倒转 / 查找</p><p>生成列表 - 使用range创建数字列表 / 生成表达式 / 生成器</p><p>元组的使用 - 定义元组 / 使用元组中的值 / 修改元组变量 / 元组和列表转换</p><p>集合基本用法 - 集合和列表的区别 / 创建集合 / 添加元素 / 删除元素 / 清空</p><p>集合常用操作 - 交集 / 并集 / 差集 / 对称差 / 子集 / 超集</p><p>字典的基本用法 - 字典的特点 / 创建字典 / 添加元素 / 删除元素 / 取值 / 清空</p><p>字典常用操作 - keys()方法 / values()方法 / items()方法 / setdefault()方法</p><p>基础练习 - 跑马灯效果 / 列表找最大元素 / 统计考试成绩的平均分 / Fibonacci数列 / 杨辉三角</p><p>综合案例 - 双色球选号 / 井字棋</p><blockquote>Day08 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/08.%25E9%259D%25A2%25E5%2590%2591%25E5%25AF%25B9%25E8%25B1%25A1%25E7%25BC%2596%25E7%25A8%258B%25E5%259F%25BA%25E7%25A1%2580.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">面向对象编程基础</a></blockquote><p>类和对象 - 什么是类 / 什么是对象 / 面向对象其他相关概念</p><p>定义类 - 基本结构 / 属性和方法 / 构造器 / 析构器 / __str__方法</p><p>使用对象 - 创建对象 / 给对象发消息</p><p>面向对象的四大支柱 - 抽象 / 封装 / 继承 / 多态</p><p>基础练习 - 定义学生类 / 定义时钟类 / 定义图形类 / 定义汽车类</p><blockquote>Day09 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/09.%25E9%259D%25A2%25E5%2590%2591%25E5%25AF%25B9%25E8%25B1%25A1%25E8%25BF%259B%25E9%2598%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">面向对象进阶</a></blockquote><p>属性 - 类属性 / 实例属性 / 属性访问器 / 属性修改器 / 属性删除器 / 使用__slots__</p><p>类中的方法 - 实例方法 / 类方法 / 静态方法</p><p>运算符重载 - __add__ / __sub__ / __or__ /__getitem__ / __setitem__ / __len__ / __repr__ / __gt__ / __lt__ / __le__ / __ge__ / __eq__ / __ne__ / __contains__</p><p>类(的对象)之间的关系 - 关联 / 继承 / 依赖</p><p>继承和多态 - 什么是继承 / 继承的语法 / 调用父类方法 / 方法重写 / 类型判定 / 多重继承 / 菱形继承(钻石继承)和C3算法</p><p>综合案例 - 工资结算系统 / 图书自动折扣系统 / 自定义分数类</p><blockquote>Day10 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/10.%25E5%259B%25BE%25E5%25BD%25A2%25E7%2594%25A8%25E6%2588%25B7%25E7%2595%258C%25E9%259D%25A2%25E5%2592%258C%25E6%25B8%25B8%25E6%2588%258F%25E5%25BC%2580%25E5%258F%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">图形用户界面和游戏开发</a></blockquote><p>使用tkinter开发GUI</p><p>使用pygame三方库开发游戏应用</p><p>“大球吃小球”游戏</p><blockquote>Day11 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/11.%25E6%2596%2587%25E4%25BB%25B6%25E5%2592%258C%25E5%25BC%2582%25E5%25B8%25B8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文件和异常</a></blockquote><ul><li>读文件 - 读取整个文件 / 逐行读取 / 文件路径</li><li>写文件 - 覆盖写入 / 追加写入 / 文本文件 / 二进制文件</li><li>异常处理 - 异常机制的重要性 / try-except代码块 / else代码块 / finally代码块 / 内置异常类型 / 异常栈 / raise语句</li><li>数据持久化 - CSV文件概述 / csv模块的应用 / JSON数据格式 / json模块的应用</li></ul><blockquote>Day12 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/12.%25E5%25AD%2597%25E7%25AC%25A6%25E4%25B8%25B2%25E5%2592%258C%25E6%25AD%25A3%25E5%2588%2599%25E8%25A1%25A8%25E8%25BE%25BE%25E5%25BC%258F.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">字符串和正则表达式</a></blockquote><ul><li>字符串高级操作 - 转义字符 / 原始字符串 / 多行字符串 / in和 not in运算符 / is开头的方法 / join和split方法 / strip相关方法 / pyperclip模块 / 不变字符串和可变字符串 / StringIO的使用</li><li>正则表达式入门 - 正则表达式的作用 / 元字符 / 转义 / 量词 / 分组 / 零宽断言 /贪婪匹配与惰性匹配懒惰 / 使用re模块实现正则表达式操作（匹配、搜索、替换、捕获）</li><li>使用正则表达式 - re模块 / compile函数 / group和groups方法 / match方法 / search方法 / findall和finditer方法 / sub和subn方法 / split方法</li><li>应用案例 - 使用正则表达式验证输入的字符串</li></ul><blockquote>Day13 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/13.%25E8%25BF%259B%25E7%25A8%258B%25E5%2592%258C%25E7%25BA%25BF%25E7%25A8%258B.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">进程和线程</a></blockquote><ul><li>进程和线程的概念 - 什么是进程 / 什么是线程 / 多线程的应用场景</li><li>使用进程 - fork函数 / multiprocessing模块 / 进程池 / 进程间通信</li><li>使用线程 - thread模块 / threading模块 / Thread类 / Lock类 / Condition类 / 线程池</li></ul><blockquote>Day14 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/14.%25E7%25BD%2591%25E7%25BB%259C%25E7%25BC%2596%25E7%25A8%258B%25E5%2585%25A5%25E9%2597%25A8%25E5%2592%258C%25E7%25BD%2591%25E7%25BB%259C%25E5%25BA%2594%25E7%2594%25A8%25E5%25BC%2580%25E5%258F%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网络编程入门和网络应用开发</a></blockquote><ul><li>计算机网络基础 - 计算机网络发展史 / “TCP-IP”模型 / IP地址 / 端口 / 协议 / 其他相关概念</li><li>网络应用模式 - “客户端-服务器”模式 / “浏览器-服务器”模式</li><li>基于HTTP协议访问网络资源 - 网络API概述 / 访问URL / requests模块 / 解析JSON格式数据</li><li>Python网络编程 - 套接字的概念 / socket模块 / socket函数 / 创建TCP服务器 / 创建TCP客户端 / 创建UDP服务器 / 创建UDP客户端 / SocketServer模块</li><li>电子邮件 - SMTP协议 / POP3协议 / IMAP协议 / smtplib模块 / poplib模块 / imaplib模块</li><li>短信服务 - 调用短信服务网关</li></ul><blockquote>Day15 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/15.%25E5%259B%25BE%25E5%2583%258F%25E5%2592%258C%25E5%258A%259E%25E5%2585%25AC%25E6%2596%2587%25E6%25A1%25A3%25E5%25A4%2584%25E7%2590%2586.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">图像和文档处理</a></blockquote><ul><li>用Pillow处理图片 - 图片读写 / 图片合成 / 几何变换 / 色彩转换 / 滤镜效果</li><li>读写Word文档 - 文本内容的处理 / 段落 / 页眉和页脚 / 样式的处理</li><li>读写Excel文件 - xlrd模块 / xlwt模块</li><li>生成PDF文件 - pypdf2模块 / reportlab模块</li></ul><h2>Day16~Day20 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day16-20/16.Python%25E8%25AF%25AD%25E8%25A8%2580%25E8%25BF%259B%25E9%2598%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python语言进阶</a></h2><ul><li>常用数据结构</li><li>函数的高级用法 - “一等公民” / 高阶函数 / Lambda函数 / 作用域和闭包 / 装饰器</li><li>面向对象高级知识 - “三大支柱” / 类与类之间的关系 / 垃圾回收 / 魔术属性和方法 / 混入 / 元类 / 面向对象设计原则 / GoF设计模式</li><li>迭代器和生成器 - 相关魔术方法 / 创建生成器的两种方式 /</li><li>并发和异步编程 - 多线程 / 多进程 / 异步IO / async和await</li></ul><h3>Day21~30 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day21-30/21.Web%25E5%2589%258D%25E7%25AB%25AF%25E6%25A6%2582%25E8%25BF%25B0.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Web前端入门</a></h3><ul><li>用HTML标签承载页面内容</li><li>用CSS渲染页面</li><li>用JavaScript处理交互式行为</li><li>jQuery入门和提高</li><li>Vue.js入门</li><li>Element的使用</li><li>Bootstrap的使用</li></ul><h3>Day31~35 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day31-35/31.%25E7%258E%25A9%25E8%25BD%25ACLinux%25E6%2593%258D%25E4%25BD%259C%25E7%25B3%25BB%25E7%25BB%259F.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">玩转Linux操作系统</a></h3><ul><li>操作系统发展史和Linux概述</li><li>Linux基础命令</li><li>Linux中的实用程序</li><li>Linux的文件系统</li><li>Vim编辑器的应用</li><li>环境变量和Shell编程</li><li>软件的安装和服务的配置</li><li>网络访问和管理</li><li>其他相关内容</li></ul><h3>Day36~40 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day36-40\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据库基础和进阶</a></h3><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day36-40/36.%25E5%2585%25B3%25E7%25B3%25BB%25E5%259E%258B%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593MySQL.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">关系型数据库MySQL</a></li><ul><li>关系型数据库概述</li><li>MySQL的安装和使用</li><li>SQL的使用</li><ul><li>DDL - 数据定义语言 - create / drop / alter</li><li>DML - 数据操作语言 - insert / delete / update / select</li><li>DCL - 数据控制语言 - grant / revoke</li></ul></ul></ul><p><br></p><ul><ul><li>相关知识</li><ul><li>范式理论 - 设计二维表的指导思想</li><li>数据完整性</li><li>数据一致性</li></ul></ul></ul><p><br></p><ul><ul><li>在Python中操作MySQL</li></ul></ul><p><br></p><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day36-40/39.NoSQL%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">NoSQL入门</a></li><ul><li>NoSQL概述</li><li>Redis概述</li><li>Mongo概述</li></ul></ul><p><br></p><h3>Day41~55 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">实战Django</a></h3><blockquote>Day41 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/41.%25E5%25BF%25AB%25E9%2580%259F%25E4%25B8%258A%25E6%2589%258B.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">快速上手</a></blockquote><ul><li>Web应用工作原理和HTTP协议</li><li>Django框架概述</li><li>5分钟快速上手</li><li>使用视图模板</li></ul><blockquote>Day42 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/42.%25E6%25B7%25B1%25E5%2585%25A5%25E6%25A8%25A1%25E5%259E%258B.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">深入模型</a></blockquote><ul><li>关系型数据库配置</li><li>管理后台的使用</li><li>使用ORM完成对模型的CRUD操作</li><li>Django模型最佳实践</li><li>模型定义参考</li></ul><blockquote>Day43 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/43.%25E9%259D%2599%25E6%2580%2581%25E8%25B5%2584%25E6%25BA%2590%25E5%2592%258CAjax%25E8%25AF%25B7%25E6%25B1%2582.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">静态资源和Ajax请求</a></blockquote><ul><li>加载静态资源</li><li>用Ajax请求获取数据</li></ul><blockquote>Day44 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/44.%25E8%25A1%25A8%25E5%258D%2595%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">表单的应用</a></blockquote><ul><li>表单和表单控件</li><li>跨站请求伪造和CSRF令牌</li><li>Form和ModelForm</li><li>表单验证</li></ul><blockquote>Day45 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/45.Cookie%25E5%2592%258CSession.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Cookie和Session</a></blockquote><ul><li>实现用户跟踪</li><li>cookie和session的关系</li><li>Django框架对session的支持</li><li>视图函数中的cookie读写操作</li></ul><blockquote>Day46 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/46.%25E6%258A%25A5%25E8%25A1%25A8%25E5%2592%258C%25E6%2597%25A5%25E5%25BF%2597.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">报表和日志</a></blockquote><ul><li>通过HttpResponse修改响应头</li><li>使用StreamingHttpResponse处理大文件</li><li>使用xlwt生成Excel报表</li><li>使用reportlab生成PDF报表</li><li>使用ECharts生成前端图表</li><li>配置日志和Django-Debug-Toolbar</li></ul><blockquote>Day47 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/47.%25E4%25B8%25AD%25E9%2597%25B4%25E4%25BB%25B6%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">中间件的应用</a></blockquote><ul><li>什么是中间件</li><li>Django框架内置的中间件</li><li>自定义中间件及其应用场景</li></ul><blockquote>Day48 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/48.%25E5%2589%258D%25E5%2590%258E%25E7%25AB%25AF%25E5%2588%2586%25E7%25A6%25BB%25E5%25BC%2580%25E5%258F%2591%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">前后端分离开发入门</a></blockquote><ul><li>返回JSON格式的数据</li><li>用Vue.js渲染页面</li></ul><blockquote>Day49 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/49.RESTful%25E6%259E%25B6%25E6%259E%2584%25E5%2592%258CDRF%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RESTful架构和DRF入门</a><br>Day50 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/50.RESTful%25E6%259E%25B6%25E6%259E%2584%25E5%2592%258CDRF%25E8%25BF%259B%25E9%2598%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RESTful架构和DRF进阶</a><br>Day51 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/51.%25E4%25BD%25BF%25E7%2594%25A8%25E7%25BC%2593%25E5%25AD%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用缓存</a></blockquote><ul><li>网站优化第一定律</li><li>在Django项目中使用Redis提供缓存服务</li><li>在视图函数中读写缓存</li><li>使用装饰器实现页面缓存</li><li>为数据接口提供缓存服务</li></ul><blockquote>Day52 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/52.%25E6%2596%2587%25E4%25BB%25B6%25E4%25B8%258A%25E4%25BC%25A0.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文件上传和富文本编辑</a></blockquote><ul><li>文件上传表单控件和图片文件预览</li><li>服务器端如何处理上传的文件</li><li>富文本编辑器概述</li><li>wangEditor的使用</li></ul><blockquote>Day53 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/53.%25E7%259F%25AD%25E4%25BF%25A1%25E5%2592%258C%25E9%2582%25AE%25E4%25BB%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">短信和邮件</a></blockquote><ul><li>常用短信网关平台介绍</li><li>使用螺丝帽发送短信</li><li>Django框架对邮件服务的支持</li></ul><blockquote>Day54 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/54.%25E5%25BC%2582%25E6%25AD%25A5%25E4%25BB%25BB%25E5%258A%25A1%25E5%2592%258C%25E5%25AE%259A%25E6%2597%25B6%25E4%25BB%25BB%25E5%258A%25A1.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">异步任务和定时任务</a></blockquote><ul><li>网站优化第二定律</li><li>配置消息队列服务</li><li>在项目中使用celery实现任务异步化</li><li>在项目中使用celery实现定时任务</li></ul><blockquote>Day55 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/55.%25E5%258D%2595%25E5%2585%2583%25E6%25B5%258B%25E8%25AF%2595%25E5%2592%258C%25E9%25A1%25B9%25E7%259B%25AE%25E4%25B8%258A%25E7%25BA%25BF.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">单元测试和项目上线</a></blockquote><ul><li>Python中的单元测试</li><li>Django框架对单元测试的支持</li><li>使用版本控制系统</li><li>配置和使用uWSGI</li><li>动静分离和Nginx配置</li><li>配置HTTPS</li></ul><h3>Day56~60 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-65\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">实战Flask</a></h3><blockquote>Day56 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/56.Flask%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Flask入门</a><br>Day57 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/57.%25E6%25A8%25A1%25E6%259D%25BF%25E7%259A%2584%25E4%25BD%25BF%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">模板的使用</a><br>Day58 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/58.%25E8%25A1%25A8%25E5%258D%2595%25E7%259A%2584%25E5%25A4%2584%25E7%2590%2586.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">表单的处理</a><br>Day59 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/59.%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593%25E6%2593%258D%25E4%25BD%259C.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据库操作</a><br>Day60 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/60.%25E9%25A1%25B9%25E7%259B%25AE%25E5%25AE%259E%25E6%2588%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">项目实战</a></blockquote><h3>Day61~65 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">实战Tornado</a></h3><blockquote>Day61 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/61.%25E9%25A2%2584%25E5%25A4%2587%25E7%259F%25A5%25E8%25AF%2586.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">预备知识</a></blockquote><ul><li>并发编程</li><li>I/O模式和事件驱动</li></ul><blockquote>Day62 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/62.Tornado%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tornado入门</a></blockquote><ul><li>Tornado概述</li><li>5分钟上手Tornado</li><li>路由解析</li><li>请求处理器</li></ul><blockquote>Day63 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/63.%25E5%25BC%2582%25E6%25AD%25A5%25E5%258C%2596.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">异步化</a></blockquote><ul><li>aiomysql和aioredis的使用</li></ul><blockquote>Day64 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/64.WebSocket%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">WebSocket的应用</a></blockquote><ul><li>WebSocket简介</li><li>WebSocket服务器端编程</li><li>WebSocket客户端编程</li><li>项目：Web聊天室</li></ul><blockquote>Day65 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/65.%25E9%25A1%25B9%25E7%259B%25AE%25E5%25AE%259E%25E6%2588%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">项目实战</a></blockquote><ul><li>前后端分离开发和接口文档的撰写</li><li>使用Vue.js实现前端渲染</li><li>使用ECharts实现报表功能</li><li>使用WebSocket实现推送服务</li></ul><h3>Day66~75 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">爬虫开发</a></h3><blockquote>Day66 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/66.%25E7%25BD%2591%25E7%25BB%259C%25E7%2588%25AC%25E8%2599%25AB%25E5%2592%258C%25E7%259B%25B8%25E5%2585%25B3%25E5%25B7%25A5%25E5%2585%25B7.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网络爬虫和相关工具</a></blockquote><ul><li>网络爬虫的概念及其应用领域</li><li>网络爬虫的合法性探讨</li><li>开发网络爬虫的相关工具</li><li>一个爬虫程序的构成</li></ul><blockquote>Day67 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/67.%25E6%2595%25B0%25E6%258D%25AE%25E9%2587%2587%25E9%259B%2586%25E5%2592%258C%25E8%25A7%25A3%25E6%259E%2590.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据采集和解析</a></blockquote><ul><li>数据采集的标准和三方库</li><li>页面解析的三种方式：正则表达式解析 / XPath解析 / CSS选择器解析</li></ul><blockquote>Day68 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/68.%25E5%25AD%2598%25E5%2582%25A8%25E6%2595%25B0%25E6%258D%25AE.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">存储数据</a></blockquote><ul><li>如何存储海量数据</li><li>实现数据的缓存</li></ul><blockquote>Day69 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/69.%25E5%25B9%25B6%25E5%258F%2591%25E4%25B8%258B%25E8%25BD%25BD.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">并发下载</a></blockquote><ul><li>多线程和多进程</li><li>异步I/O和协程</li><li>async和await关键字的使用</li><li>三方库aiohttp的应用</li></ul><blockquote>Day70 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/70.%25E8%25A7%25A3%25E6%259E%2590%25E5%258A%25A8%25E6%2580%2581%25E5%2586%2585%25E5%25AE%25B9.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">解析动态内容</a></blockquote><ul><li>JavaScript逆向工程</li><li>使用Selenium获取动态内容</li></ul><blockquote>Day71 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/71.%25E8%25A1%25A8%25E5%258D%2595%25E4%25BA%25A4%25E4%25BA%2592%25E5%2592%258C%25E9%25AA%258C%25E8%25AF%2581%25E7%25A0%2581%25E5%25A4%2584%25E7%2590%2586.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">表单交互和验证码处理</a></blockquote><ul><li>自动提交表单</li><li>Cookie池的应用</li><li>验证码处理</li></ul><blockquote>Day72 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/72.Scrapy%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy入门</a></blockquote><ul><li>Scrapy爬虫框架概述</li><li>安装和使用Scrapy</li></ul><blockquote>Day73 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/73.Scrapy%25E9%25AB%2598%25E7%25BA%25A7%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy高级应用</a></blockquote><ul><li>Spider的用法</li><li>中间件的应用：下载中间件 / 蜘蛛中间件</li><li>Scrapy对接Selenium抓取动态内容</li><li>Scrapy部署到Docker</li></ul><blockquote>Day74 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/74.Scrapy%25E5%2588%2586%25E5%25B8%2583%25E5%25BC%258F%25E5%25AE%259E%25E7%258E%25B0.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy分布式实现</a></blockquote><ul><li>分布式爬虫的原理</li><li>Scrapy分布式实现</li><li>使用Scrapyd实现分布式部署</li></ul><blockquote>Day75 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/75.%25E7%2588%25AC%25E8%2599%25AB%25E9%25A1%25B9%25E7%259B%25AE%25E5%25AE%259E%25E6%2588%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">爬虫项目实战</a></blockquote><ul><li>爬取招聘网站数据</li><li>爬取房地产行业数据</li><li>爬取二手车交易平台数据</li></ul><h3>Day76~90 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据处理和机器学习</a></h3><blockquote>Day76 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/76.%25E6%259C%25BA%25E5%2599%25A8%25E5%25AD%25A6%25E4%25B9%25A0%25E5%259F%25BA%25E7%25A1%2580.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">机器学习基础</a><br>Day77 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/77.Pandas%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Pandas的应用</a><br>Day78 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/78.NumPy%25E5%2592%258CSciPy%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">NumPy和SciPy的应用</a><br>Day79 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/79.Matplotlib%25E5%2592%258C%25E6%2595%25B0%25E6%258D%25AE%25E5%258F%25AF%25E8%25A7%2586%25E5%258C%2596\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Matplotlib和数据可视化</a><br>Day80 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/80.k%25E6%259C%2580%25E8%25BF%2591%25E9%2582%25BB%25E5%2588%2586%25E7%25B1%25BB.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">k最近邻(KNN)分类</a><br>Day81 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/81.%25E5%2586%25B3%25E7%25AD%2596%25E6%25A0%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">决策树</a><br>Day82 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/82.%25E8%25B4%259D%25E5%258F%25B6%25E6%2596%25AF%25E5%2588%2586%25E7%25B1%25BB.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">贝叶斯分类</a><br>Day83 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/83.%25E6%2594%25AF%25E6%258C%2581%25E5%2590%2591%25E9%2587%258F%25E6%259C%25BA.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">支持向量机(SVM)</a><br>Day84 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/84.K-%25E5%259D%2587%25E5%2580%25BC%25E8%2581%259A%25E7%25B1%25BB.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">K-均值聚类</a><br>Day85 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/85.%25E5%259B%259E%25E5%25BD%2592%25E5%2588%2586%25E6%259E%2590.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">回归分析</a><br>Day86 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/86.%25E5%25A4%25A7%25E6%2595%25B0%25E6%258D%25AE%25E5%2588%2586%25E6%259E%2590%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">大数据分析入门</a><br>Day87 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/87.%25E5%25A4%25A7%25E6%2595%25B0%25E6%258D%25AE%25E5%2588%2586%25E6%259E%2590%25E8%25BF%259B%25E9%2598%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">大数据分析进阶</a><br>Day88 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/88.Tensorflow%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tensorflow入门</a><br>Day89 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/89.Tensorflow%25E5%25AE%259E%25E6%2588%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tensorflow实战</a><br>Day90 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/90.%25E6%258E%25A8%25E8%258D%2590%25E7%25B3%25BB%25E7%25BB%259F.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">推荐系统</a></blockquote><h3>Day91~100 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">团队项目开发</a></h3><blockquote>第91天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/91.%25E5%259B%25A2%25E9%2598%259F%25E9%25A1%25B9%25E7%259B%25AE%25E5%25BC%2580%25E5%258F%2591%25E5%2587%2586%25E5%25A4%2587.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">团队项目开发准备</a></blockquote><ol><li>软件过程模型<br></li></ol><ul><li>经典过程模型（瀑布模型）<br></li><ul><li>可行性分析（研究做还是不做），输出《可行性分析报告》。</li><li>需求分析（研究做什么），输出《需求规格说明书》和产品界面原型图。</li><li>概要设计和详细设计，输出概念模型图、物理模型图、类图、时序图等。</li><li>编码 / 测试。</li><li>上线 / 维护。</li></ul></ul><p><br></p><ul><ul><li>敏捷开发（Scrum）- 产品所有者、Scrum Master、研发人员 - Sprint<br></li><ul><li>产品的Backlog（用户故事、产品原型）。</li><li>计划会议（评估和预算）。</li><li>日常开发（站立会议、番茄工作法、结对编程、测试先行、代码重构……）。</li><li>修复bug（问题描述、重现步骤、测试人员、被指派人）。</li><li>评审会议（Showcase）。</li><li>回顾会议（当前周期做得好和不好的地方）。</li></ul></ul></ul><p>补充：敏捷软件开发宣言<br></p><ul><ul><ul><li><b>个体和互动</b> 高于 流程和工具</li><li><b>工作的软件</b> 高于 详尽的文档</li><li><b>客户合作</b> 高于 合同谈判</li><li><b>响应变化</b> 高于 遵循计划</li></ul></ul></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ce5f820b4293e1eeb3d267a34f3f3110_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2848\" data-rawheight=\"1664\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-510685c50343350f78d9dcc71ac5c372_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2848\" data-original=\"https://pic4.zhimg.com/v2-ce5f820b4293e1eeb3d267a34f3f3110_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2848'%20height='1664'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2848\" data-rawheight=\"1664\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-510685c50343350f78d9dcc71ac5c372_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2848\" data-original=\"https://pic4.zhimg.com/v2-ce5f820b4293e1eeb3d267a34f3f3110_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ce5f820b4293e1eeb3d267a34f3f3110_720w.jpg?source=54b3c3a5\"></figure><p><br>角色：产品所有者（决定做什么，能对需求拍板的人）、团队负责人（解决各种问题，专注如何更好的工作，屏蔽外部对开发团队的影响）、开发团队（项目执行人员，具体指开发人员和测试人员）。<br>准备工作：商业案例和资金、合同、憧憬、初始产品需求、初始发布计划、入股、组建团队。<br>敏捷团队通常人数为8-10人。<br>工作量估算：将开发任务量化，包括原型、Logo设计、UI设计、前端开发等，尽量把每个工作分解到最小任务量，最小任务量标准为工作时间不能超过两天，然后估算总体项目时间。把每个任务都贴在白板上面，白板上分三部分：to do（待完成）、in progress（进行中）和done（已完成）。</p><p><br></p><ol><li>项目团队组建<br></li></ol><ul><li>团队的构成和角色<br>说明：谢谢付祥英女士绘制了下面这张精美的公司组织架构图。<br></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-405573bc2c41c2269d9525e7d30e29ab_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1070\" data-rawheight=\"689\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e0b1f930c55f32ea34ee433010f189a4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1070\" data-original=\"https://pic4.zhimg.com/v2-405573bc2c41c2269d9525e7d30e29ab_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1070'%20height='689'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1070\" data-rawheight=\"689\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e0b1f930c55f32ea34ee433010f189a4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1070\" data-original=\"https://pic4.zhimg.com/v2-405573bc2c41c2269d9525e7d30e29ab_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-405573bc2c41c2269d9525e7d30e29ab_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ul><ul><li>编程规范和代码审查（flake8、pylint）<br></li></ul></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-9d9e88a5b557b8218a1fab2155677194_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1768\" data-rawheight=\"808\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7212e842128991204364f7cb3120d9c2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1768\" data-original=\"https://pic2.zhimg.com/v2-9d9e88a5b557b8218a1fab2155677194_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1768'%20height='808'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1768\" data-rawheight=\"808\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7212e842128991204364f7cb3120d9c2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1768\" data-original=\"https://pic2.zhimg.com/v2-9d9e88a5b557b8218a1fab2155677194_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-9d9e88a5b557b8218a1fab2155677194_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ul><ul><li>Python中的一些“惯例”（请参考<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Python%25E6%2583%25AF%25E4%25BE%258B.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Python惯例-如何编写Pythonic的代码》</a>）</li><li>影响代码可读性的原因：<br></li><ul><li>代码注释太少或者没有注释</li><li>代码破坏了语言的最佳实践</li><li>反模式编程（意大利面代码、复制-黏贴编程、自负编程、……）</li></ul></ul></ul><p><br></p><p><br></p><ol><li>团队开发工具介绍<br></li></ol><ul><li>版本控制：Git、Mercury</li><li>缺陷管理：<a href=\"https://link.zhihu.com/?target=https%3A//about.gitlab.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Gitlab</a>、<a href=\"https://link.zhihu.com/?target=http%3A//www.redmine.org.cn/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Redmine</a></li><li>敏捷闭环工具：<a href=\"https://link.zhihu.com/?target=https%3A//www.zentao.net/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">禅道</a>、<a href=\"https://link.zhihu.com/?target=https%3A//www.atlassian.com/software/jira/features\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">JIRA</a></li><li>持续集成：<a href=\"https://link.zhihu.com/?target=https%3A//jenkins.io/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Jenkins</a>、<a href=\"https://link.zhihu.com/?target=https%3A//travis-ci.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Travis-CI</a></li></ul><p>请参考<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/%25E5%259B%25A2%25E9%2598%259F%25E9%25A1%25B9%25E7%259B%25AE%25E5%25BC%2580%25E5%258F%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《团队项目开发》</a>。</p><h3>项目选题和理解业务</h3><ol><li>选题范围设定<br></li></ol><ul><li>CMS（用户端）：新闻聚合网站、问答/分享社区、影评/书评网站等。</li><li>MIS（用户端+管理端）：KMS、KPI考核系统、HRS、CRM系统、供应链系统、仓储管理系统等。</li><li>App后台（管理端+数据接口）：二手交易类、报刊杂志类、小众电商类、新闻资讯类、旅游类、社交类、阅读类等。</li><li>其他类型：自身行业背景和工作经验、业务容易理解和把控。</li></ul><p><br></p><ol><li>需求理解、模块划分和任务分配<br></li></ol><ul><li>需求理解：头脑风暴和竞品分析。</li><li>模块划分：画思维导图（XMind），每个模块是一个枝节点，每个具体的功能是一个叶节点（用动词表述），需要确保每个叶节点无法再生出新节点，确定每个叶子节点的重要性、优先级和工作量。</li><li>任务分配：由项目负责人根据上面的指标为每个团队成员分配任务。</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f309876270b182a35f8bce02ca554b00_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1950\" data-rawheight=\"530\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0f663079e23f2627ab0732eecf3987bb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1950\" data-original=\"https://pic2.zhimg.com/v2-f309876270b182a35f8bce02ca554b00_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1950'%20height='530'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1950\" data-rawheight=\"530\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0f663079e23f2627ab0732eecf3987bb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1950\" data-original=\"https://pic2.zhimg.com/v2-f309876270b182a35f8bce02ca554b00_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f309876270b182a35f8bce02ca554b00_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ol><li>制定项目进度表（每日更新）<br></li></ol><h3>第92天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/92.Docker%25E5%259C%25A8%25E9%25A1%25B9%25E7%259B%25AE%25E4%25B8%25AD%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Docker的使用</a></h3><h3>第93天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/93.%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593%25E8%25AE%25BE%25E8%25AE%25A1%25E5%2592%258COOAD.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据库设计和OOAD</a></h3><h3>概念模型和正向工程</h3><ol><li>UML（统一建模语言）的类图<br></li></ol><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-1688a7b35bfc3d0f133fb5621c1a638c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1104\" data-rawheight=\"804\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d87864155e1dc6c809fd91680ac28e32_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1104\" data-original=\"https://pic4.zhimg.com/v2-1688a7b35bfc3d0f133fb5621c1a638c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1104'%20height='804'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1104\" data-rawheight=\"804\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d87864155e1dc6c809fd91680ac28e32_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1104\" data-original=\"https://pic4.zhimg.com/v2-1688a7b35bfc3d0f133fb5621c1a638c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-1688a7b35bfc3d0f133fb5621c1a638c_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ol><li>通过模型创建表（正向工程）<br>python manage.py makemigrations app python manage.py migrate</li></ol><h3>物理模型和反向工程</h3><ol><li>PowerDesigner<br></li></ol><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-336f81e1bcbb8c06b73ebbd503be92c9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1300\" data-rawheight=\"1100\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-de0674a8f37bad63d690601729f3c61f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1300\" data-original=\"https://pic1.zhimg.com/v2-336f81e1bcbb8c06b73ebbd503be92c9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1300'%20height='1100'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1300\" data-rawheight=\"1100\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-de0674a8f37bad63d690601729f3c61f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1300\" data-original=\"https://pic1.zhimg.com/v2-336f81e1bcbb8c06b73ebbd503be92c9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-336f81e1bcbb8c06b73ebbd503be92c9_720w.jpg?source=54b3c3a5\"></figure><p>2.通过数据表创建模型（反向工程）<br>python manage.py inspectdb &gt; app/models.py</p><blockquote>第94天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/94.%25E7%25BD%2591%25E7%25BB%259CAPI%25E6%258E%25A5%25E5%258F%25A3%25E8%25AE%25BE%25E8%25AE%25A1.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网络API接口设计</a><br>第95天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/95.%25E4%25BD%25BF%25E7%2594%25A8Django%25E5%25BC%2580%25E5%258F%2591%25E9%25A1%25B9%25E7%259B%25AE.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用Django开发项目</a></blockquote><h3>项目开发中的公共问题</h3><ol><li>数据库的配置（多数据库、主从复制、数据库路由）</li><li>缓存的配置（分区缓存、键设置、超时设置、主从复制、故障恢复（哨兵））</li><li>日志的配置</li><li>分析和调试（Django-Debug-ToolBar）</li><li>好用的Python模块（日期计算、图像处理、数据加密、三方API）</li></ol><h3>REST API设计</h3><ol><li>RESTful架构</li></ol><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//www.ruanyifeng.com/blog/2011/09/restful.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">理解RESTful架构</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.ruanyifeng.com/blog/2014/05/restful_api.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RESTful API设计指南</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RESTful API最佳实践</a></li></ul><p><br></p><ol><li>API接口文档的撰写</li></ol><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//rap2.taobao.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RAP2</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//yapi.demo.qunar.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">YAPI</a></li></ul><p><br></p><ol><li><a href=\"https://link.zhihu.com/?target=https%3A//www.django-rest-framework.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">django-REST-framework</a>的应用</li></ol><h3>项目中的重点难点剖析</h3><ol><li>使用缓存缓解数据库压力 - Redis</li><li>使用消息队列做解耦合和削峰 - Celery + RabbitMQ</li></ol><h3>第96天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/96.%25E8%25BD%25AF%25E4%25BB%25B6%25E6%25B5%258B%25E8%25AF%2595%25E5%2592%258C%25E8%2587%25AA%25E5%258A%25A8%25E5%258C%2596%25E6%25B5%258B%25E8%25AF%2595.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">软件测试和自动化测试</a></h3><h3>单元测试</h3><ol><li>测试的种类</li><li>编写单元测试（unittest、pytest、nose2、tox、ddt、……）</li><li>测试覆盖率（coverage）</li></ol><h3>项目部署</h3><ol><li>部署前的准备工作</li></ol><ul><li>关键设置（SECRET_KEY / DEBUG / ALLOWED_HOSTS / 缓存 / 数据库）</li><li>HTTPS / CSRF_COOKIE_SECUR / SESSION_COOKIE_SECURE</li><li>日志相关配置</li></ul><p><br></p><ol><li>Linux常用命令回顾</li><li>Linux常用服务的安装和配置</li><li>uWSGI/Gunicorn和Nginx的使用</li></ol><ul><li>Gunicorn和uWSGI的比较</li><ul><li>对于不需要大量定制化的简单应用程序，Gunicorn是一个不错的选择，uWSGI的学习曲线比Gunicorn要陡峭得多，Gunicorn的默认参数就已经能够适应大多数应用程序。</li><li>uWSGI支持异构部署。</li><li>由于Nginx本身支持uWSGI，在线上一般都将Nginx和uWSGI捆绑在一起部署，而且uWSGI属于功能齐全且高度定制的WSGI中间件。</li><li>在性能上，Gunicorn和uWSGI其实表现相当。</li></ul></ul><p><br></p><p><br></p><ol><li>虚拟化技术（Docker）</li></ol><h3>性能测试</h3><ol><li>AB的使用</li><li>SQLslap的使用</li><li>sysbench的使用</li></ol><h3>自动化测试</h3><ol><li>使用Shell和Python进行自动化测试</li><li>使用Selenium实现自动化测试</li></ol><ul><li>Selenium IDE</li><li>Selenium WebDriver</li><li>Selenium Remote Control</li></ul><p><br></p><ol><li>测试工具Robot Framework介绍</li></ol><blockquote>第97天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/97.%25E7%2594%25B5%25E5%2595%2586%25E7%25BD%2591%25E7%25AB%2599%25E6%258A%2580%25E6%259C%25AF%25E8%25A6%2581%25E7%2582%25B9%25E5%2589%2596%25E6%259E%2590.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">电商网站技术要点剖析</a><br>第98天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/98.%25E9%25A1%25B9%25E7%259B%25AE%25E9%2583%25A8%25E7%25BD%25B2%25E4%25B8%258A%25E7%25BA%25BF%25E5%2592%258C%25E6%2580%25A7%25E8%2583%25BD%25E8%25B0%2583%25E4%25BC%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">项目部署上线和性能调优</a></blockquote><ol><li>MySQL数据库调优</li><li>Web服务器性能优化</li></ol><p>3.代码性能调优</p><ul><li>多线程</li><li>异步化</li></ul><p>4.静态资源访问优化</p><ul><ul><li>云存储</li><li>CDN</li></ul></ul><blockquote>第99天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/99.%25E9%259D%25A2%25E8%25AF%2595%25E4%25B8%25AD%25E7%259A%2584%25E5%2585%25AC%25E5%2585%25B1%25E9%2597%25AE%25E9%25A2%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">面试中的公共问题</a><br>第100天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/100.%25E8%258B%25B1%25E8%25AF%25AD%25E9%259D%25A2%25E8%25AF%2595.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">英语面试</a></blockquote><p><br></p><p>作者：骆昊 (jackfrued)</p><p>来源：github</p><p>github地址：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/jackfrued/Py</span><span class=\"invisible\">thon-100-Days</span><span class=\"ellipsis\"></span></a></p><hr><p>公号：聊聊Python，感兴趣的可以来找我玩，一起来聊聊Python这点事~</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-b6baeeb5cc2c9acd1d09cb46f43c3d41_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"300\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-804368b1f28bad5dbde217cab2194dea_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"300\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='300'%20height='300'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"300\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-804368b1f28bad5dbde217cab2194dea_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"300\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-b6baeeb5cc2c9acd1d09cb46f43c3d41_720w.jpg?source=54b3c3a5\"></figure><blockquote>希望能帮到你</blockquote>", "如何入门 Python 爬虫？": "<p>“入门”是良好的动机，但是可能作用缓慢。如果你手里或者脑子里有一个项目，那么实践起来你会被目标驱动，而不会像学习模块一样慢慢学习。</p><p>另外如果说知识体系里的每一个知识点是图里的点，依赖关系是边的话，那么这个图一定不是一个有向无环图。因为学习A的经验可以帮助你学习B。因此，你不需要学习怎么样“入门”，因为这样的“入门”点根本不存在！你需要学习的是怎么样做一个比较大的东西，在这个过程中，你会很快地学会需要学会的东西的。当然，你可以争论说需要先懂python，不然怎么学会python做爬虫呢？但是事实上，你完全可以在做这个爬虫的过程中学习python :D</p><p>看到前面很多答案都讲的“术”——用什么软件怎么爬，那我就讲讲“道”和“术”吧——爬虫怎么工作以及怎么在python实现。</p><p>先长话短说summarize一下：</p><p>你需要学习</p><ol><li>基本的爬虫工作原理</li><li>基本的http抓取工具，scrapy</li><li>Bloom Filter: <a href=\"https://link.zhihu.com/?target=http%3A//billmill.org/bloomfilter-tutorial/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Bloom Filters by Example</a></li><li>如果需要大规模网页抓取，你需要学习分布式爬虫的概念。其实没那么玄乎，你只要学会怎样维护一个所有集群机器能够有效分享的分布式队列就好。最简单的实现是python-rq: <a href=\"https://link.zhihu.com/?target=https%3A//github.com/nvie/rq\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/nvie/rq</span><span class=\"invisible\"></span></a></li><li>rq和Scrapy的结合：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/darkrho/scrapy-redis\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">darkrho/scrapy-redis · GitHub</a></li><li>后续处理，网页析取(<a href=\"https://link.zhihu.com/?target=https%3A//github.com/grangier/python-goose\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">grangier/python-goose · GitHub</a>)，存储(Mongodb)</li></ol><p><br></p><p>以下是短话长说：</p><p>说说当初写的一个集群爬下整个豆瓣的经验吧。</p><p>1）首先你要明白爬虫怎样工作。<br>想象你是一只蜘蛛，现在你被放到了互联“网”上。那么，你需要把所有的网页都看一遍。怎么办呢？没问题呀，你就随便从某个地方开始，比如说人民日报的首页，这个叫initial pages，用$表示吧。</p><p>在人民日报的首页，你看到那个页面引向的各种链接。于是你很开心地从爬到了“国内新闻”那个页面。太好了，这样你就已经爬完了俩页面（首页和国内新闻）！暂且不用管爬下来的页面怎么处理的，你就想象你把这个页面完完整整抄成了个html放到了你身上。</p><p>突然你发现， 在国内新闻这个页面上，有一个链接链回“首页”。作为一只聪明的蜘蛛，你肯定知道你不用爬回去的吧，因为你已经看过了啊。所以，你需要用你的脑子，存下你已经看过的页面地址。这样，每次看到一个可能需要爬的新链接，你就先查查你脑子里是不是已经去过这个页面地址。如果去过，那就别去了。</p><p>好的，理论上如果所有的页面可以从initial page达到的话，那么可以证明你一定可以爬完所有的网页。</p><p>那么在python里怎么实现呢？</p><p>很简单</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"kn\">import</span> <span class=\"nn\">Queue</span>\n\n<span class=\"n\">initial_page</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://www.renminribao.com\"</span>\n\n<span class=\"n\">url_queue</span> <span class=\"o\">=</span> <span class=\"n\">Queue</span><span class=\"o\">.</span><span class=\"n\">Queue</span><span class=\"p\">()</span>\n<span class=\"n\">seen</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">()</span>\n\n<span class=\"n\">seen</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">initial_page</span><span class=\"p\">)</span>\n<span class=\"n\">url_queue</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">initial_page</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span><span class=\"p\">(</span><span class=\"bp\">True</span><span class=\"p\">):</span> <span class=\"c1\">#一直进行直到海枯石烂</span>\n    <span class=\"k\">if</span> <span class=\"n\">url_queue</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">current_url</span> <span class=\"o\">=</span> <span class=\"n\">url_queue</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>    <span class=\"c1\">#拿出队例中第一个的url</span>\n        <span class=\"n\">store</span><span class=\"p\">(</span><span class=\"n\">current_url</span><span class=\"p\">)</span>               <span class=\"c1\">#把这个url代表的网页存储好</span>\n        <span class=\"k\">for</span> <span class=\"n\">next_url</span> <span class=\"ow\">in</span> <span class=\"n\">extract_urls</span><span class=\"p\">(</span><span class=\"n\">current_url</span><span class=\"p\">):</span> <span class=\"c1\">#提取把这个url里链向的url</span>\n            <span class=\"k\">if</span> <span class=\"n\">next_url</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">seen</span><span class=\"p\">:</span>      \n                <span class=\"n\">seen</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">next_url</span><span class=\"p\">)</span>\n                <span class=\"n\">url_queue</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">next_url</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">break</span>\n</code></pre></div><p>写得已经很伪代码了。</p><p>所有的爬虫的backbone都在这里，下面分析一下为什么爬虫事实上是个非常复杂的东西——搜索引擎公司通常有一整个团队来维护和开发。</p><p>2）效率<br>如果你直接加工一下上面的代码直接运行的话，你需要一整年才能爬下整个豆瓣的内容。更别说Google这样的搜索引擎需要爬下全网的内容了。</p><p>问题出在哪呢？需要爬的网页实在太多太多了，而上面的代码太慢太慢了。设想全网有N个网站，那么分析一下判重的复杂度就是N*log(N)，因为所有网页要遍历一次，而每次判重用set的话需要log(N)的复杂度。OK，OK，我知道python的set实现是hash——不过这样还是太慢了，至少内存使用效率不高。</p><p>通常的判重做法是怎样呢？<b>Bloom Filter</b>. 简单讲它仍然是一种hash的方法，但是它的特点是，它可以使用固定的内存（不随url的数量而增长）以O(1)的效率判定url是否已经在set中。可惜天下没有白吃的午餐，它的唯一问题在于，如果这个url不在set中，BF可以100%确定这个url没有看过。但是如果这个url在set中，它会告诉你：这个url应该已经出现过，不过我有2%的不确定性。注意这里的不确定性在你分配的内存足够大的时候，可以变得很小很少。一个简单的教程:<a href=\"https://link.zhihu.com/?target=http%3A//billmill.org/bloomfilter-tutorial/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Bloom Filters by Example</a></p><p>注意到这个特点，url如果被看过，那么可能以小概率重复看一看（没关系，多看看不会累死）。但是如果没被看过，一定会被看一下（这个很重要，不然我们就要漏掉一些网页了！）。 [IMPORTANT: 此段有问题，请暂时略过]</p><p><br></p><p>好，现在已经接近处理判重最快的方法了。另外一个瓶颈——你只有一台机器。不管你的带宽有多大，只要你的机器下载网页的速度是瓶颈的话，那么你只有加快这个速度。用一台机子不够的话——用很多台吧！当然，我们假设每台机子都已经进了最大的效率——使用多线程（python的话，多进程吧）。</p><p>3）集群化抓取<br>爬取豆瓣的时候，我总共用了100多台机器昼夜不停地运行了一个月。想象如果只用一台机子你就得运行100个月了...</p><p>那么，假设你现在有100台机器可以用，怎么用python实现一个分布式的爬取算法呢？</p><p>我们把这100台中的99台运算能力较小的机器叫作slave，另外一台较大的机器叫作master，那么回顾上面代码中的url_queue，如果我们能把这个queue放到这台master机器上，所有的slave都可以通过网络跟master联通，每当一个slave完成下载一个网页，就向master请求一个新的网页来抓取。而每次slave新抓到一个网页，就把这个网页上所有的链接送到master的queue里去。同样，bloom filter也放到master上，但是现在master只发送确定没有被访问过的url给slave。Bloom Filter放到master的内存里，而被访问过的url放到运行在master上的Redis里，这样保证所有操作都是O(1)。（至少平摊是O(1)，Redis的访问效率见:<a href=\"https://link.zhihu.com/?target=http%3A//redis.io/commands/linsert\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">LINSERT – Redis</a>)</p><p><br></p><p>考虑如何用python实现：<br>在各台slave上装好scrapy，那么各台机子就变成了一台有抓取能力的slave，在master上装好Redis和rq用作分布式队列。</p><p><br></p><p>代码于是写成</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#slave.py\n\ncurrent_url = request_from_master()\nto_send = []\nfor next_url in extract_urls(current_url):\n    to_send.append(next_url)\n\nstore(current_url);\nsend_to_master(to_send)\n\n#master.py\ndistributed_queue = DistributedQueue()\nbf = BloomFilter()\n\ninitial_pages = \"www.renmingribao.com\"\n\nwhile(True):\n    if request == 'GET':\n        if distributed_queue.size()&gt;0:\n            send(distributed_queue.get())\n        else:\n            break\n    elif request == 'POST':\n        bf.put(request.url)\n        \n</code></pre></div><p><br></p><p><br></p><p>好的，其实你能想到，有人已经给你写好了你需要的：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/darkrho/scrapy-redis\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">darkrho/scrapy-redis · GitHub</a></p><p>4）展望及后处理<br>虽然上面用很多“简单”，但是真正要实现一个商业规模可用的爬虫并不是一件容易的事。上面的代码用来爬一个整体的网站几乎没有太大的问题。</p><p>但是如果附加上你需要这些后续处理，比如</p><ol><li>有效地存储（数据库应该怎样安排）<br></li><li>有效地判重（这里指网页判重，咱可不想把人民日报和抄袭它的大民日报都爬一遍）<br></li><li>有效地信息抽取（比如怎么样抽取出网页上所有的地址抽取出来，“朝阳区奋进路中华道”），搜索引擎通常不需要存储所有的信息，比如图片我存来干嘛...<br></li><li>及时更新（预测这个网页多久会更新一次）<br></li></ol><p><br></p><p>如你所想，这里每一个点都可以供很多研究者十数年的研究。虽然如此，<br>“路漫漫其修远兮,吾将上下而求索”。</p><p>所以，不要问怎么入门，直接上路就好了：）</p><p>如果学完了爬虫你对搜索引擎还感兴趣，也欢迎阅读我正在写的教程：</p><a href=\"https://link.zhihu.com/?target=https%3A//kalasearch.cn/blog/elasticsearch-tutorial/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ElasticSearch初学终极教程</a><p>我会一直更新，我自己的公号 <b>HiXieke </b>里也会不断更新发布，欢迎关注。其它答案和文章：</p><a href=\"https://link.zhihu.com/?target=https%3A//kalasearch.cn/blog/story-of-indiehackers/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">榜样的力量——给程序员的创业故事和方法论</a><a href=\"https://link.zhihu.com/?target=https%3A//kalasearch.cn/blog/writing-guide-for-programmers/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">给程序员的中文写作指北</a><a href=\"https://link.zhihu.com/?target=https%3A//kalasearch.cn/blog/no-code-low-code-affect-programmers/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">无代码和低代码是什么？会抢走程序员的工作吗？</a><a href=\"https://www.zhihu.com/question/29765945/answer/47725158\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/599f95d858083bd941e3f32779a16b4d_bh.jpg?source=54b3c3a5\" data-image-width=\"1440\" data-image-height=\"900\" class=\"internal\">程序员阅读源码是一种什么心态？源码对编程意义何在？如何才能更好阅读代码？</a><a href=\"https://www.zhihu.com/question/403052509/answer/1351694442\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-f419b12f38fad90c90f6e3af764fa135_bh.jpg?source=54b3c3a5\" data-image-width=\"1374\" data-image-height=\"968\" class=\"internal\">程序员会在开发过程中忘记自己写过的细节么？</a><p></p>"}{"如何系统地自学 Python？": "<p>基于这个笔记的实体书了解一下？书名叫《自学Python——编程基础科学计算及数据分析》，将笔记的内容进行了系统整理，并补充了一些基础知识，可以对照两边的目录看差异。<b>基于2.7</b>。京东有自营。</p><hr><p>Python 其实挺简单的，也挺强大的。</p><p>我用 Python 做科学计算，自学一年，也记了一年的笔记。</p><p>笔记链接（基于Python 2.7）：</p><ul><li>Github：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/lijin-THU/notes-python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">lijin-THU/notes-python</a></li><li>Nbviewer：<a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/index.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Jupyter Notebook Viewer</a></li><li>网页：<a href=\"https://link.zhihu.com/?target=http%3A//lijin-thu.github.io/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">lijin-thu.github.io</a> </li></ul><p>笔记目录：</p><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/tree/master/01-python-tools/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">01. Python 工具</a></li><ul><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/01-python-tools/01.01-python-overview.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">01.01 Python 简介</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/01-python-tools/01.02-ipython-interpreter.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">01.02 Ipython 解释器</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/01-python-tools/01.03-ipython-notebook.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">01.03 Ipython notebook</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/01-python-tools/01.04-use-anaconda.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">01.04 使用 Anaconda</a></u></li></ul><li><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/tree/master/02-python-essentials/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02. Python 基础</a></li><ul><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.01-a-tour-of-python.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.01 Python 入门演示</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.02-python-data-types.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.02 Python 数据类型</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.03-numbers.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.03 数字</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.04-strings.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.04 字符串</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.05-indexing-and-slicing.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.05 索引和分片</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.06-lists.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.06 列表</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.07-mutable-and-immutable-data-types.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.07 可变和不可变类型</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.08-tuples.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.08 元组</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.09-speed-comparison-between-list-%26-tuple.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.09 列表与元组的速度比较</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.10-dictionaries.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.10 字典</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.11-sets.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.11 集合</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.12-frozen-sets.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.12 不可变集合</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.13-how-python-assignment-works.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.13 Python 赋值机制</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.14-if-statement.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.14 判断语句</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.15-loops.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.15 循环</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.16-list-comprehension.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.16 列表推导式</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.17-functions.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.17 函数</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.18-modules-and-packages.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.18 模块和包</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.19-exceptions.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.19 异常</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.20-warnings.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.20 警告</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/02-python-essentials/02.21-file-IO.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">02.21 文件读写</a></u></li></ul><li><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/tree/master/03-numpy/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03. Numpy</a></li><ul><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.01-numpy-overview.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.01 Numpy 简介</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.02-matplotlib-basics.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.02 Matplotlib 基础</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.03-numpy-arrays.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.03 Numpy 数组及其索引</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.04-array-types.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.04 数组类型</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.05-array-calculation-method.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.05 数组方法</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.06-sorting-numpy-arrays.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.06 数组排序</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.07-array-shapes.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.07 数组形状</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.08-diagonals.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.08 对角线</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.09-data-to-%26-from-string.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.09 数组与字符串的转换</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.10-array-attribute-%26-method-overview-.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.10 数组属性方法总结</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.11-array-creation-functions.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.11 生成数组的函数</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.12-matrix-object.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.12 矩阵</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.13-general-functions.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.13 一般函数</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.14-vectorizing-functions.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.14 向量化函数</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.15-binary-operators.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.15 二元运算</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.16-universal-functions.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.16 ufunc 对象</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.17-choose.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.17 choose 函数实现条件筛选</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.18-array-broadcasting.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.18 数组广播机制</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.19-reading-and-writing-arrays.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.19 数组读写</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.20-structured-arrays.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.20 结构化数组</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.21-record-arrays.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.21 记录数组</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.22-memory-maps.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.22 内存映射</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/03-numpy/03.23-from-matlab-to-numpy.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">03.23 从 Matlab 到 Numpy</a></u></li></ul><li><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/tree/master/04-scipy/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">04. Scipy</a></li><ul><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/04-scipy/04.01-scienticfic-python-overview.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">04.01 SCIentific PYthon 简介</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/04-scipy/04.02-interpolation-with-scipy.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">04.02 插值</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/04-scipy/04.03-statistics-with-scipy.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">04.03 概率统计方法</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/04-scipy/04.04-curve-fitting.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">04.04 曲线拟合</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/04-scipy/04.05-minimization-in-python.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">04.05 最小化函数</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/04-scipy/04.06-integration-in-python.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">04.06 积分</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/04-scipy/04.07-ODEs.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">04.07 解微分方程</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/04-scipy/04.08-sparse-matrix.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">04.08 稀疏矩阵</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/04-scipy/04.09-linear-algbra.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">04.09 线性代数</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/04-scipy/04.10-sparse-linear-algebra.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">04.10 稀疏矩阵的线性代数</a></u></li></ul><li><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/tree/master/05-advanced-python/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05. Python 进阶</a></li><ul><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.01-overview-of-the-sys-module.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.01 sys 模块简介</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.02-interacting-with-the-OS---os.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.02 与操作系统进行交互：os 模块</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.03-comma-separated-values.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.03 CSV 文件和 csv 模块</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.04-regular-expression.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.04 正则表达式和 re 模块</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.05-datetime.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.05 datetime 模块</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.06-sql-databases.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.06 SQL 数据库</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.07-object-relational-mappers.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.07 对象关系映射</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.08-functions.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.08 函数进阶：参数传递，高阶函数，lambda 匿名函数，global 变量，递归</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.09-iterators.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.09 迭代器</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.10-generators.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.10 生成器</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.11-context-managers-and-the-with-statement.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.11 with 语句和上下文管理器</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.12-decorators.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.12 修饰符</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.13-decorator-usage.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.13 修饰符的使用</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.14-the-operator-functools-itertools-toolz-fn-funcy-module.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.14 operator, functools, itertools, toolz, fn, funcy 模块</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.15-scope.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.15 作用域</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/05-advanced-python/05.16-dynamic-code-execution.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">05.16 动态编译</a></u></li></ul><li><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/06-matplotlib\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">06. Matplotlib</a></li><ul><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/06-matplotlib/06.01-pyplot-tutorial.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">06.01 Pyplot 教程</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/06-matplotlib/06.02-customizing-plots-with-style-sheets.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">06.02 使用 style 来配置 pyplot 风格</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/06-matplotlib/06.03-working-with-text---basic.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">06.03 处理文本（基础）</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/06-matplotlib/06.04-working-with-text---math-expression.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">06.04 处理文本（数学表达式）</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/06-matplotlib/06.05-image-tutorial.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">06.05 图像基础</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/06-matplotlib/06.06-annotating-axes.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">06.06 注释</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/06-matplotlib/06.07-legend.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">06.07 标签</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/06-matplotlib/06.08-figures%2C-subplots%2C-axes-and-ticks.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">06.08 figures, subplots, axes 和 ticks 对象</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/06-matplotlib/06.09-do-not-trust-the-defaults.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">06.09 不要迷信默认设置</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/06-matplotlib/06.10-different-plots.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">06.10 各种绘图实例</a></u></li></ul><li><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/tree/master/07-interfacing-with-other-languages/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">07. 使用其他语言进行扩展</a></li><ul><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/07-interfacing-with-other-languages/07.01-introduction.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">07.01 简介</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/07-interfacing-with-other-languages/07.02-python-extension-modules.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">07.02 Python 扩展模块</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/07-interfacing-with-other-languages/07.03-cython-part-1.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">07.03 Cython：Cython 基础，将源代码转换成扩展模块</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/07-interfacing-with-other-languages/07.04-cython-part-2.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">07.04 Cython：Cython 语法，调用其他C库</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/07-interfacing-with-other-languages/07.05-cython-part-3.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">07.05 Cython：class 和 cdef class，使用 C++</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/07-interfacing-with-other-languages/07.06-cython-part-4.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">07.06 Cython：Typed memoryviews</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/07-interfacing-with-other-languages/07.07-profiling-with-annotations.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">07.07 生成编译注释</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/07-interfacing-with-other-languages/07.08-ctypes.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">07.08 ctypes</a></u></li></ul><li><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/tree/master/08-object-oriented-programming/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08. 面向对象编程</a></li><ul><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/08-object-oriented-programming/08.01-oop-introduction.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08.01 简介</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/08-object-oriented-programming/08.02-using-oop-model-a-forest-fire.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08.02 使用 OOP 对森林火灾建模</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/08-object-oriented-programming/08.03-what-is-a-object.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08.03 什么是对象？</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/08-object-oriented-programming/08.04-writing-classes.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08.04 定义 class</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/08-object-oriented-programming/08.05-special-method.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08.05 特殊方法</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/08-object-oriented-programming/08.06-properties.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08.06 属性</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/08-object-oriented-programming/08.07-forest-fire-simulation.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08.07 森林火灾模拟</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/08-object-oriented-programming/08.08-inheritance.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08.08 继承</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/08-object-oriented-programming/08.09-super.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08.09 super() 函数</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/08-object-oriented-programming/08.10-refactoring-the-forest-fire-simutation.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08.10 重定义森林火灾模拟</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/08-object-oriented-programming/08.11-interfaces.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08.11 接口</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/08-object-oriented-programming/08.12-public-private-special-in-python.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08.12 共有，私有和特殊方法和属性</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/08-object-oriented-programming/08.13-multiple-inheritance.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">08.13 多重继承</a></u></li></ul><li><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/tree/master/09-theano\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09. Theano 基础</a></li><ul><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.01-introduction-and-installation.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.01 Theano 简介及其安装</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.02-theano-basics.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.02 Theano 基础</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.03-gpu-on-windows.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.03 Theano 在 Windows 上的配置</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.04-graph-structures.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.04 Theano 符号图结构</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.05-configuration-settings-and-compiling-modes.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.05 Theano 配置和编译模式</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.06-conditions-in-theano.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.06 Theano 条件语句</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.07-loop-with-scan.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.07 Theano 循环：scan（详解）</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.08-linear-regression.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.08 Theano 实例：线性回归</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.09-logistic-regression-.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.09 Theano 实例：Logistic 回归</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.10-softmax-on-mnist.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.10 Theano 实例：Softmax 回归</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.11-net-on-mnist.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.11 Theano 实例：人工神经网络</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.12-random-streams.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.12 Theano 随机数流变量</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.13-modern-net-on-mnist.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.13 Theano 实例：更复杂的网络</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.14-convolutional-net-on-mnist.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.14 Theano 实例：卷积神经网络</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.15-tensor-basics.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.15 Theano tensor 模块：基础</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.16-tensor-indexing.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.16 Theano tensor 模块：索引</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.17-tensor-operator-and-elementwise-operations.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.17 Theano tensor 模块：操作符和逐元素操作</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.18-tensor-nnet-.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.18 Theano tensor 模块：nnet 子模块</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/09-theano/09.19-tensor-conv.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">09.19 Theano tensor 模块：conv 子模块</a></u></li></ul><li><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/tree/master/10-something-interesting\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">10. 有趣的第三方模块</a></li><ul><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/10-something-interesting/10.01-maps-using-basemap.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">10.01 使用 basemap 画地图</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/10-something-interesting/10.02-maps-using-cartopy.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">10.02 使用 cartopy 画地图</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/10-something-interesting/10.03-nba-data.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">10.03 探索 NBA 数据</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/10-something-interesting/10.04-louis-cha%27s-kungfu-world.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">10.04 金庸的武侠世界</a></u></li></ul><li><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/tree/master/11-useful-tools/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">11. 有用的工具</a></li><ul><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/11-useful-tools/11.01-pprint.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">11.01 pprint 模块：打印 Python 对象</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/11-useful-tools/11.02-pickle-and-cPickle.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">11.02 pickle, cPickle 模块：序列化 Python 对象</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/11-useful-tools/11.03-json.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">11.03 json 模块：处理 JSON 数据</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/11-useful-tools/11.04-glob.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">11.04 glob 模块：文件模式匹配</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/11-useful-tools/11.05-shutil.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">11.05 shutil 模块：高级文件操作</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/11-useful-tools/11.06-gzip%2C-zipfile%2C-tarfile.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">11.06 gzip, zipfile, tarfile 模块：处理压缩文件</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/11-useful-tools/11.07-logging.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">11.07 logging 模块：记录日志</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/11-useful-tools/11.08-string.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">11.08 string 模块：字符串处理</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/11-useful-tools/11.09-collections.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">11.09 collections 模块：更多数据结构</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/11-useful-tools/11.10-requests.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">11.10 requests 模块：HTTP for Human</a></u></li></ul><li><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/tree/master/12-pandas/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">12. Pandas</a></li><ul><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/12-pandas/12.01-ten-minutes-to-pandas.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">12.01 十分钟上手 Pandas</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/12-pandas/12.02-series-in-pandas.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">12.02 一维数据结构：Series</a></u></li><li><u><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/lijin-THU/notes-python/blob/master/12-pandas/12.03-dataframe-in-pandas.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">12.03 二维数据结构：DataFrame</a></u></li></ul></ul>", "Python 应该怎么学？": "<p>这个问题真的是太适合我了，必须答一波，不看你绝对后悔，把我从血泪史中获得的经验告诉给你</p><p>耐心看完要是对你没用，可以让我给你一巴掌</p><p>文章有点长，建议先收藏再慢慢享用</p><p><b>写在前面</b>：</p><p>先说一下我自己的经历吧，本人二本学校一本数学专业毕业，大学之前几乎不懂编程语言，连电脑都用不熟悉。比如我去实习的时候，同时给我说“命令行”，我一脸懵逼，这是个什么鬼。快毕业的时候自学了一个月python就毕业了，然后飞到广州找工作，面试了七八家公司，没人要，对，我就是那个没人要的孩子。不过老天还是眷顾我的，最终找到了一家公司上班，至今一年多了。讲一个面试的例子，你就知道我的基础有多差，面试官给了我一套题，我就只做了两个选择题，其他都不会。我本就以为已经凉了，不过在面聊的时候，还好我的数学功底还行，hr觉得我是可以塑造的，于是把我的试卷撕了，丢尽垃圾桶，说你这个结果要是被人事看见，肯定就没戏了。然后就不用多说了，我进了现在这家公司。</p><p>好了，我的经历就说这么多，如果想了解更多我是怎么从一个几乎可以称为\"智障\"的新手阶段一步一步走过来的，可以看我另外一篇文章，写的非常详细，我相信会对迷茫的你有很大的参考价值：</p><p><a href=\"https://www.zhihu.com/question/60402355/answer/956647473\" class=\"internal\">为什么自学Python看不进去？​www.zhihu.com</a></p><p><b>下面超详细的干货开始了，建议先收藏再慢慢享用</b></p><p>关于python，我看过所谓的很多python入门书籍，比如《python编程从入门到实践》、《<a href=\"https://www.zhihu.com/search?q=%E7%AC%A8%E5%8A%9E%E6%B3%95%E5%AD%A6python&amp;source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A915661479%7D\" class=\"internal\">笨办法学python</a>》、《python学习手册》。首先声明一点，这些书都是好书，这毋庸置疑，但不是人人都合适。有些人就不喜欢看书，或者说，仅仅通过自己一个人的毅力，是很难坚持把一本好几百页的书完完全全看完了，并且多半也是看了很快忘。看书本身很枯燥，对一些人来说就是煎熬，那为什么一定要看书呢，其实，换个思路，我们可以看视频嘛。但也不是随便找视频看，我初学的时候，就是看的一个python入门视频，一共六百集，每集也就5、6分钟，平时撒个尿的时间、等等公交的时间、或者下课的时间，就能看完一集，并且这个老师的讲课风格很有趣，时不时就开车讲段子，会让你觉得学习python是一件没那么痛苦的事情。下面是视频链接，可自行观看</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av14184325%3Ffrom%3Dsearch%26seid%3D12319528533837151178\" data-image=\"https://pic4.zhimg.com/v2-bd6a6a948ea0a2ca52fb4f0f0f899a8c_bh.jpg?source=54b3c3a5\" data-image-width=\"280\" data-image-height=\"174\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python教程_600集Python从入门到精通教程（懂中文就能学会）_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili​www.bilibili.com</a><p><br></p><p>其实方式没什么特别，大家也都知道，但这个做法的核心在哪里呢，说出来简单到爆，就几个字：“容易坚持”。你会发现，一个视频几分钟，随时就能看完一集，再加上讲课方式幽默，很容易坚持看下去，并且我们每看一集，自己心里就会有一个暗示信号，我今天学到了东西，这样不断的进行自我鼓励，不断的正向反馈，我们的动力就越来越足。别看这个教程有六百集，其实内容并不多，一集几分钟，作者考虑把视频分成这么多集，也是洞察了我们不容易坚持看的心里，每集一会就完，那就没那么累了，并且我建议可以倍速播放，老师的语速较慢，有些地方快进的体验更好，哈哈（别弄成鬼畜就行）</p><p><b>还有就是这个视频的前面接近200集都是讲linux基础，这不是必须的，如果你想学可以学，不想学完全不影响你后面的学习</b></p><p>在我看来，你把这个视频看完，基本就能入门了。</p><p>这里还有一个基础入门视频，如果你觉得上面的太多了，看这个也行：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av4050443%3Ffrom%3Dsearch%26seid%3D3592529169870904984\" data-image=\"https://pic1.zhimg.com/v2-407f4eff28b22432a389e539f3342c50_bh.jpg?source=54b3c3a5\" data-image-width=\"1371\" data-image-height=\"857\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[小甲鱼]零基础入门学习Python_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a><p>学python，如果你没听说过numpy、pandas、matplotlib,肯定就out了，numpy相当于九阳神功，专注内功心法，大多python包都会用到，一定要有所了解；pandas、matplotlib就像是倚天剑、屠龙刀，神兵利器在手，天下我有。</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av57023791%3Ffrom%3Dsearch%26seid%3D3592529169870904984\" data-image=\"https://pic2.zhimg.com/v2-5e8757d615fe682563cb75e805fe12e8_bh.jpg?source=54b3c3a5\" data-image-width=\"1024\" data-image-height=\"640\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【python教程】数据分析——numpy、pandas、matplotlib_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a><p><br></p><p>关于数据分析和爬虫的一个视频，基础学完了，可以练练手：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av22571713%3Ffrom%3Dsearch%26seid%3D15972128834363176923\" data-image=\"https://pic2.zhimg.com/v2-bac4d358d1891315c00e1b6ef082b098_bh.jpg?source=54b3c3a5\" data-image-width=\"160\" data-image-height=\"100\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">视频去哪了呢？_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a><p>【更新】有小伙伴提醒说链接不见了，没办法，我找了另一个视频教程，也还不错：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av29732147%3Ffrom%3Dsearch%26seid%3D7984048571440643573\" data-image=\"https://pic2.zhimg.com/v2-b5cd38d937d1a71839041e12bc501a5c_bh.jpg?source=54b3c3a5\" data-image-width=\"480\" data-image-height=\"300\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2017-秦路-数据分析入门_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a><p><br></p><p><b>(另外，我也有一些python资料、数据分析资料、还有我自己花钱培训价值7000元的AI资料，需要的话可以去我同名公众号【暮秋君】获取)</b></p><p><br></p><p><b>下面推荐一些其他经典并且容易上手的资料</b></p><p>1、Vamei老师：<a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/vamei/archive/2012/09/13/2682778.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【python快速教程】</a></p><p>2、<a href=\"https://www.zhihu.com/search?q=%E5%BB%96%E9%9B%AA%E5%B3%B0&amp;source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A915661479%7D\" class=\"internal\">廖雪峰</a>老师：<a href=\"https://link.zhihu.com/?target=http%3A//www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【python教程】</a></p><p>3、实验楼：<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/%3Fcourse_type%3Dall%26tag%3DPython\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【Python基础+项目实战课程】</a>   有些要收费</p><p>4、<a href=\"https://link.zhihu.com/?target=http%3A//learnpythonthehardway.org/book/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《笨办法学 Python》</a>：这本书绝对是最简单的学习 Python 的方法，本书的 HTML 在线版是完全免费的。</p><p>5、<a href=\"https://link.zhihu.com/?target=http%3A//www.pythonweekly.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Weekly</a>：每周更新，包括Python相关的文章、教程、演讲、书籍、项目、工作等。</p><p>6、<a href=\"https://link.zhihu.com/?target=http%3A//www.pythonchallenge.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python challenge</a>：用Python编程技能解决33个谜题，闯关。</p><p>7、<a href=\"https://link.zhihu.com/?target=https%3A//www.python.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python官方文档</a>：官网，官方文档永远是你最坚实的后盾，这上面包含了python的一切</p><p><br></p><p><b>python入门高质量网站</b></p><p><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/3.6/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python官网文档 3.6.3 Documentation</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.runoob.com/python3/python3-tutorial.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 教程 | 菜鸟教程</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.runoob.com/python/python-tutorial.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python2 基础教程 | 菜鸟教程</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//123.w3cschool.cn/navpython_resources\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python学习资源_W3Cschool极客导航</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.w3cschool.cn/python/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python基础教程_w3cschool</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//docs.pythontab.com/python/python3.5/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 入门指南 — Python3 中文手册 3.5.2 文档</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//docs.pythontab.com/python/python2.7/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 入门指南 — Python2 中文文档 2.7 文档</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//docs.pythontab.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">在线手册中心 - 最全的在线手册文档</a></p><p><a href=\"https://www.zhihu.com/question/20039623\" class=\"internal\">编程零基础应当如何开始学习 Python ？ - 知乎</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//python.jobbole.com/82399/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 初学者的最佳学习资源 - Python - 伯乐在线</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.gitbook.com/search%3Fq%3Dpython\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Search GitBook-python</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/search\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub Code Search</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.gitbook.com/explore\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitBook Explore</a></p><p><br></p><p><b>这里有一些练手项目</b></p><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/79\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python聊天室</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/31\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Flask开发轻博客</a><br>说明：Flask 是一个用于 Python 的微型网络开发框架。</li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/60\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python开发简单计算器</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/368\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python代码实现2048</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/49\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">pygame开发打飞机游戏</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/364\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 破解验证码</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/267\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python自动填问卷星</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/481\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">基于python的网络小爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/370\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 图片转字符画</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/580\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用 Python 3 编写系列实用脚本</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/589\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 色情图片识别</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/561\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python实现3D建模工具</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/593\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">神经网络实现手写字符识别系统</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/604\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">基于PyQt5 实现地图中定位相片拍摄位置</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/495\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 实现端口扫描器</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/623\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 实现火车票查询工具</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/599\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">高德API+Python解决租房问题</a></li></ul><p><u>这些根据自己的兴趣挑选几个就可以了，不用全部做完。</u></p><p><u>这些项目有些要收费，请君自行斟酌</u></p><p><br></p><p><b>web项目练习</b></p><p>Python 练习册，每天一个小程序：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//github.com/Yixiaohan/show-me-the-code\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Yixiaohan/show-me-the-code</a><p>web机器人：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//download.csdn.net/download/tobacco5648/9417643\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python搭建的web接口聊天机器人-CSDN下载</a><p>web实战：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//github.com/michaelliao/awesome-python-webapp\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">michaelliao/awesome-python-webapp</a><p>在线问答系统：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/355\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">仿 StackOverflow 开发在线问答系统_Python_实验楼 - 实验楼</a><p>博客BBS论坛系统：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/luotianshuai/p/5331982.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python之路【第十八篇】Django小项目简单BBS论坛部分内容知识点 - Mr.心弦 - 博客园</a><p>成绩管理系统：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//www.oschina.net/code/snippet_209440_19482\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">一个使用django开发的综合成绩管理系统 - 开源中国社区</a><p>新闻系统：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//www.the5fire.com/python-pro4-newsagent.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python项目练习四：新闻聚合 | the5fire的技术博客</a><p><br></p><p><b>爬虫项目练习</b></p><p>爬取知乎：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=http%3A//zhihu-py3.readthedocs.io/zh_CN/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Welcome to zhihu-py3’s documentation!</a><p>爬取豆瓣：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//github.com/fanpei91/doubanspiders\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">fanpei91/doubanspiders</a><p>爬取京东：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//github.com/Adyzng/jd-autobuy\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Adyzng/jd-autobuy</a><p>爬取新浪微博：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//github.com/dataabc/weiboSpider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">dataabc/weiboSpider</a><p>爬取微信：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//github.com/CoolWell/wechat_spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CoolWell/wechat_spider</a><p>爬取淘宝：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=http%3A//python.jobbole.com/81359/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">python.jobbole.com/8135</span><span class=\"invisible\">9/</span><span class=\"ellipsis\"></span></a><p><br></p><p><b><u>python进阶</u></b></p><p>至于进阶，我其实只想推荐一个资料，那就是python cookbook</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//python3-cookbook.readthedocs.io/zh_CN/latest/c01/p13_sort_list_of_dicts_by_key.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">1.13 通过某个关键字排序一个字典列表​python3-cookbook.readthedocs.io</a><p>这是我至今看到的最好的python进阶资料了，没有之一。并且对新手比较友好，文档写的非常清楚，代码复制过来就能运行</p><p>你能看完这本书，基本已经算得上是python中等水平了，其他的就根据你的方向去深入就行了，比如爬虫、机器学习、web等。</p><p>这里我推荐一些好的博主：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/question/34907211\" data-image=\"https://pic1.zhimg.com/zhihu-card-default.jpg?source=54b3c3a5\" class=\"internal\">Python 有哪些好的学习资料或者博客？​www.zhihu.com</a><p>你可以去看看这个答案，有比较详细的介绍。</p><p><b>我这里再推荐一个我非常喜欢的一个博主，文章都非常精辟：</b></p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=http%3A//blog.konghy.cn/2016/06/23/python3-new-feature/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 的一些新特性 | Huoty's Blog​blog.konghy.cn</a><p>当然啦，我自己平时也会分享很多关于python的知识，资料：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://zhuanlan.zhihu.com/c_1181968510896537600\" data-image=\"https://pic1.zhimg.com/4b70deef7_l.jpg?source=54b3c3a5\" data-image-width=\"200\" data-image-height=\"200\" class=\"internal\">python数据分析​zhuanlan.zhihu.com</a><p><b>这是我的专栏，可以看看，后面会持续更新，保证内容非常优质，看了要是对你没用，你可以找人打我(没关系，是兄弟就来砍我)</b></p><p><a href=\"https://www.zhihu.com/answer/956647473\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/answer/956647</span><span class=\"invisible\">473</span><span class=\"ellipsis\"></span></a></p><p>这里再给大家多唠几句，python入门实在是太容易了，因为语法简单，思维与人类的思维很相近，所以入门随便找一本书，把代码敲一遍，基本都没问题，入门的时候，别整天想着看很多很多资料，网上各种找，最后只是留在了收藏夹，专心看完一种就行了。至于后期的熟练，提升，还是得靠自己的努力，加上项目经验，马克思都说了，实践才是检验真理的唯一标准，你不在项目中实际运用知识，想着整天靠看《python从入门到精通》，你以为你就真的能精通？告诉你，那是不可能的。</p><p>python入门真的很简单，但是想深入，还是很有难度的，我这种菜鸟都能入门，我就不信你做不到，大家一起加油吧，kimoji</p><p><b>最后，喜欢的话就点个赞呗</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7b6adfc1f04dc99c2be41f3a69fad588_720w.jpg?source=54b3c3a5\" data-rawwidth=\"300\" data-rawheight=\"300\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-6d2b8754a9e04941837f6c6f8afbc16d_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"300\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='300'%20height='300'&gt;&lt;/svg&gt;\" data-rawwidth=\"300\" data-rawheight=\"300\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-6d2b8754a9e04941837f6c6f8afbc16d_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"300\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7b6adfc1f04dc99c2be41f3a69fad588_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>有挺多小伙伴好奇我的薪水，我这里统一答复:</p><p>我这种情况，本科毕业，工作一年左右，基本也就是广州IT行业的平均水平，不高，够养活。在毕业完全零基础，没有任何培训的情况下，能找到工作其实已经满足了，至于以后嘛，那只有加油咯，IT行业搞技术，你只要努力，回报基本成正比。</p><hr><p>更新：</p><p>最近有不少知友加微信问我自学的经历，以及零基础该怎么办，我在另外一个回答下面补充了我非常详细的经历，<b>以及学习方式，可以去看看，花了我一上午写这边文章，创作很辛苦，大家多点赞吧，别只喜欢和评论，爱你们</b> </p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/question/60402355/answer/956647473\" data-image=\"https://pic2.zhimg.com/v2-7dd3821ae7cd04c72c27121700db9b6b_720w.jpg?source=54b3c3a5\" data-image-width=\"300\" data-image-height=\"296\" class=\"internal\">为什么自学Python看不进去？</a><p>我是 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/26c6adaf4c20446f9dfa13b93b74b6cc\" data-hash=\"26c6adaf4c20446f9dfa13b93b74b6cc\" data-hovercard=\"p$b$26c6adaf4c20446f9dfa13b93b74b6cc\">@暮秋君</a></p><p>同名公号: 暮秋君，有精选python资料，150本精品电子书，ppt,ps资料给你，欢迎来找我玩</p><p><br></p><h2>推荐阅读</h2><p><a href=\"https://www.zhihu.com/question/59989404\" class=\"internal\">万赞回答：哔哩哔哩上有哪些优秀的学习资源</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzA3MjE5Mjc3Ng%3D%3D%26mid%3D2247483918%26idx%3D1%26sn%3Da335b418341db7230422c14773193ca1%26chksm%3D9f234469a854cd7f31e96dd3901e6a41c7585006c5c33dcb0b97286b750ed7d3ef05d90479ee%26token%3D22033193%26lang%3Dzh_CN%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">价值上万的学习资源整理</a></p>", "你们都是怎么学 Python 的？": "<p>无意中听我们院长大人说：Python是一门神奇的语言，在此之前我已经对C/C++/Java等几门语言有了一定得了解和掌握，并做过一些小项目。</p><p><br></p><p>学习Python大致可以分为以下几个阶段：</p><p>1.</p><p>刚上手的时候肯定是先过一遍Python最基本的知识，比如说：变量、数据结构、语法等，基础过的很快，基本上1~2周时间就能过完了，我当时是在这儿看的基础：<a href=\"https://link.zhihu.com/?target=http%3A//www.runoob.com/python/python-intro.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 简介 | 菜鸟教程</a></p><p>-----</p><p>如果你想简单点，我把我自己的学习经验总结成了一本Python以及爬虫电子书，保证非常的通俗易懂帮助你学会Python，目前这本书帮助了数十万的人从零开始学会了Python，点击下方链接就能拿到。</p><a href=\"https://link.zhihu.com/?target=https%3A//t.1yb.co/7HXS\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-b84d1bb91953c1ee544f5077b1bf4cb8_bh.jpg?source=54b3c3a5\" data-image-width=\"531\" data-image-height=\"227\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">路人甲分享的：Python爬虫电子书和数据分析电子书</a><p><br></p><p><br>-----</p><p><br></p><p>2.</p><p>看完基础后，就是做一些小项目巩固基础，比方说：做一个终端计算器，如果实在找不到什么练手项目，可以在 <a href=\"https://link.zhihu.com/?target=https%3A//www.codecademy.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Codecademy - learn to code, interactively, for free</a> 上面进行练习。</p><p><br></p><p>3. </p><p>如果时间充裕的话可以买一本讲Python基础的书籍比如《Python编程》，阅读这些书籍，在巩固一遍基础的同时你会发现自己诸多没有学习到的边边角角，这一步是对自己基础知识的补充。</p><p><br></p><p>4.</p><p>Python库是Python的精华所在，可以说Python库组成并且造就了Python，Python库是Python开发者的利器，所以学习Python库就显得尤为重要：<a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/3.5/library/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">The Python Standard Library</a> ，Python库很多，如果你没有时间全部看完，不妨学习一遍常用的Python库：<a href=\"https://zhuanlan.zhihu.com/p/21563130\" class=\"internal\">Python常用库整理 - 知乎专栏</a></p><p><br></p><p>5.</p><p>Python库是开发者利器，用这些库你可以做很多很多东西，最常见的网络爬虫、自然语言处理、图像识别等等，这些领域都有很强大的Python库做支持，所以当你学了Python库之后，一定要第一时间进行练习。如何寻找自己需要的Python库呢？推荐我之前的一个回答：<a href=\"https://www.zhihu.com/question/26909125/answer/146764978\" class=\"internal\">如何找到适合需求的 Python 库?</a></p><p><br></p><p>6.</p><p>学习使用了这些Python库，此时的你应该是对Python十分满意，也十分激动能遇到这样的语言，就是这个时候不妨开始学习Python数据结构与算法，Python设计模式，这是你进一步学习的一个重要步骤：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/faif/python-patterns\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">faif/python-patterns</a></p><p><br></p><p>7.</p><p>当度过艰难的第六步，此时选择你要研究的方向，如果你想做后端开发，不妨研究研究Django，再往后，就是你自己自由发挥了。</p><p>------</p><p>如果你想简单点，我把我自己的学习经验总结成了一本Python以及爬虫电子书，保证非常的通俗易懂帮助你学会Python，目前这本书帮助了数十万的人从零开始学会了Python，点击下方链接就能拿到。</p><a href=\"https://link.zhihu.com/?target=https%3A//t.1yb.co/7HXS\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-b84d1bb91953c1ee544f5077b1bf4cb8_bh.jpg?source=54b3c3a5\" data-image-width=\"531\" data-image-height=\"227\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">路人甲分享的：Python爬虫电子书和数据分析电子书</a><p></p>", "1198元学习python爬虫合适吗？": "<p>我是完全自学的，看完这条回答你就不用花钱学了。一千多的课程也就是基础课，并不会给你有多深入。如果要是学基础的话，看看下面的学习线路图以及相关的学习方法足够了。贴一个我之前自学的路径图和方法。</p><p>小白学Python需要先找到自己的学习目的。说小一点的，想实现爬一个网站。大一点，未来想做数据方面的工作。不管是小目的还是大的，都必须弄清楚。只有清楚的看到目标才知道当下学的是什么。</p><p>下面的资料，有需要直接点击链接里面的获取资料，找他们要吧，毕竟平台我也发不了这些百度云链接。</p><p><b>懒人目录：</b></p><ul><li>入门Python需要下载什么软件</li><li>入门Python从哪里学起</li><li>优质的自学资源分享</li></ul><h2>一、入门Python需要下载的软件</h2><p>Python和PyCharm。Mac还是Windows根据自己的本选。</p><p>至于其他编程相关软件：火狐浏览器、谷歌浏览器、文件搜索利器Everything、局域网通信软件飞秋、虚拟机VMwareworkstation full、Linux版Mysql、Windows版MySQL、数据库客户端Navicat、自动化测试selenium、代码版本管理器Git、代码编辑器Sublime Text、文本编辑器Ty.pora；</p><p>以上内容，我这边是都有的网盘的，但是一放上来就会被举报。所以大家还是自己去网上找，至于配置问题很多小伙伴会看不懂。可以看看下面这个文章：</p><a href=\"https://www.zhihu.com/question/289779838/answer/537242787\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-650135b64f003cf814a1bcf1fab05a3d_bh.jpg?source=54b3c3a5\" data-image-width=\"1056\" data-image-height=\"671\" class=\"internal\">初学 Python 需要安装哪些软件？</a><p>以上内容不用全部都下载，需要什么下载什么就可以。不想涉及web的话，是不用安装PS的。下面就分享一下，Python的职业发展还有学习路线图。</p><h2>二、入门Python从哪里学起</h2><p>入门的话，是要从了解Python开始学起来。先知道它在什么领域可以做什么。文章篇幅过长，有需要的建议慢慢看。首先来看一下，<b>Python的职业发展路径：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-6b68107682e9cec3a420c7e3ca9d4618_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1210\" data-rawheight=\"663\" class=\"origin_image zh-lightbox-thumb\" width=\"1210\" data-original=\"https://pic2.zhimg.com/v2-6b68107682e9cec3a420c7e3ca9d4618_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1210'%20height='663'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1210\" data-rawheight=\"663\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1210\" data-original=\"https://pic2.zhimg.com/v2-6b68107682e9cec3a420c7e3ca9d4618_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-6b68107682e9cec3a420c7e3ca9d4618_720w.jpg?source=54b3c3a5\"></figure><p><b>简化一下之后的图：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-70cfbc0e49bc21a06b3d62c89f0e2723_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"940\" data-rawheight=\"666\" class=\"origin_image zh-lightbox-thumb\" width=\"940\" data-original=\"https://pic2.zhimg.com/v2-70cfbc0e49bc21a06b3d62c89f0e2723_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='940'%20height='666'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"940\" data-rawheight=\"666\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"940\" data-original=\"https://pic2.zhimg.com/v2-70cfbc0e49bc21a06b3d62c89f0e2723_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-70cfbc0e49bc21a06b3d62c89f0e2723_720w.jpg?source=54b3c3a5\"></figure><p><b>根据职业成长路径图总结的下面的知识点：</b><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2161\" data-rawheight=\"2143\" class=\"origin_image zh-lightbox-thumb\" width=\"2161\" data-original=\"https://pic1.zhimg.com/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2161'%20height='2143'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2161\" data-rawheight=\"2143\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2161\" data-original=\"https://pic1.zhimg.com/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\"></figure><p>作者：传智播客<br>链接：<a href=\"https://www.zhihu.com/question/301837911/answer/700013802\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/question/3018</span><span class=\"invisible\">37911/answer/700013802</span><span class=\"ellipsis\"></span></a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br><br><b>1.Python基础</b></p><ul><li><b>计算机组成原理：</b>计算机组成部分、操作系统分类、B/S和C/S架构、理解软件与硬件的区别</li><li><b>Python变量以及开发环境：</b>字符串、数字、字典、列表、元祖等</li><li><b>流程控制语句：</b>程序的执行顺序，顺序执行、循环执行、选择执行</li><li><b>函数：</b>定义函数、调用函数、函数的嵌套、递归函数</li><li><b>文件的基本操作：</b>文件的打开、编辑、关闭</li><li><b>面向对象编程：</b>类对象、实例对象、定义类、实例化对象</li><li><b>异常处理：</b>学会捕捉异常、自定义异常</li><li><b>模块和包：</b>理解模块和包的概念并学会使用</li><li><b>飞机大战游戏制作：</b>自己独立完成飞机大战游戏</li></ul><p><b>2.开发框架</b><br>大部分后台的业务都会使用到web框架来开发，可以提高工作效率。Python当中常用的web框架是Django、Flask、Tornado等。</p><ul><li><b>Django框架：</b>Git源代码管理、Redis缓存、VUE介绍、Vue基本语法、ES6语法、VUE 生命周期、Django框架介绍、Django模型、ORM及数据库操作、视图及模板、Django中间件</li></ul><p><b>3.数据库</b><br>只说最常用的三种类型数据库，都是网站业务后端使用率很高的。Mysql、Mongodb，Redis；这三种数据库分别是关系型数据库，文档型数据库还有内存型的数据库。需要学的就是如何使用并且设计，最后是优化。<br><b>4.前端知识</b></p><ul><li><b>HTML的学习：</b>HTML的文档结构、快速创建HTML方法</li><li><b>CSS：</b>CSS的使用</li><li><b>PS的简单应用：</b>Photoshop的基本使用、取色、图层</li><li><b>JavaScript的学习：</b>JavaScript的基本语法</li><li><b>jQuery的学习：</b>jQuery的使用</li><li><b>Vue框架：</b>框架的使用以及注意点</li></ul><p><b>5.web服务器</b></p><ul><li><b>Flask web框架的使用：</b>模板与表单、数据库的使用、单元测试、第三方扩展与部署、Redis缓存使用、GIT版本控制、云服务器的使用、验证码的收发、网站项目开发实战</li><li><b>Django web框架的使用：</b>框架的使用方法、模型介绍、ORM以及数据库操作、视图以及模板、Django中间件、Django REST Framework、网站项目开发实战</li></ul><p><b>6.Linux操作系统</b><br>Nginx是在Linux服务器上运行的，所以需要学习Linux系统。<br></p><ul><li><b>Linux命令：</b>Ubuntu操作系统介绍与使用、Linux命令使用、Linux命令选项的使用、远程登录和远程拷贝、vim编辑器使用、Ubuntu软件安装和软件卸载</li></ul><p><b>上述针对目的为使用Python做网站开发所需要的知识点。如果有需要爬虫方面的，或者是数据方面的细分知识点。留言或者私信我~~</b></p><h2>三、优质的自学资源分享</h2><p><b>Python学习教程：</b><br></p><ul><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/273.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门教程完整版（懂中文就能学会）</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/256.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python全栈快速搭建Web服务器</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/257.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python进阶之Django框架</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/83.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">bootstrap商业网站实战1</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/84.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">bootstrap商业网站实战2</a></b></li></ul><p><b>以上全部内容，均有配套资料。内含有PPT课件，课程笔记和源码。有需要直接点击链接里面的获取资料，找他们要吧，毕竟平台我也发不了那些。</b><br><b>Python每个阶段课后习题（按照顺序）：</b><br></p><ul><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9485315688324720075%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础知识习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9541747371111551572%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python有关变量、数据类型以及运算符的习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_10283849747793374459%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python函数相关的练习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9704460656615148696%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python中判断语句以及循环语句的习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_8687215274625857630%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python字符串操作的相关函数习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_8877283644906851257%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python中列表、元祖和字典的习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9549998076213819918%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python函数的闭包、装饰器等练习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9807478801544533165%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python中文件操作的相关习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_10161298216139163786%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python异常相关的全部笔试题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9458427505191681354%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python中模块的所含内容习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9310937568005107218%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python面向对象习题，笔试内容</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_8840878862176327795%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python封装、继承和多态以及类方法等习题</a></b></li></ul><a href=\"https://www.zhihu.com/question/301837911/answer/700013802\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-983933a89cac148ae16061561f7757d1_l.jpg?source=54b3c3a5\" data-image-width=\"2161\" data-image-height=\"2143\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/question/3018</span><span class=\"invisible\">37911/answer/700013802</span><span class=\"ellipsis\"></span></a><p>关注一下我呗，后续会有更多精彩。</p>", "一行代码可以做什么？": "<p>C语言上机课，某女同学偷偷吃起牛肉干。  有一粒牛肉干掉到了键盘上，卡在7和8键之间。  女同学就在键盘上抠啊抠啊抠  程序里一行代码变成这个样子</p><p>  int  *pa=&amp;*&amp;*&amp;*&amp;*&amp;*&amp;*&amp;*&amp;*&amp;*&amp;*&amp;*&amp;a;  后来的结局是程序顺利通过编译运行结果正确！</p><p><br></p><p><br></p><p><br></p><p><br></p><p><br>好的文字都有灵性，看过便不会永远忘记。欢迎关注 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/d20483f96948e8d203fa3d25c41f241e\" data-hash=\"d20483f96948e8d203fa3d25c41f241e\" data-hovercard=\"p$b$d20483f96948e8d203fa3d25c41f241e\">@鬼谷弈邪</a> ，一个以写出能让人永远不忘的文字为目标的卖字人。</p>"}{"零基础应该选择学习 java、php、前端 还是 python？": "<p>看了那么多答案，我想说，你们不要误人子弟。请相信我的回答。为了增加自己的说服力，必须亮一下自己的经历了。<br>清华大学硕士毕业，在北京写过两年Java，在杭州写过三年Python，深入定制过Python虚拟机，现在从事arm上的javascript虚机机的开发。虽然仍然不是什么牛人，但我觉得我的经验能对大多数新入门的从业人员提供参考。以下是正式回答。</p><p>这三门当中，首推Java。真的，Python当然是好，但是对于一个新入门的人，最重要的是先找到工作不是吗？而找工作的话，Java无疑是最容易的。对于跨行业的人而言，最困难的其实是第一步，那就是如何进入这个行业。如果你连进都进不来，第一份工作迟迟无法开始，那么好好努力，补上数据结构，设计模式，算法设计这些差距就根本无从说起，不是吗？</p><p>不要被什么科班出身之类的说法吓坏了。虽然我是科班出身，但我始终觉得，只要你肯努力，这里面并没有什么无法逾越的鸿沟，最重要的是不要好高骛远，也不要急于求成。学习和积累是有一个过程的，在程序员这个行当，你一分付出，就会有一分回报。尊重学习的内在规律，循序渐进，终有一天，你会成为你想成为的那个人的。</p><p>接着，我来谈谈具体的规划。<br>1. 了解Java的运行环境。搞清楚path和classpath是干什么的，怎么在命令行进行编译，执行。知道IDE的各个按钮后面真正发生了什么事情。<br>2. 掌握Java的语法。搞清楚包，接口，类，继承这些基本概念。掌握多态，overwrite，死背下IO的接口，包括InputStream/OutputStream和Writer/Reader，死背下网络编程和GUI编程的接口，死背JDBC接口。这一步，推荐的书是《 Thinking in Java》。<br>3. 掌握多线程编程。弄明白ConcurrencyHashMap是怎么实现的，搞清楚synchronized是怎么回事，弄明白为什么要有Runnable接口。</p><p>在第二步和第三步掌握到80%的时候，你就可以考虑找工作了。</p><p>4. 在工作中体会一下设计模式。推荐《Java与模式》这本书。看完里面的Decorator，IO接口你再也不会去死记硬背了。用的时候，根据Adaptor和Decorator的命名规则，自己临时推都推得出来。<br>5. 恶补数据结构。 搞清楚 LinkedList和 ArrayList的实现机制，了解它们的每一个接口的时间复杂度。同样的还有其他容器，Map啊，Set啊，都是一样的。栈，队列，二叉树，图贯穿编程始终，如果这一步你迈不过去，那就只能在低阶程序员里打转。<br>6. 如果有可能，最好对一些算法设计也有所涉猎。比如动态规则的思路，贪心算法，诸如KMP这种奇妙的算法等。这一步没有数据结构那么重要，学得好当然好，学不好也不用太挫败。</p><p>到了这一步，你和科班程序员之间的差距就不大了。可以在工作中独立承担开发任务了。</p><p>7. 进阶，这时候就可以有自己的思考了。Java发展到现在，被用在各种各样的情景之中，说它是应用最广泛的编程语言并不过分。你在打好基础以后，就可以考虑应该向哪个方向发展了。比如服务端的架构，最好能学习一下JavaEE。JEE一直以来，都是让人觉得门槛太高。这个其实可以从Spring入手，搞清楚反射，控制反转，依赖注射都是什么鬼（这些神叨叨的名词其实都是为了解决Java本身不够动态这个缺陷而出现的，这里不展开，我只想提醒的是，这些概念没有什么大不了的东西，不要被爱装逼的家伙吓住了）。还有消息这个东西，还有ORM这个东西，都去搞搞清楚。想一下它们要解决什么问题，再猜一下他们是怎么实现的。我面试的时候发现，其实大多数优秀的开发者，即使以前没思考过这个问题，让他现场设计一下Hibernate，都能设计得差不多。这说明，这些框架性的东没有什么大不了的。有了基础，你也能设计出来。关键是要去动脑筋想。以上是以服务端开发举例，那么对于客户端，你就去思考事件响应机制是如何工作的（这个我不熟悉，就不再多说了）。还可以深入研究一下JVM的源代码，以及其实现机制，了解一下垃圾回收算法等等。</p><p>到了这一步，你就可以应聘Java高级开发了。如果运气好，年薪30万是有可能的。保底也要20万了。</p><p>8. 架构。到了这一步，你就算是登堂入室，真正迈入高级开发人员了。这一步，你要思考更多的东西，比如，如何处理高并发，如何应对分布式系统，如何提供更健壮的数据服务。到了这一步，那就没有什么可以参考的，现成的东西了。全靠自己的悟性了。那最后能达到什么高度，就不是我这个层次能点评的了。</p><p>编程的世界永远向所有热爱编程的人开放，这是一个自由，平等，共享的世界，我始终是这样坚信的。</p><p>希望你能成为一个成功的程序员。祝好。</p><p>以上。</p><p>======  下面是广告时间。</p><p><a href=\"https://zhuanlan.zhihu.com/hinus\" class=\"internal\">知乎专栏</a></p><p>我的知乎专栏，进击的Java新人，为Java新手们准备的教程。专栏里的内容是完全免费的。欢迎大家关注。</p><p>以及我的公众号：</p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.jianshu.com/p/d73968b686cb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">我的公众号</a></p>", "PHP、Java、Python、C、C++ 这几种编程语言都各有什么特点或优点？": "PHP：没有优点<br>Java：库多，库多，库多<br>Python：语法清楚，语法清楚，语法清楚<br>C：能操纵底层，能细粒度优化性能<br>C++：啥都有，啥都有，啥都有<br>————————————————————————————————————————————<br>汇编：<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/b018755947a2bd49701b5131991e4fa5_720w.jpg?source=54b3c3a5\" data-rawwidth=\"727\" data-rawheight=\"249\" class=\"origin_image zh-lightbox-thumb\" width=\"727\" data-original=\"https://pic1.zhimg.com/b018755947a2bd49701b5131991e4fa5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='727'%20height='249'&gt;&lt;/svg&gt;\" data-rawwidth=\"727\" data-rawheight=\"249\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"727\" data-original=\"https://pic1.zhimg.com/b018755947a2bd49701b5131991e4fa5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/b018755947a2bd49701b5131991e4fa5_720w.jpg?source=54b3c3a5\"></figure>C：<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/947c4dceaab030d4c9253e83fce040a8_720w.jpg?source=54b3c3a5\" data-rawwidth=\"763\" data-rawheight=\"413\" class=\"origin_image zh-lightbox-thumb\" width=\"763\" data-original=\"https://pic2.zhimg.com/947c4dceaab030d4c9253e83fce040a8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='763'%20height='413'&gt;&lt;/svg&gt;\" data-rawwidth=\"763\" data-rawheight=\"413\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"763\" data-original=\"https://pic2.zhimg.com/947c4dceaab030d4c9253e83fce040a8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/947c4dceaab030d4c9253e83fce040a8_720w.jpg?source=54b3c3a5\"></figure>Java：<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/61ec124e921ea95354ba5870365093d6_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1112\" data-rawheight=\"497\" class=\"origin_image zh-lightbox-thumb\" width=\"1112\" data-original=\"https://pic4.zhimg.com/61ec124e921ea95354ba5870365093d6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1112'%20height='497'&gt;&lt;/svg&gt;\" data-rawwidth=\"1112\" data-rawheight=\"497\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1112\" data-original=\"https://pic4.zhimg.com/61ec124e921ea95354ba5870365093d6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/61ec124e921ea95354ba5870365093d6_720w.jpg?source=54b3c3a5\"></figure>C#：<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/1bf2d1463a294b74cb8ec567eda3eca7_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1110\" data-rawheight=\"504\" class=\"origin_image zh-lightbox-thumb\" width=\"1110\" data-original=\"https://pic1.zhimg.com/1bf2d1463a294b74cb8ec567eda3eca7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1110'%20height='504'&gt;&lt;/svg&gt;\" data-rawwidth=\"1110\" data-rawheight=\"504\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1110\" data-original=\"https://pic1.zhimg.com/1bf2d1463a294b74cb8ec567eda3eca7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/1bf2d1463a294b74cb8ec567eda3eca7_720w.jpg?source=54b3c3a5\"></figure>PHP：<figure><noscript><img src=\"https://pic1.zhimg.com/50/bc044c1cca29fde6e72213364d33e2fa_720w.jpg?source=54b3c3a5\" data-rawwidth=\"633\" data-rawheight=\"639\" class=\"origin_image zh-lightbox-thumb\" width=\"633\" data-original=\"https://pic1.zhimg.com/bc044c1cca29fde6e72213364d33e2fa_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='633'%20height='639'&gt;&lt;/svg&gt;\" data-rawwidth=\"633\" data-rawheight=\"639\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"633\" data-original=\"https://pic1.zhimg.com/bc044c1cca29fde6e72213364d33e2fa_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/bc044c1cca29fde6e72213364d33e2fa_720w.jpg?source=54b3c3a5\"></figure>Python：<figure><noscript><img src=\"https://pic4.zhimg.com/50/bbc915dbf9a893c04fae4795b24695c5_720w.jpg?source=54b3c3a5\" data-rawwidth=\"994\" data-rawheight=\"544\" class=\"origin_image zh-lightbox-thumb\" width=\"994\" data-original=\"https://pic4.zhimg.com/bbc915dbf9a893c04fae4795b24695c5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='994'%20height='544'&gt;&lt;/svg&gt;\" data-rawwidth=\"994\" data-rawheight=\"544\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"994\" data-original=\"https://pic4.zhimg.com/bbc915dbf9a893c04fae4795b24695c5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/bbc915dbf9a893c04fae4795b24695c5_720w.jpg?source=54b3c3a5\"></figure>Go：<figure><noscript><img src=\"https://pic1.zhimg.com/50/943bc5dd51e2c487193c1dfaeca3ea81_720w.jpg?source=54b3c3a5\" data-rawwidth=\"599\" data-rawheight=\"398\" class=\"origin_image zh-lightbox-thumb\" width=\"599\" data-original=\"https://pic1.zhimg.com/943bc5dd51e2c487193c1dfaeca3ea81_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='599'%20height='398'&gt;&lt;/svg&gt;\" data-rawwidth=\"599\" data-rawheight=\"398\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"599\" data-original=\"https://pic1.zhimg.com/943bc5dd51e2c487193c1dfaeca3ea81_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/943bc5dd51e2c487193c1dfaeca3ea81_720w.jpg?source=54b3c3a5\"></figure>Haskell：<figure><noscript><img src=\"https://pic1.zhimg.com/50/f9d5053f46223013e5e661edc8f0de1c_720w.jpg?source=54b3c3a5\" data-rawwidth=\"593\" data-rawheight=\"258\" class=\"origin_image zh-lightbox-thumb\" width=\"593\" data-original=\"https://pic2.zhimg.com/f9d5053f46223013e5e661edc8f0de1c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='593'%20height='258'&gt;&lt;/svg&gt;\" data-rawwidth=\"593\" data-rawheight=\"258\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"593\" data-original=\"https://pic2.zhimg.com/f9d5053f46223013e5e661edc8f0de1c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/f9d5053f46223013e5e661edc8f0de1c_720w.jpg?source=54b3c3a5\"></figure>Lisp：<figure><noscript><img src=\"https://pic1.zhimg.com/50/cad788da1f1887cb9876ffabf7bb497a_720w.jpg?source=54b3c3a5\" data-rawwidth=\"971\" data-rawheight=\"397\" class=\"origin_image zh-lightbox-thumb\" width=\"971\" data-original=\"https://pic3.zhimg.com/cad788da1f1887cb9876ffabf7bb497a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='971'%20height='397'&gt;&lt;/svg&gt;\" data-rawwidth=\"971\" data-rawheight=\"397\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"971\" data-original=\"https://pic3.zhimg.com/cad788da1f1887cb9876ffabf7bb497a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/cad788da1f1887cb9876ffabf7bb497a_720w.jpg?source=54b3c3a5\"></figure>最后是 C++：<figure><noscript><img src=\"https://pic4.zhimg.com/50/55164c1e156626a22fb0e4cf481dfe4a_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1280\" data-rawheight=\"768\" class=\"origin_image zh-lightbox-thumb\" width=\"1280\" data-original=\"https://pic1.zhimg.com/55164c1e156626a22fb0e4cf481dfe4a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1280'%20height='768'&gt;&lt;/svg&gt;\" data-rawwidth=\"1280\" data-rawheight=\"768\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1280\" data-original=\"https://pic1.zhimg.com/55164c1e156626a22fb0e4cf481dfe4a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/55164c1e156626a22fb0e4cf481dfe4a_720w.jpg?source=54b3c3a5\"></figure>（图部分为自制，部分来自网络）", "怎么自学python，大概要多久？": "<p>学编程语言有个小秘诀，直接上项目就是干，做完后你就是pythoner了。</p><p>不要怕没有基础，边做边查边学，进步很快的。</p><p>因人而异，一周或者一个月就能搞定。当然需要足够的投入。</p><p>以前我也觉得收集资料、啃语法、敲代码是学python的套路，但这样学效率太低。</p><p>你要知道python是一门脚本语言，不需要传统的编写-编译-链接-运行过程，语法简答、执行方便。</p><p>也就是说python像是个瑞士军刀，可以写出很多有用的小工具，随写随用。</p><p>我在python专栏里写了很多python应用案例，其实大多是对新手友好的。</p><a href=\"https://zhuanlan.zhihu.com/pydatalysis\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-42c56857c4b40a016f79a278eb54d5be_l.jpg?source=54b3c3a5\" data-image-width=\"661\" data-image-height=\"661\" class=\"internal\">Python大数据分析</a><hr><p>下面介绍适合新手的python小项目：</p><p><b>贪吃蛇小游戏</b></p><p>用100行python代码写个贪吃蛇小游戏，也不复杂但涵盖了大部分python语法。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e531fb611a4092f15715e5c500f9d223_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"711\" data-rawheight=\"814\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7a2f0eb13c37c4ea0f3ab0f3d466cac6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"711\" data-original=\"https://pic4.zhimg.com/v2-e531fb611a4092f15715e5c500f9d223_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='711'%20height='814'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"711\" data-rawheight=\"814\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7a2f0eb13c37c4ea0f3ab0f3d466cac6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"711\" data-original=\"https://pic4.zhimg.com/v2-e531fb611a4092f15715e5c500f9d223_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e531fb611a4092f15715e5c500f9d223_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-2e87e183367fc8a8369f39eb5e7fe0a9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"770\" data-rawheight=\"799\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f31001d0fb98dca7a1adcfc9783a3c84_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"770\" data-original=\"https://pic1.zhimg.com/v2-2e87e183367fc8a8369f39eb5e7fe0a9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='770'%20height='799'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"770\" data-rawheight=\"799\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f31001d0fb98dca7a1adcfc9783a3c84_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"770\" data-original=\"https://pic1.zhimg.com/v2-2e87e183367fc8a8369f39eb5e7fe0a9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-2e87e183367fc8a8369f39eb5e7fe0a9_720w.jpg?source=54b3c3a5\"></figure><p>项目地址：<a href=\"https://link.zhihu.com/?target=https%3A//gitee.com/codetimer/Snake/blob/master/main.py\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">gitee.com/codetimer/Sna</span><span class=\"invisible\">ke/blob/master/main.py</span><span class=\"ellipsis\"></span></a></p><p>可以尝试着先复制代码运行一遍，然后自己写。</p><p><b>人脸识别</b></p><p>调用开源项目，只需要简单的几十行python代码，就可以实现人脸识别。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-19791bd62275f0ef1ae5fadf19190f1b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"795\" data-rawheight=\"601\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8643dd0b41d2476afa726d633c3944b4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"795\" data-original=\"https://pic4.zhimg.com/v2-19791bd62275f0ef1ae5fadf19190f1b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='795'%20height='601'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"795\" data-rawheight=\"601\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8643dd0b41d2476afa726d633c3944b4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"795\" data-original=\"https://pic4.zhimg.com/v2-19791bd62275f0ef1ae5fadf19190f1b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-19791bd62275f0ef1ae5fadf19190f1b_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-4094cc0bfccaf4b963fb4ab48a239be2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"790\" data-rawheight=\"614\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-16caa6aa43dee0dd65f2e4d12986cbb8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"790\" data-original=\"https://pic1.zhimg.com/v2-4094cc0bfccaf4b963fb4ab48a239be2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='790'%20height='614'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"790\" data-rawheight=\"614\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-16caa6aa43dee0dd65f2e4d12986cbb8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"790\" data-original=\"https://pic1.zhimg.com/v2-4094cc0bfccaf4b963fb4ab48a239be2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-4094cc0bfccaf4b963fb4ab48a239be2_720w.jpg?source=54b3c3a5\"></figure><p>项目地址：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/ageitgey/face_recognition\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/ageitgey/fac</span><span class=\"invisible\">e_recognition</span><span class=\"ellipsis\"></span></a> </p><p><b>中文分词&amp;情感分析</b></p><p>这个也比较有意思，可以爬取电商评论数据，然后分词处理，并做情感分析，判断好评、差评。</p><p>jieba可以用来做分词处理 </p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/fxsjy/jieba\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/fxsjy/jieba</span><span class=\"invisible\"></span></a></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-bfea2b8ad9e273b8e0d671445259682b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1159\" data-rawheight=\"572\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b1233f94bce6d3a81d21cb92e178547a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1159\" data-original=\"https://pic1.zhimg.com/v2-bfea2b8ad9e273b8e0d671445259682b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1159'%20height='572'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1159\" data-rawheight=\"572\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b1233f94bce6d3a81d21cb92e178547a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1159\" data-original=\"https://pic1.zhimg.com/v2-bfea2b8ad9e273b8e0d671445259682b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-bfea2b8ad9e273b8e0d671445259682b_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e3cc47d18b651455cd3fd23506439ae3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1159\" data-rawheight=\"294\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-ae13db9e8e7aafc075568bd433cc60ac_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1159\" data-original=\"https://pic1.zhimg.com/v2-e3cc47d18b651455cd3fd23506439ae3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1159'%20height='294'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1159\" data-rawheight=\"294\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-ae13db9e8e7aafc075568bd433cc60ac_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1159\" data-original=\"https://pic1.zhimg.com/v2-e3cc47d18b651455cd3fd23506439ae3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e3cc47d18b651455cd3fd23506439ae3_720w.jpg?source=54b3c3a5\"></figure><p>snownlp可以用来做情感分析。</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"kn\">import</span> <span class=\"nn\">snownlp</span>\n<span class=\"n\">sentense</span> <span class=\"o\">=</span> <span class=\"s1\">'''亲，第一天秒杀买，比第二天的正常价还高，</span>\n<span class=\"s1\">说保价7天申请售后说退差价也比不退，你们还有信誉吗</span>\n<span class=\"s1\">            '''</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">snownlp</span><span class=\"o\">.</span><span class=\"n\">SnowNLP</span><span class=\"p\">(</span><span class=\"n\">sentense</span><span class=\"p\">)</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">words</span>  <span class=\"c1\"># list</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">sentiments</span>  <span class=\"c1\"># float</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">%.2f</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n</code></pre></div><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/isnowfy/snownlp\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/isnowfy/snow</span><span class=\"invisible\">nlp</span><span class=\"ellipsis\"></span></a> </p><p><b>车型识别 </b></p><p>这里使用python调用百度的车型识别模型，只要导入车辆图片可以自动识别车型。</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">import</span> <span class=\"nn\">base64</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.image</span> <span class=\"k\">as</span> <span class=\"nn\">mpimg</span>\n\n<span class=\"c1\"># 输入你的api_key和secret_key，获取地址https://console.bce.baidu.com/ai</span>\n<span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n<span class=\"n\">secret_key</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id='</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">'&amp;client_secret='</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">secret_key</span><span class=\"p\">)</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>\n<span class=\"n\">access_token</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"s1\">'access_token'</span><span class=\"p\">]</span>\n<span class=\"n\">animal</span> <span class=\"o\">=</span> <span class=\"s1\">'https://aip.baidubce.com/rest/2.0/image-classify/v1/car?access_token='</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"p\">)</span>\n<span class=\"n\">header</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'Content-Type'</span><span class=\"p\">:</span><span class=\"s1\">'application/x-www-form-urlencoded'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'timg.jpg'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">b64encode</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"image\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"s1\">'utf-8'</span><span class=\"p\">)</span>\n    <span class=\"n\">res2</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">animal</span><span class=\"p\">,</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">header</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">text</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'颜色:'</span><span class=\"p\">,</span><span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"n\">res2</span><span class=\"p\">)[</span><span class=\"s1\">'color_result'</span><span class=\"p\">])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'车型预测'</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">each</span> <span class=\"ow\">in</span> <span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"n\">res2</span><span class=\"p\">)[</span><span class=\"s1\">'result'</span><span class=\"p\">]:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">each</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">],</span> <span class=\"s1\">'</span><span class=\"se\">\\t</span><span class=\"s1\">相似度：'</span><span class=\"p\">,</span> <span class=\"n\">each</span><span class=\"p\">[</span><span class=\"s1\">'score'</span><span class=\"p\">])</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">mpimg</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-5a6394a07a03ed205296df92c90fa813_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"656\" data-rawheight=\"314\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-79000fc513c22f6fffcbbfc31aae989b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"656\" data-original=\"https://pic1.zhimg.com/v2-5a6394a07a03ed205296df92c90fa813_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='656'%20height='314'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"656\" data-rawheight=\"314\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-79000fc513c22f6fffcbbfc31aae989b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"656\" data-original=\"https://pic1.zhimg.com/v2-5a6394a07a03ed205296df92c90fa813_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-5a6394a07a03ed205296df92c90fa813_720w.jpg?source=54b3c3a5\"></figure><p>其他还有很多可以实操的小例子</p><a href=\"https://zhuanlan.zhihu.com/p/89868804\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-e28b0d5c3ff2dd167cc10426897c81d2_720w.jpg?source=54b3c3a5\" data-entity-type=\"article\" data-entity-data=\"null\" class=\"internal\"><span class=\"invisible\">https://</span><span class=\"visible\">zhuanlan.zhihu.com/p/89</span><span class=\"invisible\">868804</span><span class=\"ellipsis\"></span></a><a href=\"https://zhuanlan.zhihu.com/p/78402705\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-098f4b94ef60604708a38bad7e056ceb_720w.jpg?source=54b3c3a5\" data-entity-type=\"article\" data-entity-data=\"null\" class=\"internal\"><span class=\"invisible\">https://</span><span class=\"visible\">zhuanlan.zhihu.com/p/78</span><span class=\"invisible\">402705</span><span class=\"ellipsis\"></span></a><a href=\"https://zhuanlan.zhihu.com/p/37552115\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\"><span class=\"invisible\">https://</span><span class=\"visible\">zhuanlan.zhihu.com/p/37</span><span class=\"invisible\">552115</span><span class=\"ellipsis\"></span></a><a href=\"https://zhuanlan.zhihu.com/p/78096018\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-bbfb7a7215fb7730188eb272cca29a89_720w.jpg?source=54b3c3a5\" data-entity-type=\"article\" data-entity-data=\"null\" class=\"internal\"><span class=\"invisible\">https://</span><span class=\"visible\">zhuanlan.zhihu.com/p/78</span><span class=\"invisible\">096018</span><span class=\"ellipsis\"></span></a><p>如果想看书学习，之前我也写过一些推荐</p><a href=\"https://www.zhihu.com/question/281789365/answer/889933723\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-f715613c5caf6effe81df05c74f20a85_l.jpg?source=54b3c3a5\" data-image-width=\"400\" data-image-height=\"400\" class=\"internal\">入门python有什么好的书籍推荐？</a><hr><p>基础语法看教程确实够了，但有的人会觉得枯燥，学东西还得有趣不是。</p><p>那就推荐去B站找找视频，搜python，排名靠前的教程都还不错。</p><p>有人在问买什么书看，我一向都是看网上教程的，新手非要看书的话，是有那么两三本。</p><p>零基础可以看python编程从入门到实践，书后面有不错的案例。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-67ea8226e853096313294eaa7babcb7a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"314\" data-rawheight=\"778\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d9e62739424adde8bb6e849fa0a20971_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"314\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='314'%20height='778'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"314\" data-rawheight=\"778\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d9e62739424adde8bb6e849fa0a20971_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"314\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-67ea8226e853096313294eaa7babcb7a_720w.jpg?source=54b3c3a5\"></figure><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p>还有一本是注重实践、解决问题的书，叫作python让繁琐工作自动化，适合有点基础的选手。该书是从爬虫、自动化表格、邮件收发、桌面控制等角度来写的，比较贴合日常工作场景。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-12e8fe8eb771cec3949bb945937cda2f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"338\" data-rawheight=\"789\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-4eb87e9f44dedacc52f3fc1681366742_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"338\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='338'%20height='789'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"338\" data-rawheight=\"789\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-4eb87e9f44dedacc52f3fc1681366742_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"338\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-12e8fe8eb771cec3949bb945937cda2f_720w.jpg?source=54b3c3a5\"></figure><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p>还有一本比较好的是python cookbook，是本工具书，而非语法书。</p><p>工具书当然是为了解决问题，所以cookbook的风格就是对症下药，先提问题再讲方法。</p><p>这本书不太适合小白看，因为里面概念比较多。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ca0210989ceee551c17d3accdbe06aad_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"365\" data-rawheight=\"786\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-0a6644b3e49552254a9626f5368ad726_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"365\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='365'%20height='786'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"365\" data-rawheight=\"786\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-0a6644b3e49552254a9626f5368ad726_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"365\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ca0210989ceee551c17d3accdbe06aad_720w.jpg?source=54b3c3a5\"></figure><p>如果你英文好的话，当然首选看英文版，表达更精确。</p><p><a href=\"https://link.zhihu.com/?target=https%3A//ipython-books.github.io/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">ipython-books.github.io</span><span class=\"invisible\">/</span><span class=\"ellipsis\"></span></a> </p><p>也有中文版，看起来不费劲。</p><p><a href=\"https://link.zhihu.com/?target=https%3A//python3-cookbook.readthedocs.io/zh_CN/latest/index.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">python3-cookbook.readthedocs.io</span><span class=\"invisible\">/zh_CN/latest/index.html</span><span class=\"ellipsis\"></span></a> </p><p>纸质也出版了。</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p>好了，说的有点多。</p>", "如何看待风变编程的 Python 网课？": "<p>真的不值得，尤其是在看到我这条回答之后。你就会发现关注我就可以找到的全套课程，他们却收钱！</p><p><b>Python自学基础知识如下：</b></p><ul><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/273.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门教程完整版（懂中文就能学会）</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/tiyan/python%3Fbz%3Dstt\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">0基础Python入门课程</a>:</b>0基础Python兴趣班，通俗易懂，学完即用！3天打造自己的数据分析项目并自动生成工作报告！原价199元，限时9.9元抢购</li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/71.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python网络爬虫第一天</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/72.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python网络爬虫第二天</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/240.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">6节课掌握Python爬虫视频</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/242.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">6节课机器学习入门</a></b> </li></ul><p><b>Python练手项目视频如下：</b></p><ul><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/343.html%3Fstt\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【Python】2小时利用Python实现一个聊天器</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/361.html%3Fstt\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python从零基础到大牛项目实战：抓取景点评论数量实现旅游景点推荐</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/425.html%3Fstt\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">春运回家抢票无忧，Python大牛带你实现12306全自动抢票</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/76.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python之微信开发神器</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/75.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python之爬虫开发帝王</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/78.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python之大数据开发奇兵</a></b> </li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/420.html%3Fstt\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">从零搭建图书管理系统</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/443.html%3Fstt\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Django搭建垃圾分类论坛</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/450.html%3Fstt\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python搭建聊天机器人平台实战</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/458.html%3Fstt\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">用人工智能玩转“和平精英”--我“吃鸡”，我快乐</a></b></li></ul><p><b>先打下基础，后用项目练习，只有课程还是不知道怎么学习的，可以看这个全套的学习线路图：</b><a href=\"https://link.zhihu.com/?target=http%3A//bbs.itheima.com/forum.php%3Fmod%3Dviewthread%26tid%3D414606%3Ftjlb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2019年最新Python学习路线图（内含大纲+视频+工具+书籍+面试）</a> </p><p><b>有关学习Python的文章：</b></p><ul><li><b><a href=\"https://www.zhihu.com/question/55493026/answer/609522449\" class=\"internal\">你们都是怎么学 Python 的？</a></b></li><li><b><a href=\"https://www.zhihu.com/question/36805695/answer/569309272\" class=\"internal\">要学 Python 需要怎样的基础？</a></b></li><li><b><a href=\"https://www.zhihu.com/question/27386361/answer/560891895\" class=\"internal\">Python 学习完基础语法知识后，如何进一步提高？</a></b></li></ul><p><b>Python每个阶段课后习题（按照顺序）：</b></p><ul><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9485315688324720075%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础知识习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9541747371111551572%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python有关变量、数据类型以及运算符的习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_10283849747793374459%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python函数相关的练习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9704460656615148696%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python中判断语句以及循环语句的习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_8687215274625857630%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python字符串操作的相关函数习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_8877283644906851257%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python中列表、元祖和字典的习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9549998076213819918%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python函数的闭包、装饰器等练习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9807478801544533165%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python中文件操作的相关习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_10161298216139163786%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python异常相关的全部笔试题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9458427505191681354%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python中模块的所含内容习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9310937568005107218%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python面向对象习题，笔试内容</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_8840878862176327795%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python封装、继承和多态以及类方法等习题</a></b></li></ul><p><b>量化交易文章也分享给你们：</b></p><ul><li><b><a href=\"https://zhuanlan.zhihu.com/p/70140232\" class=\"internal\">Python之量化交易学习第一天</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/70142138\" class=\"internal\">Python量化交易：策略创建运行流程</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/70467726\" class=\"internal\">应用history_bars实现股票合约历史行情数据获取</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/70697267\" class=\"internal\">使用Python获取股票合约数据（附源码）</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/70819450\" class=\"internal\">使用Python获取财务数据，量化交易的源码</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/71015674\" class=\"internal\">Python量化交易：回测交易接口</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/71686100\" class=\"internal\">量化交易：了解投资组合的市场价值和资金价值</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/71861353\" class=\"internal\">Python量化交易：策略评价指标</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/72042573\" class=\"internal\">Python量化交易：实现第一个股票策略</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/72982532\" class=\"internal\">Python量化交易：多因子策略与理论介绍</a></b> </li></ul><p><b>以上全部学完了，发现还不够那么开始看书吧：</b></p><ul><li><b>操作系统和计算机组成原理：《深入理解计算机系统》</b></li><li><b>算法和数据结构：《算法导论》</b></li><li><b>数据库：《Mysql菜鸟入门系列》进阶的话---&gt;《高性能Mysql》</b></li><li><b>语言本身：《Python编程：从入门到实践》《Python核心编程》</b></li><li><b>还有机器学习和金融等方面的书：<a href=\"https://zhuanlan.zhihu.com/p/34378860\" class=\"internal\">这些是 Python 官方推荐的最好书籍（推荐）</a></b> </li></ul>", "知乎上这么多推崇学 Python 入 IT 行的，如果他们学完 Python 这一套找不到工作怎么办？": "<p>我是自学python转行的，然后两周内找到了工作。</p><p>我的经验是，转行并不难，没人指导就很难。</p><p>我在北方读书，二本学校，专业土木工程。后来大二实习的时候发现土木工程完全不适合我这种性格的人。后来就打算去学计算机，但是由于当时对专业的重要性认识不够足，转专业的考试也没有充分准备。</p><p>最后转专业考试没有及格！</p><p>这绝对是我大学里最最遗憾的一件事，没有之一！！！</p><p>结果出来的时候，我只是有些难过，觉得这暑假一个月的努力是白费了。然后我还安慰自己说没过就没过，其实学土木也挺好的，因为土木是我们学校的王牌专业。现在想起来这些念头有些可笑，那时候我还根本不知道我到底错过了什么。</p><p><b>人生的十字路口不多，一旦错过需要用十倍的辛苦偿还！</b></p><p>在那个学期，我开始有意无意的打听学长们毕业以后工作是怎么样子的。土木的学长，虽然在群里经常开玩笑说工地搬砖，求富婆包养之类的，但其实我知道工地搬砖到底是怎么样的一种状况，相比于计算机行业实在是天差地别。</p><p>那时候我就开始慢慢意识到专业对一个大学生的意义到底有重要。</p><p>但是仍然不够深刻，因为吃的苦还不够，承受的压力和焦虑还不多！</p><p>于是在大二下学期开始，我决定开始自学计算机。因为我对自己的学习能力还算有些自信。而且上知乎看到的都说学计算机，it这一行业自学能力很重要，上培训班不如去自学。也许他们都是科班出身，不会明白一个新手自学计算机要经历怎样的痛苦。但是一个很重要而且急迫的问题摆在我面前，我该学什么东西？</p><p>但其实如果今天给我一次重新选择的机会，我绝对会去上培训班，而不是选择自学！</p><p><b>时间才是最重要的东西，能花钱解决的事情为什么不花钱？</b></p><p><b>没有亲身的经历，你是很难想象行业和行业之间存在的鸿沟是如何之大，尤其是对一个完全的新手而言。</b></p><p>我当时的状况是，什么叫编程，什么叫IDE，C语言是什么东西，计算机为什么还有语言学计算机是干什么的，计算机又有哪些基本的课程，这些最最基础的问题都不明白。更别提那些专业名词了。</p><p>就这样完全懵逼的状况下，我做了一个决定，看看计科系的同学在学什么课程，我照着学就好了。我现在不得不承认这是一个无比傻逼的决定！</p><p>因为我最后写完了足足四个笔记本，然而还是没有学会编程，字倒是练好了不少。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-013b3ed6708a5c612f08e8fd4c5646eb_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-5b9513c9a154d774fa66d82f0594c084_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1536\" data-original=\"https://pic1.zhimg.com/v2-013b3ed6708a5c612f08e8fd4c5646eb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1536'%20height='2048'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-5b9513c9a154d774fa66d82f0594c084_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1536\" data-original=\"https://pic1.zhimg.com/v2-013b3ed6708a5c612f08e8fd4c5646eb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-013b3ed6708a5c612f08e8fd4c5646eb_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-dc02241dfd2e9ad00d3928fdef1dc7b3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"1536\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0ff360ef48e9feb682ee578f60dedc2b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2048\" data-original=\"https://pic4.zhimg.com/v2-dc02241dfd2e9ad00d3928fdef1dc7b3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2048'%20height='1536'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"1536\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0ff360ef48e9feb682ee578f60dedc2b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2048\" data-original=\"https://pic4.zhimg.com/v2-dc02241dfd2e9ad00d3928fdef1dc7b3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-dc02241dfd2e9ad00d3928fdef1dc7b3_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>计科系的同学有专业的老师在指导他们，不懂的地方可以问同学，他们的时间无比充足，一开始就是在正确的道路上。反观我自己的条件，计科系的同学不认识几个，而且计科系也分不同的专业，也分不清这些专业是干什么的，<b>最无比蛋疼的是我还要上我自己的专业课，哪来的时间蹭课。</b></p><p>知乎上关于自学Python的回答我从来没少看。但是回答最多的都是一些看似很有道理实际上完全没有可操作性的文章。</p><p>真实有用的信息非常寥寥，印象最深的是一个985的硕士花了八个月的时间转行成功了，而且基本上转行成功的都是学历很好或者很高的同学。二本学校的学生就没有成功的案例，说实话这让我有些受打击。</p><p>从我的个人经历来讲，我觉得985 2 21同学的学习能力的确就是比二本的同学要强，他们学习时更能心无杂念，我后来才慢慢明白这一点，也明白了当年为什么考了一个二本。</p><p>我下面要写的是从我自己的实际经历，给出最详细的指导，不保证最好，但是绝对具有非常高的可操作性，<b>非常适合完全对这个行业什么都不懂的小白的教程</b>。</p><p>所有的选择我都会帮你做，因为在目前阶段，你最需要的是进入IT这个行业，而不是纠结选择哪个对以后好。</p><p>知乎有名言曰，选择大于努力。但是选择的权力都是被自己创造出来的，除了父母哪有人会给你选择的机会？那些天天等着机会，说选择比努力要重要的人，说的好像自己有的选一样。</p><p>因此所有的选择我会帮你做好，这些问题包括，</p><p>选择什么语言入门；数据结构与算法，计算机网络这些基础课要不要学；</p><p>网上资料那么多，看哪些教程比较好，看完之后有什么项目可以做；</p><p>Python有哪些方向可以做。</p><p>转行的简历该如何写，要注意什么。</p><p>面试到底是怎么一回事儿？</p><p><b>所有的一切，我全部都会帮你搞定。</b></p><p>因为就单单编程而言，并不难。不需要英语，不需要数学。但是为什么很多人觉得难呢，因为网上的很多的资料非常不好，很多的时间都是被强行浪费到这些时间上去了，比如配置环境，读一些你不知道具体代码的博客，出了bug没有人可以问，人家一句话的事，你需要碰一天的运气，这些东西都是非常打击人的积极性。</p><p>而且这些东西并没有多大的意义，但是总有人说都是有价值的，因为他们已经踩了很多坑，如果你不踩这些坑他们会心理不舒服。</p><p>一开始学什么语言，python。数据结构与算法和计算机网络这些课程一开始不学，学完python语言的基础语法，做几个项目后再学。</p><p>看哪些教程，包括博客和视频教程，我会给你指定的。这些东西都是经过我的人肉检验的，性价比不会低。因为我已经帮你做了筛选。</p><p>最后有什么项目可以拿出来展示，是个还算不错的项目。你在网上基本上是搜不到的（除非是去我的github上看，哈哈哈o(〃'▽'〃)o）。</p><p>这个项目是我自己看了很多视频拼凑融合在一起的，算是原创的网站。这是链接，有兴趣点个赞啊。</p><a href=\"https://link.zhihu.com/?target=http%3A//url.qmail.com/cgi-bin/safejmp%3Fspammid%3DOKzfqd139Q853VA4bVI1wEV0FuZDhHtiPAnqMTPimYss52/y5OrOnRU%3D%26cheatcode%3D0%26action%3Dcheck_link%26url%3Dhttps%253A%252F%252Fbeacon.zhihu.com%252Fc%253Fc%253D288cbae9a722f5f7e1f01bc786f210045cec74b87d06af66e2fe98ee6af154e3%2526amp%253Bi%253Da9de4a4958f04647ad817053f7c2cd34%2526amp%253Bs%253D1%2526amp%253Bt%253D1564757155%2526amp%253Bu%253Dhttp%25253A%25252F%25252Flink.zhihu.com%25252F%25253Ftarget%25253Dhttps%2525253A%25252F%25252Fgithub.com%25252Fszk01%25252FNovelWeb-python-Django%2526amp%253Butm_campaign%253Demail_admin%2526amp%253Butm_source%253Dzhihu-web\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-56d670cff5f4f98b8c2928a5bd786785_720w.jpg?source=54b3c3a5\" data-image-width=\"400\" data-image-height=\"400\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">szk01/NovelWeb-python-Django​url.qmail.com</a><p>并不是完全按照教学视频敲出来的。基本的流程是从天涯小说网抓取数据，然后存到mysql数据库，做成类似于易读小说网那种网站。</p><p>最后简历应该如何写。大概的原则上我会告诉你的。</p><p>我现在手上有30+份简历，这些都是被我pk下来的求职者的简历，我仔细看了这些简历，好的简历和不好的简历一眼就能区别出来。（boss要扔掉，我给拿回来了）</p><p>以上整个流程我全部写好，我知道你现在最需要的就是手把手教导，而且还是完全免费，还不快给我点个赞！</p><p>学习基本语法的事情，下载网易云课堂，搜索PythonABC这门课，下面是链接。这个老师是出于兴趣才出的这门视频，是非常良心的一门课程。</p><a href=\"https://link.zhihu.com/?target=http%3A//url.qmail.com/cgi-bin/safejmp%3Fspammid%3DOKzfqd139Q853VA4bVI1wEV0FuZDhHtiPAnqMTPimYss52/y5OrOnRU%3D%26cheatcode%3D0%26action%3Dcheck_link%26url%3Dhttps%253A%252F%252Fbeacon.zhihu.com%252Fc%253Fc%253D39e6341c455315e0fd8ea75e48077af51a72163d8df57c18f83b0fc920a8e35f%2526amp%253Bi%253Da9de4a4958f04647ad817053f7c2cd34%2526amp%253Bs%253D2%2526amp%253Bt%253D1564757155%2526amp%253Bu%253Dhttp%25253A%25252F%25252Flink.zhihu.com%25252F%25253Ftarget%25253Dhttps%2525253A%25252F%25252Fstudy.163.com%25252Fcourse%25252Fintroduction%25252F1004106037.htm%2526amp%253Butm_campaign%253Demail_admin%2526amp%253Butm_source%253Dzhihu-web\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python A~B~C~ - 网易云课堂​url.qmail.com</a><p>这个课程的最大的亮点在于，一边学基础语法知识，一边做练习，这是非常高效的吸收知识的方式。不像很多的视频把知识全部给你讲完，然后才做那几个少的可怜的项目，这门课的性价比绝对是不会低的！</p><p>你或许不明白其中得差别在哪里，但是我自己看了很多视频很明白其中的区别，我会把最好的东西告诉你。</p><p><b>因为知识本质上只是信息，我们最需要的知道的是，学完之后可以拿来做什么，做到什么程度，这才是我们学习的目的所在。</b></p><p>当你花了大概半个月或者三个星期的时间学完之后，我想你大概对编程这件事有个大概的了解。在这个过程中，你会遇到很多的完全的新的概念，因为编程和其他的行业稍微不一样的地方在于，编程是“虚”的，你从小就没有接触过，你的思维会受到一些冲击，但是忍忍就习惯了。</p><p>如果你觉得这个老师讲的好，可以给这个老师打赏，关注她的公众号，而且她也有一个网站，代码都可以下载下来。</p><p>在这学习的期间，你会遇到很多的问题，明明是照着老师的代码敲，都会出错，会有挫败感，尤其是百度后面对着密密麻麻的杂乱的信息不知道该如何下手时候，挫败感尤其强。但是很多事情就是这样，不只是编程，熬一熬就过去了。</p><p>如果你想看python相关的博客，可以百度搜索廖雪峰，遇到不懂的函数搜索菜鸟教程。</p><a href=\"https://link.zhihu.com/?target=http%3A//url.qmail.com/cgi-bin/safejmp%3Fspammid%3DOKzfqd139Q853VA4bVI1wEV0FuZDhHtiPAnqMTPimYss52/y5OrOnRU%3D%26cheatcode%3D0%26action%3Dcheck_link%26url%3Dhttps%253A%252F%252Fbeacon.zhihu.com%252Fc%253Fc%253D2ddfece48aac688a56dcf0e314c3948a9aeffce8b4909ff79c259f8401793f23%2526amp%253Bi%253Da9de4a4958f04647ad817053f7c2cd34%2526amp%253Bs%253D3%2526amp%253Bt%253D1564757155%2526amp%253Bu%253Dhttp%25253A%25252F%25252Flink.zhihu.com%25252F%25253Ftarget%25253Dhttps%2525253A%25252F%25252Fwww.liaoxuefeng.com%25252Fwiki%25252F1016959663602400%2526amp%253Butm_campaign%253Demail_admin%2526amp%253Butm_source%253Dzhihu-web\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-12e9112fa7fe73b723c819cca088fb96_720w.jpg?source=54b3c3a5\" data-image-width=\"640\" data-image-height=\"360\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python教程​url.qmail.com</a><p>当你学完这些之后，大概对敲代码这件事有了初步的认识。如果你还是想干一行，我会告诉你在市场上python到底用来干什么，以及自己的方向。这些东西很简单，但是没有人告诉你，就特别难。</p><p><b>我认为世界上难的知识分为两种，一种是本身不难，没有人告诉你就很难，另一种是本身就很难的知识，但那不是我们要去解决的问题。</b></p><p>学python一般是爬虫入手，这个过程快的话需要三个星期就能达到能给公司干一些基本的活程度，没错编程就是这么简单。不是说那种爬一爬豆瓣top电影评分250的水平，而是真正的比较复杂的网页，像是ajax动态网页，以及破解验证码，加密参数。</p><p>能直接百度出来的资源有崔庆才老师的书籍和博客。</p><a href=\"https://link.zhihu.com/?target=http%3A//url.qmail.com/cgi-bin/safejmp%3Fspammid%3DOKzfqd139Q853VA4bVI1wEV0FuZDhHtiPAnqMTPimYss52/y5OrOnRU%3D%26cheatcode%3D0%26action%3Dcheck_link%26url%3Dhttps%253A%252F%252Fbeacon.zhihu.com%252Fc%253Fc%253D807284cb06f41f78ba20b9edb32f3d5dbe82f693bf0a06354d168c1fcfe1f77d%2526amp%253Bi%253Da9de4a4958f04647ad817053f7c2cd34%2526amp%253Bs%253D4%2526amp%253Bt%253D1564757155%2526amp%253Bu%253Dhttp%25253A%25252F%25252Flink.zhihu.com%25252F%25253Ftarget%25253Dhttps%2525253A%25252F%25252Fcuiqingcai.com%25252F%2526amp%253Butm_campaign%253Demail_admin%2526amp%253Butm_source%253Dzhihu-web\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">静觅丨崔庆才的个人博客​url.qmail.com</a><p>除了这些用来查阅的资料，<b>最重要的是项目练习！最重要的是项目练习！最重要的是项目练习！</b></p><p>不过我可以为你准备好，基本上是照着视频敲代码，理解知识。照着视频敲代码对完全的新手来说真的很重要！</p><p>做完了一些项目，我的建议是可以去投一投简历，试试水。你可能会心虚，或者觉得不可思议，就学这些东西可以去找工作了吗？是的，因为我帮你了节约了半年的时间。你的一个多月学到的东西在市场是就是自学了四五个月的效果。</p><p><b>也许会碰壁，但是没有比直面挫折让人更快成长的事情了。失败是个慷慨的老师，你总能从他那里学到很多！希望大家鼓起勇气，加油吧！</b></p><p>学完爬虫可能还不够，接下来可以学习python后端。</p><p><b>从一开始我就说了，最后的目标是做一个类似于易读网这样的小说网站，参考下面的链接。</b></p><a href=\"https://link.zhihu.com/?target=http%3A//url.qmail.com/cgi-bin/safejmp%3Fspammid%3DOKzfqd139Q853VA4bVI1wEV0FuZDhHtiPAnqMTPimYss52/y5OrOnRU%3D%26cheatcode%3D0%26action%3Dcheck_link%26url%3Dhttps%253A%252F%252Fbeacon.zhihu.com%252Fc%253Fc%253D7a0143fbd96216732216925cb90013347078cc9dd837ef8a21eb27f260f16071%2526amp%253Bi%253Da9de4a4958f04647ad817053f7c2cd34%2526amp%253Bs%253D5%2526amp%253Bt%253D1564757155%2526amp%253Bu%253Dhttp%25253A%25252F%25252Flink.zhihu.com%25252F%25253Ftarget%25253Dhttp%2525253A%25252F%25252Fyi-see.com%25252F%2526amp%253Butm_campaign%253Demail_admin%2526amp%253Butm_source%253Dzhihu-web\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">http://yi-see.com/​url.qmail.com</a><p>也许你听说过前端、后端和全栈这些名词，却完全不了解这些名词是什么意思。但不要紧，只要你开始做了一两个项目之后你就完全明白了。</p><p>学习python后端我推荐上b站（哔哩哔哩）搜索再敲一行代码。<b>我实在再也没有见过比这个更加良心的老师了！完全是手把手教你写代码，老师也是程序员，在工作，很忙。录制这些视频的工作量花费的时间和精力是超乎你的想象的。</b>如果你觉得很好，请给他赞赏！（我知道人的本性就是喜好白嫖，但是至少几块钱请不要吝啬。）</p><a href=\"https://link.zhihu.com/?target=http%3A//url.qmail.com/cgi-bin/safejmp%3Fspammid%3DOKzfqd139Q853VA4bVI1wEV0FuZDhHtiPAnqMTPimYss52/y5OrOnRU%3D%26cheatcode%3D0%26action%3Dcheck_link%26url%3Dhttps%253A%252F%252Fbeacon.zhihu.com%252Fc%253Fc%253D60fc0c3c0862a870565331de84ae10f40306e1228696a300bb2296b27d11f417%2526amp%253Bi%253Da9de4a4958f04647ad817053f7c2cd34%2526amp%253Bs%253D6%2526amp%253Bt%253D1564757155%2526amp%253Bu%253Dhttp%25253A%25252F%25252Flink.zhihu.com%25252F%25253Ftarget%25253Dhttps%2525253A%25252F%25252Fm.bilibili.com%25252Fspace%25252F252028233%2526amp%253Butm_campaign%253Demail_admin%2526amp%253Butm_source%253Dzhihu-web\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">哔哩哔哩 ( ゜- ゜)つロ 乾杯~ Bilibili​url.qmail.com</a><p>这是教你使用Django框架来写一个博客网站的，从零开始最后的部署全部都非常清楚。其中会涉及到前端和后端的知识，以及常用的框架，前端的bootstrap框架。</p><p>不过说实话，我当时并没有把整个视频全部学完。哈哈哈，有些羞愧。我学到了第21课的时候，看了番外篇，把博客网站给部署上去之后觉得对Django框架有了大致的了解。</p><p>于是就开始动手写最后的成果，也是我面试的时候给面试官看的作品，最后成功收到offer了一个作品。</p><p>还有很多东西没写。看有没有人看吧，有人看我再更新。</p><p><br></p><p><b><i>希望大家点个赞啊！</i></b></p><p>。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。丑丑的分割线。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。</p><p>资料整理好了，再更。</p><p>很多人建议我建个qq群，实际上建群基本上没什么用，没有什么意义。我也混过这种技术交流群，但是大家都是在各说各话，水群，闲聊是常态。很少人会主动能帮你解决问题，一是因为人家没理由这样做，二是因为你给出的信息不够详细，提问方式让人摸不着头脑，就算别人想帮你也没有办法。</p><p>这两天加我的人特别多，嗯，如果你有问题的话就直接问我好了，我能一两句话给你解决的，我肯定是给你解决了。而且问这种问题的人挺多的，我都给他们回答了。</p><p>其实从一开始我就只是想写这个帖，把自己的经验写出来，因为当年我自学的这些痛苦，我都经历过，走过很多弯路，我当时特别迫切的需要，要一个人来指导我，但是这个人始终没有出现。我知道现在仍有很多人在自学这条路上，我很明白你们的痛苦，也知道你们迫切的心情与焦虑的状况，所以我就来做这个人好了。</p><p>加我微信过来问我问题的人，如果是已经毕业了的话，我一般都是建议他们去报培训班。</p><p><b>愿意帮助到那些最需要帮助的人。</b></p><p>加油吧，只有实际行动才能让未来更好！</p><p>————————分割线———————</p><p><br></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-7691ef299b39ae72efc66242a0772a65_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1125\" data-rawheight=\"2433\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f1aa9d95f97b394bc4d53556093520d5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1125\" data-original=\"https://pic4.zhimg.com/v2-7691ef299b39ae72efc66242a0772a65_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1125'%20height='2433'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1125\" data-rawheight=\"2433\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f1aa9d95f97b394bc4d53556093520d5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1125\" data-original=\"https://pic4.zhimg.com/v2-7691ef299b39ae72efc66242a0772a65_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-7691ef299b39ae72efc66242a0772a65_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b><i>——————————分割线——————</i></b></p><a href=\"https://www.zhihu.com/question/22784163/answer/815845825?hb_wx_block=1\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">高智商的人思考问题时脑中是怎样一番景象？</a><p>我最近写的，关于智商的深度思考，可惜没人看，偷偷放上来，哈哈~</p>", "Python 的练手项目有哪些值得推荐？": "更新：兄弟们如此给力，小弟受宠若惊，好东西就是用来分享的。 500 line or less只是某个系列丛书中第四本，其他三本链接：<br><a href=\"https://link.zhihu.com/?target=http%3A//www.aosabook.org/en/index.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">aosabook.org/en/index.h</span><span class=\"invisible\">tml</span><span class=\"ellipsis\"></span></a><br>可以在线看哦<br>前两本每章介绍出名开源软件的架构，你说的上名字的开源基本上都能找到，短小精悍的介绍框架<br>第三本介绍开源软件中实际遇到的一些performance的问题以及解决方案，同样浓缩啊！！ 每章的作者大多就是此开软软件的开发者啊！！！<br>不用多说，点开你就知道啊<br>不想看英文的怒点 <a href=\"https://link.zhihu.com/?target=http%3A//www.ituring.com.cn/article/13057\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">ituring.com.cn/article/</span><span class=\"invisible\">13057</span><span class=\"ellipsis\"></span></a><br>前两卷的中文版，不知道翻译的怎么样<br><br>----------------------------------------割了你--------------------------------------------------------------<br><br>和楼主一样在学习python， 最近找到一本python神书 500 line or less. 有兄弟提到了git的源码，这里不只是源码，而是这么一本书，目前还没出版，但是在网上有已经看到了 review版本。<br>强烈推荐！！！<br>强烈推荐！！！<br>强力推荐！！！<br>这本书共16个章节，每章均是由该领域的大牛完成，用不到500行的代码实现一个特（装）定（逼）功能。<br>本书链接 <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/blog/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/blog/</span><span class=\"invisible\"></span></a><br>目录页：<a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/blog/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/blog/</span><span class=\"invisible\"></span></a><br>以下是章节目录，每一章都让你热血澎湃，看完介绍你就向往下读。<br>1. A Template Engine （<a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/a-template-engine.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/a-</span><span class=\"invisible\">template-engine.html</span><span class=\"ellipsis\"></span></a>）<br>    MVC模型中的view层如何解析html中的静态变量和简单的语句，如下：<br><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&lt;p&gt;Welcome, {name}!&lt;/p&gt;\n&lt;p&gt;Products:&lt;/p&gt;\n&lt;ul&gt;\n{products}\n&lt;/ul&gt;\n</code></pre></div>web中的view层不只是html代码，还有支持其他的代码。比如 {products}是一个变量。 同时view层还支持{if} , {for}, {foreach}等等。django，velocity等是如何解析他们的？<br>大牛用不到500行代码告诉你，是如何实现的？ （不是替换，替换需要每次请求都需要解析）<br><br>2. Web Spreadsheet （<a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/web-spreadsheet.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/we</span><span class=\"invisible\">b-spreadsheet.html</span><span class=\"ellipsis\"></span></a>）<br>   web的电子表格如何实现的？ 好像比较简单，但是介绍了 web storage 和 web worker，还是很值得一看的<br><br>3. A Web Crawler <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/a-web-crawler-with-asyncio-coroutines.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/a-</span><span class=\"invisible\">web-crawler-with-asyncio-coroutines.html</span><span class=\"ellipsis\"></span></a><br>   不多说，几百行代码实现高效的网络爬虫， 高效！<br><br>4. Static Analysis <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/static-analysis.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/st</span><span class=\"invisible\">atic-analysis.html</span><span class=\"ellipsis\"></span></a><br>     成熟的IDE都有代码检查和代码提示，怎么做的？ 看这章<br><br>5. Clustering by Consensus <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/clustering-by-consensus.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/cl</span><span class=\"invisible\">ustering-by-consensus.html</span><span class=\"ellipsis\"></span></a><br>    分布式系统 paxos原理与实现。不知道paxos说明你没接触过分布式体统，接触过分布式还不懂，说明你只会用分布式系统<br><br>6. A Simple Object Modle <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/a-simple-object-model.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/a-</span><span class=\"invisible\">simple-object-model.html</span><span class=\"ellipsis\"></span></a><br>    Python是面向对象语言，对象，继承，多态，怎么用代码实现的，不到500行代码，实际不到400 行， 666.。。<br><br>7. An Archaeology-Inspired Database <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/an-archaeology-inspired-database.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/an</span><span class=\"invisible\">-archaeology-inspired-database.html</span><span class=\"ellipsis\"></span></a><br>    如何用python实现一个数据库，支持 query，index, transaction， 2，3百行代码和对每个函数的讲解。看完你就知道知道数据库原理，太值了<br><br>8. Dog Bed Database <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/dbdb-dog-bed-database.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/db</span><span class=\"invisible\">db-dog-bed-database.html</span><span class=\"ellipsis\"></span></a><br>   类似上一章，不过这次实现的是key-value的非关系型数据库，详细的讲解和2，3百行代码<br><br>9. A 3D Modeller <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/a-3d-modeller.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/a-</span><span class=\"invisible\">3d-modeller.html</span><span class=\"ellipsis\"></span></a><br>    用python实现一个3D设计，显示到屏幕，可以交互。不是很懂，但不明觉厉<br><br>10. A Python Interpreter Written in Python <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/a-python-interpreter-written-in-python.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/a-</span><span class=\"invisible\">python-interpreter-written-in-python.html</span><span class=\"ellipsis\"></span></a><br>      手把手教你如何实现python解析器。<br><br>11. A Pedometer in the Real World <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/a-pedometer-in-the-real-world.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/a-</span><span class=\"invisible\">pedometer-in-the-real-world.html</span><span class=\"ellipsis\"></span></a><br>       你用过手机应用记录你每天走的步数，然后发送到朋友圈吗？ （没有？ 没关系。）这章告诉你如何实现步数记录，怎么算走一步。手机中有加速记，很容易获得你某一时刻在x,y,z三个方向的加速度，用这些参数，如何计算你走了多少步？ 知道吗？ 不知道，看这章，讲解加实现<br><br>12. A Continuous Intergration System <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/a-continuous-integration-system.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/a-</span><span class=\"invisible\">continuous-integration-system.html</span><span class=\"ellipsis\"></span></a><br>      CI System是一个专门用来测试新代码的系统，根据代码提交记录，拿到新的代码，测试，生成报告。这不是关键，关键是 如果test失败，它还会 恢复，然后从失败的那个点在跑，相当于把出错环境重现了。。。<br><br>13 A Rejection Sampler <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/a-rejection-sampler.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/a-</span><span class=\"invisible\">rejection-sampler.html</span><span class=\"ellipsis\"></span></a><br>      不是很懂，和机器学习相关，如何 计算你赢得象棋比赛的概率，天气对飞机的影响等类似的问题<br><br>14 A visual programming toolkit <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/blockcode-a-visual-programming-toolkit.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/bl</span><span class=\"invisible\">ockcode-a-visual-programming-toolkit.html</span><span class=\"ellipsis\"></span></a><br>      不太明白<br><br>15.  A Flow Shop Scheduler <a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/a-flow-shop-scheduler.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">aosabook.org/en/500L/a-</span><span class=\"invisible\">flow-shop-scheduler.html</span><span class=\"ellipsis\"></span></a><br>      flowshop调度问题，好像很出名的样子，最优化问题，如何从局部最优解找全局最优解<br><br>16  Optical Character Recognition<br>      几百行代码使用人工神经网络实现识别手写字母。。。<br><br>github源码：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/aosabook/500lines/blob/master/README.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">500lines/README.md at master · aosabook/500lines · GitHub</a>"}{"为什么很多程序员不用 switch，而是大量的 if...else if ...？": "我曾经接手过一份代码，遇到过一个三十几个if else套if else的模块。<br>心理骂骂咧咧谁他喵写的这玩意，然后开始review历史。<br><br>大致情况是这样的：第一个程序员写下这段代码时，只有两个if else；后来开始逐渐加需求，先是一个、两个，随后量变引起质变，于是逻辑分支快速扩张。<br>这个时候已经没有人愿意去重构成switch或是其他什么设计模式了，毕竟复杂度摆在那里，万一崩了还得背锅。<br>三四个程序员接手这段代码之后，就变成我现在这种局面了。<br><br>第一个程序员绝对没有料到这么简单的逻辑在之后会变成这么复杂的模块，甚至在增添第一第二条else时，也只是很随意的加上。<br><br>所以我觉得，这个锅绝对是是甲方的，让他娘的随便改需求。<br>这么一想心里就好受多了，编程嘛，最重要的是要看的开。<br>于是我又增加了两条else，测试，提交，下班。<br><br><br><br><br><br><br><br><br><br><br><br>————————————————<br>回来更新一波，下文与本题目无关，算私货:<br>papi酱更新了一个视频，别人是看着看着就笑了，我是看着看着就哭了。<br><a href=\"https://link.zhihu.com/?target=http%3A//www.bilibili.com/video/av37849097\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">bilibili.com/video/av37</span><span class=\"invisible\">849097</span><span class=\"ellipsis\"></span></a><br>之前的回答算是皮一下，带有一点自我调侃的意味。但大环境的事实如何，各位想必也是心知肚明的，不然也不会有这么多赞同了。<br>有时候真的不是我们不想写好代码，是不能写好代码。写着写着需求砍了、需求变了，什么设计模式都不顶用，最终还是怎样快怎样方便怎样来，因为根本没人知道这段代码还能不能活的过下一段需求变动。<br>有的人肯定要说怎么不订合同。合同肯定是有的，但是明明白纸黑字写的合同，该改还是得改，毕竟你要是不同意甲方那些“微小的变动”，以后还做不做了？！金主真能去得罪？<br><br>还是要学会得过且过，跟什么过不去也不能跟自己过不去，糟糕的代码忍一忍就完了:代码能跑、头发不少，对我们这些打工的人而言比什么都重要。<br>现实工作绝不是课本中的理想状态，会有无数的突发情况在等着你。你定义了半天观察者、备忘录，第二天这部分需求被砍了；写了半天接口，抽象类，忽然下午告诉你要加个十万八千里打不着边的啥东西，于是又开始加适配器，等你加完了告诉你又砍了。甚至有次半夜被喊起来改代码，等改完了发现需求被撤回了，气的我直接请了两天假调整心情。<br>设计模式和大的框架绝对是一个项目中非常重要的东西，但不是绝对重要的；一个好的PM团队，在某种意义上，才真正决定了这个项目的代码质量。", "学习python有什么好的视频教程?": "<p>干货来袭，以下均为python好的学习视频，我们先从python的入门教程开始分享起！</p><h2>python入门教程（600集）</h2><a href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/BV1ex411x7Em\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">bilibili.com/video/BV1e</span><span class=\"invisible\">x411x7Em</span><span class=\"ellipsis\"></span></a><p>配套资料：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/15BmUdw9AgOD2tI9xG6p1WA\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/15BmUdw</span><span class=\"invisible\">9AgOD2tI9xG6p1WA</span><span class=\"ellipsis\"></span></a> 提取码：w61i</p><p>PS：因之前有同学反馈，打开源码是乱码，我们特意找了老师，问了一下，只要使用markdown这个软件打开就不乱码哦！</p><blockquote>原链接：<a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/273.html%3Fstt\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门教程完整版（懂中文就能学会）</a><br>PS：目录大纲来源于视频介绍<br><b>目录大纲：</b><br>本套教程15天<br>学前环境搭建<br>1-3 天内容为Linux基础命令<br>4-13 天内容为Python基础教程<br>14-15 天内容为 飞机大战项目演练<br><b>视频概括：</b><br>第一阶段（1-3天）：<br>该阶段首先通过介绍不同领域的三种操作系统，操作系统的发展简史以及Linux系统的文件目录结构让大家对Linux系统有一个简单的认识，同时知道为什么要学习Linux命令。然后我们会正式学习Linux命令<br>1. 文件和目录命令：ls，cd，touch，mkdir，rm<br>2. 拷贝和移动命令：tree，cp，mv<br>3. 文件内容命令：cat，more，grep<br>4. 远程管理命令：ifconfig，ping，SSH的工作方式简介以及ssh命令<br>5. 用户权限及用户管理命令：chmod，chgrp，useradd，passwd，userdel<br>6. 软件安装及压缩命令：apt简介及命令，tar，gzip压缩命令，bzip2压缩命令<br>7. vim的基本使用<br>第二阶段（4-10天）<br>该阶段我们正式进入Python这门语言的学习，首先通过了解Python语言的起源，Python语言的设计目标，Python语言的设计哲学，Python语言的优缺点和面向对象的基本概念，以及Python语言的执行方式，还有Python集成开发环境PyCharm的使用为我们接下来的学习做铺垫。<br>然后我们会学习int，string，float三种简单的变量类型，变量间的计算，变量的输入输出，if判断语句，while循环语句，for循环语句，break和continue的使用，函数的基本使用，模块的使用，列表，元组，字典三种高级变量，字符串的常用操作。<br>接下来我们会通过一个名片管理系统的案例，把这一阶段的知识进行一个串联。在学习名片管理系统时，首先我们会学习怎么去搭建这一系统的框架，然后我们会分别实现新增名片，显示全部名片，查询名片，删除名片，修改名片这些功能。<br>最后我们会学习语法的进阶内容，全局变量，局部变量，可变数据类型和不可变数据类型以及函数返回多个值，函数的缺省参数，多值参数，递归的基本使用。<br>第三阶段（11-13天）<br>该阶段我们会学习面向对象（OOP）这一重要的编程思想，首先学习的知识点有类和对象的基本概念，dir函数，self的作用，初始化方法__init__，内置函数__str__，__del__，单继承，方法重写，私有属性和方法，多继承，多态，类属性，静态方法。<br>然后我们还会学习单例模式这一设计模式，异常的捕获，异常的抛出，from import局部导入，from import导入同名工具， from import导入所有工具，包的使用，制作模块，pip的使用以及文件的相关操作。<br>第四阶段（14-15天）<br>该阶段是项目演练阶段，我们会带领大家通过使用之前学习过的知识开发飞机大战这一经典游戏，项目中分别有游戏窗口，图像绘制，游戏循环，事件监听，精灵和精灵组以及创建敌机，创建英雄和发射子弹，碰撞检测等模块。</blockquote><h2>python爬虫教程</h2><p>6节课掌握Python爬虫视频</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/368.html%3Fstt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-d8fee581db9643b1ecad8670556bce1e_l.jpg?source=54b3c3a5\" data-image-width=\"132\" data-image-height=\"132\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">6节课掌握Python爬虫</a><p>资料链接：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1QgWQl-rWCNP9te_Yxny2VA\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1QgWQl-</span><span class=\"invisible\">rWCNP9te_Yxny2VA</span><span class=\"ellipsis\"></span></a>  提取码：8pdk </p><h2>python-django框架教程</h2><p>Python进阶之Django框架</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/257.html%3Fstt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Django视频教程_Django入门视频教程|黑马程序员</a><p>资料链接：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1OJ4SE8wClgV_53GclWPXDQ\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1OJ4SE8</span><span class=\"invisible\">wClgV_53GclWPXDQ</span><span class=\"ellipsis\"></span></a> 密码：vfi2</p><blockquote>原文链接：<br><b>课程内容：</b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/257.html%3Fstt\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">yun.itheima.com/course/</span><span class=\"invisible\">257.html?stt</span><span class=\"ellipsis\"></span></a><br>1、Django的简介。<br>主要知识点：MVC设计模式以及Django的MVT。<br>2、搭建开发环境：<br>主要知识点：linux的虚拟环境搭建和应用、Django的安装。<br>3、利用Django框架完成简单的图书项目：<br>主要知识点：编写模型，使用API与数据库交互、使用Django的后台管理管理数据、通过视图接收请求，通过模型获取数据、调用模板完成页面展示。</blockquote><h2>python机器学习教程</h2><p>Python3天快速入门机器学习项目</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/500.html%3Fstt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">最简单快速入门Python机器学习</a><p>源码：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1HmbsfRK-QEeCeFR--LgsOg\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1HmbsfR</span><span class=\"invisible\">K-QEeCeFR--LgsOg</span><span class=\"ellipsis\"></span></a>  提取码：lnv1</p><blockquote>原文链接:<a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/500.html%3Fstt\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">yun.itheima.com/course/</span><span class=\"invisible\">500.html?stt</span><span class=\"ellipsis\"></span></a><br><b>课程简介</b><br> 该阶段是机器学习的入门课程，主要介绍一些经典的传统机器学习算法，如分类算法：KNN算法，朴素贝叶斯算法，逻辑回归，决策树算法以及随机森林；回归算法：线性回归，岭回归；聚类算法：KMeans算法，结合Python语言实现的经典机器学习库Sikit-Learn库，实现一些小型预测案例。</blockquote><p>360°解读机器学习经典算法——聚类算法</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/525.html%3Fstt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python|360°解读机器学习经典算法</a><p>源码：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1Bf_2I0a9h763q7IgB-dyiQ\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1Bf_2I0</span><span class=\"invisible\">a9h763q7IgB-dyiQ</span><span class=\"ellipsis\"></span></a>  提取码：8je5 </p><h2>python全自动抢火车票教程</h2><p>春运回家抢票无忧，Python大牛带你实现12306全自动抢票</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/372.html%3Fstt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-f90347b4889fca41014533d66364a1f7_l.jpg?source=54b3c3a5\" data-image-width=\"100\" data-image-height=\"100\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">春运回家抢票无忧，Python大牛带你实现12306全自动抢票</a><p>源码：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1E3O-gFBbzaUcjtvSBROBtg\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1E3O-gF</span><span class=\"invisible\">BbzaUcjtvSBROBtg</span><span class=\"ellipsis\"></span></a>   提取码：9epq</p><h2>Python深度学习之神经网络</h2><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/501.html%3Fstt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-646978b441c85122abdef2fa647beaa6_l.jpg?source=54b3c3a5\" data-image-width=\"132\" data-image-height=\"132\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">3天带你玩转Python深度学习</a><p>链接：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1rx6dBUcfZvZ0F01QybtIpA\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1rx6dBU</span><span class=\"invisible\">cfZvZ0F01QybtIpA</span><span class=\"ellipsis\"></span></a>   密码：1bde</p><h2>0基础小白也能学会的人工智能课</h2><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/534.html%3Fstt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-478f07034beb752b57cc8d48a5340bf5_l.jpg?source=54b3c3a5\" data-image-width=\"100\" data-image-height=\"100\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">智能机器人软件开发</a><p>资料链接：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1EDaAE9eG0fhW7V5haowbig\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1EDaAE9</span><span class=\"invisible\">eG0fhW7V5haowbig</span><span class=\"ellipsis\"></span></a>  提取码：9kml </p><h2>计算机视觉入门及案例实战</h2><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/721.html%3Fstt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">计算机视觉入门及案例实战</a><p>资料链接：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1FoOqTF2-YlNICyBK71MwCg\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1FoOqTF</span><span class=\"invisible\">2-YlNICyBK71MwCg</span><span class=\"ellipsis\"></span></a> 提取码：v96y</p><h2>python实战项目从0开发一个Django博客系统</h2><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/720.html%3Fstt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python实战项目从0开发一个Django博客系统</a><p>链接：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1jaHMZg-7OxrutOxEjdkFYA\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1jaHMZg</span><span class=\"invisible\">-7OxrutOxEjdkFYA</span><span class=\"ellipsis\"></span></a> 提取码：d1af </p><h2>特别的数据库给特别的你 -- 医疗知识图谱应用</h2><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/503.html%3F2005zzp\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">特别的数据库给特别的你 -- 医疗知识图谱应用</a><p>从深度学习的发展历史到目前学术界，工业界的前沿，前景知识。在NLP领域的一种全新数据库neo4j的初识和使用。以及深度学习服务的总体框架部署等。</p><h2>两小时快速入门深度学习</h2><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/498.html%3F2005stt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">两小时快速入门深度学习</a><h2>隐藏在美女直播室中的AI观众</h2><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/497.html\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">隐藏在美女直播室中的AI观众</a><p>本次课程将以娱乐产业中真实的直播室AI项目为背景，通过案例演示完成的核心技术流程，融合CV与NLP的相关技术，完成图片的描述文本生成任务，同时课程中将主要围绕面试中最常见的问题进行展开讲解，并演示最终效果和相关分析。</p><h2>领略人工智能在计算机视觉方向的魅力风采</h2><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/485.html\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">领略人工智能在计算机视觉方向的魅力风采</a><p>计算机视觉是深度学习的主要应用方向之一，本次课程通过计算机视觉在交通领域的应用和实践带领大家领略人工智能的风采，主要包括计算机视觉与深度学习结合的相关知识，介绍经典的图像处理算法，深度视觉，图像分类，目标检测与跟踪，及图像分割的相关知识，最后介绍在智慧交通领域中人工智能的应用。</p><h2>揭秘全网聚合新闻 python实战新闻分类</h2><p>完整视频：</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/477.html%3F2005stt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">揭秘全网聚合新闻 python实战新闻分类</a><p>配套资料：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1ZOMn_Aq7R5RoN-Ua0ewRVA\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1ZOMn_A</span><span class=\"invisible\">q7R5RoN-Ua0ewRVA</span><span class=\"ellipsis\"></span></a> 提取码：nmwf</p><p>本课程将带领学生利用提供的新闻分类数据从0开始构建新闻分类算法模型并部署上线,主要包含以下几个部分:1. jieba分词技术介绍。2. tfidf文本特征提取原理。3. word2vec词向量原理。4. tfidf新闻分类模型训练/word2vec新闻分类模型训练。5. 模型部署上线进行预测。</p><h2>人脸识别综合应用与实践</h2><p>完整视频：</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/464.html%3F2005stt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">人脸识别综合应用与实践</a><p>配套资料：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1rp9J-1fGGqFxSxNboXPImQ\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1rp9J-1</span><span class=\"invisible\">fGGqFxSxNboXPImQ</span><span class=\"ellipsis\"></span></a> 提取码：z74h </p><p>本次课程通过讲解人脸识别，人脸关键点检测等常用方法及实现原理使大家对整个人脸工程有更深刻的认识，同时会结合企业业务中的实践平台及架构来手动实践完成人脸识别，特征选取，AI化妆等常见应用，并从中了解项目开发的一系列流程。</p><h2>用人工智能玩转“和平精英”--我“吃鸡”，我快乐</h2><p>完整视频：</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/458.html%3F2005stt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">用人工智能玩转“和平精英”--我“吃鸡”，我快乐</a><p>配套资料：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1On3YP_f7shwTq34hNSyX0g\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1On3YP_</span><span class=\"invisible\">f7shwTq34hNSyX0g</span><span class=\"ellipsis\"></span></a> 提取码：8na0 </p><h2>Python搭建聊天机器人平台实战</h2><p>完整视频：</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/450.html%3F2005stt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python搭建聊天机器人平台实战</a><p>配套资料：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/11hUdZjrmjI91vk-hF61uug\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/11hUdZj</span><span class=\"invisible\">rmjI91vk-hF61uug</span><span class=\"ellipsis\"></span></a>  提取码：quha </p><p>即时通讯是基于互联网的即时交流消息的业务，在互联网企业开发中，有非常广泛的应用。比如社交类应用，A用户关注了B用户，B用户在不主动查询的情况下，应该即时收到A的关注信息。或者是服务类应用中的客服系统的聊天机器人。这些都是即时通讯的应用场景</p><h2>2小时利用Python实现一个聊天器</h2><p>完整视频：</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/343.html%3F2005zzp\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【Python】2小时利用Python实现一个聊天器</a><p>配套资料：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1AIiWE2USAFJ4dz8A5IOUMg\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1AIiWE2</span><span class=\"invisible\">USAFJ4dz8A5IOUMg</span><span class=\"ellipsis\"></span></a>  提取码：4es5 </p><h2>Django搭建垃圾分类论坛</h2><p>完整视频：</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/443.html%3F2005stt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Django搭建垃圾分类论坛</a><p>配套资料：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1s5YGiVFbUnJDWw3sUq8OJA\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1s5YGiV</span><span class=\"invisible\">FbUnJDWw3sUq8OJA</span><span class=\"ellipsis\"></span></a> 提取码：35k4 </p><p>课程将以一个垃圾分类论坛网站为例，带领大家快速入门Django框架</p><h2>手把手教你用卷积神经网络做垃圾分类</h2><p>完整视频：</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/434.html%3F2005stt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">手把手教你用卷积神经网络做垃圾分类</a><p>配套资料：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1gKq8g1Z0dRZEF0FiVuE_tQ\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1gKq8g1</span><span class=\"invisible\">Z0dRZEF0FiVuE_tQ</span><span class=\"ellipsis\"></span></a> 提取码：v12g </p><p>Python从零基础到大牛项目实战：抓取景点评论数量实现旅游景点推荐</p><p>完整视频：</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/361.html%3F2005stt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python从零基础到大牛项目实战：抓取景点评论数量实现旅游景点推荐</a><p>配套资料：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1FcO28DBQIrFqZ1_dTyRitw\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1FcO28D</span><span class=\"invisible\">BQIrFqZ1_dTyRitw</span><span class=\"ellipsis\"></span></a>  提取码：yem6 </p><p>Python江湖----带你领略Python的魅力</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/353.html\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python江湖----带你领略Python的魅力</a><p>Python之微信开发神器</p><p>完整视频：</p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/76.html%3F2005stt\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-c44f92ccf97decb4ca8616effee5b391_l.jpg?source=54b3c3a5\" data-image-width=\"150\" data-image-height=\"150\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python之微信开发神器</a><p>配套资料：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1ggGALDT\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1ggGALD</span><span class=\"invisible\">T</span><span class=\"ellipsis\"></span></a> 密码：t53u</p>", "如何在业余时学数据分析？": "<p>反对高票答案。</p><p><br></p><p>一上来便是各种教程，二话不说给出一批书单，各种数据处理的方式，讲怎么样用Python挖掘数据，怎么用R进行数据可视化，讲AB测试。</p><p>他们给的教程都很好，数据处理的方式也很有借鉴意义。</p><p>且不说，有多少人是光收藏，而不去认真学习的，就算是认真去学习的，他们也会遇到这样的问题</p><p>为什么这么用，为什么这么做。</p><p>比如，前两天在我的这个回答中，<a href=\"https://www.zhihu.com/question/47883186/answer/151959866\" class=\"internal\">零基础如何学爬虫技术？ - 知乎</a></p><p>有很多人都有这样的评论</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-dd84a0f7f38cc51ad22aa8fcf131bc19_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"210\" class=\"origin_image zh-lightbox-thumb\" width=\"1352\" data-original=\"https://pic4.zhimg.com/v2-dd84a0f7f38cc51ad22aa8fcf131bc19_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1352'%20height='210'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"210\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1352\" data-original=\"https://pic4.zhimg.com/v2-dd84a0f7f38cc51ad22aa8fcf131bc19_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-dd84a0f7f38cc51ad22aa8fcf131bc19_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-9be1dc340045bb3698004b2d3e874eb2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1334\" data-rawheight=\"210\" class=\"origin_image zh-lightbox-thumb\" width=\"1334\" data-original=\"https://pic2.zhimg.com/v2-9be1dc340045bb3698004b2d3e874eb2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1334'%20height='210'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1334\" data-rawheight=\"210\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1334\" data-original=\"https://pic2.zhimg.com/v2-9be1dc340045bb3698004b2d3e874eb2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-9be1dc340045bb3698004b2d3e874eb2_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-9cd932f8f3047ee6e80d0b521c331c97_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"240\" class=\"origin_image zh-lightbox-thumb\" width=\"1352\" data-original=\"https://pic1.zhimg.com/v2-9cd932f8f3047ee6e80d0b521c331c97_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1352'%20height='240'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1352\" data-rawheight=\"240\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1352\" data-original=\"https://pic1.zhimg.com/v2-9cd932f8f3047ee6e80d0b521c331c97_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-9cd932f8f3047ee6e80d0b521c331c97_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e1e14ef41ed11863f0694d1007397a0d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1326\" data-rawheight=\"230\" class=\"origin_image zh-lightbox-thumb\" width=\"1326\" data-original=\"https://pic2.zhimg.com/v2-e1e14ef41ed11863f0694d1007397a0d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1326'%20height='230'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1326\" data-rawheight=\"230\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1326\" data-original=\"https://pic2.zhimg.com/v2-e1e14ef41ed11863f0694d1007397a0d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e1e14ef41ed11863f0694d1007397a0d_720w.jpg?source=54b3c3a5\"></figure><p>一开始我是无语，后来想了想，这应该是一个普遍问题</p><p><br></p><p>这就是数据分析中最大问题，很多人学习数据分析，更多的是为了数据分析而数据分析，实际上根本不知道自己在做什么，为什么这么做。</p><p>或者仅仅是为了在简历上增加一行</p><blockquote>鄙人精通数据分析。</blockquote><p>估计HR看了是要微笑着，然后把简历放入不予录用的文件夹中。</p><p><br></p><p>数据分析，不论使用什么样的工具，使用什么样的方法，不论是Excel，还是Python，还是MySQL，都是工具，目的只有一个——</p><p><b>解决一个问题，或者给一个决策提供依据。</b></p><p>所以，学习数据分析的第一步，是要考虑，我要用数据，解决一个什么样的问题？</p><p>这点如果没有考虑清楚，只是跟着网上的教程学习爬虫，学习数据清洗，然后把那些公有的统计数据做成绚烂的图表，又有什么用呢？</p><p><br></p><blockquote>这里我给大家推荐一个「腾讯教育」联合出品的免费的商业数据分析入门训练营。这里不仅仅只是学习数据分析，更是通过5天的学习，让你接触真正的数据分析思维与方法，体验用数据分析解决真实的商业问题。体验之后你就知道数据分析是怎么在商业中运用。<br>点击下面的链接就可以免费获得~</blockquote><a href=\"https://xg.zhihu.com/plugin/a001fb960105aafcaa7ded8a005565e1?BIZ=ECOMMERCE\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">知乎营销平台</a><h2>1.哪里开店</h2><p>比如，有这样一个现实的例子，你表嫂跟你说，小明啊，你最喜欢吃我煮的麻辣烫了，我想开麻辣烫店，就在大学城附近，你说哪里好呢？</p><p>你是不是会想到以下几个问题呢?</p><p>表嫂的麻辣烫真好吃，想想就流下了口水</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-2c78ffbf0db057f4b7f2cbf13ae2105d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"388\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-2c78ffbf0db057f4b7f2cbf13ae2105d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='388'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"388\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-2c78ffbf0db057f4b7f2cbf13ae2105d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-2c78ffbf0db057f4b7f2cbf13ae2105d_720w.jpg?source=54b3c3a5\"></figure><p>咳咳，正事要紧，到底应该在哪里开店呢？</p><p>所以，你有考虑到了这些可以量化的数据并且对应的你找到了这些数据的获取方式</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-8c4bb5fa68b8097a606e3ab8522f43e5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1736\" data-rawheight=\"512\" class=\"origin_image zh-lightbox-thumb\" width=\"1736\" data-original=\"https://pic1.zhimg.com/v2-8c4bb5fa68b8097a606e3ab8522f43e5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1736'%20height='512'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1736\" data-rawheight=\"512\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1736\" data-original=\"https://pic1.zhimg.com/v2-8c4bb5fa68b8097a606e3ab8522f43e5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-8c4bb5fa68b8097a606e3ab8522f43e5_720w.jpg?source=54b3c3a5\"></figure><p>问题来了，虽然写出来了大致的数据获取方式，但是具体怎么操作？</p><ul><li>招生计划怎么获得，学校官网还是相关报道？</li><li>如何通过在线地图分析学校面积及相关建筑分布的合理性，最小路径还是顺路路径？</li><li>如何获学校食堂评价，爬取微博数据，获得地理位置，并且对提及“食堂”的微博进行词义褒贬分析？或者直接拦路问询？</li><li>人流量怎么获得，实地考察的时候，用本子画正字吗？</li></ul><p><br></p><p>很好，这些问题你都想到了相应的解决方式，并且很顺利的获得这些数据，尽管有可能不太准确，但是你确确实实比以前更加了解了大学城附近大致的餐饮市场环境，不是么？</p><p>这也就是，</p><p><b>数据分析必须紧贴业务本身</b></p><p>获得数据之后，如何分析，人流量/商贩个数？但是每个商贩的服务能力又不一样，是不是得加权，如何加权？</p><p>于是你考虑了很多情况，写下来一个公式：</p><p>建议推荐开店系数=（人流量*XX/(YY*0.4)+租金*0.5）/ZZ</p><p>根据系数，你得出一个结论，建议开店的位置的前三家分别是</p><ul><li>A大东门</li><li>A大小西门</li><li>B大女生宿舍小南门</li></ul><p>你表嫂想了下，说，我知道你最喜欢B大的小姑娘们，胸大貌美腿子长。</p><p>于是麻辣烫店就开在了B大女生宿舍的小南门。</p><p><br></p><p>这个过程中，你有可能学会的或者仅仅了解（不一定掌握）数据分析的相关技能包括不限于以下：</p><ul><li><b>Excel加减乘除，基础函数；</b></li><li><b>爬虫的基本原理，及操作方式；</b></li><li><b>正则表达式与数据清洗；</b></li><li><b>语义分析的一般实现方式；</b></li><li><b>在线地图API可以获取的数据有哪些；</b></li></ul><p><br></p><h2>2.优化数据的应用</h2><p><br></p><p>一阵时间的忙碌，店终于开起来了，你表嫂的手艺真的很不错，每天都有很多小姑娘过来吃麻辣烫，中午晚上的时候，都忙不过来。</p><p>你表嫂感觉很可惜，很多客户就这样被浪费掉了：我多卖一份，少卖一份都无所谓，但是小姑娘本来想吃咱们家的麻辣烫，结果爬不上队饿着肚子走掉了，到别家说不定还要等，看见我都觉得挺过意不去的。</p><p>这时候聪明的你，有可能想到了通过获取以下数据，并且进行相关的分析来优化当前这个问题</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-6fa11bced9d33416fe0209f1a6d3b09c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1254\" data-rawheight=\"534\" class=\"origin_image zh-lightbox-thumb\" width=\"1254\" data-original=\"https://pic1.zhimg.com/v2-6fa11bced9d33416fe0209f1a6d3b09c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1254'%20height='534'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1254\" data-rawheight=\"534\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1254\" data-original=\"https://pic1.zhimg.com/v2-6fa11bced9d33416fe0209f1a6d3b09c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-6fa11bced9d33416fe0209f1a6d3b09c_720w.jpg?source=54b3c3a5\"></figure><p>你连续跟踪了三天这样的数据，运用了相关的统计学的相关知识</p><p>等待时间&gt;=13分钟的时候，用户放弃继续等待的概率是78%！，然后你表嫂并不能理解，这78%到底是什么意思</p><p>所以你画了一张图，说山峰越高，走的人就越多。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-b88c2078505af861b390318db487a1b3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1156\" data-rawheight=\"834\" class=\"origin_image zh-lightbox-thumb\" width=\"1156\" data-original=\"https://pic1.zhimg.com/v2-b88c2078505af861b390318db487a1b3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1156'%20height='834'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1156\" data-rawheight=\"834\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1156\" data-original=\"https://pic1.zhimg.com/v2-b88c2078505af861b390318db487a1b3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-b88c2078505af861b390318db487a1b3_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>问题找到了，只要将最长等待时间优化到13分钟之内，用户放弃等待的几率有可能下降。</p><p>这时候聪明的你，想到了如下的解决方式：</p><ul><li>用户抵店之后，才开始点餐，然后烹饪，是不是可以通过互联网的方式进行预点餐呢，所以你给表嫂申请了一个微信号，日经贴就是：“今天你想吃什么”，回复留言及预计到店时间，即可预订。</li><li>你发现，用户选完菜之后总是喜欢把菜夹放到最远的地方，每次表嫂都需要把菜夹整理一次，拿到开始的地方。你考虑了一下，将菜筐的布局进行更改，刚好菜夹能够完成一次循环；或者你使用专菜专夹的方式。</li><li>优化了店内桌椅布局，行走了最短的距离到达全店</li><li>……</li></ul><p><b>数据分析必须落地才是有效的，不是提交统计结果，而且获得统计结论</b></p><p><br></p><p>这个过程中，你有可能学会的或者仅仅了解（不一定掌握）数据分析的相关技能包括不限于以下：</p><ul><li><b>数据清洗的一般方式，时间函数计算</b></li><li><b>统计学中分布的相关知识，这里应该是泊松分布</b></li><li><b>数据可视化，包括不限于Excel 图表，js图表库，或者在线图表工具</b></li></ul><p><br></p><h2>3.大数据的处理</h2><p>生意越做越大，扩充了店面之后，又开了分店，这时候你表嫂已经不亲自上一线熬煮麻辣烫了，但是又不放心那些雇来的人是否认真的在服务，于是制定了相应的店规，动不动还来一个突击检查。感觉比以前还要累了。</p><p>这时候，聪明的你，看在眼里，疼在心里，所以，你建议嫂嫂购买专业的餐饮管理软件，来获得相应的店铺运营数据。</p><p>在餐饮软件的后台，会有这么些个大致的运营数据，</p><p>当前订单量，成交量，客流量，客单价，等等等等，一切看起来那么完美。</p><p><br></p><p>等等，不对，为什么这个月以来，C分店的客单价总是这么低呢？事出有异，必定有妖！</p><p>还好，这个系统功能还算完善，能够导出一天所有的订单明细，包含以下字段，</p><p>下单时间，下单菜品，下单客户，联系电话，消费金额，配餐人，操作人，收银员，等等等</p><p><br></p><p>但是，你还是快掀桌子了，一个月，让我导出30次数据，然后在合并么？这个方法简直太土鳖了</p><p>你想着，要是能直接读取数据库不就好了么？一看产品介绍，数据库使用MySQL，于是你Google了一下，SQL入门，你发现，WHERE 和SELECT 基本上都满足你的需求了</p><p>很顺利的，你把这些数据导出了。</p><p>你把这个20W条记录的CSV用Excel打开，风扇疯狂的转了起来，不一会，你表嫂孱弱的笔记本就卡死了。</p><p>你感叹，Excel分析小一点的数据还行，数据量稍微大点，就显得力不从心。所以，你拿起了一本书，名字叫《21天学习Python，从入门到放弃》，这不坑爹呢吗？</p><p><br></p><p>你想着，反正我是为了处理这批很大的数据，没必要全部了解Python的功能，只需要找到相关的操作方法就好了。</p><p><br></p><p>你在Google上分别搜索了以下关键字</p><ul><li>Python mysql</li><li>Python 数据分析库</li></ul><p><br></p><p>你还找到了一本，用Python进行数据分析的pdf，感觉这本书写的通俗易懂，而且还有元数据示例。</p><p>在搜索的过程中，你发现了有好多数据分析是代码示例，有<b>的甚至，只需要改一下文件路径，搬过来就能用。</b></p><p>你会感叹，原来，写程序也是Ctrl+C,Ctrl+V啊</p><p><br></p><p>这个过程中，你有可能学会的或者仅仅了解（不一定掌握）数据分析的相关技能包括不限于以下：</p><ul><li><b>SQL基础语句</b></li><li><b>Python常见的数据分析库</b></li><li><b>Python数据可视化</b></li></ul><p>聪明的你，捣鼓了三两天，就发现了问题的所在？</p><p><br></p><p>那么问题究竟在哪呢</p><p>我实在是写不动了，明天再更</p><p><br></p><h2>相关Live</h2><p>* <a href=\"https://www.zhihu.com/lives/835892896728244224\" class=\"internal\">培养数据分析的思维方式</a></p><p><br></p><h2>相关回答</h2><p>* <a href=\"https://www.zhihu.com/question/19851900/answer/153031039\" class=\"internal\">怎么培养数据分析的能力？ - 知乎</a></p><p>* <a href=\"https://www.zhihu.com/question/22119753/answer/152679250\" class=\"internal\">业余时间如何学数据分析？ - 知乎</a></p><p>* <a href=\"https://www.zhihu.com/question/47883186/answer/151959866\" class=\"internal\">零基础如何学爬虫技术？ - 知乎</a></p><p>* <a href=\"https://www.zhihu.com/question/55768263/answer/148334879\" class=\"internal\">如何用一个循环语句输出九九乘法表？ - 知乎</a></p><p>* <a href=\"https://www.zhihu.com/question/26619945/answer/131423397\" class=\"internal\">Excel 有什么神奇用途？ - 知乎</a></p><p></p><p></p>", "哪些 Python 库让你相见恨晚？": "<p>最近程沉迷于github，无法自拔，看到各种各样新奇又实用的第三方库。网络上有很多python库的排名、汇总，但总觉得不够具体生动。</p><p>我希望能在这里<b>持续更新</b>我喜欢的第三方库，力求详实丰富。</p><p>专栏里收集了github上更多有趣的python项目，喜欢就关注下哦！</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://zhuanlan.zhihu.com/pydatalysis\" data-image=\"https://pic4.zhimg.com/v2-391e7449804b1be895888cfbfa0f4101_l.jpg?source=54b3c3a5\" data-image-width=\"1024\" data-image-height=\"1024\" class=\"internal\">Python大数据分析</a><hr><h2>介绍的大体流程是：<b>库名、类型、github star、功能、使用方法、案例、学习资料。</b></h2><h2>第一部分：数据可视化</h2><h2><b>pyecharts </b></h2><p><b>类型：</b>可视化图表设计</p><p><b> GitHub Star ：</b>5985</p><p><b>功能：</b></p><ol><li>简洁的 API 设计，使用如丝滑般流畅，支持链式调用</li><li>囊括了 30+ 种常见图表，应有尽有</li><li>支持主流 Notebook 环境，Jupyter Notebook 和 JupyterLab</li><li>可轻松集成至 Flask，Django 等主流 Web 框架</li><li>高度灵活的配置项，可轻松搭配出精美的图表</li><li>详细的文档和示例，帮助开发者更快的上手项目</li><li>多达 400+ 地图文件以及原生的百度地图，为地理数据可视化提供强有力的支持</li></ol><p><b>使用方法：</b></p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"kn\">from</span> <span class=\"nn\">pyecharts.charts</span> <span class=\"k\">import</span> <span class=\"n\">Bar</span>\n\n<span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">Bar</span><span class=\"p\">()</span>\n<span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">add_xaxis</span><span class=\"p\">([</span><span class=\"s2\">\"衬衫\"</span><span class=\"p\">,</span> <span class=\"s2\">\"羊毛衫\"</span><span class=\"p\">,</span> <span class=\"s2\">\"雪纺衫\"</span><span class=\"p\">,</span> <span class=\"s2\">\"裤子\"</span><span class=\"p\">,</span> <span class=\"s2\">\"高跟鞋\"</span><span class=\"p\">,</span> <span class=\"s2\">\"袜子\"</span><span class=\"p\">])</span>\n<span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">add_yaxis</span><span class=\"p\">(</span><span class=\"s2\">\"商家A\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">])</span>\n<span class=\"c1\"># render 会生成本地 HTML 文件，默认会在当前目录生成 render.html 文件</span>\n<span class=\"c1\"># 也可以传入路径参数，如 bar.render(\"mycharts.html\")</span>\n<span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">()</span>\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a1823eaaa7e33f4b5e28e167538a9cef_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1067\" data-rawheight=\"636\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1c92c5c5c07ea28d97b1ddcc587768b7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1067\" data-original=\"https://pic4.zhimg.com/v2-a1823eaaa7e33f4b5e28e167538a9cef_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1067'%20height='636'&gt;&lt;/svg&gt;\" data-rawwidth=\"1067\" data-rawheight=\"636\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1c92c5c5c07ea28d97b1ddcc587768b7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1067\" data-original=\"https://pic4.zhimg.com/v2-a1823eaaa7e33f4b5e28e167538a9cef_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a1823eaaa7e33f4b5e28e167538a9cef_720w.jpg?source=54b3c3a5\"></figure><p><b>案例：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a4cfe8eed4c59c71d6ecf507b5664575_720w.jpg?source=54b3c3a5\" data-rawwidth=\"802\" data-rawheight=\"502\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7d5f21f4e9e0529b5a2e536919611649_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"802\" data-original=\"https://pic1.zhimg.com/v2-a4cfe8eed4c59c71d6ecf507b5664575_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='802'%20height='502'&gt;&lt;/svg&gt;\" data-rawwidth=\"802\" data-rawheight=\"502\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7d5f21f4e9e0529b5a2e536919611649_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"802\" data-original=\"https://pic1.zhimg.com/v2-a4cfe8eed4c59c71d6ecf507b5664575_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a4cfe8eed4c59c71d6ecf507b5664575_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-efefe9f0c3772171d77440afb4b1f8b0_720w.jpg?source=54b3c3a5\" data-rawwidth=\"802\" data-rawheight=\"602\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c37fd738ac7a851477cf0cdce6b7b22e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"802\" data-original=\"https://pic1.zhimg.com/v2-efefe9f0c3772171d77440afb4b1f8b0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='802'%20height='602'&gt;&lt;/svg&gt;\" data-rawwidth=\"802\" data-rawheight=\"602\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c37fd738ac7a851477cf0cdce6b7b22e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"802\" data-original=\"https://pic1.zhimg.com/v2-efefe9f0c3772171d77440afb4b1f8b0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-efefe9f0c3772171d77440afb4b1f8b0_720w.jpg?source=54b3c3a5\"></figure><p><b>学习资料：</b></p><p><a href=\"https://link.zhihu.com/?target=https%3A//pyecharts.org/%23/zh-cn/3d_charts\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">A Python Echarts Plotting Library</a> </p><h2><b>Superset </b></h2><p><b>类型：</b>开源的 企业级 轻量BI工具 </p><p><b> GitHub star ：</b>24937</p><p><b>功能：</b></p><ol><li>创建和分享可视化面板</li><li>有丰富的可视化方法来分析数据，且具有灵活的扩展能力</li><li>具有可扩展的、高粒度的安全模型，可以用复杂规则来控制访问权限。目前支持主要的认证提供商：DB、OpenID、LDAP、OAuth、和Flask AppBuiler的REMOTE_USER</li><li>使用简单的语法，就可以控制数据在UI中的展现方式</li><li>与Druid深度结合，可快速的分析大数据</li><li>配置缓存来快速加载仪表盘</li><li>Superset最初是在<a href=\"https://link.zhihu.com/?target=http%3A//Druid.io\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">Druid.io</span><span class=\"invisible\"></span></a>的基础上设计的，但是通过使用SQLAlchemy（一种与大多数常见数据库兼容的Python ORM），迅速扩展了范围以支持其他数据库。</li></ol><p><b>使用方法：</b></p><p>安装好后，启动浏览器端，添加数据源，搭建可视化面板，分享，导出</p><p>1、安装：<a href=\"https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/a6fe79d0b1b3\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">教程1</a>、<a href=\"https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/0f1580a4f208\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">教程2</a> </p><p>2、使用：<a href=\"https://link.zhihu.com/?target=http%3A//superset.apache.org/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">官方教程</a>、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/apache/incubator-superset\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">github</a>、<a href=\"https://link.zhihu.com/?target=https%3A//blog.csdn.net/folecld123/article/details/80705616\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">简单使用教程</a></p><p><b>案例：</b></p><p>查看仪表板</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-a2aafa4603e6e983bda9d0c6c7d7eee3_720w.jpg?source=54b3c3a5\" data-rawwidth=\"3170\" data-rawheight=\"3950\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-ed1de3d1bcaff8f893097e220d92500c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"3170\" data-original=\"https://pic1.zhimg.com/v2-a2aafa4603e6e983bda9d0c6c7d7eee3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='3170'%20height='3950'&gt;&lt;/svg&gt;\" data-rawwidth=\"3170\" data-rawheight=\"3950\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-ed1de3d1bcaff8f893097e220d92500c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"3170\" data-original=\"https://pic1.zhimg.com/v2-a2aafa4603e6e983bda9d0c6c7d7eee3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-a2aafa4603e6e983bda9d0c6c7d7eee3_720w.jpg?source=54b3c3a5\"></figure><p>数据切片和切块</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-2c2bf31eea392df27621280a252e3320_720w.jpg?source=54b3c3a5\" data-rawwidth=\"3100\" data-rawheight=\"1586\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-ed8cba3adc5f03b6563caeb8017ba0d8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"3100\" data-original=\"https://pic1.zhimg.com/v2-2c2bf31eea392df27621280a252e3320_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='3100'%20height='1586'&gt;&lt;/svg&gt;\" data-rawwidth=\"3100\" data-rawheight=\"1586\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-ed8cba3adc5f03b6563caeb8017ba0d8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"3100\" data-original=\"https://pic1.zhimg.com/v2-2c2bf31eea392df27621280a252e3320_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-2c2bf31eea392df27621280a252e3320_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>使用SQL Lab查询和可视化数据</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-c8c965bf24b2bbcb74b54a9f4c37a234_720w.jpg?source=54b3c3a5\" data-rawwidth=\"3102\" data-rawheight=\"1586\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-6e212f9f63e225610775dac4230dc43e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"3102\" data-original=\"https://pic1.zhimg.com/v2-c8c965bf24b2bbcb74b54a9f4c37a234_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='3102'%20height='1586'&gt;&lt;/svg&gt;\" data-rawwidth=\"3102\" data-rawheight=\"1586\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-6e212f9f63e225610775dac4230dc43e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"3102\" data-original=\"https://pic1.zhimg.com/v2-c8c965bf24b2bbcb74b54a9f4c37a234_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-c8c965bf24b2bbcb74b54a9f4c37a234_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>可视化地理空间数据</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-8a21eb5effec7b91711f3eb0d69b3f98_720w.jpg?source=54b3c3a5\" data-rawwidth=\"3038\" data-rawheight=\"4096\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-037513b0f339675ed5c938d626ef7fb1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"3038\" data-original=\"https://pic1.zhimg.com/v2-8a21eb5effec7b91711f3eb0d69b3f98_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='3038'%20height='4096'&gt;&lt;/svg&gt;\" data-rawwidth=\"3038\" data-rawheight=\"4096\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-037513b0f339675ed5c938d626ef7fb1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"3038\" data-original=\"https://pic1.zhimg.com/v2-8a21eb5effec7b91711f3eb0d69b3f98_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-8a21eb5effec7b91711f3eb0d69b3f98_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>从各种可视化中进行选择</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-5eaaa28c1ba5e2dc94536bc8e44b4891_720w.jpg?source=54b3c3a5\" data-rawwidth=\"2802\" data-rawheight=\"1878\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-a23c15878554090be57bcaffa878d242_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2802\" data-original=\"https://pic1.zhimg.com/v2-5eaaa28c1ba5e2dc94536bc8e44b4891_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2802'%20height='1878'&gt;&lt;/svg&gt;\" data-rawwidth=\"2802\" data-rawheight=\"1878\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-a23c15878554090be57bcaffa878d242_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2802\" data-original=\"https://pic1.zhimg.com/v2-5eaaa28c1ba5e2dc94536bc8e44b4891_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-5eaaa28c1ba5e2dc94536bc8e44b4891_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>学习资源：</b><a href=\"https://link.zhihu.com/?target=http%3A//superset.apache.org/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">官方文档</a> </p><h2><b>plotly</b></h2><p><b>类型：</b>非常著名且强大的交互式开源数据可视化框架</p><p><b>GitHub star ：</b>5235</p><p><b>功能：</b></p><ol><li>交互式开源可视化框架，支持超过40种独特图表类型，涵盖统计、财务、地理、学术、三维等。</li><li>建立在Javascript plotly库基础上，能使python用户创建基于web的可交互的可视化作品，其能在jupyter notebook上展示，而且可以导出为HTML。</li><li>plotly还可以在非web编辑器上（如pycharm、spyder）绘制图表</li><li>能导出出版级别的图片</li></ol><p><b>使用方法：</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>import plotly.express as px\niris = px.data.iris()\nfig = px.scatter(iris, x=\"sepal_width\", y=\"sepal_length\")\nfig.show()\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-4cc894d29c23ef9fed1ba1ba9bfc4c19_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1250\" data-rawheight=\"660\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-e9483b459b673af232aff366f1364eb5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1250\" data-original=\"https://pic1.zhimg.com/v2-4cc894d29c23ef9fed1ba1ba9bfc4c19_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1250'%20height='660'&gt;&lt;/svg&gt;\" data-rawwidth=\"1250\" data-rawheight=\"660\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-e9483b459b673af232aff366f1364eb5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1250\" data-original=\"https://pic1.zhimg.com/v2-4cc894d29c23ef9fed1ba1ba9bfc4c19_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-4cc894d29c23ef9fed1ba1ba9bfc4c19_720w.jpg?source=54b3c3a5\"></figure><p><b>案例：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-464707893b6d9ad7d3f04e0ab201cb67_720w.jpg?source=54b3c3a5\" data-rawwidth=\"700\" data-rawheight=\"600\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7f047171c8c5ba35ea41dfb2892f88be_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"700\" data-original=\"https://pic2.zhimg.com/v2-464707893b6d9ad7d3f04e0ab201cb67_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='700'%20height='600'&gt;&lt;/svg&gt;\" data-rawwidth=\"700\" data-rawheight=\"600\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7f047171c8c5ba35ea41dfb2892f88be_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"700\" data-original=\"https://pic2.zhimg.com/v2-464707893b6d9ad7d3f04e0ab201cb67_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-464707893b6d9ad7d3f04e0ab201cb67_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-3c02236e8793e6e341be57d4a04940e9_720w.jpg?source=54b3c3a5\" data-rawwidth=\"700\" data-rawheight=\"450\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-931874548cbb613d711f3ef54f416ea0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"700\" data-original=\"https://pic2.zhimg.com/v2-3c02236e8793e6e341be57d4a04940e9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='700'%20height='450'&gt;&lt;/svg&gt;\" data-rawwidth=\"700\" data-rawheight=\"450\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-931874548cbb613d711f3ef54f416ea0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"700\" data-original=\"https://pic2.zhimg.com/v2-3c02236e8793e6e341be57d4a04940e9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-3c02236e8793e6e341be57d4a04940e9_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-8f176285240e46157735781be4906de1_720w.jpg?source=54b3c3a5\" data-rawwidth=\"900\" data-rawheight=\"450\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-12c4cbc99d85066e1ecf9f07ffb80e14_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"900\" data-original=\"https://pic4.zhimg.com/v2-8f176285240e46157735781be4906de1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='900'%20height='450'&gt;&lt;/svg&gt;\" data-rawwidth=\"900\" data-rawheight=\"450\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-12c4cbc99d85066e1ecf9f07ffb80e14_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"900\" data-original=\"https://pic4.zhimg.com/v2-8f176285240e46157735781be4906de1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-8f176285240e46157735781be4906de1_720w.jpg?source=54b3c3a5\"></figure><p><b>学习资源：</b><a href=\"https://link.zhihu.com/?target=https%3A//plot.ly/python/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">官方文档</a> </p><h2>Bokeh</h2><p><b>类型：服务于浏览器的炫酷的交互式可视化库</b></p><p><b>GitHub star ：</b>11061</p><p><b>功能：</b></p><ul><li>专门针对Web浏览器的交互式、可视化Python绘图库</li><li>提供优雅简洁的多功能可视化展示，能快速创建图表、仪表板和可视化应用</li><li>可以做出像D3.js简洁漂亮的交互可视化效果，但是使用难度低于D3.js。</li><li>独立的HTML文档或服务端程序</li><li>可以处理大量、动态或数据流</li><li>支持Python (或Scala, R, Julia…)</li><li>不需要使用Javascript</li></ul><p><b>使用方法：</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>from bokeh.plotting import figure, output_file, show\n# 创建图表\np = figure(plot_width=300, plot_height=300, tools=\"pan,reset,save\")\n# 图表中添加圆\np.circle([1, 2.5, 3, 2], [2, 3, 1, 1.5], radius=0.3, alpha=0.5)\n# 定义输出形式\noutput_file(\"foo.html\")\n# 展示图表\nshow(p)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f90cda173a2ba67f2417ddee66b732ac_720w.jpg?source=54b3c3a5\" data-rawwidth=\"341\" data-rawheight=\"329\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-2ed1ffb151a987c2bdf84e74e788c353_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"341\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='341'%20height='329'&gt;&lt;/svg&gt;\" data-rawwidth=\"341\" data-rawheight=\"329\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-2ed1ffb151a987c2bdf84e74e788c353_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"341\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f90cda173a2ba67f2417ddee66b732ac_720w.jpg?source=54b3c3a5\"></figure><p><b>案例：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-be371d2295a57a942a9ec33429b3d194_720w.jpg?source=54b3c3a5\" data-rawwidth=\"862\" data-rawheight=\"828\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-51d7b001ee3c6cdd3618d48d9cfe4bd9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"862\" data-original=\"https://pic2.zhimg.com/v2-be371d2295a57a942a9ec33429b3d194_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='862'%20height='828'&gt;&lt;/svg&gt;\" data-rawwidth=\"862\" data-rawheight=\"828\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-51d7b001ee3c6cdd3618d48d9cfe4bd9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"862\" data-original=\"https://pic2.zhimg.com/v2-be371d2295a57a942a9ec33429b3d194_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-be371d2295a57a942a9ec33429b3d194_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-ad99e73424d7f9b555f96fb1a1d5bdbf_720w.gif?source=54b3c3a5\" data-rawwidth=\"857\" data-rawheight=\"496\" data-size=\"normal\" data-caption=\"\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-ad99e73424d7f9b555f96fb1a1d5bdbf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"857\" data-original=\"https://pic4.zhimg.com/v2-ad99e73424d7f9b555f96fb1a1d5bdbf_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='857'%20height='496'&gt;&lt;/svg&gt;\" data-rawwidth=\"857\" data-rawheight=\"496\" data-size=\"normal\" data-caption=\"\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-ad99e73424d7f9b555f96fb1a1d5bdbf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"857\" data-original=\"https://pic4.zhimg.com/v2-ad99e73424d7f9b555f96fb1a1d5bdbf_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-ad99e73424d7f9b555f96fb1a1d5bdbf_720w.gif?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-5f61dc81bf8cd3b1778b6e88a7e6b8db_720w.jpg?source=54b3c3a5\" data-rawwidth=\"866\" data-rawheight=\"819\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-71d0f6cb21be1f18358189b94c5066be_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"866\" data-original=\"https://pic2.zhimg.com/v2-5f61dc81bf8cd3b1778b6e88a7e6b8db_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='866'%20height='819'&gt;&lt;/svg&gt;\" data-rawwidth=\"866\" data-rawheight=\"819\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-71d0f6cb21be1f18358189b94c5066be_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"866\" data-original=\"https://pic2.zhimg.com/v2-5f61dc81bf8cd3b1778b6e88a7e6b8db_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-5f61dc81bf8cd3b1778b6e88a7e6b8db_720w.jpg?source=54b3c3a5\"></figure><p><b>学习资源：</b>官方文档</p><blockquote><b>未完待续！欢迎点赞收藏转发，谢谢</b></blockquote><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p></p>", "你都用 Python 来做什么？": "<p><b>多图，请确保在Wi-Fi环境下点开！</b></p><p>主要是爬取数据，并把爬回来的数据进行分析和挖掘，做过的小项目主要有：</p><ol><li><b>扒了扒蔡徐坤100万+微博转发中，假流量占了多少的比例</b></li></ol><p>随机抓取蔡徐坤100万+转发的微博《再见，“任性的”千千…》的10万条转发数据，并且分析蔡徐坤真假转发流量的比例以及真假粉丝的用户画像。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-27bffe2e26022f97ce917a9f2a4e15ab_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-fff8d1dc04afb245eff68abccc4f0e10_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-27bffe2e26022f97ce917a9f2a4e15ab_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-fff8d1dc04afb245eff68abccc4f0e10_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-27bffe2e26022f97ce917a9f2a4e15ab_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-27bffe2e26022f97ce917a9f2a4e15ab_720w.jpg?source=54b3c3a5\"></figure><p>发现<b>102313条转发数据中，有95397条是由假粉丝转发的，占了总转发的93.24%</b>，只有6916条是由真粉丝转发的，占6.76%。6916条数据中，除去重复转发的粉丝，真实粉丝数量只剩下3926个。也就是说，<b>真实转发的粉丝数量，占总转发量的3.84%。</b></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-59e9ae2c2604e5b246412f4baea056f1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-2d3dc75a5b73c54a6ad71591ca4d31ae_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-59e9ae2c2604e5b246412f4baea056f1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-2d3dc75a5b73c54a6ad71591ca4d31ae_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-59e9ae2c2604e5b246412f4baea056f1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-59e9ae2c2604e5b246412f4baea056f1_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>与之相比，吴青峰10006条转发数据中，<b>只有很少比例的假粉丝量，绝大部分都是真粉丝转发的。</b>在9658条真粉丝转发数据中，<b>真粉丝量也高达9318，</b>说明不存在粉丝打榜的情况。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-821c5edf51375279f1f2d35b43656693_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"792\" data-rawheight=\"336\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-370c816dd577bc7440e1cf28749ba267_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"792\" data-original=\"https://pic1.zhimg.com/v2-821c5edf51375279f1f2d35b43656693_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='792'%20height='336'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"792\" data-rawheight=\"336\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-370c816dd577bc7440e1cf28749ba267_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"792\" data-original=\"https://pic1.zhimg.com/v2-821c5edf51375279f1f2d35b43656693_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-821c5edf51375279f1f2d35b43656693_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>另外还有一些有趣的发现：<b>假粉丝的平均关注是3.44，平均粉丝数是1.04，没有简介，昵称基本上都是“中文+英文和数字”这个格式，很多假粉丝的昵称都带有“坤”、“蔡”、“葵”、“kun”等字，头像都是蔡徐坤（说明很多都是定制粉啊）。</b></p><p>爬虫和数据分析代码戳：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python/tree/master/CaiXuKun\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CaiXuKun</a>，具体的数据分析文章戳：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/j1kgf2RR7jssbWa7uWC-uA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《用大数据扒一扒蔡徐坤的真假流量粉》</a></p><p><br></p><p><b>2. 爬取了西瓜直播（今日头条旗下APP）各类型游戏的主播直播数据107.5万条，并分析直播平台和游戏主播行业是否真如我们想象般的暴利 </b></p><p>使用多线程爬虫爬取了西瓜直播（今日头条旗下APP）各类型游戏的主播直播数据107.5万条(时间：2019年4月30日0时至5月7日0时7天，平均每隔5分钟获取一次各类型游戏所有主播直播数据)，并分析直播平台和游戏主播行业是否真如我们想象般的暴利，以及游戏主播的回报跟付出的努力是否成正比</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-7a3e055426404c236d5ec6c516d010f9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"547\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9b6d749399c21ea0b8bfa1bc4377e8bd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"547\" data-original=\"https://pic2.zhimg.com/v2-7a3e055426404c236d5ec6c516d010f9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='547'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"547\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9b6d749399c21ea0b8bfa1bc4377e8bd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"547\" data-original=\"https://pic2.zhimg.com/v2-7a3e055426404c236d5ec6c516d010f9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-7a3e055426404c236d5ec6c516d010f9_720w.jpg?source=54b3c3a5\"></figure><p><b>全平台7天内出现的主播有4601人，其中有3266位主播具有打赏收入，有1335位主播是没有打赏收入的。</b>在3266位有打赏收入的主播中，历史总打赏小于100元的有1143人，占总数的35%。历史总打赏小于1万元的有2491人，占总数的76%。历史总打赏大于10万元的有177人，占总数的5%。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-297053611960526af4f6e25c2a877c48_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"546\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-637d4c17f8d6f7c882621f06e2d077a2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"546\" data-original=\"https://pic2.zhimg.com/v2-297053611960526af4f6e25c2a877c48_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='546'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"546\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-637d4c17f8d6f7c882621f06e2d077a2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"546\" data-original=\"https://pic2.zhimg.com/v2-297053611960526af4f6e25c2a877c48_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-297053611960526af4f6e25c2a877c48_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>那么努力和收获是成正比的吗？<b>图表中的趋势告诉我们：是的。总收入一百元以内的直播，平均每日直播2.2小时，而总收入一百万到一千万的主播，平均每日直播5.7小时！</b></p><p>可能大家觉得这个时间不长，但是要知道玩游戏是一项需要全神贯注的游戏，主播要是走神了没玩好，人气就不在了，礼物也刷不上来。试想一下每日要全神贯注玩6个半小时的游戏，还要解说和互动，就知道辛苦程度如何了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-07f3a070077b8c7869279cd8cf97931f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"578\" data-rawheight=\"388\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c648aa1cffc68c1340bda02a08530a97_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"578\" data-original=\"https://pic1.zhimg.com/v2-07f3a070077b8c7869279cd8cf97931f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='578'%20height='388'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"578\" data-rawheight=\"388\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c648aa1cffc68c1340bda02a08530a97_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"578\" data-original=\"https://pic1.zhimg.com/v2-07f3a070077b8c7869279cd8cf97931f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-07f3a070077b8c7869279cd8cf97931f_720w.jpg?source=54b3c3a5\"></figure><p><b>可以看到，节假日的观看人数要比非节假日高。每日观看人数从7点开始攀升，到12点达到小峰值（500万左右），再从下午的4点开始急剧攀升，下午6点的观众人数，是12点的3-4倍。</b>说明观众习惯下午下班后打开APP观看直播。下午6点一直到晚上12点，都是直播的黄金时间。</p><p><br></p><p>爬虫和数据分析代码戳：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python/tree/master/LiveStreaming\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">LiveStreaming</a>，具体的数据分析文章戳：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/j1kgf2RR7jssbWa7uWC-uA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《用大数据扒一扒蔡徐坤的真假流量粉》</a></p><p><br></p><p><b>3. 爬取英语外籍老师与本土老师招聘数据，分析洋外教是否真的是一群没学历、没教学经验的外国人拿着高工资在我们国家逍遥快活</b></p><p>爬取外籍人员招聘网站JobLEADChina上的外籍英语老师招聘数据945条，万行教师人才网上的英语老师招聘数据5780条，以及微信群成员信息498条，并分析外教教师的招聘状况。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ede8493f56354c067dc8178df9aa287b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"551\" data-rawheight=\"551\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-e02bae0cb001abf434226ee41f31da1a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"551\" data-original=\"https://pic2.zhimg.com/v2-ede8493f56354c067dc8178df9aa287b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='551'%20height='551'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"551\" data-rawheight=\"551\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-e02bae0cb001abf434226ee41f31da1a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"551\" data-original=\"https://pic2.zhimg.com/v2-ede8493f56354c067dc8178df9aa287b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ede8493f56354c067dc8178df9aa287b_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>大部分中教的工资都在10K以内，而大部分的外教工资都在10K以上。<b>中教的月平均工资是8.3K（按照城市为单位平均后是7.9K），而外教的月平均工资是15.7K，大概是中教的2倍。</b></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-ac024d3176ec09582c58e56f460361bd_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"650\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-b2a874130d04b7ec0015a5deb14b1d14_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"650\" data-original=\"https://pic1.zhimg.com/v2-ac024d3176ec09582c58e56f460361bd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='650'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"650\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-b2a874130d04b7ec0015a5deb14b1d14_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"650\" data-original=\"https://pic1.zhimg.com/v2-ac024d3176ec09582c58e56f460361bd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-ac024d3176ec09582c58e56f460361bd_720w.jpg?source=54b3c3a5\"></figure><p>在国内实习的外教月薪可以轻松破万，入门级的外教更是可以拿到15.8K的高薪。而我们的教师，即使工作了五到十年，还是拿不到入门级外教的工资。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-1927be38b1145a38a0d556f2d018aec8_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"644\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d32abfe9ce334e6e0c67bb2f16d75940_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"644\" data-original=\"https://pic2.zhimg.com/v2-1927be38b1145a38a0d556f2d018aec8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='644'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"644\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d32abfe9ce334e6e0c67bb2f16d75940_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"644\" data-original=\"https://pic2.zhimg.com/v2-1927be38b1145a38a0d556f2d018aec8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-1927be38b1145a38a0d556f2d018aec8_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>Any education（也就是不管你的学历）的外教，来到中国可以拿的月平均工资是13.9K人民币，比我们硕士毕业的英语老师还要高出不少。</b>有本科学历的外教平均工资是16.3K，硕士毕业的轻松上2万。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-304cc944c60689810ed19f1f0c4a4a35_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"435\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-aab3bc7d39ff4eeb6b46aef560e61ba5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"654\" data-original=\"https://pic1.zhimg.com/v2-304cc944c60689810ed19f1f0c4a4a35_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='654'%20height='435'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"435\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-aab3bc7d39ff4eeb6b46aef560e61ba5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"654\" data-original=\"https://pic1.zhimg.com/v2-304cc944c60689810ed19f1f0c4a4a35_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-304cc944c60689810ed19f1f0c4a4a35_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>我们把外教群里的外教来源省份画了出来，可以看到，有来自美国纽约的、有来自加拿大多伦多的，有来自英格兰的，当然，<b>也有来自法国巴黎的（法语）、有来自土耳其伊斯坦布尔的（土耳其语）、有来自荷兰阿姆斯特丹的（荷兰语），有来自西班牙拉科鲁尼亚的（西班牙语），还有来自其它各种各样地方的，你们自己感受一下。</b></p><p><br></p><p>爬虫和数据分析代码戳：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python/tree/master/ESL\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ESL</a>，具体的数据分析文章戳：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/BMfiB08gWy66zzvCe2lJmQ\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《没经验没学历的外教为啥能拿1.4W+的高薪？》</a></p><p><br>4<b>. 爬取最近大火的程序员集体抵制996的项目<u><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python/blob/master/996.ICU\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">996.ICU</a></u>中，Issues页面讨论数据和点了star的程序员Github个人信息数据，并且分析这群抵制996的程序员都是何方神圣</b></p><p>爬取了Github热门项目996.ICU中Issues页面的10037条讨论数据和39987条点了star的程序员Github个人信息数据。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-10f938217aeed74d6cb7bff242b6e0a1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7faa5be7fce6cd244a85c19e395f527a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"700\" data-original=\"https://pic2.zhimg.com/v2-10f938217aeed74d6cb7bff242b6e0a1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='700'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7faa5be7fce6cd244a85c19e395f527a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"700\" data-original=\"https://pic2.zhimg.com/v2-10f938217aeed74d6cb7bff242b6e0a1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-10f938217aeed74d6cb7bff242b6e0a1_720w.jpg?source=54b3c3a5\"></figure><p>可见，抵制996的程序员，<b>最多的是来自阿里系的公司</b>，有148人，其次是腾讯、百度、京东等，<b>以加班文化著称的华为，排名才第9</b>。当然，还有很多来自小米、微软、谷歌、中兴、联想、ThoughtWorks等各个公司的程序员。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-927b5ea952bb8f2f97c57894cefbc55f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-76e6121122a61cffa5688ad20f67bbec_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"700\" data-original=\"https://pic3.zhimg.com/v2-927b5ea952bb8f2f97c57894cefbc55f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='700'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-76e6121122a61cffa5688ad20f67bbec_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"700\" data-original=\"https://pic3.zhimg.com/v2-927b5ea952bb8f2f97c57894cefbc55f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-927b5ea952bb8f2f97c57894cefbc55f_720w.jpg?source=54b3c3a5\"></figure><p>可以看到，<b>浙大以59人star了该repos排名榜首，其次是上海交大、清华、电子科大、北邮、武大、哈工大、中科大、复旦大学</b>。这些大学，都是非常有名的大学啊，也是出产程序员的大学。当然，还有很多人来自于华中科大、卡耐基梅隆大学、北航、北理工、中山大学等学校的学生。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-602a271107db489bd784ecbe4f2890be_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-ab4b97b97e3c68dd564734ddd724e814_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"700\" data-original=\"https://pic2.zhimg.com/v2-602a271107db489bd784ecbe4f2890be_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='700'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-ab4b97b97e3c68dd564734ddd724e814_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"700\" data-original=\"https://pic2.zhimg.com/v2-602a271107db489bd784ecbe4f2890be_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-602a271107db489bd784ecbe4f2890be_720w.jpg?source=54b3c3a5\"></figure><p><b>北京以2094人位居榜首！</b>其次是上海、杭州、深圳等等。这些城市，恰恰是国内互联网行业发展得最好的城市。<b>看来这个repos确实在全国程序员界都引起了巨大的反响，乃至新加坡、日本、美国等地的程序员都前来支持。</b></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-626fa7b4e8b8aef202a75b51af57da36_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-05ccacf64307871c0be402810da0e01c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic3.zhimg.com/v2-626fa7b4e8b8aef202a75b51af57da36_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='500'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-05ccacf64307871c0be402810da0e01c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"500\" data-original=\"https://pic3.zhimg.com/v2-626fa7b4e8b8aef202a75b51af57da36_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-626fa7b4e8b8aef202a75b51af57da36_720w.jpg?source=54b3c3a5\"></figure><p>这群程序员的平均粉丝数为10.9，关注数为14.6，repos数为19.1。<b>从数据可以看出，大部分都是默默无闻又兢兢业业的苦逼基层程序员。</b></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e34580b369a0380628f422291b48c32b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"427\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f9fcfe265514b01338d67b96dbfc6623_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-e34580b369a0380628f422291b48c32b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='427'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"427\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f9fcfe265514b01338d67b96dbfc6623_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-e34580b369a0380628f422291b48c32b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e34580b369a0380628f422291b48c32b_720w.jpg?source=54b3c3a5\"></figure><p>关注996工作制的程序员中，<b>有程序员大牛。排名第一的是一个熟悉的面孔，轮子哥！</b>另外有来自腾讯的Coco，来自滴滴的singwhatiwanna，技术博主颜海镜等，这些人都在关注996。<b>在39987个star了该repos的程序员中，粉丝数大于1000的有47人，大于500的有110，大于100的有598人。</b>说明还是有很多有影响力的程序员在关注996工作制。</p><p><br></p><p>爬虫和数据分析代码戳：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python/tree/master/ICU996\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ICU996</a>，具体的数据分析文章戳：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/BZhHcEwdUJNJRVFix8NRSQ\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《大胆，都是哪些程序员在反对996？！》</a></p><p><br></p><p><b>5. 爬取丁香人才网的医生招聘数据，分析儿科医生的生存处境</b></p><p>看了《人间世》第二季第8集《儿科医生：坚守，还是逃离？》之后，爬取了丁香人才网10950条涵盖儿科、内科、外科、妇产科、眼科的招聘数据，并且分析儿科医生的真实处境。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7636c87bdedc9d20f0eb9538d74b0b01_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"562\" data-rawheight=\"496\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-481e24861239f81096835687b13caedf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"562\" data-original=\"https://pic1.zhimg.com/v2-7636c87bdedc9d20f0eb9538d74b0b01_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='562'%20height='496'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"562\" data-rawheight=\"496\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-481e24861239f81096835687b13caedf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"562\" data-original=\"https://pic1.zhimg.com/v2-7636c87bdedc9d20f0eb9538d74b0b01_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7636c87bdedc9d20f0eb9538d74b0b01_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-2d446568dc175dd80231a1874247fcc6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"498\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-5016360ed354470d287919efccca7789_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"553\" data-original=\"https://pic4.zhimg.com/v2-2d446568dc175dd80231a1874247fcc6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='553'%20height='498'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"498\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-5016360ed354470d287919efccca7789_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"553\" data-original=\"https://pic4.zhimg.com/v2-2d446568dc175dd80231a1874247fcc6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-2d446568dc175dd80231a1874247fcc6_720w.jpg?source=54b3c3a5\"></figure><p>相比于公立医院招聘中更看重高学历人才，民营医院招聘时更加看重医生的工作经验。所以公立医院中由于学历导致发展受限的有经验的医生，很多都跳槽去民营医院了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f5a49b18d2461df201391c8bbba9af34_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"464\" data-rawheight=\"390\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-64d0b69252ca6217e3aee5df0be535f5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"464\" data-original=\"https://pic4.zhimg.com/v2-f5a49b18d2461df201391c8bbba9af34_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='464'%20height='390'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"464\" data-rawheight=\"390\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-64d0b69252ca6217e3aee5df0be535f5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"464\" data-original=\"https://pic4.zhimg.com/v2-f5a49b18d2461df201391c8bbba9af34_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f5a49b18d2461df201391c8bbba9af34_720w.jpg?source=54b3c3a5\"></figure><p><b>儿科岗位平均招聘持续时间是73天，将近2个半月的时间，位居榜首！看来儿科招人难，确实是千真万确的</b>，而外科是最好招人的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-b9509d1c42b034b1e2643e04b32966b4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"562\" data-rawheight=\"488\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-682d38fd1f9011af01a5e2eb1ccbd04c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"562\" data-original=\"https://pic1.zhimg.com/v2-b9509d1c42b034b1e2643e04b32966b4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='562'%20height='488'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"562\" data-rawheight=\"488\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-682d38fd1f9011af01a5e2eb1ccbd04c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"562\" data-original=\"https://pic1.zhimg.com/v2-b9509d1c42b034b1e2643e04b32966b4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-b9509d1c42b034b1e2643e04b32966b4_720w.jpg?source=54b3c3a5\"></figure><p><b>儿科医生在所有类型的单位里，公立医院开出的工资是最低的。连诊所和药房的工资都比公立医院高。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-2e231cab546456fdd9865f9cd3b83a94_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"555\" data-rawheight=\"578\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-12fdf472143a3d8f691a32b84d6b582e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"555\" data-original=\"https://pic1.zhimg.com/v2-2e231cab546456fdd9865f9cd3b83a94_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='555'%20height='578'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"555\" data-rawheight=\"578\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-12fdf472143a3d8f691a32b84d6b582e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"555\" data-original=\"https://pic1.zhimg.com/v2-2e231cab546456fdd9865f9cd3b83a94_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-2e231cab546456fdd9865f9cd3b83a94_720w.jpg?source=54b3c3a5\"></figure><p><b>相同工资水平下，民营医院对学历不限和大专的要求比公立医院多，而公立医院对本科、硕士、博士的要求比民营医院多。</b>也就是说，在民营医院，不需要那么高的学历，就可以拿到跟公立医院同价位的待遇。</p><p>爬虫和数据分析代码戳：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python/tree/master/Paediatrician\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Paediatrician</a>，具体的数据分析文章戳：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/3SCI4kL-YX-9q1WDY23J-A\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《儿科医生的眼泪，全被数据看见了》</a></p><p><br></p><p><b>6. 爬取北上广深链家网全部租房数据，并给出租房建议</b></p><p>爬取北上广深链家网全部租房房源数据，并且得出租金分布、租房考虑因素等建议。</p><p>把北上广深四个城市的房源都以小点的形式投射在地图上，先来看看<b>北京</b>的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-a940eb6a15ecdd2812a9e025a0f9734e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1744\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-2cec2a7d0eda7ca3385cbfc36303889d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-a940eb6a15ecdd2812a9e025a0f9734e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='1744'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1744\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-2cec2a7d0eda7ca3385cbfc36303889d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-a940eb6a15ecdd2812a9e025a0f9734e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-a940eb6a15ecdd2812a9e025a0f9734e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>上海</b>的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-9ed550ff386d54a575f192502f98f353_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1744\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-49f7d71984d0f9c4428b3e3ab32e7a24_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-9ed550ff386d54a575f192502f98f353_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='1744'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1744\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-49f7d71984d0f9c4428b3e3ab32e7a24_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-9ed550ff386d54a575f192502f98f353_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-9ed550ff386d54a575f192502f98f353_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>广州</b>的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e4f7501170005531f53d4d74ae1a1728_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1744\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-96987ff5e4d6df006386a29daa164f5e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-e4f7501170005531f53d4d74ae1a1728_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='1744'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1744\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-96987ff5e4d6df006386a29daa164f5e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-e4f7501170005531f53d4d74ae1a1728_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e4f7501170005531f53d4d74ae1a1728_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>深圳</b>的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a249e25f357bfae79b98905a101a1e85_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1397\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-0de789632b69ff2f1adc82d9d7773e51_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-a249e25f357bfae79b98905a101a1e85_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='1397'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1397\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-0de789632b69ff2f1adc82d9d7773e51_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-a249e25f357bfae79b98905a101a1e85_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a249e25f357bfae79b98905a101a1e85_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>租房房源分布透露出来的信息其实不多，我们更关心的是各区域的价格。为此<b>我计算了各房源每平米每月的租金，并绘制了热力地图，</b>先来看<b>北京</b>的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-6923e0b787706c70f7bd7e271b553c23_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"740\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-df52d2cb0f53ab371a84a16223917da0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-6923e0b787706c70f7bd7e271b553c23_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='740'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"740\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-df52d2cb0f53ab371a84a16223917da0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-6923e0b787706c70f7bd7e271b553c23_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-6923e0b787706c70f7bd7e271b553c23_720w.jpg?source=54b3c3a5\"></figure><p>热力地图还有互动版本，可以随意放大缩小定位到自己感兴趣的区域：<a href=\"https://link.zhihu.com/?target=https%3A//maplab.amap.com/share/mapv/344530478365672eaf85ea0567a1427f\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">北京市每平米租金热力图</a></p><p><br></p><p><b>上海市</b>：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-99f95e3445f141382ccbb2cacd99a29a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"743\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-85ad89864f8d2f8e0ab1de1f631156a7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-99f95e3445f141382ccbb2cacd99a29a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='743'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"743\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-85ad89864f8d2f8e0ab1de1f631156a7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-99f95e3445f141382ccbb2cacd99a29a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-99f95e3445f141382ccbb2cacd99a29a_720w.jpg?source=54b3c3a5\"></figure><p>互动地图点击：<a href=\"https://link.zhihu.com/?target=https%3A//maplab.amap.com/share/mapv/76fc43f333a394004d30a5194a74f38b\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">上海市每平米租金热力图</a></p><p><br></p><p><b>广州市</b>：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-bd8121b0b6f174c22fd5212ae6929e92_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"740\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-927288370625e77c880711db745c3781_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-bd8121b0b6f174c22fd5212ae6929e92_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='740'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"740\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-927288370625e77c880711db745c3781_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-bd8121b0b6f174c22fd5212ae6929e92_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-bd8121b0b6f174c22fd5212ae6929e92_720w.jpg?source=54b3c3a5\"></figure><p>互动地图点击：<a href=\"https://link.zhihu.com/?target=https%3A//maplab.amap.com/share/mapv/31ec1a6a51caf4fe4ecb45e4a5257ddf\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">广州市每平米租金热力图</a></p><p><br></p><p><b>深圳市</b>：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-14bdeca942071597252fd30f84d8a690_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"742\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-55c237af01134f3f4002645a32bb2ea8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-14bdeca942071597252fd30f84d8a690_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='742'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"742\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-55c237af01134f3f4002645a32bb2ea8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-14bdeca942071597252fd30f84d8a690_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-14bdeca942071597252fd30f84d8a690_720w.jpg?source=54b3c3a5\"></figure><p>互动地图点击：<a href=\"https://link.zhihu.com/?target=https%3A//maplab.amap.com/share/mapv/fb4ecd342d58fbe72ba6a006255b4179\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">深圳市每平米租金热力图</a></p><p>爬虫和数据分析代码戳：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python/blob/master/BSGS_Rent\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">BSGS_Rent</a>，具体的数据分析文章戳：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/sb-g7sGmPJPIsfF23INlmQ\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《北上广深租房图鉴》</a></p><p><br></p><p><b>7. 全国367个城市春节期间的空气质量指数数据爬取和分析</b></p><p>爬了全国367个城市从除夕到初七的空气质量数据，数据有68155条，并分析烟花爆竹对空气质量的影响，以及城市禁放烟花爆竹是否有效。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-bc408a5b29fe1aa7c9eea416a96aaeff_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"434\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0feea2bab5a1c691236c286eb1537f28_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1366\" data-original=\"https://pic1.zhimg.com/v2-bc408a5b29fe1aa7c9eea416a96aaeff_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1366'%20height='434'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"434\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0feea2bab5a1c691236c286eb1537f28_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1366\" data-original=\"https://pic1.zhimg.com/v2-bc408a5b29fe1aa7c9eea416a96aaeff_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-bc408a5b29fe1aa7c9eea416a96aaeff_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-bf8a03187685b0da9bb3476fa742cda7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1138\" data-rawheight=\"624\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-830cf0577a1e0b9c51d61a39a742bed2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1138\" data-original=\"https://pic4.zhimg.com/v2-bf8a03187685b0da9bb3476fa742cda7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1138'%20height='624'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1138\" data-rawheight=\"624\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-830cf0577a1e0b9c51d61a39a742bed2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1138\" data-original=\"https://pic4.zhimg.com/v2-bf8a03187685b0da9bb3476fa742cda7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-bf8a03187685b0da9bb3476fa742cda7_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d4c7df7a41e019149c5263ec04e912d9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"800\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c06220882440e2174c9104f83f02967c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1600\" data-original=\"https://pic1.zhimg.com/v2-d4c7df7a41e019149c5263ec04e912d9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1600'%20height='800'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"800\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c06220882440e2174c9104f83f02967c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1600\" data-original=\"https://pic1.zhimg.com/v2-d4c7df7a41e019149c5263ec04e912d9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d4c7df7a41e019149c5263ec04e912d9_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>可以看到，PM2.5和PM10在除夕晚上六点之后开始飙升</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8aabd1c13112e0b493cde017ccfa6282_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c3fbe6f56aabe6ebb5c2ae8f0b42560c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"553\" data-original=\"https://pic1.zhimg.com/v2-8aabd1c13112e0b493cde017ccfa6282_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='553'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c3fbe6f56aabe6ebb5c2ae8f0b42560c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"553\" data-original=\"https://pic1.zhimg.com/v2-8aabd1c13112e0b493cde017ccfa6282_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8aabd1c13112e0b493cde017ccfa6282_720w.jpg?source=54b3c3a5\"></figure><p>全国大部分城市空气质量指数飙升为原来的1-5倍，有城市甚至飙升到20-25倍！</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-4c5e0330e91fc448b641d579bc7dba70_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"800\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3f97d133aa7f712d5217fe82bd117272_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1600\" data-original=\"https://pic4.zhimg.com/v2-4c5e0330e91fc448b641d579bc7dba70_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1600'%20height='800'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"800\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3f97d133aa7f712d5217fe82bd117272_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1600\" data-original=\"https://pic4.zhimg.com/v2-4c5e0330e91fc448b641d579bc7dba70_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-4c5e0330e91fc448b641d579bc7dba70_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>有些管控严格的城市，虽然除夕当晚管控地很好，可是时间一过就开始反弹飙升。</p><p>爬虫和数据分析代码戳：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python/tree/master/Fireworks_and_Pm2.5\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Fireworks_and_Pm2.5</a>，具体的数据分析文章戳：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/TO9ouZXOThiM5iOHqt0i0A\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《六万条数据全面解析，城市春节禁放烟花爆竹真的有用吗？》</a></p><p><br></p><p><b>8. 爬取电影《流浪地球》的猫眼评论和评分，并分析该电影出现低分的原因</b></p><p>爬了102580条《流浪地球》的猫眼评论，分析观众打分的时间规律，并对观众的评论做了词云图，分析大家打高分和低分的原因。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-6fd2274e5edfade7b306211bc8d0cde1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1910\" data-rawheight=\"1112\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-4de6640f55d263e7d8d7a01510a485ef_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1910\" data-original=\"https://pic1.zhimg.com/v2-6fd2274e5edfade7b306211bc8d0cde1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1910'%20height='1112'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1910\" data-rawheight=\"1112\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-4de6640f55d263e7d8d7a01510a485ef_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1910\" data-original=\"https://pic1.zhimg.com/v2-6fd2274e5edfade7b306211bc8d0cde1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-6fd2274e5edfade7b306211bc8d0cde1_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a93e36abba50de26ca8e795f5c53ea00_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1150\" data-rawheight=\"620\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-aefc08f630dca2dab112c430f2c841ba_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1150\" data-original=\"https://pic1.zhimg.com/v2-a93e36abba50de26ca8e795f5c53ea00_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1150'%20height='620'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1150\" data-rawheight=\"620\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-aefc08f630dca2dab112c430f2c841ba_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1150\" data-original=\"https://pic1.zhimg.com/v2-a93e36abba50de26ca8e795f5c53ea00_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a93e36abba50de26ca8e795f5c53ea00_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7edc125c47fc69dfa09c77cb3b56fd84_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7620267979e10113fb91e7e1e9b9bdee_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"700\" data-original=\"https://pic1.zhimg.com/v2-7edc125c47fc69dfa09c77cb3b56fd84_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='700'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7620267979e10113fb91e7e1e9b9bdee_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"700\" data-original=\"https://pic1.zhimg.com/v2-7edc125c47fc69dfa09c77cb3b56fd84_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7edc125c47fc69dfa09c77cb3b56fd84_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>晚上21点、22点的时候（也就是观影高峰期）最容易出现低评分。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-e84b38ca1f1d0c7c5f214b4a98f254cd_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"872\" data-rawheight=\"620\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-f0d5a173784d5f6c4411b7940e3c1576_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"872\" data-original=\"https://pic4.zhimg.com/v2-e84b38ca1f1d0c7c5f214b4a98f254cd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='872'%20height='620'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"872\" data-rawheight=\"620\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-f0d5a173784d5f6c4411b7940e3c1576_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"872\" data-original=\"https://pic4.zhimg.com/v2-e84b38ca1f1d0c7c5f214b4a98f254cd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e84b38ca1f1d0c7c5f214b4a98f254cd_720w.jpg?source=54b3c3a5\"></figure><p>对高分的评论画了词云图，高分的观众觉得：</p><p>1. 这部电影很不错、很好看、很震撼、很感人，会大力推荐；</p><p>2. 观众乐于把这部片跟好莱坞的科幻片进行比较，并且认为其特效完美、场面宏大，是中国里程碑式的科幻大片，相比以前有很大进步；</p><p>3. 吴京、刘慈欣、导演多次被提及，说明观众对演员、剧本和导演都有很大的认可度，认为演员演技优秀、剧本扎实、导演良心。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-eaae5835e9de61791ebdd125076996a6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"854\" data-rawheight=\"620\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0024b306716455fdb1f51b1282ba954a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"854\" data-original=\"https://pic1.zhimg.com/v2-eaae5835e9de61791ebdd125076996a6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='854'%20height='620'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"854\" data-rawheight=\"620\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0024b306716455fdb1f51b1282ba954a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"854\" data-original=\"https://pic1.zhimg.com/v2-eaae5835e9de61791ebdd125076996a6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-eaae5835e9de61791ebdd125076996a6_720w.jpg?source=54b3c3a5\"></figure><p>对低分的评论也画了词云图，打低分的观众觉得：</p><p>1. 这部影片虽然特效很好，但是剧情东拉西扯、强行煽情、年轻演员演技捉急、没有逻辑，是烂片；</p><p>2. 吴京的英雄主义和强行的爱国情怀让这部片看起来像太空版的《战狼》，很尴尬；</p><p>3. 女主的演讲是本片最大的败笔，年轻演员撑不起这样的巨作。</p><p><br></p><p>爬虫和数据分析代码戳：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python/tree/master/TheWanderingEarth\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">TheWanderingEarth</a>，具体的数据分析文章戳：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/3d_ycK0D1KfbjQJ3m7FhEQ\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《十万条评论告诉你，给《流浪地球》评1星的都是什么心态？》</a></p><p><br></p><p><b>9. 模拟登录微博手机端爬取海量表情包(其实代码同样也可以爬小姐姐的图片)</b></p><p>爬了一千多张点赞量最高、目前最火的表情包，让自己的表情包库再也不捉襟见肘。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d04f5e7410b745f58c5d3b63610f3c5f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1442\" data-rawheight=\"900\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a6b810bfe14daa54c6180c81b7914e3d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1442\" data-original=\"https://pic4.zhimg.com/v2-d04f5e7410b745f58c5d3b63610f3c5f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1442'%20height='900'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1442\" data-rawheight=\"900\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a6b810bfe14daa54c6180c81b7914e3d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1442\" data-original=\"https://pic4.zhimg.com/v2-d04f5e7410b745f58c5d3b63610f3c5f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d04f5e7410b745f58c5d3b63610f3c5f_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>另外还用这个爬虫爬了很多女装大佬的美图，哈哈哈。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a9531b39a8bfb63082695df4f3810fcb_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"892\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-428c9a0623e0d8f2f840393e40fb2aca_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1336\" data-original=\"https://pic4.zhimg.com/v2-a9531b39a8bfb63082695df4f3810fcb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1336'%20height='892'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"892\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-428c9a0623e0d8f2f840393e40fb2aca_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1336\" data-original=\"https://pic4.zhimg.com/v2-a9531b39a8bfb63082695df4f3810fcb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a9531b39a8bfb63082695df4f3810fcb_720w.jpg?source=54b3c3a5\"></figure><p>以及很多小姐姐的美图。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a84591fa5eccf18f45380f453b14e438_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1332\" data-rawheight=\"884\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-f8caafb012bd949c5e50c2055bf5d923_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1332\" data-original=\"https://pic1.zhimg.com/v2-a84591fa5eccf18f45380f453b14e438_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1332'%20height='884'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1332\" data-rawheight=\"884\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-f8caafb012bd949c5e50c2055bf5d923_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1332\" data-original=\"https://pic1.zhimg.com/v2-a84591fa5eccf18f45380f453b14e438_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a84591fa5eccf18f45380f453b14e438_720w.jpg?source=54b3c3a5\"></figure><p>爬虫代码戳：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python/tree/master/Weibo_Comment_Pics\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Weibo_Comment_Pics</a>，具体的爬虫步骤分析文章戳：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/iTtVXMVdoTBxWHzEzbQH1Q\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《开年表情包局部富有指南，盘它！》</a></p><p><br></p><p><b>10. 分析美国从1920年以来，每个年代的人的流行英文名</b></p><p>总数据有1924665条，通过分析每个年代的流行英文名，为需要取英文名的童鞋提供一些建议。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-d8863fb1bb72a096eb65685eb6283605_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"698\" data-rawheight=\"456\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-de93ef57db799f50fd7fad3b20c2c74a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"698\" data-original=\"https://pic1.zhimg.com/v2-d8863fb1bb72a096eb65685eb6283605_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='698'%20height='456'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"698\" data-rawheight=\"456\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-de93ef57db799f50fd7fad3b20c2c74a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"698\" data-original=\"https://pic1.zhimg.com/v2-d8863fb1bb72a096eb65685eb6283605_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-d8863fb1bb72a096eb65685eb6283605_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-87104e4f37147e0c36c93ce77a5ff56e_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"450\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b18a46b70eaf1c547a2e7aab6c29f80f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"750\" data-original=\"https://pic2.zhimg.com/v2-87104e4f37147e0c36c93ce77a5ff56e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='750'%20height='450'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"450\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b18a46b70eaf1c547a2e7aab6c29f80f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"750\" data-original=\"https://pic2.zhimg.com/v2-87104e4f37147e0c36c93ce77a5ff56e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-87104e4f37147e0c36c93ce77a5ff56e_720w.jpg?source=54b3c3a5\"><figcaption>2010年以来最受欢迎的男生英文名</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-aa077285f8f36010b17d4a3cd9b22563_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"450\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7c3ea64b846592507c09958951626fad_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"750\" data-original=\"https://pic1.zhimg.com/v2-aa077285f8f36010b17d4a3cd9b22563_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='750'%20height='450'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"450\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7c3ea64b846592507c09958951626fad_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"750\" data-original=\"https://pic1.zhimg.com/v2-aa077285f8f36010b17d4a3cd9b22563_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-aa077285f8f36010b17d4a3cd9b22563_720w.jpg?source=54b3c3a5\"><figcaption>2010年以来最受欢迎的女生英文名</figcaption></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-5097078db8aca27cfeba26df03140e9b_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"982\" data-rawheight=\"594\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c685cba237ec37211ecc93ffdbcb2496_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"982\" data-original=\"https://pic1.zhimg.com/v2-5097078db8aca27cfeba26df03140e9b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='982'%20height='594'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"982\" data-rawheight=\"594\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c685cba237ec37211ecc93ffdbcb2496_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"982\" data-original=\"https://pic1.zhimg.com/v2-5097078db8aca27cfeba26df03140e9b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-5097078db8aca27cfeba26df03140e9b_720w.jpg?source=54b3c3a5\"><figcaption>注：横轴是该名字人数在每个年代所占总数的百分比</figcaption></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a14f27f09456bd6d11f61a6e0d6e5e38_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1002\" data-rawheight=\"604\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-3843b576cdd45076a9601ecfb1dd9925_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1002\" data-original=\"https://pic1.zhimg.com/v2-a14f27f09456bd6d11f61a6e0d6e5e38_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1002'%20height='604'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1002\" data-rawheight=\"604\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-3843b576cdd45076a9601ecfb1dd9925_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1002\" data-original=\"https://pic1.zhimg.com/v2-a14f27f09456bd6d11f61a6e0d6e5e38_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a14f27f09456bd6d11f61a6e0d6e5e38_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e5f4bd1441d6c85a087756f00eb3b66c_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"600\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-73343c1700d86cf5c28b6a6d577c5b42_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1000\" data-original=\"https://pic1.zhimg.com/v2-e5f4bd1441d6c85a087756f00eb3b66c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1000'%20height='600'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"600\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-73343c1700d86cf5c28b6a6d577c5b42_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1000\" data-original=\"https://pic1.zhimg.com/v2-e5f4bd1441d6c85a087756f00eb3b66c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e5f4bd1441d6c85a087756f00eb3b66c_720w.jpg?source=54b3c3a5\"><figcaption>几乎发音相同的名字的书写变体</figcaption></figure><p><br></p><p>数据分析代码戳：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python/tree/master/English_names\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">English_names</a>，具体的数据分析文章戳：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/7dGJbueO-_cLuw9d8mPUyg\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《看完这片分析，楼下的Tony和Kevin都改名了！》</a></p><p><br></p><p><b>11. 分析了70多万场绝地求生的比赛数据，总结出独家吃鸡攻略</b></p><p>分析了总共20多G、70多万场的绝地求生比赛数据，总结出各种地图哪里跳的人最多、近战最佳武器、狙击最佳武器等，程序员嘛，靠技术吃鸡也很重要。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-569a1d1b916e8726e9a8b80e4aee1366_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"792\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-0ff6dfee1b7eb4cc23009cb8537cd490_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic2.zhimg.com/v2-569a1d1b916e8726e9a8b80e4aee1366_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='800'%20height='792'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"792\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-0ff6dfee1b7eb4cc23009cb8537cd490_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"800\" data-original=\"https://pic2.zhimg.com/v2-569a1d1b916e8726e9a8b80e4aee1366_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-569a1d1b916e8726e9a8b80e4aee1366_720w.jpg?source=54b3c3a5\"></figure><p>海岛地图中，跳机场跟学校是死得最快的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-652a11ec9068027eb3d583a3eeb74bef_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"789\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-f3ea1c3ca7af962d289f091abf31c809_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic4.zhimg.com/v2-652a11ec9068027eb3d583a3eeb74bef_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='800'%20height='789'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"789\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-f3ea1c3ca7af962d289f091abf31c809_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"800\" data-original=\"https://pic4.zhimg.com/v2-652a11ec9068027eb3d583a3eeb74bef_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-652a11ec9068027eb3d583a3eeb74bef_720w.jpg?source=54b3c3a5\"></figure><p>沙漠地图中，跳Pecado、San Martin、Power Grid是死得最快的。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d743feaeadffbf9b9475b65549cd734a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"818\" data-rawheight=\"456\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-1eae539faa7deaf440a18bf1448d3504_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"818\" data-original=\"https://pic1.zhimg.com/v2-d743feaeadffbf9b9475b65549cd734a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='818'%20height='456'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"818\" data-rawheight=\"456\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-1eae539faa7deaf440a18bf1448d3504_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"818\" data-original=\"https://pic1.zhimg.com/v2-d743feaeadffbf9b9475b65549cd734a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d743feaeadffbf9b9475b65549cd734a_720w.jpg?source=54b3c3a5\"></figure><p>开车对吃鸡很重要！！！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-1e1cb8839e40cf58a03b6d4e75c7feea_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1260\" data-rawheight=\"654\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e74d95906d5998a90cbd802ed2a18986_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1260\" data-original=\"https://pic1.zhimg.com/v2-1e1cb8839e40cf58a03b6d4e75c7feea_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1260'%20height='654'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1260\" data-rawheight=\"654\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e74d95906d5998a90cbd802ed2a18986_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1260\" data-original=\"https://pic1.zhimg.com/v2-1e1cb8839e40cf58a03b6d4e75c7feea_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-1e1cb8839e40cf58a03b6d4e75c7feea_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-7246bb829b9f69321fb233a67ace3303_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1250\" data-rawheight=\"632\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-461e8eb44dabc858a44e253c8c6c33a8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1250\" data-original=\"https://pic1.zhimg.com/v2-7246bb829b9f69321fb233a67ace3303_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1250'%20height='632'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1250\" data-rawheight=\"632\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-461e8eb44dabc858a44e253c8c6c33a8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1250\" data-original=\"https://pic1.zhimg.com/v2-7246bb829b9f69321fb233a67ace3303_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-7246bb829b9f69321fb233a67ace3303_720w.jpg?source=54b3c3a5\"></figure><p>满配的M416是海岛和沙漠地图中最好用的枪。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f4ae964513f99efc7126df4a80cb0560_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1162\" data-rawheight=\"588\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-04a3cde422c154afd607784f3d7bb6ae_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1162\" data-original=\"https://pic4.zhimg.com/v2-f4ae964513f99efc7126df4a80cb0560_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1162'%20height='588'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1162\" data-rawheight=\"588\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-04a3cde422c154afd607784f3d7bb6ae_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1162\" data-original=\"https://pic4.zhimg.com/v2-f4ae964513f99efc7126df4a80cb0560_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f4ae964513f99efc7126df4a80cb0560_720w.jpg?source=54b3c3a5\"></figure><p>每场比赛场均有1.47个人自己被自己蠢倒（也就是自毙），自毙的方式中，手榴弹高居榜首！哈哈哈。</p><p><br></p><p>数据分析代码戳：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python/tree/master/PUBG-juediqiusheng-data_analysis\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PUBG-juediqiusheng-data_analysis</a>，具体的数据分析文章戳：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/FednLB6IIQFBmMYv3udm0A\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《【20G】Kaggle数据集强势分析“绝地求生”，攻略吃鸡！》</a></p><p><br></p><p><b>12. 为新媒体运营的女票写了一个公众号文章采集器，一键采集各个行业内公众号发表的文章</b></p><p>整个项目只有50行代码，每天早上9点的时候都把昨天一天以来各个行业内公众号发表的文章的标题、摘要和链接等相关信息爬下来，形成一个文档发给女票，这样可以大大方便阅读。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-d21c88396d7a90e9a038ae9fbb65a153_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"504\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-81c88fee89dc0ddead4c78c7527406ea_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic2.zhimg.com/v2-d21c88396d7a90e9a038ae9fbb65a153_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='800'%20height='504'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"504\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-81c88fee89dc0ddead4c78c7527406ea_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"800\" data-original=\"https://pic2.zhimg.com/v2-d21c88396d7a90e9a038ae9fbb65a153_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-d21c88396d7a90e9a038ae9fbb65a153_720w.jpg?source=54b3c3a5\"></figure><p>这是爬回来的文档。</p><p>爬虫代码戳：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python/tree/master/Wechat_article_collector\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Wechat_article_collector</a>，具体的爬虫步骤分析文章戳：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/Yt4Gde2TuCWvK8pPCiZZRQ\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《50行代码教你打造一个公众号文章采集器》</a></p><p><br></p><p><b>13. 爬取雪球网投资组合的历史调仓记录，以及每日根据模型输出自动化调仓</b></p><p>模拟登录雪球网，爬取特定投资组合的历史调仓记录，实时计算收益率。并且每日根据数据模型的预测输出，进行自动化调仓。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-46b264ef334b62a672692d1d09cfa931_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"710\" data-rawheight=\"768\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-498d05d1c135b6731e7561eddba9569f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"710\" data-original=\"https://pic1.zhimg.com/v2-46b264ef334b62a672692d1d09cfa931_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='710'%20height='768'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"710\" data-rawheight=\"768\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-498d05d1c135b6731e7561eddba9569f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"710\" data-original=\"https://pic1.zhimg.com/v2-46b264ef334b62a672692d1d09cfa931_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-46b264ef334b62a672692d1d09cfa931_720w.jpg?source=54b3c3a5\"><figcaption>需要爬取的投资组合历史调仓记录</figcaption></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-b0922b0a15384024c5a89cddc493aa00_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"940\" data-rawheight=\"350\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-34ca83749b3602607cde4c61c1004b19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"940\" data-original=\"https://pic4.zhimg.com/v2-b0922b0a15384024c5a89cddc493aa00_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='940'%20height='350'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"940\" data-rawheight=\"350\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-34ca83749b3602607cde4c61c1004b19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"940\" data-original=\"https://pic4.zhimg.com/v2-b0922b0a15384024c5a89cddc493aa00_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-b0922b0a15384024c5a89cddc493aa00_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-9e2a6ef0086182d45df290df74103449_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1614\" data-rawheight=\"1202\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7c5d368c26aa90b39730049c8dcd2335_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1614\" data-original=\"https://pic4.zhimg.com/v2-9e2a6ef0086182d45df290df74103449_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1614'%20height='1202'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1614\" data-rawheight=\"1202\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7c5d368c26aa90b39730049c8dcd2335_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1614\" data-original=\"https://pic4.zhimg.com/v2-9e2a6ef0086182d45df290df74103449_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-9e2a6ef0086182d45df290df74103449_720w.jpg?source=54b3c3a5\"><figcaption>爬回来的数据</figcaption></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-92bef481fb65e1c2dc4bbf67348cc709_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1588\" data-rawheight=\"1374\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8f2c3339918bcb0afcd0fbc1984c597f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1588\" data-original=\"https://pic4.zhimg.com/v2-92bef481fb65e1c2dc4bbf67348cc709_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1588'%20height='1374'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1588\" data-rawheight=\"1374\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8f2c3339918bcb0afcd0fbc1984c597f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1588\" data-original=\"https://pic4.zhimg.com/v2-92bef481fb65e1c2dc4bbf67348cc709_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-92bef481fb65e1c2dc4bbf67348cc709_720w.jpg?source=54b3c3a5\"><figcaption>自动化调仓</figcaption></figure><p><br></p><p><b>持续更新中，欢迎大家关注我的公众号，更多的项目都会在这里第一时间更新：Alfred数据室。</b></p><p><b>所有项目的代码和数据在Github：</b><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">interesting-python</a></p><p><b>如果你也想用Python获取数据，进行有趣的数据分析，Alfred数据室应众多读者要求出品的<a href=\"https://link.zhihu.com/?target=https%3A//study.163.com/course/introduction/1209511875.htm%3Fshare%3D2%26shareId%3D480000001946441\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《实战玩转python爬虫》课程</a>将会是你的好帮手。</b></p><p><b>课程以目标为导向，设计十大原创案例由浅入深覆盖Python爬虫所需知识点，让你在实战练习中查漏补缺，掌握基础知识，让你告别漫无目的的独自摸索，跟着老师清晰课程框架进行系统性学习，用项目培养爬虫思维，让学习可以举一反三。</b></p><p><b>课程咨询请添加微信：AlfredLabAssistant</b></p>", "Python 应该怎么学？": "<p>0714更新:</p><p>之前说过骆昊 (jackfrued) 的“从新手到大师”的百天之路！今天给大家分享一个主学习路线的干货图谱，话不多说，直接上图！</p><p>这个图谱是按照【专业基础】【数据分析】【爬虫实战】【后台开发实战】【机器学习基础】【机器学习实战】六大部分规划的学习路线。</p><p>1、专业基础</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-8660f9c1ada4394095bbd6f4d6a0f109_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"611\" data-rawheight=\"588\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7e956cb55d98263ca59576fc869dd58a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"611\" data-original=\"https://pic3.zhimg.com/v2-8660f9c1ada4394095bbd6f4d6a0f109_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='611'%20height='588'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"611\" data-rawheight=\"588\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7e956cb55d98263ca59576fc869dd58a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"611\" data-original=\"https://pic3.zhimg.com/v2-8660f9c1ada4394095bbd6f4d6a0f109_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-8660f9c1ada4394095bbd6f4d6a0f109_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-be6178044a20936e03727bb81778a092_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"670\" data-rawheight=\"612\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-35a06db4aae8c333a90b3df9c700b864_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"670\" data-original=\"https://pic2.zhimg.com/v2-be6178044a20936e03727bb81778a092_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='670'%20height='612'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"670\" data-rawheight=\"612\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-35a06db4aae8c333a90b3df9c700b864_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"670\" data-original=\"https://pic2.zhimg.com/v2-be6178044a20936e03727bb81778a092_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-be6178044a20936e03727bb81778a092_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-988ecc0e86fb89f7a031bf639de1f119_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"582\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-b4b9b4b3f23c5b2a064199e9f2efb49e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic2.zhimg.com/v2-988ecc0e86fb89f7a031bf639de1f119_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='832'%20height='582'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"582\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-b4b9b4b3f23c5b2a064199e9f2efb49e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"832\" data-original=\"https://pic2.zhimg.com/v2-988ecc0e86fb89f7a031bf639de1f119_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-988ecc0e86fb89f7a031bf639de1f119_720w.jpg?source=54b3c3a5\"></figure><p>2、数据分析</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-56ea62d8505c1799af2280441e3f12d7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"624\" data-rawheight=\"614\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8ddc9f970a2cd58f683843ee27455099_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"624\" data-original=\"https://pic4.zhimg.com/v2-56ea62d8505c1799af2280441e3f12d7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='624'%20height='614'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"624\" data-rawheight=\"614\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8ddc9f970a2cd58f683843ee27455099_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"624\" data-original=\"https://pic4.zhimg.com/v2-56ea62d8505c1799af2280441e3f12d7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-56ea62d8505c1799af2280441e3f12d7_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-0781c78e11b91604389c2bed56164e52_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"826\" data-rawheight=\"617\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-115f7b12566e774bebf0fd45c3e9f1bd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"826\" data-original=\"https://pic4.zhimg.com/v2-0781c78e11b91604389c2bed56164e52_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='826'%20height='617'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"826\" data-rawheight=\"617\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-115f7b12566e774bebf0fd45c3e9f1bd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"826\" data-original=\"https://pic4.zhimg.com/v2-0781c78e11b91604389c2bed56164e52_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0781c78e11b91604389c2bed56164e52_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-a5e41a4d03d3ae7de6cd20b8c2a74906_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"609\" data-rawheight=\"1238\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1c94e780a7299a62bc63215ab26ebb93_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"609\" data-original=\"https://pic1.zhimg.com/v2-a5e41a4d03d3ae7de6cd20b8c2a74906_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='609'%20height='1238'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"609\" data-rawheight=\"1238\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1c94e780a7299a62bc63215ab26ebb93_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"609\" data-original=\"https://pic1.zhimg.com/v2-a5e41a4d03d3ae7de6cd20b8c2a74906_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-a5e41a4d03d3ae7de6cd20b8c2a74906_720w.jpg?source=54b3c3a5\"></figure><p>3、爬虫实战</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d8ab4cea5b9410d0eeddd043da61ea25_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"614\" data-rawheight=\"832\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a84f10ddf1a2cd01583d50401855d56c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"614\" data-original=\"https://pic2.zhimg.com/v2-d8ab4cea5b9410d0eeddd043da61ea25_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='614'%20height='832'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"614\" data-rawheight=\"832\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a84f10ddf1a2cd01583d50401855d56c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"614\" data-original=\"https://pic2.zhimg.com/v2-d8ab4cea5b9410d0eeddd043da61ea25_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d8ab4cea5b9410d0eeddd043da61ea25_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-44fe8f1acf8c17ee8e8f187b00fa8e58_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"481\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-38820c38ce73de341eef2ac055442e97_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"550\" data-original=\"https://pic1.zhimg.com/v2-44fe8f1acf8c17ee8e8f187b00fa8e58_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='550'%20height='481'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"481\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-38820c38ce73de341eef2ac055442e97_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"550\" data-original=\"https://pic1.zhimg.com/v2-44fe8f1acf8c17ee8e8f187b00fa8e58_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-44fe8f1acf8c17ee8e8f187b00fa8e58_720w.jpg?source=54b3c3a5\"></figure><p>4、后台开发实战</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e00a69021d74e177562e24af30afc40f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"650\" data-rawheight=\"571\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-22f277afafa1e1707309a7c638570268_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"650\" data-original=\"https://pic1.zhimg.com/v2-e00a69021d74e177562e24af30afc40f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='650'%20height='571'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"650\" data-rawheight=\"571\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-22f277afafa1e1707309a7c638570268_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"650\" data-original=\"https://pic1.zhimg.com/v2-e00a69021d74e177562e24af30afc40f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e00a69021d74e177562e24af30afc40f_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-23ebefbeb0de2bc396bf4bada335bd7b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"634\" data-rawheight=\"613\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9274561692ab2427766a9a58bccaef99_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"634\" data-original=\"https://pic4.zhimg.com/v2-23ebefbeb0de2bc396bf4bada335bd7b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='634'%20height='613'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"634\" data-rawheight=\"613\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9274561692ab2427766a9a58bccaef99_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"634\" data-original=\"https://pic4.zhimg.com/v2-23ebefbeb0de2bc396bf4bada335bd7b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-23ebefbeb0de2bc396bf4bada335bd7b_720w.jpg?source=54b3c3a5\"></figure><p>5、机器学习基础</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-c80a046a9cdabeb1f8d3f44bcdf3c2dc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"969\" data-rawheight=\"612\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-6d476ed17f966a047145ce2af0a6c015_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"969\" data-original=\"https://pic4.zhimg.com/v2-c80a046a9cdabeb1f8d3f44bcdf3c2dc_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='969'%20height='612'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"969\" data-rawheight=\"612\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-6d476ed17f966a047145ce2af0a6c015_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"969\" data-original=\"https://pic4.zhimg.com/v2-c80a046a9cdabeb1f8d3f44bcdf3c2dc_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-c80a046a9cdabeb1f8d3f44bcdf3c2dc_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-534d32a4acfed974d1644344c48c8d47_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"979\" data-rawheight=\"580\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-4de28fb643c85b8b93874bd06889f632_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"979\" data-original=\"https://pic2.zhimg.com/v2-534d32a4acfed974d1644344c48c8d47_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='979'%20height='580'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"979\" data-rawheight=\"580\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-4de28fb643c85b8b93874bd06889f632_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"979\" data-original=\"https://pic2.zhimg.com/v2-534d32a4acfed974d1644344c48c8d47_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-534d32a4acfed974d1644344c48c8d47_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-770b38488808657edf94a78d2e4db963_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1156\" data-rawheight=\"618\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8dcd48171a7423ec01ec1941b0b7a887_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1156\" data-original=\"https://pic1.zhimg.com/v2-770b38488808657edf94a78d2e4db963_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1156'%20height='618'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1156\" data-rawheight=\"618\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8dcd48171a7423ec01ec1941b0b7a887_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1156\" data-original=\"https://pic1.zhimg.com/v2-770b38488808657edf94a78d2e4db963_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-770b38488808657edf94a78d2e4db963_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-0d1210d2c231e168e7123dba2c4d8d5f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"917\" data-rawheight=\"506\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-875c7acdf40d8cecfb1b70c6e9c9fc1f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"917\" data-original=\"https://pic1.zhimg.com/v2-0d1210d2c231e168e7123dba2c4d8d5f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='917'%20height='506'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"917\" data-rawheight=\"506\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-875c7acdf40d8cecfb1b70c6e9c9fc1f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"917\" data-original=\"https://pic1.zhimg.com/v2-0d1210d2c231e168e7123dba2c4d8d5f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-0d1210d2c231e168e7123dba2c4d8d5f_720w.jpg?source=54b3c3a5\"></figure><p>6、机器学习实战</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-7c72059feabc3a9a6a93b462bd36818f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"695\" data-rawheight=\"508\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-5291c1a4b663c3bfe798ab2359c9b5cb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"695\" data-original=\"https://pic2.zhimg.com/v2-7c72059feabc3a9a6a93b462bd36818f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='695'%20height='508'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"695\" data-rawheight=\"508\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-5291c1a4b663c3bfe798ab2359c9b5cb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"695\" data-original=\"https://pic2.zhimg.com/v2-7c72059feabc3a9a6a93b462bd36818f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-7c72059feabc3a9a6a93b462bd36818f_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-c47be4eb9c234d3c3242aa4880a80597_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"634\" data-rawheight=\"596\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-efa11eeedb05328d26d5eb3c1966ac8e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"634\" data-original=\"https://pic4.zhimg.com/v2-c47be4eb9c234d3c3242aa4880a80597_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='634'%20height='596'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"634\" data-rawheight=\"596\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-efa11eeedb05328d26d5eb3c1966ac8e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"634\" data-original=\"https://pic4.zhimg.com/v2-c47be4eb9c234d3c3242aa4880a80597_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-c47be4eb9c234d3c3242aa4880a80597_720w.jpg?source=54b3c3a5\"></figure><p>大家可以用网站+书+图谱结合的形式来学，这样一方面节省了学习走歪路浪费时间的情况，另一方面也可以更全面的掌握Python及机器学习方向的知识。</p><p>给你们推荐一些我当初在学Python的时候用过网站及书籍。</p><h2>一、网站推荐</h2><p><b>1、Python </b></p><p>Python初学者的法宝，如果你想下载Python，最好还是在这个网址去下，不要想着用一些不明来源的安装包。在这里，你不仅可以下载各种版本的Python源代码和安装程序，更有各种文献资料、Python交流社区，还会告诉你Python的最新行情，不得不感叹，这功能太强大！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1227\" data-rawheight=\"235\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c3ff6a926f09ecf7de0e8cff74f12030_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1227\" data-original=\"https://pic4.zhimg.com/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1227'%20height='235'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1227\" data-rawheight=\"235\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c3ff6a926f09ecf7de0e8cff74f12030_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1227\" data-original=\"https://pic4.zhimg.com/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.python.org/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-ff06c339780f23112c1cbbbb284158ff_l.jpg?source=54b3c3a5\" data-image-width=\"200\" data-image-height=\"200\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Welcome to Python.org</a><p><b>2、菜鸟教程</b></p><p>站内的知识点很全面，无论你想学习哪种领域，都可以轻松在这里找到合适的资料。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1278\" data-rawheight=\"142\" class=\"origin_image zh-lightbox-thumb\" width=\"1278\" data-original=\"https://pic4.zhimg.com/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1278'%20height='142'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1278\" data-rawheight=\"142\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1278\" data-original=\"https://pic4.zhimg.com/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.runoob.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">菜鸟教程 - 学的不仅是技术，更是梦想！</a><p><b>3、Codecademy</b></p><p>这个学习网站很大的优势就是在浏览器上直接编写代码，轻松解决了初学者程序环境安装的困扰。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"944\" data-rawheight=\"136\" class=\"origin_image zh-lightbox-thumb\" width=\"944\" data-original=\"https://pic2.zhimg.com/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='944'%20height='136'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"944\" data-rawheight=\"136\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"944\" data-original=\"https://pic2.zhimg.com/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.codecademy.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">codecademy.com/</span><span class=\"invisible\"></span></a><p><b>4、Coursera</b></p><p>如果你英文比较好，交流没有问题的话，比较推荐这个网站。这是一个课程学习网站，内容涵盖编程各个领域，目前已经和200+所大学合作课程，还可以在线读学士、硕士学位。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-81745d14b1bde5ecd1bd04a48d24be28_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1072\" data-rawheight=\"212\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-73b40b638b9e768fb56ec0a6dabe2ec6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1072\" data-original=\"https://pic4.zhimg.com/v2-81745d14b1bde5ecd1bd04a48d24be28_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1072'%20height='212'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1072\" data-rawheight=\"212\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-73b40b638b9e768fb56ec0a6dabe2ec6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1072\" data-original=\"https://pic4.zhimg.com/v2-81745d14b1bde5ecd1bd04a48d24be28_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-81745d14b1bde5ecd1bd04a48d24be28_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.coursera.org/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">coursera.org/</span><span class=\"invisible\"></span></a><p><b>5、CSDN</b></p><p>如果说你的英文是难题，给你推荐CSDN，是国内老牌程序员社区，里边有各领域博文、资料、课程，基本很多专业问题都可以在这里查。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1105\" data-rawheight=\"201\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-fc2258a955c3632a9c11c8ce1aa8c044_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1105\" data-original=\"https://pic1.zhimg.com/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1105'%20height='201'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1105\" data-rawheight=\"201\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-fc2258a955c3632a9c11c8ce1aa8c044_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1105\" data-original=\"https://pic1.zhimg.com/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net%3Futm_source%3Deduxy_zhihu_0710_thdz_edu\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CSDN学院-IT实战派</a><h2>二、书籍推荐</h2><p><b>1、《笨办法学Python》</b></p><p>如果是初学Python的话，没有什么编程基础，还是比较适合从这本开始学的。整体是以习题的方式开始引导初学者学习编程。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-fa3d4da81eac4d25263f7558eec368e1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"640\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a717b8b1b9764379ebb730bd3608e9c1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-fa3d4da81eac4d25263f7558eec368e1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='640'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"640\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a717b8b1b9764379ebb730bd3608e9c1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-fa3d4da81eac4d25263f7558eec368e1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-fa3d4da81eac4d25263f7558eec368e1_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//m.tb.cn/h.VJQdwV1\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">笨办法学Python</a><p><b>2、《Python Cookbook》</b></p><p>这本书既有知识点的详细讲解，又有更多高阶用法的延伸，对于已经有一定基础但是掌握不牢的同学来说，无疑是值得拥有的好书。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-7949fe082eca48c4cb65728598006c0e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"469\" data-rawheight=\"617\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8d63fe117497e9b67a8cb8487a981a19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"469\" data-original=\"https://pic1.zhimg.com/v2-7949fe082eca48c4cb65728598006c0e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='469'%20height='617'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"469\" data-rawheight=\"617\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8d63fe117497e9b67a8cb8487a981a19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"469\" data-original=\"https://pic1.zhimg.com/v2-7949fe082eca48c4cb65728598006c0e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-7949fe082eca48c4cb65728598006c0e_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//m.tb.cn/h.VqHmgp4\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Cookbook</a><p><b>3、《流畅的Python》</b></p><p>这本书对于Python的高级用法探究很深入，涵盖了数据结构、对象、并行与并发、元编程等多个方向。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-fb5f1217be61867e0b90dbbc6fc099ed_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"924\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2b2ce74a87239f5fbd9d9ebba9701fdf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"700\" data-original=\"https://pic4.zhimg.com/v2-fb5f1217be61867e0b90dbbc6fc099ed_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='700'%20height='924'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"924\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2b2ce74a87239f5fbd9d9ebba9701fdf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"700\" data-original=\"https://pic4.zhimg.com/v2-fb5f1217be61867e0b90dbbc6fc099ed_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-fb5f1217be61867e0b90dbbc6fc099ed_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//m.tb.cn/h.VJQ6Gsz\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">流畅的Python</a><p><br>上边这些都是更偏向于纯自学，更适合于自学能力比较强或者理解力强的人。</p><p>如果说，你在上学的时候，都是每天一堆问题等着问老师或者让班里的学霸帮你解答，那你可以在以上方式的基础上，加个网上的视频课（要能向老师提问的那种），这种方式真的不丢人，大家谁也不是神，我自学能力不算强，开始是看书，但是总会陷入自己的问题怪圈里出不来，也是这么一路问过来的。</p><h2>三、课程推荐</h2><p>我是在网易云课堂、51、慕课、CSDN学院买了不下10套关于Python入门的课，在得到也买了时间管理课。</p><p>我自己的话，因为我是想进行系统学习，也想节省一些学习时间，加上我也比较懒，非得有人督促着才能坚持不懈，所以我选了CSDN的Python训练营。</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/topic/python115%3Futm_source%3Deduxy_zwzhihu_xtk_0714\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-e059f149d5f1062e4b6e4831078ae220_bh.jpg?source=54b3c3a5\" data-image-width=\"750\" data-image-height=\"320\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python工程师-CSDN学院</a><p><br></p><p>最近正在学习Python的进阶领域-AI，这回同样参与了一个训练营，深刻感受到监督使人进步！不为别的，也是希望自己以后的工作范围更广，也能跟上时代的脚步。</p><a href=\"https://link.zhihu.com/?target=https%3A//marketing.csdn.net/p/b3bca8ef2345fbda9e52fe414d5f28d9%3Futm_source%3Deduxy_zwzhihu_xtk\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">人工智能工程师</a><p>有朋友觉得我很累，明明用Python就可以拿着足够生活的薪资，在女朋友生日的时候也总是能给她惊喜，但是说实话，如果只有一个随时被人超越的技能，会让我没有安全感。</p><p>这两年的经济情况，大家其实都有目共睹。</p><p>达芬奇告诉我们：“勤劳一日，可得一夜安眠；勤劳一生，可得幸福长眠。”</p><p>如果我仅仅满足于昨天的勤劳，又怎么敢保证明天的幸福？多学精一个技能，至少我可以不用成为那个“离职”瞬间就觉得生活一片灰暗的“幸运儿”，我还可以拥有一个让自己满意、也更有前途的工作，所以我宁愿现在多吃一份甚至两份的苦！</p><p>我选择的是从零开始全方向提升，因为我想着，既然要痛苦，就直接痛苦这一次。上边就是我学过的系统课，内容很全，不过价格也相对更贵。</p><p>如果有的同学目前是打算一步一步慢慢来，或者之前已经有一些基础，只是想突破单个方向，下边这几门课程我也在刚接触Python的时候买来学的，价格更便宜，内容却丝毫不打折扣，是比较值得学习的！<br></p><p><b>1、基础知识</b></p><p>如果是毫无基础可言，甚至不知道如何下载Python， 比较推荐齐伟老师的《8小时Python零基础轻松入门》。细节全面，适合小白入门。</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/29122%3Futm_source%3Deduxy_zhihu_0714_thdz_29122\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-dd4861c32c105a3aa9b53a8be092d34f_200x0.jpg?source=54b3c3a5\" data-image-width=\"375\" data-image-height=\"5037\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">8小时Python零基础轻松入门</a><p><b>2、爬虫</b></p><p>这回是偏基础点的，之前也分享过两门，都可以进行参考。</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/24756%3Futm_source%3Deduxy_zhihu_0714_thdz_24756\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-c2f8874caaf9356013677e7eb10048af_200x0.jpg?source=54b3c3a5\" data-image-width=\"584\" data-image-height=\"1887\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">150讲轻松搞定Python网络爬虫</a><p><br></p><p><b>3、数据分析</b></p><p>我买过两类数据分析课，零基础入门和多方位学习，现在直接发出来，也是为了方便不同需求的同学。</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/25326%3Futm_source%3Deduxy_zhihu_0714_thdz_25326\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-a5fd30085baa7d5d1f58331906050229_200x0.jpg?source=54b3c3a5\" data-image-width=\"750\" data-image-height=\"1703\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据挖掘基础：零基础学Python数据分析</a><a href=\"https://link.zhihu.com/?target=https%3A//study.163.com/course/introduction/1209819804.htm\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2020Python全能型数据分析师技能 - 网易云课堂</a><p><br></p><p><b>4、机器学习</b></p><p>说起人工智能讲的好的老师，必说唐宇迪（感觉真的霸榜各个学习平台）。</p><p>他是计算机的博士，好像还参与了挺多国家级项目，我听过几次他的课和直播，老师的讲课风格很幽默，经常会举例子，让你更清晰的搞懂知识点，我觉得自己是在学习中享受。</p><p>（基础知识配实战，这样学习起来相对也更容易）</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/10184%3Futm_source%3Deduxy_zhihu_0714_thdz_10184\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">10小时玩转机器学习</a><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/10085%3Futm_source%3Deduxy_zhihu_0714_thdz_10085\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python机器学习进阶实战视频教学</a><p>今天先说到这里，下回我会跟大家细说这回学AI心酸与快乐，满心干货！</p><p>还有20天，我的ai训练营就结束了，期待我能有所收获，学完以后，我准备向阿里迈进一步，祝我成功吧！</p><p><br></p><p><b>更新：</b></p><p><b>有很多朋友私信问我Python学习有没有什么好的资料，我给大家找了几门不错的免费课，想学的可以看看。</b></p><p>《Python入门教程》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/24459%3Futm_source%3Deduxy_zhihuylrs_24459_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门教程--Python视频教程-编程语言-CSDN学院</a><p>《Python初级入门精讲》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/6521%3Futm_source%3Deduxy_zhihuylrs_6521_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python初级入门精讲--Python视频教程-编程语言-CSDN学院</a><p>《Python爬虫开发》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/24454%3Futm_source%3Deduxy_zhihuylrs_24454_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫开发--Python视频教程-编程语言-CSDN学院</a><p>《Python实战编程》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/19711%3Futm_source%3Deduxy_zhihuylrs_19711_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python实战编程--Python视频教程-编程语言-CSDN学院</a><p>《1小时掌握Python爬虫+高效学习法则》</p><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net/course/detail/25062%3Futm_source%3Deduxy_zhihuylxf_25062_0609\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">1小时掌握Python爬虫+高效学习法则--Python视频教程-编程语言-CSDN学院</a><p><br></p><p><b>原回答：</b></p><p>Github上位名叫骆昊 (jackfrued) 的资深程序员，为大家规划了一条从“从新手到大师”的百天之路！我觉得这个模式你可以参考一下。</p><p>现在已经有5w+星了！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-853cafba51a782833e6cc98faa88b0a0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1007\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb\" width=\"1007\" data-original=\"https://pic1.zhimg.com/v2-853cafba51a782833e6cc98faa88b0a0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1007'%20height='470'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1007\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1007\" data-original=\"https://pic1.zhimg.com/v2-853cafba51a782833e6cc98faa88b0a0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-853cafba51a782833e6cc98faa88b0a0_720w.jpg?source=54b3c3a5\"></figure><p>给初学者的几个建议：</p><ul><li>Make English as your working language.</li><li>Practice makes perfect.</li><li>All experience comes from mistakes.</li><li>Don't be one of the leeches.</li><li>Either stand out or kicked out.</li></ul><p><br></p><p><br>先附上github地址：</p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://github.com/jackfrued/Python-100-Day</a><p><br></p><p>下面是这个一百天计划里面的学习框架，我在这里放上来。</p><h2>Day01~15 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python语言基础</a></h2><blockquote>Day01 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/01.%25E5%2588%259D%25E8%25AF%2586Python.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">初识Python</a></blockquote><p>Python简介 - Python的历史 / Python的优缺点 / Python的应用领域</p><p>搭建编程环境 - Windows环境 / Linux环境 / MacOS环境</p><p>从终端运行Python程序 - Hello, world / print函数 / 运行程序</p><p>使用IDLE - 交互式环境(REPL) / 编写多行代码 / 运行程序 / 退出IDLE</p><p>注释 - 注释的作用 / 单行注释 / 多行注释</p><blockquote>Day02 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/02.%25E8%25AF%25AD%25E8%25A8%2580%25E5%2585%2583%25E7%25B4%25A0.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">语言元素</a></blockquote><p>程序和进制 - 指令和程序 / 冯诺依曼机 / 二进制和十进制 / 八进制和十六进制</p><p>变量和类型 - 变量的命名 / 变量的使用 / input函数 / 检查变量类型 / 类型转换</p><p>数字和字符串 - 整数 / 浮点数 / 复数 / 字符串 / 字符串基本操作 / 字符编码</p><p>运算符 - 数学运算符 / 赋值运算符 / 比较运算符 / 逻辑运算符 / 身份运算符 / 运算符的优先级</p><p>应用案例 - 华氏温度转换成摄氏温度 / 输入圆的半径计算周长和面积 / 输入年份判断是否是闰年</p><blockquote>Day03 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/03.%25E5%2588%2586%25E6%2594%25AF%25E7%25BB%2593%25E6%259E%2584.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">分支结构</a></blockquote><p>分支结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图</p><p>if语句 - 简单的if / if-else结构 / if-elif-else结构 / 嵌套的if</p><p>应用案例 - 用户身份验证 / 英制单位与公制单位互换 / 掷骰子决定做什么 / 百分制成绩转等级制 / 分段函数求值 / 输入三条边的长度如果能构成三角形就计算周长和面积</p><blockquote>Day04 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/04.%25E5%25BE%25AA%25E7%258E%25AF%25E7%25BB%2593%25E6%259E%2584.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">循环结构</a></blockquote><p>循环结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图</p><p>while循环 - 基本结构 / break语句 / continue语句</p><p>for循环 - 基本结构 / range类型 / 循环中的分支结构 / 嵌套的循环 / 提前结束程序</p><p>应用案例 - 1~100求和 / 判断素数 / 猜数字游戏 / 打印九九表 / 打印三角形图案 / 猴子吃桃 / 百钱百鸡</p><blockquote>Day05 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/05.%25E6%259E%2584%25E9%2580%25A0%25E7%25A8%258B%25E5%25BA%258F%25E9%2580%25BB%25E8%25BE%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">构造程序逻辑</a></blockquote><p>基础练习 - 水仙花数 / 完美数 / 五人分鱼 / Fibonacci数列 / 回文素数</p><p>综合练习 - Craps赌博游戏</p><blockquote>Day06 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/06.%25E5%2587%25BD%25E6%2595%25B0%25E5%2592%258C%25E6%25A8%25A1%25E5%259D%2597%25E7%259A%2584%25E4%25BD%25BF%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">函数和模块的使用</a></blockquote><p>函数的作用 - 代码的坏味道 / 用函数封装功能模块</p><p>定义函数 - def语句 / 函数名 / 参数列表 / return语句 / 调用自定义函数</p><p>调用函数 - Python内置函数 / 导入模块和函数</p><p>函数的参数 - 默认参数 / 可变参数 / 关键字参数 / 命名关键字参数</p><p>函数的返回值 - 没有返回值 / 返回单个值 / 返回多个值</p><p>作用域问题 - 局部作用域 / 嵌套作用域 / 全局作用域 / 内置作用域 / 和作用域相关的关键字</p><p>用模块管理函数 - 模块的概念 / 用自定义模块管理函数 / 命名冲突的时候会怎样（同一个模块和不同的模块）</p><blockquote>Day07 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/07.%25E5%25AD%2597%25E7%25AC%25A6%25E4%25B8%25B2%25E5%2592%258C%25E5%25B8%25B8%25E7%2594%25A8%25E6%2595%25B0%25E6%258D%25AE%25E7%25BB%2593%25E6%259E%2584.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">字符串和常用数据结构</a></blockquote><p>字符串的使用 - 计算长度 / 下标运算 / 切片 / 常用方法</p><p>列表基本用法 - 定义列表 / 用下表访问元素 / 下标越界 / 添加元素 / 删除元素 / 修改元素 / 切片 / 循环遍历</p><p>列表常用操作 - 连接 / 复制(复制元素和复制数组) / 长度 / 排序 / 倒转 / 查找</p><p>生成列表 - 使用range创建数字列表 / 生成表达式 / 生成器</p><p>元组的使用 - 定义元组 / 使用元组中的值 / 修改元组变量 / 元组和列表转换</p><p>集合基本用法 - 集合和列表的区别 / 创建集合 / 添加元素 / 删除元素 / 清空</p><p>集合常用操作 - 交集 / 并集 / 差集 / 对称差 / 子集 / 超集</p><p>字典的基本用法 - 字典的特点 / 创建字典 / 添加元素 / 删除元素 / 取值 / 清空</p><p>字典常用操作 - keys()方法 / values()方法 / items()方法 / setdefault()方法</p><p>基础练习 - 跑马灯效果 / 列表找最大元素 / 统计考试成绩的平均分 / Fibonacci数列 / 杨辉三角</p><p>综合案例 - 双色球选号 / 井字棋</p><blockquote>Day08 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/08.%25E9%259D%25A2%25E5%2590%2591%25E5%25AF%25B9%25E8%25B1%25A1%25E7%25BC%2596%25E7%25A8%258B%25E5%259F%25BA%25E7%25A1%2580.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">面向对象编程基础</a></blockquote><p>类和对象 - 什么是类 / 什么是对象 / 面向对象其他相关概念</p><p>定义类 - 基本结构 / 属性和方法 / 构造器 / 析构器 / __str__方法</p><p>使用对象 - 创建对象 / 给对象发消息</p><p>面向对象的四大支柱 - 抽象 / 封装 / 继承 / 多态</p><p>基础练习 - 定义学生类 / 定义时钟类 / 定义图形类 / 定义汽车类</p><blockquote>Day09 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/09.%25E9%259D%25A2%25E5%2590%2591%25E5%25AF%25B9%25E8%25B1%25A1%25E8%25BF%259B%25E9%2598%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">面向对象进阶</a></blockquote><p>属性 - 类属性 / 实例属性 / 属性访问器 / 属性修改器 / 属性删除器 / 使用__slots__</p><p>类中的方法 - 实例方法 / 类方法 / 静态方法</p><p>运算符重载 - __add__ / __sub__ / __or__ /__getitem__ / __setitem__ / __len__ / __repr__ / __gt__ / __lt__ / __le__ / __ge__ / __eq__ / __ne__ / __contains__</p><p>类(的对象)之间的关系 - 关联 / 继承 / 依赖</p><p>继承和多态 - 什么是继承 / 继承的语法 / 调用父类方法 / 方法重写 / 类型判定 / 多重继承 / 菱形继承(钻石继承)和C3算法</p><p>综合案例 - 工资结算系统 / 图书自动折扣系统 / 自定义分数类</p><blockquote>Day10 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/10.%25E5%259B%25BE%25E5%25BD%25A2%25E7%2594%25A8%25E6%2588%25B7%25E7%2595%258C%25E9%259D%25A2%25E5%2592%258C%25E6%25B8%25B8%25E6%2588%258F%25E5%25BC%2580%25E5%258F%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">图形用户界面和游戏开发</a></blockquote><p>使用tkinter开发GUI</p><p>使用pygame三方库开发游戏应用</p><p>“大球吃小球”游戏</p><blockquote>Day11 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/11.%25E6%2596%2587%25E4%25BB%25B6%25E5%2592%258C%25E5%25BC%2582%25E5%25B8%25B8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文件和异常</a></blockquote><ul><li>读文件 - 读取整个文件 / 逐行读取 / 文件路径</li><li>写文件 - 覆盖写入 / 追加写入 / 文本文件 / 二进制文件</li><li>异常处理 - 异常机制的重要性 / try-except代码块 / else代码块 / finally代码块 / 内置异常类型 / 异常栈 / raise语句</li><li>数据持久化 - CSV文件概述 / csv模块的应用 / JSON数据格式 / json模块的应用</li></ul><blockquote>Day12 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/12.%25E5%25AD%2597%25E7%25AC%25A6%25E4%25B8%25B2%25E5%2592%258C%25E6%25AD%25A3%25E5%2588%2599%25E8%25A1%25A8%25E8%25BE%25BE%25E5%25BC%258F.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">字符串和正则表达式</a></blockquote><ul><li>字符串高级操作 - 转义字符 / 原始字符串 / 多行字符串 / in和 not in运算符 / is开头的方法 / join和split方法 / strip相关方法 / pyperclip模块 / 不变字符串和可变字符串 / StringIO的使用</li><li>正则表达式入门 - 正则表达式的作用 / 元字符 / 转义 / 量词 / 分组 / 零宽断言 /贪婪匹配与惰性匹配懒惰 / 使用re模块实现正则表达式操作（匹配、搜索、替换、捕获）</li><li>使用正则表达式 - re模块 / compile函数 / group和groups方法 / match方法 / search方法 / findall和finditer方法 / sub和subn方法 / split方法</li><li>应用案例 - 使用正则表达式验证输入的字符串</li></ul><blockquote>Day13 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/13.%25E8%25BF%259B%25E7%25A8%258B%25E5%2592%258C%25E7%25BA%25BF%25E7%25A8%258B.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">进程和线程</a></blockquote><ul><li>进程和线程的概念 - 什么是进程 / 什么是线程 / 多线程的应用场景</li><li>使用进程 - fork函数 / multiprocessing模块 / 进程池 / 进程间通信</li><li>使用线程 - thread模块 / threading模块 / Thread类 / Lock类 / Condition类 / 线程池</li></ul><blockquote>Day14 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/14.%25E7%25BD%2591%25E7%25BB%259C%25E7%25BC%2596%25E7%25A8%258B%25E5%2585%25A5%25E9%2597%25A8%25E5%2592%258C%25E7%25BD%2591%25E7%25BB%259C%25E5%25BA%2594%25E7%2594%25A8%25E5%25BC%2580%25E5%258F%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网络编程入门和网络应用开发</a></blockquote><ul><li>计算机网络基础 - 计算机网络发展史 / “TCP-IP”模型 / IP地址 / 端口 / 协议 / 其他相关概念</li><li>网络应用模式 - “客户端-服务器”模式 / “浏览器-服务器”模式</li><li>基于HTTP协议访问网络资源 - 网络API概述 / 访问URL / requests模块 / 解析JSON格式数据</li><li>Python网络编程 - 套接字的概念 / socket模块 / socket函数 / 创建TCP服务器 / 创建TCP客户端 / 创建UDP服务器 / 创建UDP客户端 / SocketServer模块</li><li>电子邮件 - SMTP协议 / POP3协议 / IMAP协议 / smtplib模块 / poplib模块 / imaplib模块</li><li>短信服务 - 调用短信服务网关</li></ul><blockquote>Day15 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/15.%25E5%259B%25BE%25E5%2583%258F%25E5%2592%258C%25E5%258A%259E%25E5%2585%25AC%25E6%2596%2587%25E6%25A1%25A3%25E5%25A4%2584%25E7%2590%2586.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">图像和文档处理</a></blockquote><ul><li>用Pillow处理图片 - 图片读写 / 图片合成 / 几何变换 / 色彩转换 / 滤镜效果</li><li>读写Word文档 - 文本内容的处理 / 段落 / 页眉和页脚 / 样式的处理</li><li>读写Excel文件 - xlrd模块 / xlwt模块</li><li>生成PDF文件 - pypdf2模块 / reportlab模块</li></ul><h2>Day16~Day20 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day16-20/16.Python%25E8%25AF%25AD%25E8%25A8%2580%25E8%25BF%259B%25E9%2598%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python语言进阶</a></h2><ul><li>常用数据结构</li><li>函数的高级用法 - “一等公民” / 高阶函数 / Lambda函数 / 作用域和闭包 / 装饰器</li><li>面向对象高级知识 - “三大支柱” / 类与类之间的关系 / 垃圾回收 / 魔术属性和方法 / 混入 / 元类 / 面向对象设计原则 / GoF设计模式</li><li>迭代器和生成器 - 相关魔术方法 / 创建生成器的两种方式 /</li><li>并发和异步编程 - 多线程 / 多进程 / 异步IO / async和await</li></ul><h3>Day21~30 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day21-30/21.Web%25E5%2589%258D%25E7%25AB%25AF%25E6%25A6%2582%25E8%25BF%25B0.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Web前端入门</a></h3><ul><li>用HTML标签承载页面内容</li><li>用CSS渲染页面</li><li>用JavaScript处理交互式行为</li><li>jQuery入门和提高</li><li>Vue.js入门</li><li>Element的使用</li><li>Bootstrap的使用</li></ul><h3>Day31~35 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day31-35/31.%25E7%258E%25A9%25E8%25BD%25ACLinux%25E6%2593%258D%25E4%25BD%259C%25E7%25B3%25BB%25E7%25BB%259F.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">玩转Linux操作系统</a></h3><ul><li>操作系统发展史和Linux概述</li><li>Linux基础命令</li><li>Linux中的实用程序</li><li>Linux的文件系统</li><li>Vim编辑器的应用</li><li>环境变量和Shell编程</li><li>软件的安装和服务的配置</li><li>网络访问和管理</li><li>其他相关内容</li></ul><h3>Day36~40 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day36-40\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据库基础和进阶</a></h3><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day36-40/36.%25E5%2585%25B3%25E7%25B3%25BB%25E5%259E%258B%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593MySQL.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">关系型数据库MySQL</a></li><ul><li>关系型数据库概述</li><li>MySQL的安装和使用</li><li>SQL的使用</li><ul><li>DDL - 数据定义语言 - create / drop / alter</li><li>DML - 数据操作语言 - insert / delete / update / select</li><li>DCL - 数据控制语言 - grant / revoke</li></ul></ul></ul><p><br></p><ul><ul><li>相关知识</li><ul><li>范式理论 - 设计二维表的指导思想</li><li>数据完整性</li><li>数据一致性</li></ul></ul></ul><p><br></p><ul><ul><li>在Python中操作MySQL</li></ul></ul><p><br></p><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day36-40/39.NoSQL%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">NoSQL入门</a></li><ul><li>NoSQL概述</li><li>Redis概述</li><li>Mongo概述</li></ul></ul><p><br></p><h3>Day41~55 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">实战Django</a></h3><blockquote>Day41 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/41.%25E5%25BF%25AB%25E9%2580%259F%25E4%25B8%258A%25E6%2589%258B.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">快速上手</a></blockquote><ul><li>Web应用工作原理和HTTP协议</li><li>Django框架概述</li><li>5分钟快速上手</li><li>使用视图模板</li></ul><blockquote>Day42 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/42.%25E6%25B7%25B1%25E5%2585%25A5%25E6%25A8%25A1%25E5%259E%258B.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">深入模型</a></blockquote><ul><li>关系型数据库配置</li><li>管理后台的使用</li><li>使用ORM完成对模型的CRUD操作</li><li>Django模型最佳实践</li><li>模型定义参考</li></ul><blockquote>Day43 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/43.%25E9%259D%2599%25E6%2580%2581%25E8%25B5%2584%25E6%25BA%2590%25E5%2592%258CAjax%25E8%25AF%25B7%25E6%25B1%2582.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">静态资源和Ajax请求</a></blockquote><ul><li>加载静态资源</li><li>用Ajax请求获取数据</li></ul><blockquote>Day44 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/44.%25E8%25A1%25A8%25E5%258D%2595%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">表单的应用</a></blockquote><ul><li>表单和表单控件</li><li>跨站请求伪造和CSRF令牌</li><li>Form和ModelForm</li><li>表单验证</li></ul><blockquote>Day45 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/45.Cookie%25E5%2592%258CSession.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Cookie和Session</a></blockquote><ul><li>实现用户跟踪</li><li>cookie和session的关系</li><li>Django框架对session的支持</li><li>视图函数中的cookie读写操作</li></ul><blockquote>Day46 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/46.%25E6%258A%25A5%25E8%25A1%25A8%25E5%2592%258C%25E6%2597%25A5%25E5%25BF%2597.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">报表和日志</a></blockquote><ul><li>通过HttpResponse修改响应头</li><li>使用StreamingHttpResponse处理大文件</li><li>使用xlwt生成Excel报表</li><li>使用reportlab生成PDF报表</li><li>使用ECharts生成前端图表</li><li>配置日志和Django-Debug-Toolbar</li></ul><blockquote>Day47 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/47.%25E4%25B8%25AD%25E9%2597%25B4%25E4%25BB%25B6%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">中间件的应用</a></blockquote><ul><li>什么是中间件</li><li>Django框架内置的中间件</li><li>自定义中间件及其应用场景</li></ul><blockquote>Day48 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/48.%25E5%2589%258D%25E5%2590%258E%25E7%25AB%25AF%25E5%2588%2586%25E7%25A6%25BB%25E5%25BC%2580%25E5%258F%2591%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">前后端分离开发入门</a></blockquote><ul><li>返回JSON格式的数据</li><li>用Vue.js渲染页面</li></ul><blockquote>Day49 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/49.RESTful%25E6%259E%25B6%25E6%259E%2584%25E5%2592%258CDRF%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RESTful架构和DRF入门</a><br>Day50 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/50.RESTful%25E6%259E%25B6%25E6%259E%2584%25E5%2592%258CDRF%25E8%25BF%259B%25E9%2598%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RESTful架构和DRF进阶</a><br>Day51 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/51.%25E4%25BD%25BF%25E7%2594%25A8%25E7%25BC%2593%25E5%25AD%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用缓存</a></blockquote><ul><li>网站优化第一定律</li><li>在Django项目中使用Redis提供缓存服务</li><li>在视图函数中读写缓存</li><li>使用装饰器实现页面缓存</li><li>为数据接口提供缓存服务</li></ul><blockquote>Day52 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/52.%25E6%2596%2587%25E4%25BB%25B6%25E4%25B8%258A%25E4%25BC%25A0.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文件上传和富文本编辑</a></blockquote><ul><li>文件上传表单控件和图片文件预览</li><li>服务器端如何处理上传的文件</li><li>富文本编辑器概述</li><li>wangEditor的使用</li></ul><blockquote>Day53 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/53.%25E7%259F%25AD%25E4%25BF%25A1%25E5%2592%258C%25E9%2582%25AE%25E4%25BB%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">短信和邮件</a></blockquote><ul><li>常用短信网关平台介绍</li><li>使用螺丝帽发送短信</li><li>Django框架对邮件服务的支持</li></ul><blockquote>Day54 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/54.%25E5%25BC%2582%25E6%25AD%25A5%25E4%25BB%25BB%25E5%258A%25A1%25E5%2592%258C%25E5%25AE%259A%25E6%2597%25B6%25E4%25BB%25BB%25E5%258A%25A1.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">异步任务和定时任务</a></blockquote><ul><li>网站优化第二定律</li><li>配置消息队列服务</li><li>在项目中使用celery实现任务异步化</li><li>在项目中使用celery实现定时任务</li></ul><blockquote>Day55 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/55.%25E5%258D%2595%25E5%2585%2583%25E6%25B5%258B%25E8%25AF%2595%25E5%2592%258C%25E9%25A1%25B9%25E7%259B%25AE%25E4%25B8%258A%25E7%25BA%25BF.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">单元测试和项目上线</a></blockquote><ul><li>Python中的单元测试</li><li>Django框架对单元测试的支持</li><li>使用版本控制系统</li><li>配置和使用uWSGI</li><li>动静分离和Nginx配置</li><li>配置HTTPS</li></ul><h3>Day56~60 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-65\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">实战Flask</a></h3><blockquote>Day56 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/56.Flask%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Flask入门</a><br>Day57 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/57.%25E6%25A8%25A1%25E6%259D%25BF%25E7%259A%2584%25E4%25BD%25BF%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">模板的使用</a><br>Day58 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/58.%25E8%25A1%25A8%25E5%258D%2595%25E7%259A%2584%25E5%25A4%2584%25E7%2590%2586.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">表单的处理</a><br>Day59 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/59.%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593%25E6%2593%258D%25E4%25BD%259C.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据库操作</a><br>Day60 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/60.%25E9%25A1%25B9%25E7%259B%25AE%25E5%25AE%259E%25E6%2588%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">项目实战</a></blockquote><h3>Day61~65 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">实战Tornado</a></h3><blockquote>Day61 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/61.%25E9%25A2%2584%25E5%25A4%2587%25E7%259F%25A5%25E8%25AF%2586.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">预备知识</a></blockquote><ul><li>并发编程</li><li>I/O模式和事件驱动</li></ul><blockquote>Day62 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/62.Tornado%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tornado入门</a></blockquote><ul><li>Tornado概述</li><li>5分钟上手Tornado</li><li>路由解析</li><li>请求处理器</li></ul><blockquote>Day63 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/63.%25E5%25BC%2582%25E6%25AD%25A5%25E5%258C%2596.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">异步化</a></blockquote><ul><li>aiomysql和aioredis的使用</li></ul><blockquote>Day64 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/64.WebSocket%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">WebSocket的应用</a></blockquote><ul><li>WebSocket简介</li><li>WebSocket服务器端编程</li><li>WebSocket客户端编程</li><li>项目：Web聊天室</li></ul><blockquote>Day65 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/65.%25E9%25A1%25B9%25E7%259B%25AE%25E5%25AE%259E%25E6%2588%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">项目实战</a></blockquote><ul><li>前后端分离开发和接口文档的撰写</li><li>使用Vue.js实现前端渲染</li><li>使用ECharts实现报表功能</li><li>使用WebSocket实现推送服务</li></ul><h3>Day66~75 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">爬虫开发</a></h3><blockquote>Day66 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/66.%25E7%25BD%2591%25E7%25BB%259C%25E7%2588%25AC%25E8%2599%25AB%25E5%2592%258C%25E7%259B%25B8%25E5%2585%25B3%25E5%25B7%25A5%25E5%2585%25B7.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网络爬虫和相关工具</a></blockquote><ul><li>网络爬虫的概念及其应用领域</li><li>网络爬虫的合法性探讨</li><li>开发网络爬虫的相关工具</li><li>一个爬虫程序的构成</li></ul><blockquote>Day67 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/67.%25E6%2595%25B0%25E6%258D%25AE%25E9%2587%2587%25E9%259B%2586%25E5%2592%258C%25E8%25A7%25A3%25E6%259E%2590.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据采集和解析</a></blockquote><ul><li>数据采集的标准和三方库</li><li>页面解析的三种方式：正则表达式解析 / XPath解析 / CSS选择器解析</li></ul><blockquote>Day68 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/68.%25E5%25AD%2598%25E5%2582%25A8%25E6%2595%25B0%25E6%258D%25AE.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">存储数据</a></blockquote><ul><li>如何存储海量数据</li><li>实现数据的缓存</li></ul><blockquote>Day69 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/69.%25E5%25B9%25B6%25E5%258F%2591%25E4%25B8%258B%25E8%25BD%25BD.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">并发下载</a></blockquote><ul><li>多线程和多进程</li><li>异步I/O和协程</li><li>async和await关键字的使用</li><li>三方库aiohttp的应用</li></ul><blockquote>Day70 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/70.%25E8%25A7%25A3%25E6%259E%2590%25E5%258A%25A8%25E6%2580%2581%25E5%2586%2585%25E5%25AE%25B9.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">解析动态内容</a></blockquote><ul><li>JavaScript逆向工程</li><li>使用Selenium获取动态内容</li></ul><blockquote>Day71 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/71.%25E8%25A1%25A8%25E5%258D%2595%25E4%25BA%25A4%25E4%25BA%2592%25E5%2592%258C%25E9%25AA%258C%25E8%25AF%2581%25E7%25A0%2581%25E5%25A4%2584%25E7%2590%2586.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">表单交互和验证码处理</a></blockquote><ul><li>自动提交表单</li><li>Cookie池的应用</li><li>验证码处理</li></ul><blockquote>Day72 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/72.Scrapy%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy入门</a></blockquote><ul><li>Scrapy爬虫框架概述</li><li>安装和使用Scrapy</li></ul><blockquote>Day73 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/73.Scrapy%25E9%25AB%2598%25E7%25BA%25A7%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy高级应用</a></blockquote><ul><li>Spider的用法</li><li>中间件的应用：下载中间件 / 蜘蛛中间件</li><li>Scrapy对接Selenium抓取动态内容</li><li>Scrapy部署到Docker</li></ul><blockquote>Day74 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/74.Scrapy%25E5%2588%2586%25E5%25B8%2583%25E5%25BC%258F%25E5%25AE%259E%25E7%258E%25B0.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy分布式实现</a></blockquote><ul><li>分布式爬虫的原理</li><li>Scrapy分布式实现</li><li>使用Scrapyd实现分布式部署</li></ul><blockquote>Day75 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/75.%25E7%2588%25AC%25E8%2599%25AB%25E9%25A1%25B9%25E7%259B%25AE%25E5%25AE%259E%25E6%2588%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">爬虫项目实战</a></blockquote><ul><li>爬取招聘网站数据</li><li>爬取房地产行业数据</li><li>爬取二手车交易平台数据</li></ul><h3>Day76~90 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据处理和机器学习</a></h3><blockquote>Day76 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/76.%25E6%259C%25BA%25E5%2599%25A8%25E5%25AD%25A6%25E4%25B9%25A0%25E5%259F%25BA%25E7%25A1%2580.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">机器学习基础</a><br>Day77 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/77.Pandas%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Pandas的应用</a><br>Day78 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/78.NumPy%25E5%2592%258CSciPy%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">NumPy和SciPy的应用</a><br>Day79 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/79.Matplotlib%25E5%2592%258C%25E6%2595%25B0%25E6%258D%25AE%25E5%258F%25AF%25E8%25A7%2586%25E5%258C%2596\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Matplotlib和数据可视化</a><br>Day80 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/80.k%25E6%259C%2580%25E8%25BF%2591%25E9%2582%25BB%25E5%2588%2586%25E7%25B1%25BB.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">k最近邻(KNN)分类</a><br>Day81 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/81.%25E5%2586%25B3%25E7%25AD%2596%25E6%25A0%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">决策树</a><br>Day82 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/82.%25E8%25B4%259D%25E5%258F%25B6%25E6%2596%25AF%25E5%2588%2586%25E7%25B1%25BB.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">贝叶斯分类</a><br>Day83 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/83.%25E6%2594%25AF%25E6%258C%2581%25E5%2590%2591%25E9%2587%258F%25E6%259C%25BA.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">支持向量机(SVM)</a><br>Day84 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/84.K-%25E5%259D%2587%25E5%2580%25BC%25E8%2581%259A%25E7%25B1%25BB.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">K-均值聚类</a><br>Day85 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/85.%25E5%259B%259E%25E5%25BD%2592%25E5%2588%2586%25E6%259E%2590.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">回归分析</a><br>Day86 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/86.%25E5%25A4%25A7%25E6%2595%25B0%25E6%258D%25AE%25E5%2588%2586%25E6%259E%2590%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">大数据分析入门</a><br>Day87 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/87.%25E5%25A4%25A7%25E6%2595%25B0%25E6%258D%25AE%25E5%2588%2586%25E6%259E%2590%25E8%25BF%259B%25E9%2598%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">大数据分析进阶</a><br>Day88 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/88.Tensorflow%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tensorflow入门</a><br>Day89 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/89.Tensorflow%25E5%25AE%259E%25E6%2588%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tensorflow实战</a><br>Day90 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/90.%25E6%258E%25A8%25E8%258D%2590%25E7%25B3%25BB%25E7%25BB%259F.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">推荐系统</a></blockquote><h3>Day91~100 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">团队项目开发</a></h3><blockquote>第91天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/91.%25E5%259B%25A2%25E9%2598%259F%25E9%25A1%25B9%25E7%259B%25AE%25E5%25BC%2580%25E5%258F%2591%25E5%2587%2586%25E5%25A4%2587.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">团队项目开发准备</a></blockquote><ol><li>软件过程模型<br></li></ol><ul><li>经典过程模型（瀑布模型）<br></li><ul><li>可行性分析（研究做还是不做），输出《可行性分析报告》。</li><li>需求分析（研究做什么），输出《需求规格说明书》和产品界面原型图。</li><li>概要设计和详细设计，输出概念模型图、物理模型图、类图、时序图等。</li><li>编码 / 测试。</li><li>上线 / 维护。</li></ul></ul><p><br></p><ul><ul><li>敏捷开发（Scrum）- 产品所有者、Scrum Master、研发人员 - Sprint<br></li><ul><li>产品的Backlog（用户故事、产品原型）。</li><li>计划会议（评估和预算）。</li><li>日常开发（站立会议、番茄工作法、结对编程、测试先行、代码重构……）。</li><li>修复bug（问题描述、重现步骤、测试人员、被指派人）。</li><li>评审会议（Showcase）。</li><li>回顾会议（当前周期做得好和不好的地方）。</li></ul></ul></ul><p>补充：敏捷软件开发宣言<br></p><ul><ul><ul><li><b>个体和互动</b> 高于 流程和工具</li><li><b>工作的软件</b> 高于 详尽的文档</li><li><b>客户合作</b> 高于 合同谈判</li><li><b>响应变化</b> 高于 遵循计划</li></ul></ul></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-ce5f820b4293e1eeb3d267a34f3f3110_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2848\" data-rawheight=\"1664\" class=\"origin_image zh-lightbox-thumb\" width=\"2848\" data-original=\"https://pic4.zhimg.com/v2-ce5f820b4293e1eeb3d267a34f3f3110_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2848'%20height='1664'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2848\" data-rawheight=\"1664\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2848\" data-original=\"https://pic4.zhimg.com/v2-ce5f820b4293e1eeb3d267a34f3f3110_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-ce5f820b4293e1eeb3d267a34f3f3110_720w.jpg?source=54b3c3a5\"></figure><p><br>角色：产品所有者（决定做什么，能对需求拍板的人）、团队负责人（解决各种问题，专注如何更好的工作，屏蔽外部对开发团队的影响）、开发团队（项目执行人员，具体指开发人员和测试人员）。<br>准备工作：商业案例和资金、合同、憧憬、初始产品需求、初始发布计划、入股、组建团队。<br>敏捷团队通常人数为8-10人。<br>工作量估算：将开发任务量化，包括原型、Logo设计、UI设计、前端开发等，尽量把每个工作分解到最小任务量，最小任务量标准为工作时间不能超过两天，然后估算总体项目时间。把每个任务都贴在白板上面，白板上分三部分：to do（待完成）、in progress（进行中）和done（已完成）。</p><p><br></p><ol><li>项目团队组建<br></li></ol><ul><li>团队的构成和角色<br>说明：谢谢付祥英女士绘制了下面这张精美的公司组织架构图。<br></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-405573bc2c41c2269d9525e7d30e29ab_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1070\" data-rawheight=\"689\" class=\"origin_image zh-lightbox-thumb\" width=\"1070\" data-original=\"https://pic1.zhimg.com/v2-405573bc2c41c2269d9525e7d30e29ab_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1070'%20height='689'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1070\" data-rawheight=\"689\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1070\" data-original=\"https://pic1.zhimg.com/v2-405573bc2c41c2269d9525e7d30e29ab_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-405573bc2c41c2269d9525e7d30e29ab_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ul><ul><li>编程规范和代码审查（flake8、pylint）<br></li></ul></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-9d9e88a5b557b8218a1fab2155677194_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1768\" data-rawheight=\"808\" class=\"origin_image zh-lightbox-thumb\" width=\"1768\" data-original=\"https://pic2.zhimg.com/v2-9d9e88a5b557b8218a1fab2155677194_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1768'%20height='808'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1768\" data-rawheight=\"808\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1768\" data-original=\"https://pic2.zhimg.com/v2-9d9e88a5b557b8218a1fab2155677194_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-9d9e88a5b557b8218a1fab2155677194_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ul><ul><li>Python中的一些“惯例”（请参考<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Python%25E6%2583%25AF%25E4%25BE%258B.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Python惯例-如何编写Pythonic的代码》</a>）</li><li>影响代码可读性的原因：<br></li><ul><li>代码注释太少或者没有注释</li><li>代码破坏了语言的最佳实践</li><li>反模式编程（意大利面代码、复制-黏贴编程、自负编程、……）</li></ul></ul></ul><p><br></p><p><br></p><ol><li>团队开发工具介绍<br></li></ol><ul><li>版本控制：Git、Mercury</li><li>缺陷管理：<a href=\"https://link.zhihu.com/?target=https%3A//about.gitlab.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Gitlab</a>、<a href=\"https://link.zhihu.com/?target=http%3A//www.redmine.org.cn/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Redmine</a></li><li>敏捷闭环工具：<a href=\"https://link.zhihu.com/?target=https%3A//www.zentao.net/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">禅道</a>、<a href=\"https://link.zhihu.com/?target=https%3A//www.atlassian.com/software/jira/features\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">JIRA</a></li><li>持续集成：<a href=\"https://link.zhihu.com/?target=https%3A//jenkins.io/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Jenkins</a>、<a href=\"https://link.zhihu.com/?target=https%3A//travis-ci.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Travis-CI</a></li></ul><p>请参考<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/%25E5%259B%25A2%25E9%2598%259F%25E9%25A1%25B9%25E7%259B%25AE%25E5%25BC%2580%25E5%258F%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《团队项目开发》</a>。</p><h3>项目选题和理解业务</h3><ol><li>选题范围设定<br></li></ol><ul><li>CMS（用户端）：新闻聚合网站、问答/分享社区、影评/书评网站等。</li><li>MIS（用户端+管理端）：KMS、KPI考核系统、HRS、CRM系统、供应链系统、仓储管理系统等。</li><li>App后台（管理端+数据接口）：二手交易类、报刊杂志类、小众电商类、新闻资讯类、旅游类、社交类、阅读类等。</li><li>其他类型：自身行业背景和工作经验、业务容易理解和把控。</li></ul><p><br></p><ol><li>需求理解、模块划分和任务分配<br></li></ol><ul><li>需求理解：头脑风暴和竞品分析。</li><li>模块划分：画思维导图（XMind），每个模块是一个枝节点，每个具体的功能是一个叶节点（用动词表述），需要确保每个叶节点无法再生出新节点，确定每个叶子节点的重要性、优先级和工作量。</li><li>任务分配：由项目负责人根据上面的指标为每个团队成员分配任务。</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-f309876270b182a35f8bce02ca554b00_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1950\" data-rawheight=\"530\" class=\"origin_image zh-lightbox-thumb\" width=\"1950\" data-original=\"https://pic2.zhimg.com/v2-f309876270b182a35f8bce02ca554b00_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1950'%20height='530'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1950\" data-rawheight=\"530\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1950\" data-original=\"https://pic2.zhimg.com/v2-f309876270b182a35f8bce02ca554b00_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-f309876270b182a35f8bce02ca554b00_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ol><li>制定项目进度表（每日更新）<br></li></ol><h3>第92天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/92.Docker%25E5%259C%25A8%25E9%25A1%25B9%25E7%259B%25AE%25E4%25B8%25AD%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Docker的使用</a></h3><h3>第93天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/93.%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593%25E8%25AE%25BE%25E8%25AE%25A1%25E5%2592%258COOAD.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据库设计和OOAD</a></h3><h3>概念模型和正向工程</h3><ol><li>UML（统一建模语言）的类图<br></li></ol><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-1688a7b35bfc3d0f133fb5621c1a638c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1104\" data-rawheight=\"804\" class=\"origin_image zh-lightbox-thumb\" width=\"1104\" data-original=\"https://pic1.zhimg.com/v2-1688a7b35bfc3d0f133fb5621c1a638c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1104'%20height='804'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1104\" data-rawheight=\"804\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1104\" data-original=\"https://pic1.zhimg.com/v2-1688a7b35bfc3d0f133fb5621c1a638c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-1688a7b35bfc3d0f133fb5621c1a638c_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ol><li>通过模型创建表（正向工程）<br>python manage.py makemigrations app python manage.py migrate</li></ol><h3>物理模型和反向工程</h3><ol><li>PowerDesigner<br></li></ol><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-336f81e1bcbb8c06b73ebbd503be92c9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1300\" data-rawheight=\"1100\" class=\"origin_image zh-lightbox-thumb\" width=\"1300\" data-original=\"https://pic1.zhimg.com/v2-336f81e1bcbb8c06b73ebbd503be92c9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1300'%20height='1100'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1300\" data-rawheight=\"1100\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1300\" data-original=\"https://pic1.zhimg.com/v2-336f81e1bcbb8c06b73ebbd503be92c9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-336f81e1bcbb8c06b73ebbd503be92c9_720w.jpg?source=54b3c3a5\"></figure><p>2.通过数据表创建模型（反向工程）<br>python manage.py inspectdb &gt; app/models.py</p><blockquote>第94天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/94.%25E7%25BD%2591%25E7%25BB%259CAPI%25E6%258E%25A5%25E5%258F%25A3%25E8%25AE%25BE%25E8%25AE%25A1.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网络API接口设计</a><br>第95天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/95.%25E4%25BD%25BF%25E7%2594%25A8Django%25E5%25BC%2580%25E5%258F%2591%25E9%25A1%25B9%25E7%259B%25AE.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用Django开发项目</a></blockquote><h3>项目开发中的公共问题</h3><ol><li>数据库的配置（多数据库、主从复制、数据库路由）</li><li>缓存的配置（分区缓存、键设置、超时设置、主从复制、故障恢复（哨兵））</li><li>日志的配置</li><li>分析和调试（Django-Debug-ToolBar）</li><li>好用的Python模块（日期计算、图像处理、数据加密、三方API）</li></ol><h3>REST API设计</h3><ol><li>RESTful架构</li></ol><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//www.ruanyifeng.com/blog/2011/09/restful.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">理解RESTful架构</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.ruanyifeng.com/blog/2014/05/restful_api.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RESTful API设计指南</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RESTful API最佳实践</a></li></ul><p><br></p><ol><li>API接口文档的撰写</li></ol><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//rap2.taobao.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RAP2</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//yapi.demo.qunar.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">YAPI</a></li></ul><p><br></p><ol><li><a href=\"https://link.zhihu.com/?target=https%3A//www.django-rest-framework.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">django-REST-framework</a>的应用</li></ol><h3>项目中的重点难点剖析</h3><ol><li>使用缓存缓解数据库压力 - Redis</li><li>使用消息队列做解耦合和削峰 - Celery + RabbitMQ</li></ol><h3>第96天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/96.%25E8%25BD%25AF%25E4%25BB%25B6%25E6%25B5%258B%25E8%25AF%2595%25E5%2592%258C%25E8%2587%25AA%25E5%258A%25A8%25E5%258C%2596%25E6%25B5%258B%25E8%25AF%2595.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">软件测试和自动化测试</a></h3><h3>单元测试</h3><ol><li>测试的种类</li><li>编写单元测试（unittest、pytest、nose2、tox、ddt、……）</li><li>测试覆盖率（coverage）</li></ol><h3>项目部署</h3><ol><li>部署前的准备工作</li></ol><ul><li>关键设置（SECRET_KEY / DEBUG / ALLOWED_HOSTS / 缓存 / 数据库）</li><li>HTTPS / CSRF_COOKIE_SECUR / SESSION_COOKIE_SECURE</li><li>日志相关配置</li></ul><p><br></p><ol><li>Linux常用命令回顾</li><li>Linux常用服务的安装和配置</li><li>uWSGI/Gunicorn和Nginx的使用</li></ol><ul><li>Gunicorn和uWSGI的比较</li><ul><li>对于不需要大量定制化的简单应用程序，Gunicorn是一个不错的选择，uWSGI的学习曲线比Gunicorn要陡峭得多，Gunicorn的默认参数就已经能够适应大多数应用程序。</li><li>uWSGI支持异构部署。</li><li>由于Nginx本身支持uWSGI，在线上一般都将Nginx和uWSGI捆绑在一起部署，而且uWSGI属于功能齐全且高度定制的WSGI中间件。</li><li>在性能上，Gunicorn和uWSGI其实表现相当。</li></ul></ul><p><br></p><p><br></p><ol><li>虚拟化技术（Docker）</li></ol><h3>性能测试</h3><ol><li>AB的使用</li><li>SQLslap的使用</li><li>sysbench的使用</li></ol><h3>自动化测试</h3><ol><li>使用Shell和Python进行自动化测试</li><li>使用Selenium实现自动化测试</li></ol><ul><li>Selenium IDE</li><li>Selenium WebDriver</li><li>Selenium Remote Control</li></ul><p><br></p><ol><li>测试工具Robot Framework介绍</li></ol><blockquote>第97天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/97.%25E7%2594%25B5%25E5%2595%2586%25E7%25BD%2591%25E7%25AB%2599%25E6%258A%2580%25E6%259C%25AF%25E8%25A6%2581%25E7%2582%25B9%25E5%2589%2596%25E6%259E%2590.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">电商网站技术要点剖析</a><br>第98天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/98.%25E9%25A1%25B9%25E7%259B%25AE%25E9%2583%25A8%25E7%25BD%25B2%25E4%25B8%258A%25E7%25BA%25BF%25E5%2592%258C%25E6%2580%25A7%25E8%2583%25BD%25E8%25B0%2583%25E4%25BC%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">项目部署上线和性能调优</a></blockquote><ol><li>MySQL数据库调优</li><li>Web服务器性能优化</li></ol><p>3.代码性能调优</p><ul><li>多线程</li><li>异步化</li></ul><p>4.静态资源访问优化</p><ul><ul><li>云存储</li><li>CDN</li></ul></ul><blockquote>第99天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/99.%25E9%259D%25A2%25E8%25AF%2595%25E4%25B8%25AD%25E7%259A%2584%25E5%2585%25AC%25E5%2585%25B1%25E9%2597%25AE%25E9%25A2%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">面试中的公共问题</a><br>第100天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/100.%25E8%258B%25B1%25E8%25AF%25AD%25E9%259D%25A2%25E8%25AF%2595.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">英语面试</a></blockquote><p><br></p><p>作者：骆昊 (jackfrued)</p><p>来源：github</p><p>github地址：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/jackfrued/Py</span><span class=\"invisible\">thon-100-Days</span><span class=\"ellipsis\"></span></a></p><p><br></p><p>注明：</p><p>很多小伙伴纠结于这个一百天的时间，我觉得完全没有必要，也违背了我最初放这个大纲上来的初衷，我是觉得这个学习大纲还不错，自学按照这个来也能相对系统的学习知识，而不是零散细碎的知识最后无法整合，每个人的基础以及学习进度都不一样，没有必要纠结于一百天这个时间。</p><hr><p>公号：聊聊Python，感兴趣的可以来找我玩，一起来聊聊Python这点事~</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-b6baeeb5cc2c9acd1d09cb46f43c3d41_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"300\" class=\"content_image\" width=\"300\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='300'%20height='300'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"300\" class=\"content_image lazy\" width=\"300\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-b6baeeb5cc2c9acd1d09cb46f43c3d41_720w.jpg?source=54b3c3a5\"></figure><p></p>", "让一台电脑死机至少需要几行代码？": "<p>你这么想死的吗, 不管什么语言什么系统, 反正一行就够了....</p><p>左下角输入cmd回车, 然后输入 </p><div class=\"highlight\"><pre><code class=\"language-powershell\"><span></span><span class=\"n\">set</span> <span class=\"p\">/</span><span class=\"n\">p</span><span class=\"p\">=</span><span class=\"s2\">\"%0|%0\"</span><span class=\"p\">&lt;</span><span class=\"n\">nul</span><span class=\"p\">&gt;</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">bat</span><span class=\"p\">&amp;</span><span class=\"n\">s</span>\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-0f4e8b8d956855eb31c2bf818e101549_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"392\" data-rawheight=\"680\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-e15f44bc12c0aa06329a34277eb073db_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"392\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='392'%20height='680'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"392\" data-rawheight=\"680\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-e15f44bc12c0aa06329a34277eb073db_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"392\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0f4e8b8d956855eb31c2bf818e101549_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>本来想用 echo 的... 然后我发现我不知道windows下面echo怎么禁掉换行...</p><p>你要没跳出来cmd, 那新建个txt, 然后输入<code>%0|%0</code> , 改后缀为bat或者cmd, 然后运行一样可以升天....</p><p>然后蓝屏重启之后搞不好C盘里还会有成G的名为xxxdump的垃圾...</p>", "什么原因让你想当程序员？": "<p>你，上海土著，家境贫寒，没房没车，普通师范本科+垃圾文科专业。大四毕业后你的同学不是考同校毛邓三专业的研究生就是去小学初中做老师、去考公务员，或者去做行政HR工作。你不想和他们一样，当时的你认为自己并非池中物，是迟早要做CEO的，于是壮志凌云地注册了51job，看了几天发现没有技能要求的似乎只有X平洋X家的电话销售，此外还有一些市场营销相关的运营职位。</p><p>你想起那句事后看来非常有毒的著名鸡汤——“<b>CEO大部分都是从销售干起的</b>”，于是你斗志昂扬地去应聘销售岗位，在打了几天骚扰电话被骂得怀疑人生之后，你抬头一看，发现周围的同事大多是中专技校甚至初中文凭，操着口音浓厚的普通话在自己的工位上唾沫横飞；在话术培训的过程中你又发现你们家的产品压根一点竞争力都没有，只能通过忽悠和撒谎来做单子；你的部门经理赫然把每个人的指标排行榜挂在了办公室最显眼的地方，那些鲜红的数字无时无刻在告诉你这么一个残酷的现实——<b>在这里混得滋润与否只取决于你出卖良心和脸皮的程度</b>。你现在唯一所想的只是赶快逃离这块地方，于是你连工资都没要就走人了。</p><p>之后你又尝试了文职岗位，去做了策划文案与新媒体运营，没有了赤裸裸的销售指标压迫与出卖良心的歉疚感，你长舒了一口气。可过不了多久，你又发现你每天挖空心思替自家品牌写的文案与微信微博图文压根没有人看，你们10000+的双微粉丝大部分都是买的，并且粉丝数会在每次推送之后都以肉眼可见的速度进行跌落，你成了你的上司每周一例会必定要数落的那个落后代表。悲剧的是，此后你无论怎么在文案、在新媒体上瞎搞瞎折腾，你对于公司的价值甚至都抵不上你们那个月薪4000不到的小美女前台。<b>你每天上班大部分时间都在刷微博知乎，制作一些无关紧要的表格文档与PPT，拿着4000出头的月工资，你所有的工作内容都能轻松地被一个高中生所替代而你对此无可奈何</b>，你甚至心疼你的老板，每天发你200块工资你都替他不值，因为你觉得<b>工作内容非常没有意义</b>，除了健身和游戏，<b>你找不到任何让自己有存在感和成就感的事</b>，每天上班的心情就跟上坟一样。曾经的豪言壮语，曾经想要出人头地的梦想，几近消磨殆尽。</p><p>彷徨了若干年之后，你开始接受”<b>不是每个人都有能耐或机遇从文职基础岗位做上管理层</b>“这个事实，而且你并不想靠出卖自己的良心和脸皮谋生。你开始积极地寻找出路，此时你对”一技之长“的渴望已经到了近乎饥渴的地步，你开始幻想自己如果能够从事技术性工种是不是会更好，因为你爱看书爱动脑子，中学时代理科也是你的相对强项。一个偶然的机会，你接触了W3CSchool，知道了编程这么一回事，同时也了解到这行的收入比较高但很辛苦。经过充分地思考之后你下定了决心，一条路走到黑，因为你开始意识到<b>技术门槛越高的职业，相对来说越不需要勾心斗角蝇营狗苟</b>（只是相对，杠精勿扰）。你拥有了久违的学习动力，如饥似渴地从HTML，CSS开始学起，你想要先从web前端开始入门。</p><p>过程是曲折的，时间是漫长的，感受是痛并快乐着的。当你开始入门编程的时候，你眼前的世界豁然开朗，一个宏大壮观的数字世界呈递在了你的眼前，你从没想到过自己用的app，上的网站，背后竟然有这么多弯弯绕绕。内存、变量、顺序、判断分支、循环、函数封装、API、面向对象、框架...每天起床后你都会发现你比昨天的自己多懂了一点，也更强大了一点，并且最让你兴奋的是，如果成功当上了程序员，这份成长的感觉你未来的每天早晨都会有，<b>前提是只要你保持不断的学习即可</b>。每分每秒你感到自己都在进步，并且懊悔为什么过去没有及早决定转行，为什么高考志愿要填文科，为什么初中就不在家里买台电脑...（其实是买不起）。你的代码量积累得越来越多，你解决问题的能力越来越强，你自学的方法越来越成熟，你离上车只差临门一脚。</p><p>最终，你顺利转行成功，成为了一名合格的初级前端，你很知足，因为收入已经翻了过去3倍不止，<b>并且每天你的工作都是饱和且充满意义与成就感的，你终于感受到了”学以致用“原来是这么幸福的一件事</b>，每天起床你迫不及待地往公司赶就为了多敲两行代码多看些文档教程，你似乎找回了人生的意义。你的上司是一位在大厂呆过多年的网游服务端C++大牛，从入职开始他就给予了你很多帮助与提升，你开始幻想有朝一日自己能成为他，<b>你开始不满足于前端的一亩三分地，你想搞清楚每一个ajax请求背后的事情而不仅仅满足于视其为黑盒子，你想学Java，学PHP，学PY，学SQL，你甚至想从大学本科的计算机底层课程学起，C/C++，操作系统，二进制，编译原理...</b>你前所未有地觉得时间真的不够，并开始认为打游戏和与朋友聚会是很浪费时间的事情，此时的你，只想心无旁骛地变得更强。</p><p>…</p><p>强</p><p>…</p><p>更强</p><p>…</p><p>还要强</p><p>…</p><p>越来越强</p><p>…</p><p><b>是的，我只是想体面地活着，想靠出卖自己的智力与技能而非脸皮或良心去谋生，想变得更强，想走遍天下都有饭吃，哪怕996我也无怨无悔，仅此而已，</b>这就是我选择当程序员的原因。</p><p><br></p><p>—————分割线—————</p><p>挂个人</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-ff6f9bb1e803e0f1d90ee225485274f4_720w.jpg?source=54b3c3a5\" data-rawwidth=\"750\" data-rawheight=\"399\" data-size=\"normal\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7ff94537237668d383a018c9c394342d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"750\" data-original=\"https://pic2.zhimg.com/v2-ff6f9bb1e803e0f1d90ee225485274f4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='750'%20height='399'&gt;&lt;/svg&gt;\" data-rawwidth=\"750\" data-rawheight=\"399\" data-size=\"normal\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7ff94537237668d383a018c9c394342d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"750\" data-original=\"https://pic2.zhimg.com/v2-ff6f9bb1e803e0f1d90ee225485274f4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-ff6f9bb1e803e0f1d90ee225485274f4_720w.jpg?source=54b3c3a5\"></figure><p></p>"}{"初学 Python 需要安装哪些软件？": "<p><b>2020年7月28日：</b></p><p>从此不再推荐notepad++，该作者有严重的政治倾向，故移除了该软件的推荐。这里感谢小可爱们善意的提醒，我也去官网上查了一下，确有此事。软件工程师的职责是给用户好用的软件，而不是宣泄政治立场的工具。让我们一起抵制！</p><p><b>2019年7月22日：</b></p><p>感谢各位的支持，作为一名知乎新人，能获得这么多赞，万分激动。由于个人原因（懒），这个回答中的一些问题一直没有更新，在此表示歉意。我重新做了分析，在原有的答案上做了修改，有任何问题，可以在讨论区中讨论。</p><p><br></p><p>------------以下为正文区，假装是分割线-----------------</p><p>编程这个东西是真的奇妙。对于懂得的人来说，会觉得这个工具是多么的好用、有趣，而对于小白来说，就如同大山一样。其实这个都可以理解，大家都是这样过来的。那么接下来就说一下python相关的东西吧，并说一下我对编程的理解。本人也是小白一名，如有不对的地方，还请各位大神指出~</p><h2>懒人目录：</h2><ul><li>一、名词解释</li><li>二、Python开发环境</li><li>三、常用Python IDE介绍</li><li>四、Python IDE推荐及一些小建议</li></ul><h2>一、名词解释</h2><p>如果在编程方面接触的比较少，那么对于软件这一块，有几个名词一定要了解，比如开发环境、IDE、代码编辑器、编译器、调试器等等，我先列出来自百度百科关于这几个词的解释。</p><p><b>开发环境：</b></p><blockquote>软件开发环境(Software Development Environment，SDE)是指在基本硬件和数字软件的基础上，为支持系统软件和应用软件的工程化开发和维护而使用的一组软件，简称SDE。它由软件工具和环境集成机制构成，前者用以支持软件开发的相关过程、活动和任务，后者为工具集成和软件的开发、维护及管理提供统一的支持。</blockquote><p><b>IDE：</b></p><blockquote>集成开发环境（IDE，Integrated Development Environment ）是用于提供程序开发环境的应用程序，一般包括代码编辑器、编译器、调试器和图形用户界面等工具。集成了代码编写功能、分析功能、编译功能、调试功能等一体化的开发软件服务套。所有具备这一特性的软件或者软件套（组）都可以叫集成开发环境。如微软的Visual Studio系列，Borland的C++ Builder、Delphi系列等。该程序可以独立运行，也可以和其它程序并用。IDE多被用于开发HTML应用软件。例如，许多人在设计网站时使用IDE（如HomeSite、DreamWeaver等），因为很多项任务会自动生成。</blockquote><p><b>编译器：</b></p><blockquote>简单讲，编译器就是将“一种语言（通常为高级语言）”翻译为“另一种语言（通常为低级语言）”的程序。一个现代编译器的主要工作流程：源代码 (source code) → 预处理器 (preprocessor) → 编译器 (compiler) → 目标代码 (object code) → 链接器 (Linker) → 可执行程序 (executables)。高级计算机语言便于人编写，阅读交流，维护。机器语言是计算机能直接解读、运行的。编译器将汇编或高级计算机语言源程序（Source program）作为输入，翻译成目标语言（Target language）机器代码的等价程序。源代码一般为高级语言 (High-level language)， 如Pascal、C、C++、Java、汉语编程等或汇编语言，而目标则是机器语言的目标代码（Object code），有时也称作机器代码（Machine code）。对于C#、VB等高级语言而言，此时编译器完成的功能是把源码（SourceCode）编译成通用中间语言（MSIL/CIL）的字节码（ByteCode）。最后运行的时候通过通用语言运行库的转换，编程最终可以被CPU直接计算的机器码（NativeCode）。</blockquote><p>其实百度百科对于这几个词条的解释已经很透彻了，但是对于一些刚接触程序的伙伴来说可能依然很难理解。简单点来说，以我们常见的JAVA语言为例，其实如果你想写一个程序，如果你的电脑里已经安装了JDK，那么其实你已经不需要任何其他的软件就可以实现一些功能。那有人会问，我看大家写JAVA都用eclipse或者intelliJ IDEA呀，没错，大家写JAVA大部分人都用eclipse或者intelliJ IDEA，但是要知道，那个软件叫IDE，或者说就是一个编辑器，一个简易版的eclipse是不会提供JDK的，JDK是需要我们自己单独安装的，这个JDK就是开发环境，你所编写好的代码，如果想编译和运行，就需要JDK这个开发环境所支持，而eclipse和intelliJ IDEA是提供让你编辑、调试、用JDK来编译程序用的，也就是说，你用什么编辑器并不影响你程序的编写，而这些编辑器是让你提高效率，方便调试用的，这些是可选的，而开发环境是必选的。</p><h2>二、Python开发环境</h2><p>好了，我们长篇大论说了这么多关于其他语言的事情，为的就是能让小伙伴们理解软件的关系，接下来我们好好聊聊Pyhton。</p><p>Python其实和其他的编程语言还有点不太一样，它是一种脚本语言，就如同MATLAB语言一样，我们也可以管它叫解释型语言吧。因此，python的运行的过程中，和我们的传统语言，比如C、C++这种编译型语言不太一样，python的运行其实是一种解释的过程，因此它需要解释器，当然，这里我们不考虑把Python编译成可执行文件。如果想运行Python程序，那么必不可少的就是Python的开发环境。</p><p><b>Python原版环境</b></p><p>在Python官网，有提供Python的原版开发环境，该环境为最核心，也是“干净”或者说“纯净”的环境。Python开发环境下载地址：</p><a href=\"https://link.zhihu.com/?target=https%3A//www.python.org/downloads/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-ff06c339780f23112c1cbbbb284158ff_720w.jpg?source=54b3c3a5\" data-image-width=\"200\" data-image-height=\"200\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python开发环境下载</a><p><b>Anaconda：</b></p><p>Anaconda其实属于一站式服务，里面集成了Python的运行环境，并集成了数百种库，此外该软件里面还有Anaconda Navigtor、Jupyter notebook、qtconsole和spyder等，由于集成的功能比较多，用起来相对来说省心一些。Anaconda下载地址：</p><a href=\"https://link.zhihu.com/?target=https%3A//www.anaconda.com/download/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-67f1f36e235a6c5112bfe0e7e74fe73b_720w.jpg?source=54b3c3a5\" data-image-width=\"600\" data-image-height=\"270\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Anaconda Python/R Distribution - Anaconda</a><p><b>一点小建议：</b></p><blockquote>对于Windows的小伙伴们来说，如果喜欢小巧、干净的开发环境，可以优先考虑Python的原版开发环境，如果需要Jupyter notebook和虚拟环境，可以单独用pip来安装。虚拟环境可以安装virtual environment。如果自己不喜欢折腾，喜欢一步到位的那种感觉，可以考虑使用Anaconda，会在开发中提供一定的方便。<br>对于Linux的小伙伴来说，比较推荐Anaconda，因为Linux自带了Python，并且Linux中有很多依赖于Python的程序，如果对Python操作不慎，则会对系统的稳定性造成影响。如果比较熟悉Python，对Python的操作经验比较丰富，可以考虑不安装Anaconda，采用虚拟环境的开发方式进行开发。</blockquote><h2>三、常用Python IDE介绍</h2><p>有了开发环境了，就需要有编辑器之类的软件。其实在安装Python开发环境的时候，就已经自带了一个编辑器，叫IDLE，不过老实讲，这个编辑器用起来真的不是很舒服，尤其是编辑比较庞大的工程的时候。而且，万能的记事本也可以编辑Python，但是我们肯定不能那么干。那么接下来就推荐几款可以编辑python的编辑器。</p><p><b>PyCharm（墙裂推荐）：</b></p><p>PyCharm是一种Python  IDE，带有一整套可以帮助用户在使用Python语言开发时提高其效率的工具，比如调试、语法高亮、Project管理、代码跳转、智能提示、自动完成、单元测试、版本控制。此外，该IDE提供了一些高级功能，以用于支持Django框架下的专业Web开发。PyCharm在编写和调试Python方面可谓是强者，软件使用简单，功能强大，值得推荐。</p><p>PyCharm下载地址：</p><a href=\"https://link.zhihu.com/?target=https%3A//www.jetbrains.com/pycharm/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PyCharm: Python IDE for Professional Developers by JetBrains</a><p>该软件Pro版本为付费软件，如果想免费使用，可以使用社区版。如果你有学校的邮箱，那么你还可以学生版来免费使用，幸运的是，学生版可以体验到专业版的功能。</p><p><b>Visual Studio 2017/ 2019：</b></p><p>Visual Studio是微软公司出品的王牌编辑器，在以前的版本，只能编辑微软家族的程序，如VC++、VB、C#、F#等。但是从VS2017开始，Visual Studio的功能变的多样化，开始支持nodejs、Python、Android甚至是iOS的开发，并且功能完善，易上手。此外还有Mac版本。如果习惯于使用Visual Studio的小可爱们，不妨尝试一下用Visual Studio进行Python开发，也是很享受的。这里推荐VS 2017和VS 2019，VS有社区版、专业版和企业版，其中社区版是免费的。</p><p>Visual Studio的下载地址：</p><a href=\"https://link.zhihu.com/?target=https%3A//visualstudio.microsoft.com/zh-hans/vs/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-691fe4014de83a1c9c0f7968b1eae056_bh.jpg?source=54b3c3a5\" data-image-width=\"500\" data-image-height=\"280\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Visual Studio 2019 | 免费下载</a><p><br></p><p><b>VS Code：</b></p><p>Visual Studio Code (简称 VS Code / VSC) 是一款免费开源的现代化轻量级代码编辑器，支持几乎所有主流的开发语言的语法高亮、智能代码补全、自定义热键、括号匹配、代码片段、代码对比 Diff、GIT 等特性，支持插件扩展，并针对网页开发和云端应用开发做了优化。软件跨平台支持 Win、Mac 以及 Linux。这个软件太漂亮了，我忍不住要放一张图。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-d16b9ec78f6cc542d8d5d567e49253c9_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1500\" data-rawheight=\"894\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-22078d18e1d3addfe6ed40c594458729_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1500\" data-original=\"https://pic2.zhimg.com/v2-d16b9ec78f6cc542d8d5d567e49253c9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1500'%20height='894'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1500\" data-rawheight=\"894\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-22078d18e1d3addfe6ed40c594458729_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1500\" data-original=\"https://pic2.zhimg.com/v2-d16b9ec78f6cc542d8d5d567e49253c9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-d16b9ec78f6cc542d8d5d567e49253c9_720w.jpg?source=54b3c3a5\"><figcaption>VS Code软件截图</figcaption></figure><p>VS Code下载地址：</p><a href=\"https://link.zhihu.com/?target=https%3A//code.visualstudio.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-1cd7d59f29d74a7857f659830999e669_720w.jpg?source=54b3c3a5\" data-image-width=\"1223\" data-image-height=\"630\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Visual Studio Code - Code Editing. Redefined</a><p><b>Sublime Text 3：</b></p><p>类似于VS Code，Sublime Text同样具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。Sublime Text 的主要功能包括：拼写检查，书签，完整的 Python API ， Goto 功能，即时项目切换，多选择，多窗口等等。Sublime Text 是一个跨平台的编辑器，同时支持Windows、Linux和Mac OS等操作系统。</p><p>Sublime Text 3下载地址：</p><a href=\"https://link.zhihu.com/?target=http%3A//www.sublimetext.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">sublimetext.com/</span><span class=\"invisible\"></span></a><p><b>Atom：</b></p><p>Atom 是github专门为程序员推出的一个跨平台文本编辑器。具有简洁和直观的图形用户界面，并有很多有趣的特点，并且支持包含Python在内的众多语言。它支持宏，自动完成分屏功能，集成了文件管理器。</p><p>Atom下载地址：</p><a href=\"https://link.zhihu.com/?target=https%3A//atom.io/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-9cfc3ee2778c9affa1906d93250e37f3_720w.jpg?source=54b3c3a5\" data-image-width=\"1200\" data-image-height=\"630\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">A hackable text editor for the 21st Century</a><p><b>Eclipse：</b></p><p>Eclipse 是一个开放源代码的、基于Java的可扩展开发平台。就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。幸运的是，Eclipse 附带了一个标准的插件集，包括Java开发工具（Java Development Kit，JDK）。Eclipse并不限于编写JAVA，它也可以编写C、python等程序。</p><p>Eclipse下载地址：</p><a href=\"https://link.zhihu.com/?target=https%3A//www.eclipse.org/downloads/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-6fe538a97c489d5f0518c71d39eff99f_720w.jpg?source=54b3c3a5\" data-image-width=\"200\" data-image-height=\"200\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Eclipse Downloads | The Eclipse Foundation</a><h2>四、Python IDE推荐及一些小建议</h2><p>市面上Python IDE有很多，每个IDE都有自己的特点和长处，只有选择适合自己的IDE，开发才会得心应手，事半功倍。</p><p>对于小萌新们来说，Pycharm绝对是不二的选择，Pycharm功能齐全，界面友好，现已有民间汉化包，无论是在代码分析上，还是在环境安装上，Pycharm都给提供了方便的解决方案，免去了很多折腾环境的麻烦，尽可能把复杂的事情交给IDE来完成。</p><p>但是Pycharm有个很致命的缺点，由于功能过于强大，界面也过于华丽，Pycharm对电脑配置的要求很高，动不动内存就会上1G，所以对于有经验的开发人员来说，VS code、Sublime和Atom等软件成为了重要的工具。这些软件十分开放，经过精心的配置和第三方插件的加持，功能也很强大。但是这些软件配置并不简单，所以很适合有经验的伙伴，对于小萌新们来说，不是很友好。</p><p>VS 2017和VS 2019做了巨大的升级，在安装上并没有想象中的那么可拍，如果已经有了完整安装包，十来分钟就可以完成安装，如果只安装必要的功能，体积也只有10几G，而且启动速度和编写流畅度都得到了提升。我有用VS 2019编写过Python程序，还是非常舒服的。</p><p>至于Eclipse，我想我们还是逐渐淡忘它吧，新事物的诞生，旧事物的淘汰，这是亘古不变的话题。新工具的出现，在一定程度上会弥补经典工具的缺陷。对于一些怀旧的伙伴来说，如果能找到一些开发上的解决方案，倒也可以享受经典工具打来的乐趣。不过适应新鲜的事物，不断提升自己的工作效率，不也是一件好事么？</p><p>希望这些对想入坑的伙伴们有所帮助，让我们一起共同学习，共同成长。</p>", "编程初学者如何在GitHub寻找适合自己的小项目？": "<p><b>不 BB，直接上干货！当初学了三个月就找到后台开发的工作，我练手的项目都来自这里！！</b></p><p><b>GitHub 标星 1.6w+，这个神级宝藏项目，作为编程新手有福了！！</b></p><p><br></p><p><b>这篇文章是首发在我公众号“Python空间”的文章，希望准备拥抱开源的你：</b></p><p><b>让走在开源路上的开发者不再孤单，让想进入开源世界的人不再畏惧。</b></p><p><br></p><p><b>以下是正文：</b></p><p>虽然我很早就知道 GitHub，但是学会逛 GitHub 的时间特别晚。当时一方面是因为菜，看着这种全是英文的东西难受，不知道该怎么去玩，另一方面是一直在搞 ACM，没有做一些工程类的项目，所以想当然的以为和 GitHub 也没什么关系（当然这种想法是错误的）。</p><p><br></p><p>后来自己花了一个星期看完了 Python 的基础知识，就想着找点项目看一看，学一学，练一练，这个时候我才真正的去了解 GitHub，开始了在 GitHub 的瞎逛之旅，在开始之初，随之而来的问题是我不知道哪些项目当时还是新手的我，哪些项目是好项目，哪些项目好玩有价值。</p><p><br></p><p>虽然现在我已经在 GitHub 上逛的相当流畅，但我还是想如果有一个东西可以收集这些对新手友好的东西，那么我当时可以少走更多的弯路，节省更多的时间吧。</p><p><br></p><p>那么有这么一个东西么？</p><p><br></p><p>有的，而且已经做了三年多，这就是<b>HelloGitHub</b>，一个分享 GitHub 上有趣，入门级的开源项目。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-696f3022e0884e58ee33f9764c0183b7_720w.jpg?source=54b3c3a5\" data-rawwidth=\"501\" data-rawheight=\"278\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"501\" data-original=\"https://pic1.zhimg.com/v2-696f3022e0884e58ee33f9764c0183b7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='501'%20height='278'&gt;&lt;/svg&gt;\" data-rawwidth=\"501\" data-rawheight=\"278\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"501\" data-original=\"https://pic1.zhimg.com/v2-696f3022e0884e58ee33f9764c0183b7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-696f3022e0884e58ee33f9764c0183b7_720w.jpg?source=54b3c3a5\"></figure><p><br></p><blockquote>GitHub 网址：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/521xueweihan/HelloGitHub\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/521xueweihan</span><span class=\"invisible\">/HelloGitHub</span><span class=\"ellipsis\"></span></a></blockquote><p><br></p><p>在项目中，内容每月 28 号以月刊的形式更新发布，主要是面向编程新手、热爱编程、对开源社区感兴趣人群的项目。更新的内容主要包括：各种语言的流行项目、入门级项目、让生活变得更美好的工具、书籍、学习心得笔记、企业级项目等。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-08c70b9d3eb9a0bcafac6dc523ccb614_720w.jpg?source=54b3c3a5\" data-rawwidth=\"456\" data-rawheight=\"505\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"456\" data-original=\"https://pic1.zhimg.com/v2-08c70b9d3eb9a0bcafac6dc523ccb614_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='456'%20height='505'&gt;&lt;/svg&gt;\" data-rawwidth=\"456\" data-rawheight=\"505\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"456\" data-original=\"https://pic1.zhimg.com/v2-08c70b9d3eb9a0bcafac6dc523ccb614_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-08c70b9d3eb9a0bcafac6dc523ccb614_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>这些项目都有一些共同的特征，那就是很酷，非常容易上手的项目，编程的魅力和便捷体验起来就是这么简单。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-0dd29b558060709fb465d19c16c84d08_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1005\" data-rawheight=\"761\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1005\" data-original=\"https://pic1.zhimg.com/v2-0dd29b558060709fb465d19c16c84d08_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1005'%20height='761'&gt;&lt;/svg&gt;\" data-rawwidth=\"1005\" data-rawheight=\"761\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1005\" data-original=\"https://pic1.zhimg.com/v2-0dd29b558060709fb465d19c16c84d08_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0dd29b558060709fb465d19c16c84d08_720w.jpg?source=54b3c3a5\"></figure><p><br></p><blockquote>再次给出 GitHub 地址: <a href=\"https://link.zhihu.com/?target=https%3A//github.com/521xueweihan/HelloGitHub\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/521xueweihan</span><span class=\"invisible\">/HelloGitHub</span><span class=\"ellipsis\"></span></a></blockquote><p>下面我们就来看看，这个项目具体包括啥，我们以最新的月刊（43 期）为例。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-69f3f2a7eb14fd9f2087587aad6500d3_720w.jpg?source=54b3c3a5\" data-rawwidth=\"891\" data-rawheight=\"295\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"891\" data-original=\"https://pic2.zhimg.com/v2-69f3f2a7eb14fd9f2087587aad6500d3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='891'%20height='295'&gt;&lt;/svg&gt;\" data-rawwidth=\"891\" data-rawheight=\"295\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"891\" data-original=\"https://pic2.zhimg.com/v2-69f3f2a7eb14fd9f2087587aad6500d3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-69f3f2a7eb14fd9f2087587aad6500d3_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><b>0x00 简介</b></h2><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-b7246002f0cc9d5596f144a5239b28f8_720w.jpg?source=54b3c3a5\" data-rawwidth=\"915\" data-rawheight=\"343\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"915\" data-original=\"https://pic1.zhimg.com/v2-b7246002f0cc9d5596f144a5239b28f8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='915'%20height='343'&gt;&lt;/svg&gt;\" data-rawwidth=\"915\" data-rawheight=\"343\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"915\" data-original=\"https://pic1.zhimg.com/v2-b7246002f0cc9d5596f144a5239b28f8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-b7246002f0cc9d5596f144a5239b28f8_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><b>0x01 目录</b></h2><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-ea14380c16e2392ea2538f7d9fa4c82a_720w.jpg?source=54b3c3a5\" data-rawwidth=\"395\" data-rawheight=\"360\" data-size=\"normal\" data-caption=\"\" class=\"content_image\" width=\"395\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='395'%20height='360'&gt;&lt;/svg&gt;\" data-rawwidth=\"395\" data-rawheight=\"360\" data-size=\"normal\" data-caption=\"\" class=\"content_image lazy\" width=\"395\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-ea14380c16e2392ea2538f7d9fa4c82a_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><b>0x02 内容</b></h2><p><br></p><p>每个类型的项目我们挑一个来看。</p><p><br></p><p><b>C 项目</b></p><p><br></p><p>tmux：一个终端复用工具，可极大的提高工作效率。</p><ul><li>提供了强劲的、易于使用的命令行界面；</li><li>可横向和纵向分割窗口；</li><li>窗格可以自由移动和调整大小，或直接利用四个预设布局之一；</li><li>可在多个缓冲区进行复制和粘贴；</li><li>可通过交互式菜单来选择窗口、会话及客户端；</li><li>等等。</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-59d5bdcf77746003fe593a0e2749e61d_720w.jpg?source=54b3c3a5\" data-rawwidth=\"867\" data-rawheight=\"476\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"867\" data-original=\"https://pic1.zhimg.com/v2-59d5bdcf77746003fe593a0e2749e61d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='867'%20height='476'&gt;&lt;/svg&gt;\" data-rawwidth=\"867\" data-rawheight=\"476\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"867\" data-original=\"https://pic1.zhimg.com/v2-59d5bdcf77746003fe593a0e2749e61d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-59d5bdcf77746003fe593a0e2749e61d_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>C# 项目</b></p><p><br></p><p>BenchmarkDotNet：功能强大的用于基准测试 .NET 库。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-5fff128abfbb91852d2e0217ac0ce041_720w.jpg?source=54b3c3a5\" data-rawwidth=\"885\" data-rawheight=\"165\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"885\" data-original=\"https://pic1.zhimg.com/v2-5fff128abfbb91852d2e0217ac0ce041_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='885'%20height='165'&gt;&lt;/svg&gt;\" data-rawwidth=\"885\" data-rawheight=\"165\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"885\" data-original=\"https://pic1.zhimg.com/v2-5fff128abfbb91852d2e0217ac0ce041_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-5fff128abfbb91852d2e0217ac0ce041_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>C++ 项目</b></p><p><br></p><p>dbg-macro：打日志是 C++ 开发中必不可少的一种 debug 方式，dbg-macro 受 rust-lang 中 的 dbg 启发，提供比 printf 和 std::cout 更好的宏函数。主要有如下特点：</p><ul><li>美观的彩色输出（当输出不是交互式终端时，颜色将自动禁用）；</li><li>兼容 C++11，并且是 header-only；</li><li>支持基础类型和 STL 容器类型的输出；</li><li>除了基本信息外，还输出变量名和类型；</li><li>启用 DBG_MACRO_DISABLE 生成 release 版。</li></ul><p><br></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#include &lt;vector&gt;\n#include &lt;dbg.h&gt;\n\n// You can use \"dbg(..)\" in expressions:\nint factorial(int n) {\n  if (dbg(n &lt;= 1)) {\n    return dbg(1);\n  } else {\n    return dbg(n * factorial(n - 1));\n  }\n}\n\nint main() {\n  std::string message = \"hello\";\n  dbg(message);  // [example.cpp:15 (main)] message = \"hello\" (std::string)\n  const int a = 2;\n  const int b = dbg(3 * a) + 1;  // [example.cpp:18 (main)] 3 * a = 6 (int)\n  std::vector&lt;int&gt; numbers{b, 13, 42};\n  dbg(numbers);  // [example.cpp:21 (main)] numbers = {7, 13, 42} (size: 3) (std::vector&lt;int&gt;)\n  dbg(\"this line is executed\");  // [example.cpp:23 (main)] this line is executed\n  factorial(4);\n  return 0;\n}\n</code></pre></div><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-58e5a742bcac0513f9cb244ed56ab473_720w.jpg?source=54b3c3a5\" data-rawwidth=\"602\" data-rawheight=\"257\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"602\" data-original=\"https://pic2.zhimg.com/v2-58e5a742bcac0513f9cb244ed56ab473_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='602'%20height='257'&gt;&lt;/svg&gt;\" data-rawwidth=\"602\" data-rawheight=\"257\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"602\" data-original=\"https://pic2.zhimg.com/v2-58e5a742bcac0513f9cb244ed56ab473_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-58e5a742bcac0513f9cb244ed56ab473_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>Go 项目</b></p><p><br></p><p>go-admin：基于 Golang 语言的数据可视化与管理平台。特性如下：</p><ul><li> 高生产效率：10 分钟内做一个好看的管理后台；</li><li> 主题：默认为 adminlte，更多好看的主题正在制作中，欢迎给我们留言；</li><li> 插件化：提供插件使用，真正实现一个插件解决不了问题，那就两个；</li><li>✅认证：开箱即用的 rbac 认证系统；</li><li>⚙️框架支持：支持大部分框架接入，让你更容易去上手和扩展。</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-160978ce90da4ef6e2520553b5416719_720w.jpg?source=54b3c3a5\" data-rawwidth=\"814\" data-rawheight=\"505\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"814\" data-original=\"https://pic2.zhimg.com/v2-160978ce90da4ef6e2520553b5416719_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='814'%20height='505'&gt;&lt;/svg&gt;\" data-rawwidth=\"814\" data-rawheight=\"505\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"814\" data-original=\"https://pic2.zhimg.com/v2-160978ce90da4ef6e2520553b5416719_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-160978ce90da4ef6e2520553b5416719_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>Java 项目</b></p><p><br></p><p>eladmin：基于 Spring Boot 2.1.0、Vue 的前后端分离的后台管理系统，支持数据字典与数据权限管理、一键生成前后端代码、前端菜单动态路由等。基于 Spring Boot2.1.0 框架，涉及的技术栈：非关系数据库 redis、接口测试工具 swagger、druid 数据源驱动、邮件依赖（javax.mail）、三方支付和云存储 SDK、页面模板引擎 freemarker。技术栈丰富，初学者可以作为实战项目学习和使用。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-796e6030b1933ab49a9f213c04de37f6_720w.jpg?source=54b3c3a5\" data-rawwidth=\"868\" data-rawheight=\"420\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"868\" data-original=\"https://pic2.zhimg.com/v2-796e6030b1933ab49a9f213c04de37f6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='868'%20height='420'&gt;&lt;/svg&gt;\" data-rawwidth=\"868\" data-rawheight=\"420\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"868\" data-original=\"https://pic2.zhimg.com/v2-796e6030b1933ab49a9f213c04de37f6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-796e6030b1933ab49a9f213c04de37f6_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>JavaScript</b> </p><p>chart-race-react：一个简单易用的 Bar Chart Race（长条图赛跑动画） React 组件。示例代码：</p><p><br></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>import ReactDOM from 'react-dom';\nimport BarChart from 'chart-race-react';\n\nReactDOM.render(&lt;BarChart /&gt;, document.getElementById('root'));\n</code></pre></div><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a2f8494b6ecc84d4e33017d309ecc164_720w.gif?source=54b3c3a5\" data-rawwidth=\"639\" data-rawheight=\"317\" data-size=\"normal\" data-caption=\"\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-a2f8494b6ecc84d4e33017d309ecc164_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"639\" data-original=\"https://pic1.zhimg.com/v2-a2f8494b6ecc84d4e33017d309ecc164_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='639'%20height='317'&gt;&lt;/svg&gt;\" data-rawwidth=\"639\" data-rawheight=\"317\" data-size=\"normal\" data-caption=\"\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-a2f8494b6ecc84d4e33017d309ecc164_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"639\" data-original=\"https://pic1.zhimg.com/v2-a2f8494b6ecc84d4e33017d309ecc164_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a2f8494b6ecc84d4e33017d309ecc164_720w.gif?source=54b3c3a5\"></figure><p><br></p><p><b>Python 项目</b></p><p><br></p><p>TagUI-Python：一个 Python 自动化操作的库。比如：自动打开网页并截图，示例代码：</p><p><br></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>t.init()\nt.url('https://www.google.com')\nt.type('q', 'decentralization[enter]')\nt.snap('page', 'results.png')\nt.close()\n</code></pre></div><p><br></p><p><b>Ruby 项目</b></p><p><br></p><p>shift：一个 Ruby 语言写的在线 MySQL 数据库迁移工具。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-1b27ca15d1c4484e047f68e3d625faa4_720w.jpg?source=54b3c3a5\" data-rawwidth=\"868\" data-rawheight=\"51\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"868\" data-original=\"https://pic2.zhimg.com/v2-1b27ca15d1c4484e047f68e3d625faa4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='868'%20height='51'&gt;&lt;/svg&gt;\" data-rawwidth=\"868\" data-rawheight=\"51\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"868\" data-original=\"https://pic2.zhimg.com/v2-1b27ca15d1c4484e047f68e3d625faa4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-1b27ca15d1c4484e047f68e3d625faa4_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-244d28a5cfef33dfdb47cb0d7fa986c8_720w.jpg?source=54b3c3a5\" data-rawwidth=\"870\" data-rawheight=\"455\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"870\" data-original=\"https://pic2.zhimg.com/v2-244d28a5cfef33dfdb47cb0d7fa986c8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='870'%20height='455'&gt;&lt;/svg&gt;\" data-rawwidth=\"870\" data-rawheight=\"455\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"870\" data-original=\"https://pic2.zhimg.com/v2-244d28a5cfef33dfdb47cb0d7fa986c8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-244d28a5cfef33dfdb47cb0d7fa986c8_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>Swift 项目</b></p><p><br></p><p>Percent：让 Swift 语言支持百分比类型，消除精度缺失的烦恼。示例代码：</p><p><br></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>import Percent\n\n10% + 5.5%\n//=&gt; 15.5%\n-10% / 2\n//=&gt; -5%\n</code></pre></div><p><br></p><p><b>其他</b></p><p><br></p><p>cascadia-code：微软开源的一套等宽字体，有趣的是可以组合字符创建新的字形。组合效果如下：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-2ef8af84f31864bb2c270589ca1a375d_720w.jpg?source=54b3c3a5\" data-rawwidth=\"633\" data-rawheight=\"75\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"633\" data-original=\"https://pic1.zhimg.com/v2-2ef8af84f31864bb2c270589ca1a375d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='633'%20height='75'&gt;&lt;/svg&gt;\" data-rawwidth=\"633\" data-rawheight=\"75\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"633\" data-original=\"https://pic1.zhimg.com/v2-2ef8af84f31864bb2c270589ca1a375d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-2ef8af84f31864bb2c270589ca1a375d_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>开源书籍</b></p><p><br></p><p>python_ebook：Python 编程相关的电子书资源集合项目。</p><p><br></p><p>book：（英文）《Cosmic Python》讲述如何管理复杂性的 Pythonic 应用程序结构的书籍。</p><p><br></p><p><b>教程</b></p><p><br></p><p>BigData-Notes：大数据入门教程，该教程介绍了大数据常用技术栈的基础和核心知识。内容涵盖：Hadoop、Spark、Storm、HBase、Hive、ZooKeeper、Kafka 等。</p><p><br></p><p><b>机器学习</b></p><p><br></p><p>dimensionality_reduction_alo_codes：该项目使用 Python 实现了 11 种经典的数据抽取（数据降维）算法。同时附有相关资料、展示效果，适用于机器学习初学者和刚刚入坑数据挖掘的小伙伴。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f671b372fe7886945ae45cce5b4755f7_720w.jpg?source=54b3c3a5\" data-rawwidth=\"719\" data-rawheight=\"406\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"719\" data-original=\"https://pic2.zhimg.com/v2-f671b372fe7886945ae45cce5b4755f7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='719'%20height='406'&gt;&lt;/svg&gt;\" data-rawwidth=\"719\" data-rawheight=\"406\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"719\" data-original=\"https://pic2.zhimg.com/v2-f671b372fe7886945ae45cce5b4755f7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f671b372fe7886945ae45cce5b4755f7_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><b>0x03 写在之后</b></h2><p><br></p><p>以上，就是今天分享的内容，希望更多的人能够知道 HelloGitHub 这个项目，内容已经在这了，万事俱备，差的就是你学习的驱动力和对作者 Star 的支持了。</p><p><br></p><p>另外另外本蒟蒻把公众号的高分原创文章整理成了一本电子书，取名《Python修炼之道》，一共 400 页！</p><p><br></p><p>具体内容请戳：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://zhuanlan.zhihu.com/p/121601381\" data-image=\"https://pic4.zhimg.com/v2-264ec58f90dc2b5ba6bf11607cb836a6_bh.jpg?source=54b3c3a5\" data-image-width=\"470\" data-image-height=\"202\" class=\"internal\">Rocky0429：熬夜爆肝整理 400 页 《Python 修炼之道》，一本高分原创高清电子书送给你！</a><p><br></p><h2>❤️ 看完有所收获？希望爱学习的你不要吝啬三连击哟[点赞 + 收藏 + 评论]</h2><h2>作者Info：</h2><blockquote>【作者】：Rocky0429<br>【原创公众号】：Python空间。<br>【简介】：CSDN 博客专家， 985 计算机在读研究生，ACM 退役狗 &amp; 亚洲区域赛银奖划水选手，爱分享，喜欢交流，欢迎大家和我玩儿~。<br>【转载说明】：转载请说明出处，谢谢合作！~</blockquote>", "你都用 Python 来做什么？": "<p>首先上一首 Python 之禅：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-4ee6092f35facdfb720c5c51d7b0c204_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"552\" data-rawheight=\"337\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c4ab4f5cbb54186c42c5bcd22d4bfaa3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"552\" data-original=\"https://pic4.zhimg.com/v2-4ee6092f35facdfb720c5c51d7b0c204_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='552'%20height='337'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"552\" data-rawheight=\"337\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c4ab4f5cbb54186c42c5bcd22d4bfaa3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"552\" data-original=\"https://pic4.zhimg.com/v2-4ee6092f35facdfb720c5c51d7b0c204_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-4ee6092f35facdfb720c5c51d7b0c204_720w.jpg?source=54b3c3a5\"></figure><p>我从 2015 年 3 月第一次接触 Python 这门语言（之前一直写 PHP），就对其<b>简洁的代码</b>和<b>超快的开发速度</b>深深着迷了。这些年里，我利用 Python 写过非常多的小脚本，绝大部分都是<b>为了提高效率而写</b>的工具，有不少还<b>打包成了桌面版单文件</b>供广大用户使用。</p><h2>1. SciHub Desktop</h2><p>这个软件的最初两个版本是用 Python + TK 写的 GUI 程序，主要是为了方便广大研究生<b>突破权限下载英文文献</b>。内含多个文献下载数据源，只要输入文献的 DOI 号，回车就可以自动下载文献全文，非常方便，目前仅网盘的下载量就超过了<b> 30 万人次</b>。</p><a href=\"https://zhuanlan.zhihu.com/p/31809890\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-273bab72e503b89a8b52ce9b18f6d24d_bh.jpg?source=54b3c3a5\" data-image-width=\"4096\" data-image-height=\"2730\" class=\"internal\">Tsing：SciHub Desktop 桌面版软件官方发布页面</a><h2>2. HistCite Pro</h2><p>这个软件是基于 HistCite 内核开发的<b>免安装易用版本</b>，使用 Python 对从 Web of Science 数据库中导出的数据文件进行<b>预处理</b>，然后进行文献引文分析，<b>快速分析出某个研究领域最具有价值的文献和作者</b>，目前也得到了数万用户的使用。</p><a href=\"https://zhuanlan.zhihu.com/p/20902898\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-3900db998140fac611555e8fde3bde87_bh.jpg?source=54b3c3a5\" data-image-width=\"4011\" data-image-height=\"2687\" class=\"internal\">Tsing：文献引文分析利器 HistCite 详细使用教程暨 HistCite Pro 首发页面</a><h2>3. 上学吧答案神器</h2><p>这款软件是最近才写的，主要实现的是<b>无限制</b>获取<a href=\"https://link.zhihu.com/?target=https%3A//www.shangxueba.com/ask/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">上学吧</a>网站上的题目答案（绕过 IP 限制），并实现了<b>自动识别验证码</b>，只用输入某个题目的网址，即可一键获取答案，速度非常快。</p><a href=\"https://zhuanlan.zhihu.com/p/60502527\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-ed2026c67568dd7e9d3299aee1530f08_bh.jpg?source=54b3c3a5\" data-image-width=\"1767\" data-image-height=\"593\" class=\"internal\">Tsing：自动识别验证码无限次获取上学吧的题目答案</a><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-530811415dca3c5bcf6bb2b731653ce1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"786\" data-rawheight=\"475\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-de2235d86769021873b22f6efe52f472_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"786\" data-original=\"https://pic4.zhimg.com/v2-530811415dca3c5bcf6bb2b731653ce1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='786'%20height='475'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"786\" data-rawheight=\"475\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-de2235d86769021873b22f6efe52f472_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"786\" data-original=\"https://pic4.zhimg.com/v2-530811415dca3c5bcf6bb2b731653ce1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-530811415dca3c5bcf6bb2b731653ce1_720w.jpg?source=54b3c3a5\"></figure><h2>4. 破解观看中科大网络课堂</h2><blockquote>由于<b>本科四年都在科大</b>，所以那时候也写了好多关于科大的脚本（正是因为太喜欢科大了才会去折腾这些哈），虽然目前有些已经失效了，但是还是值得放出来纪念一下的。</blockquote><p>中国科学技术大学<a href=\"https://link.zhihu.com/?target=http%3A//wlkt.ustc.edu.cn/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网络课堂</a>汇集了很多知名教授的授课视频，以及最新的大牛讲座视频，内容相当丰富，但是这些视频<b>只面向校内 IP 开放</b>。后来不小心找到了网站上的一个漏洞，用 Python 写了不到 10 行代码就可以获取真实视频地址，这样就<b>可以在校外看视频了</b>。（这个漏洞目前已经被修复了，大家就不要找我要代码了哈~）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/17673e10f42f5025cd5839299ecab394_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"794\" data-rawheight=\"361\" class=\"origin_image zh-lightbox-thumb\" width=\"794\" data-original=\"https://pic1.zhimg.com/17673e10f42f5025cd5839299ecab394_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='794'%20height='361'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"794\" data-rawheight=\"361\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"794\" data-original=\"https://pic1.zhimg.com/17673e10f42f5025cd5839299ecab394_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/17673e10f42f5025cd5839299ecab394_720w.jpg?source=54b3c3a5\"></figure><p>另外还简单写了一个 GUI 界面，打包成 exe 单软件给室友用，都说挺好用的哈。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/e4f131efeb8ba95b3fb26557c546e7de_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"265\" class=\"origin_image zh-lightbox-thumb\" width=\"521\" data-original=\"https://pic4.zhimg.com/e4f131efeb8ba95b3fb26557c546e7de_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='521'%20height='265'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"265\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"521\" data-original=\"https://pic4.zhimg.com/e4f131efeb8ba95b3fb26557c546e7de_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/e4f131efeb8ba95b3fb26557c546e7de_720w.jpg?source=54b3c3a5\"></figure><h2><b>5. 抓取研究生系统内全部学生姓名学号及选课信息</b></h2><p>登录中国科学技术大学的<a href=\"https://link.zhihu.com/?target=http%3A//yjs.ustc.edu.cn/main.asp\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">研究生综合系统</a>，可以看到每一门课选课的<b>学生姓名和学号</b>，当时就想到做一个这样的系统，输入任何姓名或学号就可以看到他所有的选课信息。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/0af70a5fab239569da1389d2bbf76b65_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"727\" class=\"origin_image zh-lightbox-thumb\" width=\"1366\" data-original=\"https://pic4.zhimg.com/0af70a5fab239569da1389d2bbf76b65_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1366'%20height='727'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"727\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1366\" data-original=\"https://pic4.zhimg.com/0af70a5fab239569da1389d2bbf76b65_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/0af70a5fab239569da1389d2bbf76b65_720w.jpg?source=54b3c3a5\"></figure><p>点击每门课的已选人数链接，可以看到所有的选课学生姓名和学号：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/1e8442d856654a60e33e8c38934203c9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"728\" class=\"origin_image zh-lightbox-thumb\" width=\"1366\" data-original=\"https://pic1.zhimg.com/1e8442d856654a60e33e8c38934203c9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1366'%20height='728'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"728\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1366\" data-original=\"https://pic1.zhimg.com/1e8442d856654a60e33e8c38934203c9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/1e8442d856654a60e33e8c38934203c9_720w.jpg?source=54b3c3a5\"></figure><p>下面利用 requests 的模拟登录功能，先获取全部课程的链接，然后逐个抓取所有课程的选课信息。（为了保护学生信息，对程序的关键部分进行了模糊处理。）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/43301f98c47dd0289aa4d9ad357279c6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1361\" data-rawheight=\"1293\" class=\"origin_image zh-lightbox-thumb\" width=\"1361\" data-original=\"https://pic1.zhimg.com/43301f98c47dd0289aa4d9ad357279c6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1361'%20height='1293'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1361\" data-rawheight=\"1293\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1361\" data-original=\"https://pic1.zhimg.com/43301f98c47dd0289aa4d9ad357279c6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/43301f98c47dd0289aa4d9ad357279c6_720w.jpg?source=54b3c3a5\"></figure><p>这样就获取了一个巨大的 <b>json 文件</b>，里面全都是学生的姓名、学号以及选课信息：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/6ea9e83173d0d8c336702412e642bcee_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"672\" class=\"origin_image zh-lightbox-thumb\" width=\"1366\" data-original=\"https://pic1.zhimg.com/6ea9e83173d0d8c336702412e642bcee_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1366'%20height='672'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"672\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1366\" data-original=\"https://pic1.zhimg.com/6ea9e83173d0d8c336702412e642bcee_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/6ea9e83173d0d8c336702412e642bcee_720w.jpg?source=54b3c3a5\"></figure><p>有了这个 json 文件，我们可以写入数据库，也可以直接利用 json 文件来查询：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/ad37594e8da16a1d2580a3b46d27201a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"595\" data-rawheight=\"443\" class=\"origin_image zh-lightbox-thumb\" width=\"595\" data-original=\"https://pic1.zhimg.com/ad37594e8da16a1d2580a3b46d27201a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='595'%20height='443'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"595\" data-rawheight=\"443\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"595\" data-original=\"https://pic1.zhimg.com/ad37594e8da16a1d2580a3b46d27201a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/ad37594e8da16a1d2580a3b46d27201a_720w.jpg?source=54b3c3a5\"></figure><p>为了方便其他人使用，基于上面的数据我开发了一个<b>在线查询网站</b>（目前已下线）：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/b19afe3e57050355bac1c8a07e4c9e46_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"362\" data-rawheight=\"218\" class=\"content_image\" width=\"362\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='362'%20height='218'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"362\" data-rawheight=\"218\" class=\"content_image lazy\" width=\"362\" data-actualsrc=\"https://pic4.zhimg.com/50/b19afe3e57050355bac1c8a07e4c9e46_720w.jpg?source=54b3c3a5\"></figure><p>输入姓名或者学号都可以直接查询别人的选课信息：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/e979556e164cf6b09198872bd0599608_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"363\" data-rawheight=\"653\" class=\"content_image\" width=\"363\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='363'%20height='653'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"363\" data-rawheight=\"653\" class=\"content_image lazy\" width=\"363\" data-actualsrc=\"https://pic4.zhimg.com/50/e979556e164cf6b09198872bd0599608_720w.jpg?source=54b3c3a5\"></figure><h2><b>6. 扫描研究生系统上的弱密码用户</b></h2><p>基于上面获得的研究生学号，很容易利用 Python <b>批量尝试登录研究生系统</b>，密码就用 123456 这样的弱密码，然后可以<b>获得身份证号码</b>等重要信息。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/4cb5ff3a82a2b3ec843d1667d7d5ae8b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"729\" data-rawheight=\"599\" class=\"origin_image zh-lightbox-thumb\" width=\"729\" data-original=\"https://pic1.zhimg.com/4cb5ff3a82a2b3ec843d1667d7d5ae8b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='729'%20height='599'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"729\" data-rawheight=\"599\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"729\" data-original=\"https://pic1.zhimg.com/4cb5ff3a82a2b3ec843d1667d7d5ae8b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/4cb5ff3a82a2b3ec843d1667d7d5ae8b_720w.jpg?source=54b3c3a5\"></figure><p>这样就得到了使用 123456 作为密码的用户信息，所以<b>在此提醒大家一定不要使用弱密码</b>，希望下面的同学早日修改密码。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/add410f67e8b356c9880a469b9c1d5fd_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"647\" data-rawheight=\"486\" class=\"origin_image zh-lightbox-thumb\" width=\"647\" data-original=\"https://pic2.zhimg.com/add410f67e8b356c9880a469b9c1d5fd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='647'%20height='486'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"647\" data-rawheight=\"486\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"647\" data-original=\"https://pic2.zhimg.com/add410f67e8b356c9880a469b9c1d5fd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/add410f67e8b356c9880a469b9c1d5fd_720w.jpg?source=54b3c3a5\"></figure><h2><b>7. 模拟登录图书馆系统并自动续借</b></h2><p>以前收到<b>借阅图书到期通知</b>短信，就会运行一下这个程序，然后就<b>自动续借</b>了，这样就可以再看一个月了。不过后来科大图书馆系统升级了，因此这个方法也就失效了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/392f8cc73c3c4fd8fb0972b3c2b61284_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1018\" data-rawheight=\"612\" class=\"origin_image zh-lightbox-thumb\" width=\"1018\" data-original=\"https://pic4.zhimg.com/392f8cc73c3c4fd8fb0972b3c2b61284_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1018'%20height='612'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1018\" data-rawheight=\"612\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1018\" data-original=\"https://pic4.zhimg.com/392f8cc73c3c4fd8fb0972b3c2b61284_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/392f8cc73c3c4fd8fb0972b3c2b61284_720w.jpg?source=54b3c3a5\"></figure><p>运行就是这样的，自动续借成功，看到的链接就是每本书的续借链接。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/ea9b2970f8d8c7c8cb644723e2da46b9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"682\" data-rawheight=\"414\" class=\"origin_image zh-lightbox-thumb\" width=\"682\" data-original=\"https://pic2.zhimg.com/ea9b2970f8d8c7c8cb644723e2da46b9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='682'%20height='414'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"682\" data-rawheight=\"414\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"682\" data-original=\"https://pic2.zhimg.com/ea9b2970f8d8c7c8cb644723e2da46b9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/ea9b2970f8d8c7c8cb644723e2da46b9_720w.jpg?source=54b3c3a5\"></figure><h2><b>8. 云短信网站上的验证码短信来源分析</b></h2><p><a href=\"https://link.zhihu.com/?target=https%3A//www.pdflibr.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">这个网站</a>提供了很多<b>免费的临时手机号</b>，用这些公用的手机号你可以注册一些好玩的（或者你懂的）网站和APP，而<b>不用担心个人信息的泄露</b>。于是我用 Python 写了一个爬虫脚本，自动翻页抓取了部分短信内容，然后<b>解析出其中的信息来源</b>并分析一下频次，就发现好几个看名字就挺有意思的 APP 压根没有听过呀，看来是时候<b>用短信验证码的方式登录</b>看看去啦~</p><a href=\"https://zhuanlan.zhihu.com/p/59955770\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-6152cb8362254f9587d3a2636c204402_bh.jpg?source=54b3c3a5\" data-image-width=\"1867\" data-image-height=\"861\" class=\"internal\">Tsing：Python爬虫：大家用公共的手机号干了啥？</a><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-0e98c41db646a43f55b324907465f271_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"223\" data-rawheight=\"711\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c8e64bc693ad18fa2c85956a5db25808_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"223\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='223'%20height='711'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"223\" data-rawheight=\"711\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c8e64bc693ad18fa2c85956a5db25808_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"223\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-0e98c41db646a43f55b324907465f271_720w.jpg?source=54b3c3a5\"></figure><h2>9. 给钓鱼网站批量提交垃圾信息</h2><p>经常会收到含有钓鱼网站链接的短信的，一般都是盗取 QQ 密码的偏多，其实可以使用 Python 来批量给对方的服务器提交垃圾数据（需要先抓包），这样骗子看到信息之后就<b>不知道哪些是真的哪些是假的了</b>，说不定可以解救一部分填了密码的同学。</p><a href=\"https://zhuanlan.zhihu.com/p/28810019\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-f85b667b0c031cb4a287f4e2fd48a9a7_bh.jpg?source=54b3c3a5\" data-image-width=\"1366\" data-image-height=\"768\" class=\"internal\">Tsing：偶遇一个钓鱼网站，于是就简单玩了一下...</a><p><br></p><h2><b>10. 网易云音乐批量下载</b></h2><p>可以批量下载网易云音乐热歌榜的歌曲，可以自己设定数量，速度非常快。</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"c1\"># 网易云音乐批量下载</span>\n<span class=\"c1\"># Tsing 2019.03.28</span>\n\n<span class=\"c1\"># 首先，找到你要下载的歌曲，用网页版打开，复制链接中的歌曲ID，如：http://music.163.com/#/song?id=476592630 这个链接ID就是 476592630</span>\n<span class=\"c1\"># 然后将ID替换到链接 http://music.163.com/song/media/outer/url?id=ID.mp3 中的ID位置即可获得歌曲的外链：http://music.163.com/song/media/outer/url?id=476592630.mp3</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\t\t\t\t\t\t<span class=\"c1\"># 用于获取网页内容的模块</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bs4</span> <span class=\"k\">import</span> <span class=\"n\">BeautifulSoup</span>\t\t<span class=\"c1\"># 用于解析网页源代码的模块</span>\n\n<span class=\"n\">header</span><span class=\"o\">=</span><span class=\"p\">{</span>\t<span class=\"c1\"># 伪造浏览器头部，不然获取不到网易云音乐的页面源代码。</span>\n\t<span class=\"s1\">'User-Agent'</span><span class=\"p\">:</span><span class=\"s1\">'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36'</span><span class=\"p\">,</span>\n\t<span class=\"s1\">'Referer'</span><span class=\"p\">:</span><span class=\"s1\">'http://93.174.95.27'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">link</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://music.163.com/discover/toplist?id=3778678\"</span>\t<span class=\"c1\"># 这是网易云音乐热歌榜的链接（其实是嵌套在网页里面含有歌曲数据的页面框架的真实链接）</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">link</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">header</span><span class=\"p\">)</span>\t<span class=\"c1\"># 通过 requests 模块的 get 方法获取网页数据</span>\n<span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">content</span>\t<span class=\"c1\"># 获取网页内容</span>\n<span class=\"n\">soup</span> <span class=\"o\">=</span> <span class=\"n\">BeautifulSoup</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">,</span> <span class=\"s2\">\"html.parser\"</span><span class=\"p\">)</span>\t<span class=\"c1\"># 通过 BeautifulSoup 模块解析网页，具体请参考官方文档。</span>\n<span class=\"n\">songs</span> <span class=\"o\">=</span> <span class=\"n\">soup</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">\"ul\"</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">\"f-hide\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span> \t<span class=\"c1\"># 通过分析网页源代码发现排行榜中的歌曲信息全部放在类名称为 f-hide 的 ul 中，于是根据特殊的类名称查找相应 ul，然后找到里面的全部 a 标签，限制数量为10，即排行榜的前 10 首歌。</span>\n\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"c1\"># 设置一个自增参数，表示歌曲的数目</span>\n\n<span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">songs</span><span class=\"p\">:</span>  \t<span class=\"c1\"># 遍历输出数组 songs 中的内容</span>\n\t<span class=\"n\">song_id</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"s1\">'href'</span><span class=\"p\">][</span><span class=\"mi\">9</span><span class=\"p\">:]</span> \t<span class=\"c1\"># 只截取歌曲链接中的 ID 部分，因为网页中链接的形式为 “/song?id=496870798”，从 = 号之后的就是歌曲的 ID 号。</span>\n\t<span class=\"n\">song_name</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">text</span> \t<span class=\"c1\"># 获取 a 标签的文本内容，即歌曲的名称。</span>\n\t<span class=\"n\">song_down_link</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://music.163.com/song/media/outer/url?id=\"</span> <span class=\"o\">+</span> <span class=\"n\">song_id</span> <span class=\"o\">+</span> <span class=\"s2\">\".mp3\"</span>\t\t<span class=\"c1\"># 根据歌曲的 ID 号拼接出下载的链接。歌曲直链获取的方法参考文前的注释部分。</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"第 \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">\" 首歌曲：\"</span> <span class=\"o\">+</span> <span class=\"n\">song_down_link</span><span class=\"p\">)</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"正在下载...\"</span><span class=\"p\">)</span>\n\n\t<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">song_down_link</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">header</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">content</span> <span class=\"c1\"># 亲测必须要加 headers 信息，不然获取不了。</span>\n\t<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">song_name</span> <span class=\"o\">+</span> <span class=\"s2\">\".mp3\"</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"c1\"># 以二进制的形式写入文件中</span>\n\t<span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n\t<span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"下载完成.</span><span class=\"se\">\\n\\r</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\t<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n</code></pre></div><p>于是就可以愉快的听歌了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-9a058973fe46e7c4be0ff0c283b36b8b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"841\" data-rawheight=\"414\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-30f7c28e5103e13c1b673166abfae147_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"841\" data-original=\"https://pic1.zhimg.com/v2-9a058973fe46e7c4be0ff0c283b36b8b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='841'%20height='414'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"841\" data-rawheight=\"414\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-30f7c28e5103e13c1b673166abfae147_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"841\" data-original=\"https://pic1.zhimg.com/v2-9a058973fe46e7c4be0ff0c283b36b8b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-9a058973fe46e7c4be0ff0c283b36b8b_720w.jpg?source=54b3c3a5\"></figure><hr><blockquote>以下是很早之前用 <b>Python2</b> 写的一些小作品，当时的代码可能比较幼稚哈，就不删除了吧~</blockquote><p><br></p><p><b>1. 批量下载读者杂志某一期的全部文章</b></p><p>上次无意中发现读者杂志还有一个在线的版本，然后兴趣一来就用 Python 批量下载了上面的大量文章，保存为 txt 格式。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# 保存读者杂志某一期的全部文章为TXT\n# By Tsing\n# Python 2.7.9\n\nimport urllib2\nimport os\nfrom bs4 import BeautifulSoup\n\ndef urlBS(url):\n    response = urllib2.urlopen(url)\n    html = response.read()\n    soup = BeautifulSoup(html)\n    return soup\n\ndef main(url):\n    soup = urlBS(url)\n    link = soup.select('.booklist a')\n    path = os.getcwd()+u'/读者文章保存/'\n    if not os.path.isdir(path):\n        os.mkdir(path)\n    for item in link:\n        newurl = baseurl + item['href']\n        result = urlBS(newurl)\n        title = result.find(\"h1\").string\n        writer = result.find(id=\"pub_date\").string.strip()\n        filename = path + title + '.txt'\n        print filename.encode(\"gbk\")\n        new=open(filename,\"w\")\n        new.write(\"&lt;&lt;\" + title.encode(\"gbk\") + \"&gt;&gt;\\n\\n\")\n        new.write(writer.encode(\"gbk\")+\"\\n\\n\")\n        text = result.select('.blkContainerSblkCon p')\n        for p in text:\n            context = p.text\n            new.write(context.encode(\"gbk\"))\n        new.close()\n\nif __name__ == '__main__':\n    time = '2015_03'\n    baseurl = 'http://www.52duzhe.com/' + time +'/'\n    firsturl = baseurl + 'index.html'\n    main(firsturl)\n</code></pre></div><p><br></p><p><b>2. 获取城市PM2.5浓度和排名</b></p><p>最近环境问题很受关注，就用 Python 写了一个抓取 PM2.5 的程序玩玩，程序支持多线程，方便扩展。</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"c1\"># 获取城市PM2.5浓度和排名</span>\n<span class=\"c1\"># By Tsing</span>\n<span class=\"c1\"># Python 2.7.9</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">urllib2</span>\n<span class=\"kn\">import</span> <span class=\"nn\">threading</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"k\">import</span> <span class=\"n\">ctime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bs4</span> <span class=\"k\">import</span> <span class=\"n\">BeautifulSoup</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">getPM25</span><span class=\"p\">(</span><span class=\"n\">cityname</span><span class=\"p\">):</span>\n    <span class=\"n\">site</span> <span class=\"o\">=</span> <span class=\"s1\">'http://www.pm25.com/'</span> <span class=\"o\">+</span> <span class=\"n\">cityname</span> <span class=\"o\">+</span> <span class=\"s1\">'.html'</span>\n    <span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"n\">urllib2</span><span class=\"o\">.</span><span class=\"n\">urlopen</span><span class=\"p\">(</span><span class=\"n\">site</span><span class=\"p\">)</span>\n    <span class=\"n\">soup</span> <span class=\"o\">=</span> <span class=\"n\">BeautifulSoup</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">)</span>\n\n    <span class=\"n\">city</span> <span class=\"o\">=</span> <span class=\"n\">soup</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">class_</span> <span class=\"o\">=</span> <span class=\"s1\">'bi_loaction_city'</span><span class=\"p\">)</span>   <span class=\"c1\"># 城市名称</span>\n    <span class=\"n\">aqi</span> <span class=\"o\">=</span> <span class=\"n\">soup</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">,{</span><span class=\"s2\">\"class\"</span><span class=\"p\">,</span><span class=\"s2\">\"bi_aqiarea_num\"</span><span class=\"p\">})</span>  <span class=\"c1\"># AQI指数</span>\n    <span class=\"n\">quality</span> <span class=\"o\">=</span> <span class=\"n\">soup</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s2\">\".bi_aqiarea_right span\"</span><span class=\"p\">)</span>  <span class=\"c1\"># 空气质量等级</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">soup</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">\"div\"</span><span class=\"p\">,</span><span class=\"n\">class_</span> <span class=\"o\">=</span><span class=\"s1\">'bi_aqiarea_bottom'</span><span class=\"p\">)</span>   <span class=\"c1\"># 空气质量描述</span>\n\n    <span class=\"nb\">print</span> <span class=\"n\">city</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">+</span> <span class=\"sa\">u</span><span class=\"s1\">'AQI指数：'</span> <span class=\"o\">+</span> <span class=\"n\">aqi</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">+</span> <span class=\"sa\">u</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">空气质量：'</span> <span class=\"o\">+</span> <span class=\"n\">quality</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">+</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">text</span>\n    <span class=\"nb\">print</span> <span class=\"s1\">'*'</span><span class=\"o\">*</span><span class=\"mi\">20</span> <span class=\"o\">+</span> <span class=\"n\">ctime</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"s1\">'*'</span><span class=\"o\">*</span><span class=\"mi\">20</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">one_thread</span><span class=\"p\">():</span>   <span class=\"c1\"># 单线程</span>\n    <span class=\"nb\">print</span> <span class=\"s1\">'One_thread Start: '</span> <span class=\"o\">+</span> <span class=\"n\">ctime</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n    <span class=\"n\">getPM25</span><span class=\"p\">(</span><span class=\"s1\">'hefei'</span><span class=\"p\">)</span>\n    <span class=\"n\">getPM25</span><span class=\"p\">(</span><span class=\"s1\">'shanghai'</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">two_thread</span><span class=\"p\">():</span>   <span class=\"c1\"># 多线程</span>\n    <span class=\"nb\">print</span> <span class=\"s1\">'Two_thread Start: '</span> <span class=\"o\">+</span> <span class=\"n\">ctime</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n    <span class=\"n\">threads</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">t1</span> <span class=\"o\">=</span> <span class=\"n\">threading</span><span class=\"o\">.</span><span class=\"n\">Thread</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">getPM25</span><span class=\"p\">,</span><span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'hefei'</span><span class=\"p\">,))</span>\n    <span class=\"n\">threads</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">t1</span><span class=\"p\">)</span>\n    <span class=\"n\">t2</span> <span class=\"o\">=</span> <span class=\"n\">threading</span><span class=\"o\">.</span><span class=\"n\">Thread</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">getPM25</span><span class=\"p\">,</span><span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'shanghai'</span><span class=\"p\">,))</span>\n    <span class=\"n\">threads</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">t2</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">threads</span><span class=\"p\">:</span>\n        <span class=\"c1\"># t.setDaemon(True)</span>\n        <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n\n    <span class=\"n\">one_thread</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span> <span class=\"o\">*</span> <span class=\"mi\">2</span>\n    <span class=\"n\">two_thread</span><span class=\"p\">()</span>\n</code></pre></div><p><br></p><p><b>3. 爬取易迅网商品价格信息</b></p><p>当时准备抓取淘宝价格的，发现有点难，后来就没有尝试，就把目标选在了易迅网。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#!/usr/bin/env python\n#coding:utf-8\n# 根据易迅网的商品ID，爬取商品价格信息。\n# By Tsing\n# Python 2.7.9\n\nimport urllib2\nfrom bs4 import BeautifulSoup\ndef get_yixun(id):\n    price_origin,price_sale = '0','0'\n    url = 'http://item.yixun.com/item-' + id + '.html'\n    html = urllib2.urlopen(url).read().decode('utf-8')\n    soup = BeautifulSoup(html)\n    title = unicode(soup.title.text.strip().strip(u'【价格_报价_图片_行情】-易迅网').replace(u'】','')).encode('utf-8').decode('utf-8')\n    print title\n    try:\n        soup_origin = soup.find(\"dl\", { \"class\" : \"xbase_item xprice xprice_origin\" })\n        price_origin = soup_origin.find(\"span\", { \"class\" : \"mod_price xprice_val\" }).contents[1].text \n        print  u'原价：' + price_origin\n    except:\n        pass\n    try:\n        soup_sale= soup.find('dl',{'class':'xbase_item xprice'})\n        price_sale = soup_sale.find(\"span\", { \"class\" : \"mod_price xprice_val\" }).contents[1] \n        print  u'现价：'+ price_sale\n    except:\n        pass\n    print url\n    return None\n\nif __name__ == '__main__':\n    get_yixun('2189654')\n</code></pre></div><p><br></p><p><b>4. 音悦台MV免积分下载</b></p><p>音悦台上有好多高质量的 MV，想要下载却没有积分，于是就想到破解下载。当时受一个大神的代码的启发，就写出了下面的代码，虽然写的有点乱，但还是可以成功破解的哈。</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"c1\"># 音悦台MV免积分下载</span>\n<span class=\"c1\"># By Tsing</span>\n<span class=\"c1\"># Python 2.7.9</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">urllib2</span>\n<span class=\"kn\">import</span> <span class=\"nn\">urllib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n\n<span class=\"n\">mv_id</span> <span class=\"o\">=</span> <span class=\"s1\">'2278607'</span>   <span class=\"c1\"># 这里输入mv的id，即http://v.yinyuetai.com/video/2275893最后的数字</span>\n\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://www.yinyuetai.com/insite/get-video-info?flex=true&amp;videoId=\"</span> <span class=\"o\">+</span> <span class=\"n\">mv_id</span> \n<span class=\"n\">timeout</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>\n<span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'User-Agent'</span><span class=\"p\">:</span><span class=\"s1\">'Mozilla/5.0 (Windows NT 6.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Accept'</span><span class=\"p\">:</span><span class=\"s1\">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">urllib2</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"p\">)</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">urllib2</span><span class=\"o\">.</span><span class=\"n\">urlopen</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"p\">)</span>\n<span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"n\">reg</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s2\">\"http://\\w*?\\.yinyuetai\\.com/uploads/videos/common/.*?(?=&amp;br)\"</span>\n<span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"n\">reg</span><span class=\"p\">)</span>\n<span class=\"n\">findList</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">,</span><span class=\"n\">html</span><span class=\"p\">)</span>     <span class=\"c1\"># 找到mv所有版本的下载链接</span>\n\n<span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">findList</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">3</span><span class=\"p\">:</span>  \n    <span class=\"n\">mvurl</span> <span class=\"o\">=</span> <span class=\"n\">findList</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>     <span class=\"c1\"># 含有流畅、高清、超清三个版本时下载超清</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">mvurl</span> <span class=\"o\">=</span> <span class=\"n\">findList</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>     <span class=\"c1\"># 版本少时下载流畅视频</span>\n\n<span class=\"n\">local</span> <span class=\"o\">=</span> <span class=\"s1\">'MV.flv'</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"s1\">'downloading...please wait...'</span>\n    <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">urlretrieve</span><span class=\"p\">(</span><span class=\"n\">mvurl</span><span class=\"p\">,</span><span class=\"n\">local</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"[:)] Great! The mv has been downloaded.</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"[:(] Sorry! The action is failed.</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n</code></pre></div><hr><p><b>以后再慢慢更新一些进来吧，大家可以收藏以下本回答哈~</b></p><p><b>结语：</b>Python 真的是一个利器，而我用到的肯定也只是皮毛，写过的程序多多少少也有点相似，但是我对 Python 的爱却是越来越浓的。</p><p><b>补充：</b>看到评论中有好多知友问哪里可以快速而全面地学习Python编程，我只给大家推荐一个博客，大家认真看就够了：<a href=\"https://link.zhihu.com/?target=http%3A//www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python教程 - 廖雪峰的官方网站</a></p>", "为什么自学Python看不进去？": "<p>首先学习python一定要以<b>实用性</b>为导向！盲目看教程，结果大多是浅尝辄止，从入门到放弃。</p><p>我想告诉你我的经验，<b>如何在一个月内入门python！</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-25dca00dff1f6ada20e4fd8b3ddc20ee_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"300\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-dd69120e38a7373c331427a6909a1536_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"300\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='300'%20height='300'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"300\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-dd69120e38a7373c331427a6909a1536_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"300\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-25dca00dff1f6ada20e4fd8b3ddc20ee_720w.jpg?source=54b3c3a5\"></figure><p>很多小伙伴留言时都会提到不知道自己是否适合数据分析，害怕自己零基础入门难，或者文科生学不会。</p><p>其实最好的办法就是去尝试。</p><p>有兴趣的也可以看看相关的入门课程，很多人都是停留在hello world阶段，第二第三步很难迈出去。其实只要认真看完一门课，学完一本书，编程便不那么难了。</p><a data-draft-node=\"block\" data-draft-type=\"ad-link-card\"></a><h2>1、【why】 你为什么要学习python？</h2><p>爬虫？数据分析？机器学习？又或者其它？</p><p>在找一本python教程准备啃之前，一定要问问自己，我为什么要学习python？</p><p>python在近几年越来越受追捧，很多童鞋或者职场小伙伴想要提升技能-学习python。这是非常好的事情，但问题在于很多人不知道学python做什么，所以什么零碎细末、艰难晦涩、长篇大论的都去看，很容易陷入学不下去的困境。<b>必须要有针对性、选择性地学！</b></p><p>针对性学习宗旨是<b>按需去学，学以致用</b>。</p><p>想成为木匠，才去学习用刨子、用车床，一个砖瓦匠就没必要瞎费这功夫。同理，当你对网络爬虫感兴趣，并且有爬一个网页的冲动，这时候去学python是最容易上手的。</p><p>我是做数据分析工作，学python的初衷是想利用python强大灵活的数据分析能力。python做数据分析对语法的要求并不高，只要能理解基本的逻辑结构、数据类型、数据结构、运算符、函数、库，就可以运用到实际项目里。所以我就没必要花很大功夫在诸如类、web编程、模块、线程等数据分析不常用的功能上面，如果真遇到这些内容，我再去查资料搞清楚。</p><h2>2、【what】选择什么样的教程学?</h2><p>在明确自己为什么学python后，要选择合适的书籍教程。不可否认，市面上已经有太多python入门书籍，以及更多的网络教程。我只推荐给大家<a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python官方文档</a><b>，</b>不久前该文档已经汉化，大家可以很方便的去学习最新最全的python知识。如果你有能力阅读英文文档，那就选英文文档，毕竟第一手的内容更专业。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-af6e7bf5e3af5bd2838a7dd582c9a903_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1315\" data-rawheight=\"892\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-2658ee608503d57974f1e0b54fe7fcf5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1315\" data-original=\"https://pic1.zhimg.com/v2-af6e7bf5e3af5bd2838a7dd582c9a903_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1315'%20height='892'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1315\" data-rawheight=\"892\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-2658ee608503d57974f1e0b54fe7fcf5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1315\" data-original=\"https://pic1.zhimg.com/v2-af6e7bf5e3af5bd2838a7dd582c9a903_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-af6e7bf5e3af5bd2838a7dd582c9a903_720w.jpg?source=54b3c3a5\"><figcaption>python官方中文文档</figcaption></figure><p>当然，官方文档知识点太多，初学者很难找到要学的内容，这时你需要查查各个专业领域的python要求。</p><p>如果你是要准备从事数据科学，不妨去<a href=\"https://link.zhihu.com/?target=https%3A//www.kaggle.com/learn/overview\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">kaggle数据科学微教程</a>看看，里面会讲到数据科学需要的python知识，然后对照着一个知识点一个知识点地啃python官方文档。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-858ca5b8022764cb15b9e8db27016587_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1615\" data-rawheight=\"841\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0db4411b19906e918c2fd04daa8cc211_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1615\" data-original=\"https://pic4.zhimg.com/v2-858ca5b8022764cb15b9e8db27016587_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1615'%20height='841'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1615\" data-rawheight=\"841\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0db4411b19906e918c2fd04daa8cc211_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1615\" data-original=\"https://pic4.zhimg.com/v2-858ca5b8022764cb15b9e8db27016587_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-858ca5b8022764cb15b9e8db27016587_720w.jpg?source=54b3c3a5\"><figcaption>kaggle平台数据科学微教程</figcaption></figure><p>如果你要做爬虫工作，不妨在网上买一本评分高的python爬虫书籍，一般来说里面会有python基础部分，同理你只要在官方文档里找这部分知识学习。</p><p>针对性地在官方文档里学习python知识，不仅节省时间，而且你会发现更容易理解，<b>因为你是带着问题去学习的。</b></p><h2><b>3、【how】怎么去学习python？</b></h2><p>其它回答里也提到了<b>在重复练习中学习python，</b>这点我是非常认同的。<b>输出是最好的输入</b>，编程语言虽然注重逻辑，但更需要学习者不断地动手敲代码。</p><p>从一开始，你要学会如何搭建python环境，选择什么样地开发环境（IDE）。这些都可以去网上查，慢一点的折腾两三天，快一点的一天不到就能搞定。总之，这是学习python的第一步，也是练习的开始。</p><p>对于官方文档的每一段代码，我建议都动手亲自敲一遍，比如你看到字符串这一节，在理解了字符串定义后，文档会给出示例代码和运行结果：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-fd1629dc22660cedadbf40920d955a51_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1050\" data-rawheight=\"448\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3e8b9eb708367588ce3218d5d242a277_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1050\" data-original=\"https://pic1.zhimg.com/v2-fd1629dc22660cedadbf40920d955a51_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1050'%20height='448'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1050\" data-rawheight=\"448\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3e8b9eb708367588ce3218d5d242a277_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1050\" data-original=\"https://pic1.zhimg.com/v2-fd1629dc22660cedadbf40920d955a51_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-fd1629dc22660cedadbf40920d955a51_720w.jpg?source=54b3c3a5\"></figure><p>照着示例代码，在你的编程环境中实践，千万不要复制黏贴，对自己的火眼精金过度自信并不是一件好事。</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><h2>4、【when】如何制定时间学python？</h2><p>学习python切忌拉很长战线。制定的计划时间越长，人的惰性、拖延就会冒出来。</p><p>我的建议：</p><ul><li><b>制定5~8周的学习计划</b></li><li><b>一周学习5天</b></li><li><b>每天3小时左右</b></li></ul><p>理由是：</p><ul><li>时间不长1~2个月，比较容易坚持</li><li>符合一门大学课程的学习周期</li><li>短时间高密度的学习有利于形成知识的连贯性，对python理解也会更加深入</li></ul><p>当然，这中间需要监督机制，你可以在社交平台打卡，可以制定自己的学习课程表，也可以和朋友一起学习。</p><h2>结合网上资料和python官方文档，整理一份30天python 学习计划，供大家参考。</h2><h2><b>第1天</b></h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/appetite.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python简介 - Python的历史 / Python的优缺点 / Python的应用领域</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/using/windows.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python环境搭建</a> 【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/05.installation.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考</a>资料】</li></ul><h2>第2天</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/interpreter.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用python解释器</a>  【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/06.first_steps.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考资料</a>】</li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">关于python语法的简单介绍</a>  【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/07.basics.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考资料</a>】</li></ul><h2><b>第3天</b></h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/reference/lexical_analysis.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">词法结构</a> </li><li><a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/08.op_exp.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">运算符和表达式</a> 【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/08.op_exp.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考资料</a>】</li></ul><h2>第4天</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/datastructures.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python数据结构</a>  列表/字符串/元组【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/12.data_structures.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考资料</a>】</li></ul><h2>第5天</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/datastructures.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python数据结构</a>  字典/集合 【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/12.data_structures.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考资料</a>】</li></ul><h2>第6天 </h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/controlflow.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python流程控制</a>1【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/09.control_flow.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考资料</a>】</li><li>if语句</li><li>for循环</li><li>while循环</li></ul><h2>第7天 </h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/controlflow.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python流程控制</a>2【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/09.control_flow.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考资料</a>】</li><li>continue语句</li><li>break语句</li><li>pass语句</li></ul><h2>第8~9天 </h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/inputoutput.html%23formatted-string-literals\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">格式化字符串</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/inputoutput.html%23reading-and-writing-files\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">读写文件</a>【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/15.io.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考资料</a>】</li></ul><h2>第10~12天 </h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/controlflow.html%23defining-functions\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python函数</a> 【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/10.functions.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考资料</a>】</li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/controlflow.html%23lambda-expressions\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Lambda 表达式</a> </li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/controlflow.html%23intermezzo-coding-style\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">编码风格</a> </li></ul><h2>第13天 </h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/modules.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python模块</a> 【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/11.modules.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考资料</a>】</li></ul><h2>第14天  </h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/classes.html%23iterators\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">迭代器</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/classes.html%23generators\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">生成器</a> </li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/classes.html%23generator-expressions\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">生成器表达式</a> </li></ul><h2>第15~16天  </h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/errors.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">错误和异常</a>【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/16.exceptions.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考资料</a>】</li></ul><h2>第17~19天 </h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/classes.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">面向对象编程</a> 【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/14.oop.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考资料</a>】</li></ul><h2>第19~20天 </h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/stdlib.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">标准库使用</a> 【<a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/17.stdlib.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">参考资料</a>】</li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/stdlib.html%23dates-and-times\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">日期和时间</a> </li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/stdlib.html%23mathematics\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数学</a> </li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/stdlib.html%23operating-system-interface\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">操作系统接口</a></li></ul><h2>第21天 </h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/installing/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">安装 Python 模块</a> </li></ul><h2>第22~23天</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/venv.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">虚拟环境和包</a> </li></ul><h2>第24天</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/stdlib2.html%23multi-threading\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">多线程</a></li></ul><h2><b>第25~30天</b></h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//www.runoob.com/python/python-100-examples.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">训练题</a> </li></ul><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p></p>", "如何入门 Python 爬虫？": "<p>看了大部分回答不禁叹口气，主要是因为看到很多大牛在回答像“如何入门爬虫”这种问题的时候，一如当年学霸讲解题目，跳步无数，然后留下一句“不就是这样推嘛”，让一众小白菜鸟一脸懵逼。。作为一个0起步（之前连python都不会），目前总算掌握基础，开始向上进阶的菜鸟，深知其中的不易，所以我会在这个回答里，尽可能全面、细节地分享给大家从0学习爬虫的各种步骤，如果对你有帮助，请点赞~</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1a5d791ff27dfcba511419622572ca16_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"584\" data-rawheight=\"430\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7332a5ae4814647058c87970c1378a01_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"584\" data-original=\"https://pic1.zhimg.com/v2-1a5d791ff27dfcba511419622572ca16_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='584'%20height='430'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"584\" data-rawheight=\"430\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7332a5ae4814647058c87970c1378a01_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"584\" data-original=\"https://pic1.zhimg.com/v2-1a5d791ff27dfcba511419622572ca16_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1a5d791ff27dfcba511419622572ca16_720w.jpg?source=54b3c3a5\"></figure><p>-------------------------------------------------------------------------------------------------<br><b>#我要写爬虫！</b> <b>#Ver.1.5 </b> <b>#Based on: Python 2.7</b><br><b>#Author:高野良</b><br>#<b>原创内容，转载请注明出处</b></p><p><br></p><p><b><u>首先！你要对爬虫有个明确的认识，这里引用毛主席的思想：</u></b></p><blockquote><b>在战略上藐视：</b> </blockquote><ul><li><b>“所有网站皆可爬”：</b>互联网的内容都是人写出来的，而且都是偷懒写出来的（不会第一页是a，下一页是8），所以肯定有规律，这就给人有了爬取的可能，可以说，天下没有不能爬的网站<br></li><li><b>“框架不变”：</b>网站不同，但是原理都类似，大部分爬虫都是从 <b>发送请求——获得页面——解析页面——下载内容——储存内容</b> 这样的流程来进行，只是用的工具不同</li></ul><p><b><u>在战术上重视：</u></b> </p><ul><li><b>持之以恒，戒骄戒躁：</b>对于初学入门，不可轻易自满，以为爬了一点内容就什么都会爬了，爬虫虽然是比较简单的技术，但是往深学也是没有止境的（比如搜索引擎等）！只有不断尝试，刻苦钻研才是王道！（为何有种小学作文即视感）</li></ul><p><br></p><p>                              ||<br>                                ||<br>                                V</p><p><b><u>然后，你需要一个宏伟的目标，来让你有持续学习的动力（没有实操项目，真的很难有动力）</u></b></p><blockquote>我要爬整个豆瓣！...<br>我要爬整个xx社区！<br>我要爬知乎各种妹子的联系方式*&amp;^#%^$#</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/9264555e01047baf9f88b1919d21c5ab_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"580\" data-rawheight=\"287\" class=\"origin_image zh-lightbox-thumb\" width=\"580\" data-original=\"https://pic1.zhimg.com/9264555e01047baf9f88b1919d21c5ab_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='580'%20height='287'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"580\" data-rawheight=\"287\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"580\" data-original=\"https://pic1.zhimg.com/9264555e01047baf9f88b1919d21c5ab_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/9264555e01047baf9f88b1919d21c5ab_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>                              ||<br>                                ||<br>                                V</p><p><b><u>接着，你需要扪心自问一下，自己的python基本功吼不吼啊？</u></b></p><blockquote><b>吼啊！</b>——OK，开始欢快地学习爬虫吧 ！<br><b>不吼？你还需要学习一个！</b>赶紧回去看廖雪峰老师的教程，<br>2.7（更新：现在需要了解3.x了）的。至少<u>这些功能和语法</u>你要有基本的掌握 ：</blockquote><ul><li><b>list，dict：</b>用来序列化你爬的东西</li><li><b>切片：</b>用来对爬取的内容进行分割，生成</li><li><b>条件判断（if等）：</b>用来解决爬虫过程中哪些要哪些不要的问题</li><li><b>循环和迭代（for while ）：</b>用来循环，重复爬虫动作</li><li><b>文件读写操作（open，close等）：</b>用来读取参数、保存爬下来的内容等</li><li><b>编码常识（codecs等）：</b>非常关键，爬虫写熟了以后遇到的各种古怪问题，很多来自于UTF-8 GBK等奇奇怪怪的编码！这个问题先做了解，后面调试时候再解决也不迟！</li></ul><p><br></p><p>                              ||<br>                                ||<br>                                V</p><p><b><u>然后，你需要补充一下下面几个内容，作为你的知识储备：</u></b><br>（注：这里并非要求“掌握”，下面讲的两点，只需要先了解，然后通过具体项目来不断实践，直到熟练掌握）</p><p><b><u>1、网页的基本知识：</u></b></p><blockquote>基本的HTML语言知识（知道href等大学计算机一级内容即可）<br>理解网站的发包和收包的概念（POST GET）<br>稍微一点点的js知识，用于理解动态网页（当然如果本身就懂当然更好啦）</blockquote><p><br></p><p><b><u>2、一些分析语言，为接下来解析网页内容做准备</u></b></p><blockquote>NO.1  正则表达式：扛把子技术，总得会最基础的：<br></blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/69c995e57e29ab383d0717211e8f1c8e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"799\" data-rawheight=\"1719\" class=\"origin_image zh-lightbox-thumb\" width=\"799\" data-original=\"https://pic4.zhimg.com/69c995e57e29ab383d0717211e8f1c8e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='799'%20height='1719'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"799\" data-rawheight=\"1719\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"799\" data-original=\"https://pic4.zhimg.com/69c995e57e29ab383d0717211e8f1c8e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/69c995e57e29ab383d0717211e8f1c8e_720w.jpg?source=54b3c3a5\"></figure><p>NO.2  XPATH：高效的分析语言，表达清晰简单，掌握了以后基本可以不用正则<br>参考：<a href=\"https://link.zhihu.com/?target=http%3A//www.w3school.com.cn/xpath/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">XPath 教程</a> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/83020a6e8bfc4d3c38f7c36377da0d46_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"612\" data-rawheight=\"255\" class=\"origin_image zh-lightbox-thumb\" width=\"612\" data-original=\"https://pic1.zhimg.com/83020a6e8bfc4d3c38f7c36377da0d46_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='612'%20height='255'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"612\" data-rawheight=\"255\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"612\" data-original=\"https://pic1.zhimg.com/83020a6e8bfc4d3c38f7c36377da0d46_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/83020a6e8bfc4d3c38f7c36377da0d46_720w.jpg?source=54b3c3a5\"></figure><p>NO.3  Beautifulsoup：<br>美丽汤模块解析网页神器,一款神器，如果不用一些爬虫框架（如后文讲到的scrapy），配合request，urllib等模块（后面会详细讲），可以编写各种小巧精干的爬虫脚本<br>官网文档：<a href=\"https://link.zhihu.com/?target=http%3A//beautifulsoup.readthedocs.org/zh_CN/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Beautiful Soup 4.2.0 文档</a> <b>参考案例：</b> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/5d5b7de4dcaf69fa89ab4f5ef8bdbf3f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"267\" class=\"origin_image zh-lightbox-thumb\" width=\"734\" data-original=\"https://pic1.zhimg.com/5d5b7de4dcaf69fa89ab4f5ef8bdbf3f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='734'%20height='267'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"267\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"734\" data-original=\"https://pic1.zhimg.com/5d5b7de4dcaf69fa89ab4f5ef8bdbf3f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/5d5b7de4dcaf69fa89ab4f5ef8bdbf3f_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/4a1f7a23745479544a88a42f20748856_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"737\" data-rawheight=\"551\" class=\"origin_image zh-lightbox-thumb\" width=\"737\" data-original=\"https://pic4.zhimg.com/4a1f7a23745479544a88a42f20748856_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='737'%20height='551'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"737\" data-rawheight=\"551\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"737\" data-original=\"https://pic4.zhimg.com/4a1f7a23745479544a88a42f20748856_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/4a1f7a23745479544a88a42f20748856_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>No4. JSONpath</p><p>￼￼抓包类的爬虫（通常是动态网页），往往需要json的加持。jsonpath便应运而生，和xpath一样，它是快速检索分析各种各样json文件中待抓取内容的重要方法。</p><p>更多官方文档看此：<a href=\"https://link.zhihu.com/?target=https%3A//goessner.net/articles/JsonPath/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">JSONPath - XPath for JSON</a></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-f50b82259741268aa84c3ceffff58bf4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"685\" data-rawheight=\"459\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-53b705e725546fd1a0712a7b4c9efd16_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"685\" data-original=\"https://pic4.zhimg.com/v2-f50b82259741268aa84c3ceffff58bf4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='685'%20height='459'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"685\" data-rawheight=\"459\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-53b705e725546fd1a0712a7b4c9efd16_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"685\" data-original=\"https://pic4.zhimg.com/v2-f50b82259741268aa84c3ceffff58bf4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-f50b82259741268aa84c3ceffff58bf4_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>                              ||</p><p>                              ||</p><p>                              V</p><p><b><u>接着，你需要一些高效的工具来辅助</u></b></p><p><b>（同样，这里先了解，到具体的项目的时候，再熟悉运用）</b></p><blockquote><b>NO.1   F12 开发者工具：</b> </blockquote><ul><li>看源代码：快速定位元素<br></li><li>分析xpath：1、此处建议谷歌系浏览器,可以在源码界面直接右键看</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/8be689bc054b6fc2077feca4b99d056e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"861\" data-rawheight=\"449\" class=\"origin_image zh-lightbox-thumb\" width=\"861\" data-original=\"https://pic1.zhimg.com/8be689bc054b6fc2077feca4b99d056e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='861'%20height='449'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"861\" data-rawheight=\"449\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"861\" data-original=\"https://pic1.zhimg.com/8be689bc054b6fc2077feca4b99d056e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/8be689bc054b6fc2077feca4b99d056e_720w.jpg?source=54b3c3a5\"></figure><p><b>NO.2  抓包工具：</b> </p><ul><li>推荐httpfox，火狐浏览器下的插件,比谷歌火狐系自带的F12工具都要好，可以方便查看网站收包发包的信息</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/e1c9d44b06a3b9d199c62f0c0e84c3b8_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"893\" data-rawheight=\"627\" class=\"origin_image zh-lightbox-thumb\" width=\"893\" data-original=\"https://pic4.zhimg.com/e1c9d44b06a3b9d199c62f0c0e84c3b8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='893'%20height='627'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"893\" data-rawheight=\"627\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"893\" data-original=\"https://pic4.zhimg.com/e1c9d44b06a3b9d199c62f0c0e84c3b8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/e1c9d44b06a3b9d199c62f0c0e84c3b8_720w.jpg?source=54b3c3a5\"></figure><p><b>NO.3  XPATH CHECKER (火狐插件）：</b><br>非常不错的xpath测试工具，但是有几个坑，都是个人踩过的，，在此告诫大家：<br>     1、xpath checker生成的是绝对路径，遇到一些动态生成的图标（常见的有列表翻页按钮等），飘忽不定的绝对路径很有可能造成错误，所以这里建议在真正分析的时候，只是作为参考<br>     2、记得把如下图xpath框里的“x:”去掉，貌似这个是早期版本xpath的语法，目前已经和一些模块不兼容（比如scrapy），还是删去避免报错<br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/87c0ab00e3397e0bf8418b0fd693c298_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"700\" data-original=\"https://pic1.zhimg.com/87c0ab00e3397e0bf8418b0fd693c298_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='700'%20height='408'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"700\" data-original=\"https://pic1.zhimg.com/87c0ab00e3397e0bf8418b0fd693c298_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/87c0ab00e3397e0bf8418b0fd693c298_720w.jpg?source=54b3c3a5\"></figure><p><b>NO.4  正则表达测试工具：</b> <a href=\"https://link.zhihu.com/?target=http%3A//tool.oschina.net/regex/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">在线正则表达式测试</a> ，拿来多练练手，也辅助分析！里面有很多现成的正则表达式可以用，也可以进行参考！</p><p>                              ||</p><p>                              ||</p><p>                              V</p><p><b><u>ok！这些你都基本有一些了解了，现在开始进入抓取时间，上各种模块吧！python的火，很大原因就是各种好用的模块，这些模块是居家旅行爬网站常备的——</u></b></p><blockquote>urllib<br>urllib2<br>requests</blockquote><p>                              ||</p><p>                              ||</p><p>                              V</p><p><b><u>不想重复造轮子，有没有现成的框架？</u></b></p><blockquote>华丽丽的scrapy<br>pyspider</blockquote><p>||</p><p>||</p><p>V</p><p><b><u>遇到动态页面怎么办？</u></b></p><blockquote>selenium（会了这个配合scrapy无往不利，是居家旅行爬网站又一神器!）<br>phantomJS（不显示网页的selenium）<br>puppyteer（node.js乱入hhh）<br>（进阶）Browsermob-proxy （利用抓包的方式进行抓取，类似fiddler，比较复杂，但是足够好玩，可以解决很多意想不到的问题，高阶玩法！</blockquote><p>||</p><p>||</p><p>V</p><p><b><u>遇到反爬虫策略验证码之类咋整？（不想折腾的直接第四个）</u></b></p><blockquote>PIL<br>opencv<br>pybrain<br>打码平台</blockquote><p>||<br>||<br>V</p><p><b><u>然后是数据库，这里我认为开始并不需要非常深入，在需要的时候再学习即可</u></b></p><blockquote>mysql<br>mongodb<br>sqllite</blockquote><p><b>||</b></p><p><b>||</b></p><p><b>V</b></p><p><br></p><p><b><u>爬来的东西怎么用？</u></b></p><blockquote>numpy 数据分析，类似matlab的模块，计算数据，处理矩阵<br>pandas（基于numpy的数据分析模块，相信我，如果你不是专门搞TB级数据的，这个就够了）<br>#更高阶段↓ML！<br>pytorch<br>tensorflow</blockquote><p><b>||</b></p><p><b>||</b></p><p><b>V</b></p><p><b><u>其他进阶技术</u></b></p><blockquote>多线程、分布式</blockquote><p>———————————— 乱入的分割线 —————————————</p><p>然后学习编程关键的是学以致用，天天捧一本书看不如直接上手操练，下面我通过实际的例子来讲解爬虫——</p><p>比如最近，楼主在豆瓣上认识了一个很可爱的妹子，发现她一直会更新签名和日志，所以没事就会去她主页看看，但一直没有互相加好友（作为一只高冷的天蝎，怎么可以轻易加好友嘛！而且加了好友，你更新什么都会收到推送，那多没意思啊！一点神秘感都没有了！），可还是想及时获得妹子的最新动态，怎么办？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/dd6fd1c0cb91ebad9bacd7d11a56bd09_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"400\" class=\"content_image\" width=\"400\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"400\" class=\"content_image lazy\" width=\"400\" data-actualsrc=\"https://pic1.zhimg.com/50/dd6fd1c0cb91ebad9bacd7d11a56bd09_720w.jpg?source=54b3c3a5\"></figure><p>于是我就写了个70几行的python脚本，包含爬虫+邮件模块，跑在家里的一台闲置笔记本上，通过计划任务每准点抓取妹子的签名和最新文章一次，发送到我的邮箱。。嗯，其实是很简单的技术，，代码如下所示：</p><div class=\"highlight\"><pre><code class=\"language-csharp\"><span></span><span class=\"err\">#</span><span class=\"p\">-*-</span><span class=\"n\">coding</span><span class=\"p\">:</span><span class=\"n\">utf</span><span class=\"p\">-</span><span class=\"m\">8</span><span class=\"p\">-*-</span> <span class=\"err\">#编码声明，不要忘记！</span>\n<span class=\"n\">import</span> <span class=\"n\">requests</span>  <span class=\"err\">#这里使用</span><span class=\"n\">requests</span><span class=\"err\">，小脚本用它最合适！</span>\n<span class=\"k\">from</span> <span class=\"n\">lxml</span> <span class=\"n\">import</span> <span class=\"n\">html</span>    <span class=\"err\">#这里我们用</span><span class=\"n\">lxml</span><span class=\"err\">，也就是</span><span class=\"n\">xpath</span><span class=\"err\">的方法</span>\n\n<span class=\"err\">#豆瓣模拟登录，最简单的是</span><span class=\"n\">cookie</span><span class=\"err\">，会这个方法，</span><span class=\"m\">80</span><span class=\"p\">%</span><span class=\"err\">的登录网站可以搞定</span>\n<span class=\"n\">cookie</span> <span class=\"p\">=</span> <span class=\"p\">{}</span> \n\n<span class=\"n\">raw_cookies</span> <span class=\"p\">=</span> <span class=\"err\">''#引号里面是你的</span><span class=\"n\">cookie</span><span class=\"err\">，用之前讲的抓包工具来获得</span>\n\n<span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"k\">in</span> <span class=\"n\">raw_cookies</span><span class=\"p\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"sc\">';'</span><span class=\"p\">):</span>\n    <span class=\"n\">key</span><span class=\"p\">,</span><span class=\"k\">value</span> <span class=\"p\">=</span> <span class=\"n\">line</span><span class=\"p\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">\"=\"</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">cookie</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"k\">value</span> <span class=\"err\">#一些格式化操作，用来装载</span><span class=\"n\">cookies</span>\n\n<span class=\"err\">#重点来了！用</span><span class=\"n\">requests</span><span class=\"err\">，装载</span><span class=\"n\">cookies</span><span class=\"err\">，请求网站</span>\n<span class=\"n\">page</span> <span class=\"p\">=</span> <span class=\"n\">requests</span><span class=\"p\">.</span><span class=\"k\">get</span><span class=\"p\">(</span><span class=\"err\">'#妹纸的豆瓣主页#'</span><span class=\"p\">,</span><span class=\"n\">cookies</span><span class=\"p\">=</span><span class=\"n\">cookie</span><span class=\"p\">)</span>\n\n<span class=\"err\">#对获取到的</span><span class=\"n\">page</span><span class=\"err\">格式化操作，方便后面用</span><span class=\"n\">XPath</span><span class=\"err\">来解析</span>\n<span class=\"n\">tree</span> <span class=\"p\">=</span> <span class=\"n\">html</span><span class=\"p\">.</span><span class=\"n\">fromstring</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"p\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n\n<span class=\"err\">#</span><span class=\"n\">XPath</span><span class=\"err\">解析，获得你要的文字段落！</span>\n<span class=\"n\">intro_raw</span> <span class=\"p\">=</span> <span class=\"n\">tree</span><span class=\"p\">.</span><span class=\"n\">xpath</span><span class=\"p\">(</span><span class=\"err\">'</span><span class=\"c1\">//span[@id=\"intro_display\"]/text()')</span>\n\n<span class=\"err\">#简单的转码工作，这步根据需要可以省略</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">intro_raw</span><span class=\"p\">:</span>\n    <span class=\"n\">intro</span> <span class=\"p\">=</span> <span class=\"n\">i</span><span class=\"p\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"err\">'</span><span class=\"n\">utf</span><span class=\"p\">-</span><span class=\"m\">8</span><span class=\"err\">'</span><span class=\"p\">)</span>\n\n<span class=\"n\">print</span> <span class=\"n\">intro</span> <span class=\"err\">#妹子的签名就显示在屏幕上啦</span>\n\n<span class=\"err\">#接下来就是装载邮件模块，因为与本问题关联不大就不赘述啦</span><span class=\"p\">~</span>\n</code></pre></div><p>怎么样~是不是很简单~</p><p><br></p><p><br></p><p>======</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>v1.5更新日志：\n增加一些新的技术方法，更多细节技术具体实现欢迎关注我，我会在专栏中更新\nV1.2更新日志：\n修改了一些细节和内容顺序\n</code></pre></div><p></p>", "不同编程语言的程序员之间有鄙视链么？": "<p>一天我路过一座桥，碰巧看见一个人想跳河自杀。我跑过去对他大喊道：“别跳，别死啊。”</p><p>“为什么不让我跳？”他说。</p><p>“因为还有很多东西值得我们活下去啊。”</p><p>“有吗？比如说？”</p><p>“呃……你做什么工作？”</p><p>“程序员。”</p><p>我说：“我也是！瞧，有共同点了吧。你是软件还是硬件？”</p><p>“软件。”</p><p>“我也是！PC 还是 Web？”</p><p>“PC。”</p><p>“我也是！Windows 还是 Linux 平台？”</p><p>“Linux。”</p><p>“我也是！那你使用 C 还是 C++？”</p><p>“C++。”</p><p>“我也是。1998 年的 C++ 98 还是 2011 年的 C++ 11？”</p><p>“2011 年的 C++ 11。”</p><p>“我也是。大括号写在后面还是写在下一行？”</p><p>“下一行。”</p><p>“去死吧！你这个异教徒人渣！”我一把将他推下桥去。</p><p><br></p><p>转载于网上，出处不详</p><p></p><p></p>"}{"零基础如何学爬虫技术？": "<p><b>震惊了，8次鼠标点击，教会你网页数据爬虫</b></p><br><p>既然零基础，给你讲完python， 讲完正则，讲完网页结构，估计黄花大闺女都嫁人了。</p><br><p>介绍一招，20秒上手爬虫数据，用的工具，Excel</p><p>不用VBA，甚至都不用公式</p><p>甚至不用打开网页，查看网络元素</p><p>也是作为@硅谷密探的补充，毕竟不是所有人都能轻松的上Google啊</p><p>Here we go</p><p>1.双击图标，打开Excel，</p><figure><noscript><img src=\"https://pic4.zhimg.com/50/v2-4a8553d59a648d2029b0cce820099bab_720w.png?source=54b3c3a5\" data-rawwidth=\"889\" data-rawheight=\"543\" class=\"origin_image zh-lightbox-thumb\" width=\"889\" data-original=\"https://pic4.zhimg.com/v2-4a8553d59a648d2029b0cce820099bab_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='889'%20height='543'&gt;&lt;/svg&gt;\" data-rawwidth=\"889\" data-rawheight=\"543\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"889\" data-original=\"https://pic4.zhimg.com/v2-4a8553d59a648d2029b0cce820099bab_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-4a8553d59a648d2029b0cce820099bab_720w.png?source=54b3c3a5\"></figure><p>累计鼠标点击次数：2</p><p>2.依次点击，数据-从网站</p><figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-f048a0f602123e5e59c338ea84526f2a_720w.png?source=54b3c3a5\" data-rawwidth=\"1481\" data-rawheight=\"495\" class=\"origin_image zh-lightbox-thumb\" width=\"1481\" data-original=\"https://pic4.zhimg.com/v2-f048a0f602123e5e59c338ea84526f2a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1481'%20height='495'&gt;&lt;/svg&gt;\" data-rawwidth=\"1481\" data-rawheight=\"495\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1481\" data-original=\"https://pic4.zhimg.com/v2-f048a0f602123e5e59c338ea84526f2a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f048a0f602123e5e59c338ea84526f2a_720w.png?source=54b3c3a5\"></figure><p>累计鼠标点击次数：4</p><p>3.在弹出的对话框中，输入目标网址，<a href=\"https://link.zhihu.com/?target=https%3A//steamspy.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Games sales</a> ，点击转到，go</p><figure><noscript><img src=\"https://pic2.zhimg.com/50/v2-89cbc966dcbebf1ebeb1ea9772181a23_720w.png?source=54b3c3a5\" data-rawwidth=\"1059\" data-rawheight=\"729\" class=\"origin_image zh-lightbox-thumb\" width=\"1059\" data-original=\"https://pic2.zhimg.com/v2-89cbc966dcbebf1ebeb1ea9772181a23_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1059'%20height='729'&gt;&lt;/svg&gt;\" data-rawwidth=\"1059\" data-rawheight=\"729\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1059\" data-original=\"https://pic2.zhimg.com/v2-89cbc966dcbebf1ebeb1ea9772181a23_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-89cbc966dcbebf1ebeb1ea9772181a23_720w.png?source=54b3c3a5\"></figure><p>累计鼠标点击次数：5</p><p>4.等待网页加载，点击你需要的数据区域，点击导入，import</p><figure><noscript><img src=\"https://pic4.zhimg.com/50/v2-557b3b2f4af49416a7ad107125c7fe28_720w.png?source=54b3c3a5\" data-rawwidth=\"1499\" data-rawheight=\"930\" class=\"origin_image zh-lightbox-thumb\" width=\"1499\" data-original=\"https://pic1.zhimg.com/v2-557b3b2f4af49416a7ad107125c7fe28_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1499'%20height='930'&gt;&lt;/svg&gt;\" data-rawwidth=\"1499\" data-rawheight=\"930\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1499\" data-original=\"https://pic1.zhimg.com/v2-557b3b2f4af49416a7ad107125c7fe28_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-557b3b2f4af49416a7ad107125c7fe28_720w.png?source=54b3c3a5\"></figure><p>累计鼠标点击次数：7</p><p>5，然后会弹出一个数据存放区域的对话框，随便找个地方，点击ok</p><figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-e2e33d54458f8588c52b08e10894eadf_720w.png?source=54b3c3a5\" data-rawwidth=\"989\" data-rawheight=\"618\" class=\"origin_image zh-lightbox-thumb\" width=\"989\" data-original=\"https://pic1.zhimg.com/v2-e2e33d54458f8588c52b08e10894eadf_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='989'%20height='618'&gt;&lt;/svg&gt;\" data-rawwidth=\"989\" data-rawheight=\"618\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"989\" data-original=\"https://pic1.zhimg.com/v2-e2e33d54458f8588c52b08e10894eadf_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e2e33d54458f8588c52b08e10894eadf_720w.png?source=54b3c3a5\"></figure><p>累计鼠标点击次数：8</p><p>6.等待数据加载，本次无需点击</p><figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-e77132938923c8075f0e947a4a492724_720w.png?source=54b3c3a5\" data-rawwidth=\"682\" data-rawheight=\"439\" class=\"origin_image zh-lightbox-thumb\" width=\"682\" data-original=\"https://pic1.zhimg.com/v2-e77132938923c8075f0e947a4a492724_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='682'%20height='439'&gt;&lt;/svg&gt;\" data-rawwidth=\"682\" data-rawheight=\"439\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"682\" data-original=\"https://pic1.zhimg.com/v2-e77132938923c8075f0e947a4a492724_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e77132938923c8075f0e947a4a492724_720w.png?source=54b3c3a5\"></figure><p>累计鼠标点击次数：8</p><p>7.大约等待10秒钟，可以看到了，大概爬取了600行的数据。</p><figure><noscript><img src=\"https://pic4.zhimg.com/50/v2-40877c11ee5b1e97a2fc453c67013a7b_720w.png?source=54b3c3a5\" data-rawwidth=\"1642\" data-rawheight=\"969\" class=\"origin_image zh-lightbox-thumb\" width=\"1642\" data-original=\"https://pic4.zhimg.com/v2-40877c11ee5b1e97a2fc453c67013a7b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1642'%20height='969'&gt;&lt;/svg&gt;\" data-rawwidth=\"1642\" data-rawheight=\"969\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1642\" data-original=\"https://pic4.zhimg.com/v2-40877c11ee5b1e97a2fc453c67013a7b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-40877c11ee5b1e97a2fc453c67013a7b_720w.png?source=54b3c3a5\"></figure><p>累计鼠标点击次数：8</p><br><p>怎么样，你学会了吗</p><p>要是还看不懂</p><p>我选择狗带。</p><br><br><h2>相关Live</h2><p>* <a href=\"https://www.zhihu.com/lives/835892896728244224\" class=\"internal\">培养数据分析的思维方式</a></p><br><h2>相关回答</h2><p>* <a href=\"https://www.zhihu.com/question/19851900/answer/153031039\" class=\"internal\">怎么培养数据分析的能力？ - 知乎</a></p><p>* <a href=\"https://www.zhihu.com/question/22119753/answer/152679250\" class=\"internal\">业余时间如何学数据分析？ - 知乎</a></p><p>* <a href=\"https://www.zhihu.com/question/55768263/answer/148334879\" class=\"internal\">如何用一个循环语句输出九九乘法表？ - 知乎</a></p><p>* <a href=\"https://www.zhihu.com/question/26619945/answer/131423397\" class=\"internal\">Excel 有什么神奇用途？ - 知乎</a></p><br><p>-------分割线-------\n欢迎关注我的微信公众账号：决明子 Jueming_zi\n这里有关于摄影，绘画，艺术，以及我想说给你们听的故事</p><p><a href=\"https://link.zhihu.com/?target=http%3A//weixin.qq.com/r/iUgiOm3EeDAHrSlZ9x2b\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">weixin.qq.com/r/iUgiOm3</span><span class=\"invisible\">EeDAHrSlZ9x2b</span><span class=\"ellipsis\"></span></a> (二维码自动识别)</p>", "学计算机的男生发这个给我看是什么意思？": "<p>它应该是这个意思 </p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>import time \n[(time.sleep(0.0009),  print(\"\\033[91m\"+i,end=\"\",flush=True)) for i in ('\\n'.join([''.join([(' I love U'[(x-y)%9]if((x*0.05)**2+(y*0.1)**2-1)**3-(x*0.05)**2*(y*0.1)**3&lt;=0 else' ')for x in range(-30,30)])for y in range(15,-15,-1)]))]\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-58e8e87f19800b60c25d6b900128ef81_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"503\" data-rawheight=\"412\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-58e8e87f19800b60c25d6b900128ef81_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"503\" data-original=\"https://pic2.zhimg.com/v2-58e8e87f19800b60c25d6b900128ef81_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='503'%20height='412'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"503\" data-rawheight=\"412\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-58e8e87f19800b60c25d6b900128ef81_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"503\" data-original=\"https://pic2.zhimg.com/v2-58e8e87f19800b60c25d6b900128ef81_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-58e8e87f19800b60c25d6b900128ef81_720w.gif?source=54b3c3a5\"></figure><p><br></p><p> 或者还带点小激动</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"kn\">import</span>  <span class=\"nn\">time</span><span class=\"o\">,</span><span class=\"nn\">os</span><span class=\"o\">,</span><span class=\"nn\">math</span>\n<span class=\"p\">[([(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">),</span>  <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\033</span><span class=\"s2\">[91m\"</span><span class=\"o\">+</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">end</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span><span class=\"n\">flush</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"s1\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([(</span><span class=\"s1\">' I love U'</span><span class=\"p\">[(</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"n\">y</span><span class=\"p\">)</span><span class=\"o\">%</span><span class=\"mi\">9</span><span class=\"p\">]</span><span class=\"k\">if</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"o\">*</span><span class=\"mf\">0.05</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">*</span><span class=\"mf\">0.1</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">*</span><span class=\"mf\">0.05</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">*</span><span class=\"mf\">0.1</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">3</span><span class=\"o\">&lt;=</span><span class=\"mi\">0</span> <span class=\"k\">else</span><span class=\"s1\">' '</span><span class=\"p\">)</span><span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">30</span><span class=\"p\">)])</span><span class=\"k\">for</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]))]</span> <span class=\"p\">,</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">ai</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">)),</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">(</span><span class=\"s1\">'clear'</span><span class=\"p\">)</span>  <span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">ai</span><span class=\"p\">,</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">([</span><span class=\"mf\">0.001</span><span class=\"p\">,</span><span class=\"o\">*</span><span class=\"p\">[</span> <span class=\"mf\">0.00001</span> <span class=\"p\">]</span><span class=\"o\">*</span><span class=\"mi\">99</span><span class=\"p\">])]</span>\n</code></pre></div><p><br></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-01681950980942f0a3aaefc3c7fcc6ee_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"669\" data-rawheight=\"551\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-01681950980942f0a3aaefc3c7fcc6ee_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"669\" data-original=\"https://pic4.zhimg.com/v2-01681950980942f0a3aaefc3c7fcc6ee_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='669'%20height='551'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"669\" data-rawheight=\"551\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-01681950980942f0a3aaefc3c7fcc6ee_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"669\" data-original=\"https://pic4.zhimg.com/v2-01681950980942f0a3aaefc3c7fcc6ee_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-01681950980942f0a3aaefc3c7fcc6ee_720w.gif?source=54b3c3a5\"></figure><p><br></p><p>原理解释:</p><a href=\"https://zhuanlan.zhihu.com/p/85804612\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-39d697126ae7725e20649f0b224c3275_bh.jpg?source=54b3c3a5\" data-image-width=\"611\" data-image-height=\"400\" class=\"internal\">文刀流：用 python 画爱心代码讲解</a><p>顺便推一个挂载百度盘为本地盘的python 练手项目. 好孩子看不见.</p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/zk4/baiduFuse\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-2fddd75f31031a8336c50f1dd4b3d445_l.jpg?source=54b3c3a5\" data-image-width=\"400\" data-image-height=\"400\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">zk4/baiduFuse</a><p></p>", "通俗的讲，网络爬虫到底是什么？": "<blockquote>简单来讲，爬虫就是一个探测机器，它的基本操作就是模拟人的行为去各个网站溜达，点点按钮，查查数据，或者把看到的信息背回来。就像一只虫子在一幢楼里不知疲倦地爬来爬去。</blockquote>\n<p>你可以简单地想象：<strong>每个爬虫都是你的「分身」。就像孙悟空拔了一撮汗毛，吹出一堆猴子一样。</strong></p>\n<blockquote>你每天使用的百度，其实就是利用了这种爬虫技术：每天放出无数爬虫到各个网站，把他们的信息抓回来，然后化好淡妆排着小队等你来检索。<br>\n抢票软件，就相当于撒出去无数个分身，每一个分身都帮助你不断刷新 12306 网站的火车余票。一旦发现有票，就马上拍下来，然后对你喊：土豪快来付款。</blockquote>\n<p>那么，像这样的爬虫技术一旦被用来作恶有多可怕呢？</p>\n<p>正好在上周末，一位黑客盆友御风神秘兮兮地给我发来一份《中国爬虫图鉴》，这哥们在腾讯云鼎实验室主要负责加班，顺便和同事们开发了很多黑科技。比如他们搞了一个威胁情报系统，号称能探测到全世界的「爬虫」都在做什么。</p>\n<p>我吹着口哨打开《图鉴》，但一分钟以后，我整个人都不好了。</p>\n<p>我看到了另一个<strong>「平行世界」：</strong></p>\n<p><strong>就在我们身边的网络上，已经密密麻麻爬满了各种网络爬虫，它们善恶不同，各怀心思。而越是每个人切身利益所在的地方，就越是爬满了爬虫。</strong></p>\n<p>看到最后，我发现这哪里是<strong>《中国爬虫图鉴》</strong>，这分明是一份<strong>《中国焦虑图鉴》</strong>。</p>\n<figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-8d6ee9042fc4be27e6581af54aedac24_720w.png?source=54b3c3a5\" alt=\"\" data-rawwidth=\"864\" data-rawheight=\"987\" class=\"origin_image zh-lightbox-thumb\" width=\"864\" data-original=\"https://pic1.zhimg.com/v2-8d6ee9042fc4be27e6581af54aedac24_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='864'%20height='987'&gt;&lt;/svg&gt;\" alt=\"\" data-rawwidth=\"864\" data-rawheight=\"987\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"864\" data-original=\"https://pic1.zhimg.com/v2-8d6ee9042fc4be27e6581af54aedac24_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8d6ee9042fc4be27e6581af54aedac24_720w.png?source=54b3c3a5\"></figure>\n<p>我们今天要说的，就和这些 App 有关。</p>\n<p><br>\n<strong>一、爬虫的「骚操作」</strong></p>\n<p>爬虫也分善恶。</p>\n<p>像谷歌这样的搜索引擎爬虫，每隔几天对全网的网页扫一遍，供大家查阅，各个被扫的网站大都很开心。这种就被定义为「善意爬虫」。</p>\n<p>但是，像抢票软件这样的爬虫，对着 12306 每秒钟恨不得撸几万次。铁总并不觉得很开心。这种就被定义为「恶意爬虫」。（注意，抢票的你觉得开心没用，被扫描的网站觉得不开心，它就是恶意的。）</p>\n<p>给你看一张图：</p>\n<figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-6e43d62ef7ad4c5aeb15cfe522b0d47d_720w.png?source=54b3c3a5\" alt=\"\" data-rawwidth=\"864\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"864\" data-original=\"https://pic4.zhimg.com/v2-6e43d62ef7ad4c5aeb15cfe522b0d47d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='864'%20height='408'&gt;&lt;/svg&gt;\" alt=\"\" data-rawwidth=\"864\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"864\" data-original=\"https://pic4.zhimg.com/v2-6e43d62ef7ad4c5aeb15cfe522b0d47d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-6e43d62ef7ad4c5aeb15cfe522b0d47d_720w.png?source=54b3c3a5\"></figure>\n<p>这张图里显示的，就是各行各业被爬「叨扰」的比例。（注意，这张图显示是全世界，不是全中国。）而每一个色块背后，都是一条真实而强大的利益链条。</p>\n<p><strong>接下来，中哥就给你科普一下里面的骚操作。</strong></p>\n<p><strong>1、排名第一的是出行</strong></p>\n<p>出行行业中爬虫的占比最高（20.87%）。在出行的爬虫中，有 89.02% 的流量都是冲着 12306 去的。这不意外，全中国卖火车票的独此一家别无分号。</p>\n<p>你还记得当年 12306 上线王珞丹和白百何的「史上最坑图片验证码」么？</p>\n<figure><noscript><img src=\"https://pic4.zhimg.com/50/v2-968cf84bd0cfea48a098deca2dcfa9ee_720w.png?source=54b3c3a5\" alt=\"\" data-rawwidth=\"864\" data-rawheight=\"479\" class=\"origin_image zh-lightbox-thumb\" width=\"864\" data-original=\"https://pic1.zhimg.com/v2-968cf84bd0cfea48a098deca2dcfa9ee_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='864'%20height='479'&gt;&lt;/svg&gt;\" alt=\"\" data-rawwidth=\"864\" data-rawheight=\"479\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"864\" data-original=\"https://pic1.zhimg.com/v2-968cf84bd0cfea48a098deca2dcfa9ee_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-968cf84bd0cfea48a098deca2dcfa9ee_720w.png?source=54b3c3a5\"></figure>\n<p>这些东西不是为了故意难为老老实实卖票的人的，而恰恰是为了阻止爬虫（也就是抢票软件）的点击。刚才说了，爬虫只会简单地机械点击，它不认识白百何，所以很大一部分爬虫就被挡在了门外。</p>\n<p>你可能会说，不对啊，我现在还可以用抢票软件抢到票啊。</p>\n<p>没错。抢票软件也不是吃素的。<strong>它们在和铁总搞「对抗」。</strong></p>\n<p><strong>有一种东西叫作「打码平台」，你可以了解一下。</strong></p>\n<p>打码平台雇用了很多叔叔阿姨，他们在电脑屏幕前不做别的事情，专门帮人识别验证码。那边抢票软件遇到了验证码，系统就会自动把这些验证码传到叔叔阿姨面前，他们手工选好哪个是白百何哪个是王珞丹，然后再把结果传回去。总共的过程用不了几秒时间。</p>\n<p>当然，这样的打码平台还有记忆功能。如果叔叔阿姨已经标记了这张图是「锅铲」，那么下次这张图片再出现的时候，系统就直接判断它是「锅铲」。时间一长，12306 系统里的图片就被标记完了，机器自己都能认识，叔叔阿姨都可以坐在一边斗地主了。</p>\n<figure><noscript><img src=\"https://pic2.zhimg.com/50/v2-dabe1485b5ad95b0b8e6722ff37ea74f_720w.png?source=54b3c3a5\" alt=\"\" data-rawwidth=\"864\" data-rawheight=\"752\" class=\"origin_image zh-lightbox-thumb\" width=\"864\" data-original=\"https://pic1.zhimg.com/v2-dabe1485b5ad95b0b8e6722ff37ea74f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='864'%20height='752'&gt;&lt;/svg&gt;\" alt=\"\" data-rawwidth=\"864\" data-rawheight=\"752\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"864\" data-original=\"https://pic1.zhimg.com/v2-dabe1485b5ad95b0b8e6722ff37ea74f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-dabe1485b5ad95b0b8e6722ff37ea74f_720w.png?source=54b3c3a5\"></figure>\n<p><strong>你可能会问：为什么 12306 这么抠呢？它大方地让爬虫随意爬会死吗？</strong><br>\n<br>\n<strong>答：会死。</strong></p>\n<p>你知道每年过年之前，12306 被点成什么样了吗？公开数据是这么说的：「最高峰时 1 天内页面浏览量达 813.4 亿次，1 小时最高点击量 59.3 亿次，平均每秒 164.8 万次。」这还是加上验证码防护之后的数据。可想而知被拦截在外面的爬虫还有多少。</p>\n<p>况且这里还没有讨论，被抢票软件把票抢走，对我们父母那样的不会抢票的人来说，是不是公平呢？</p>\n<p>铁路被爬虫「点击」成这样已经够惨了，但它还有个难兄难弟，就是航空。</p>\n<p>而航空里，被搞得最惨的不是国航，不是海航，也不是东航。而是亚航。</p>\n<figure><noscript><img src=\"https://pic4.zhimg.com/50/v2-ddfd76ab2cd099ea64038677eb6d97fe_720w.png?source=54b3c3a5\" alt=\"\" data-rawwidth=\"864\" data-rawheight=\"452\" class=\"origin_image zh-lightbox-thumb\" width=\"864\" data-original=\"https://pic1.zhimg.com/v2-ddfd76ab2cd099ea64038677eb6d97fe_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='864'%20height='452'&gt;&lt;/svg&gt;\" alt=\"\" data-rawwidth=\"864\" data-rawheight=\"452\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"864\" data-original=\"https://pic1.zhimg.com/v2-ddfd76ab2cd099ea64038677eb6d97fe_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-ddfd76ab2cd099ea64038677eb6d97fe_720w.png?source=54b3c3a5\"></figure>\n<p>航空类爬虫的分布比例。</p>\n<p>很多人可能都没坐过亚洲航空。这是一家马来西亚的廉价航空公司，航线基本都是从中国各地飞往东南亚的旅游胜地，飞机上连矿泉水都得自费买，是屌丝穷 X 度假之首选。</p>\n<p>为什么爬虫这么青睐亚航呢？因为它便宜。确切地说，因为它经常放出便宜的票。</p>\n<p>本来，亚航的初衷只是随机放出一些便宜的票来吸引游客，但这里面黄牛党是有利可图的。</p>\n<p>据我所知，他们是这样玩的：</p>\n<p>技术宅黄牛党们利用爬虫，不断刷新亚航的票务接口，一旦出现便宜的票，不管三七二十一先拍下来再说。</p>\n<p>亚航有规定，你拍下来半小时（具体时间记不清了）不付款票就自动回到票池，继续卖。但是黄牛党们在爬虫脚本里写好了精确的时间，到了半小时，一毫秒都不多，他又把票拍下来，如此循环。直到有人从黄牛党这里定了这个票，黄牛党就接着利用程序，在亚航系统里放弃这张票，然后 0.00001 秒之后，就帮你用你的名字预定了这张票。</p>\n<p>「我是中间商，我就要赚差价！」这波骚操作，堪称完美<strong>。</strong></p>\n<p><strong>2、排名第二的是社交</strong></p>\n<p>社交的爬虫重灾区，就是你们喜闻乐见的微博。</p>\n<p>给你看张图：</p>\n<figure><noscript><img src=\"https://pic2.zhimg.com/50/v2-db05aa902b2aa4cd6f604b1d95857be0_720w.png?source=54b3c3a5\" alt=\"\" data-rawwidth=\"864\" data-rawheight=\"656\" class=\"origin_image zh-lightbox-thumb\" width=\"864\" data-original=\"https://pic2.zhimg.com/v2-db05aa902b2aa4cd6f604b1d95857be0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='864'%20height='656'&gt;&lt;/svg&gt;\" alt=\"\" data-rawwidth=\"864\" data-rawheight=\"656\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"864\" data-original=\"https://pic2.zhimg.com/v2-db05aa902b2aa4cd6f604b1d95857be0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-db05aa902b2aa4cd6f604b1d95857be0_720w.png?source=54b3c3a5\"></figure>\n<p>这是爬虫经常光顾的微博地址。</p>\n<p>这里的代码其实指向了微博的一个接口。它可以用来获取某个人的微博列表、微博的状态、索引等等等等。</p>\n<p>获得这些，能搞出什么骚操作呢？</p>\n<p>你想想看，如果我能随心所欲地指挥一帮机器人，打开某人的微博，然后刷到某一条，然后疯狂关注、点赞或者留言，这不就是标准的僵尸粉上班儿的流程么。。。</p>\n<p>其实，僵尸粉都只是爬虫的常规操作，更骚的来了，你都想不到还能这么操作，而且分分钟躺着赚钱：</p>", "Excel 的 VBA 现在还算是办公利器吗？": "先说结论，VBA依旧是办公利器。以我的个人经历而言，在BCG做过三年咨询顾问，写了上万行的VBA程序，每个项目一千至几千行程序不等。最后将Excel用成了中控界面，类似EMACS，在Excel可以随意操控全公司的打印机、Word、Powerpoint等等，自动完成各种任务以及数据更新和抓取。依靠VBA，在效率上是一般同事的数倍甚至是高一个量级，你说VBA还是不是办公利器？<br><br>不过题主得到的反馈也正常，许多高级程序员确实瞧不上VBA。因为程序员是有鄙视链的：汇编 &gt;C &gt;C++ &gt;Python &gt;Java及C#及PHP（这三者相互撕） &gt;VB &gt;HTML。在这长长的鄙视链中，甚至都没有VBA的位置。<br><br>但是Office+VBA是图灵完备的，所以被程序员用来耍酷的各类性感语言能实现的大部分功能，VBA都能实现，而且往往是以更高效更快捷的方式，在这里不谈效率和优雅。较之Python等常用语言，VBA各有攻防各有优缺点。Python的优势当然是扩展性强、超越Office环境之后的适用性强、资源丰富以及效率高，而VBA的优点如下：<br><ul><li>环境不依赖，只需要打开装机自带的Office，然后按下Alt+F11就自动进入编程和执行环境</li><li>上手简单，学习曲线很平缓，甚至可以更简单的通过录制宏来解决写程序的问题，只需要在简单的代码基础上修修补补就可以执行，参考<a href=\"https://www.zhihu.com/question/20870802/answer/34107391\" class=\"internal\">Excel VBA 如何快速学习？ - 何明科的回答</a><br></li><li>与办公环境完美兼容，在Excel/Word/Powerpoint/Outlook/Access之间随便穿梭，比胶水语言还要简单易用</li><li>分享性和移植性很强，几乎所有测试通过的程序放到别的机器上也可轻易执行（如果不考虑各种本地文件位置）</li></ul><br>基于以上的优劣势对比，VBA仍然是当之无愧的办公利器之王。而且大家不用太在乎手中的工具（VBA还是Python或者其他），核心还是使用工具的人以及人的思考。<br><br>下面列举Office+VBA实现的若干功能，真正为职场人士省时省事省力。大部分内容在回答（<a href=\"https://www.zhihu.com/question/27588491/answer/90603436\" class=\"internal\">Excel 到底有多厉害？ - 何明科的回答</a>）中已经出现过。不愿意点击过去阅读的，直接看下面的克隆内容。<br><br><b>1、批量修改格式</b><br>下图是利用Powerpoint中录制的宏再加上稍微修改的代码（甚至都称不上是改代码，大部分是改参数），将Powerpoint中所有的字体及字号进行统一修改。常做PPT而且需要根据老板的喜好改来改去的同学们，知道这个批处理功能有多么救命。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/573d74cb3d835acefa17899774602b6e_720w.png?source=54b3c3a5\" class=\"content_image\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='0'%20height='0'&gt;&lt;/svg&gt;\" class=\"content_image lazy\" data-actualsrc=\"https://pic1.zhimg.com/50/573d74cb3d835acefa17899774602b6e_720w.png?source=54b3c3a5\"></figure><br><br><b>2、批量完成打印</b><br>刚进职场的新人，只要爸爸不是李刚，基本都做过影帝影后（影=印，各种复印打印的体力劳动）。特别是咨询投行服务行业，在大忽悠会议之前之后，花数小时或者整晚来打印数个文件，并不是天方夜谭。而且这件事情是对着同样一堆不断修改的文件，会经常不断重复发生。<br><br>我写的第一个VBA程序就是完成对100多张Excel表格的自动打印，因为是第一个VBA程序，所以比较挫，基本上是宏录制之后来改的，没有使用参考书及搜索引擎，全靠F1和自动提示，所以贴出来特别纪念一下。但也让大家清楚VBA上手也多么容易。实现的功能就是将每周都要做一次的100多张表格的按顺序打印让机器自动做一遍，而且需要防卡纸：按下一个“妞”，就慢慢美妙结果的发生。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/e7cd68b25900b0c5f4a6f60b935a05f5_720w.png?source=54b3c3a5\" data-rawwidth=\"676\" data-rawheight=\"424\" class=\"origin_image zh-lightbox-thumb\" width=\"676\" data-original=\"https://pic1.zhimg.com/e7cd68b25900b0c5f4a6f60b935a05f5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='676'%20height='424'&gt;&lt;/svg&gt;\" data-rawwidth=\"676\" data-rawheight=\"424\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"676\" data-original=\"https://pic1.zhimg.com/e7cd68b25900b0c5f4a6f60b935a05f5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/e7cd68b25900b0c5f4a6f60b935a05f5_720w.png?source=54b3c3a5\"></figure>后来这个程序的升级版是：调度多台打印机，进一步提高效率，以及将打印机卡纸造成队列错误的概率降到极小的范围内。<br><br><b>3、制作炫目视觉效果（图表、动画及油画）</b><br>图表制作是每个Office一族的必备任务，制得一手好表格，绝对是升职加薪和偷懒放风的利器。在回答（<a href=\"https://www.zhihu.com/question/24331936/answer/48616123\" class=\"internal\">黄焖鸡米饭是怎么火起来的？ - 何明科的回答</a>），就利用Excel+VBA做出数张炫酷的信息地图，利用VBA为每个省的图形涂色。<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/71d4c477d5d0216676743cc8ced48cdd_720w.png?source=54b3c3a5\" data-rawwidth=\"1373\" data-rawheight=\"584\" class=\"origin_image zh-lightbox-thumb\" width=\"1373\" data-original=\"https://pic2.zhimg.com/71d4c477d5d0216676743cc8ced48cdd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1373'%20height='584'&gt;&lt;/svg&gt;\" data-rawwidth=\"1373\" data-rawheight=\"584\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1373\" data-original=\"https://pic2.zhimg.com/71d4c477d5d0216676743cc8ced48cdd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/71d4c477d5d0216676743cc8ced48cdd_720w.png?source=54b3c3a5\"></figure>（涂色部分来自于网上的一段程序，制作GIF动画的是自己完成的）<br><br>同时，为了进一步增强炫酷结果，还利用VBA将这些连续变化的图表做成了GIF动画。<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/8a517ecb76ee3704e81aa399144e6beb_720w.png?source=54b3c3a5\" data-rawwidth=\"1197\" data-rawheight=\"589\" class=\"origin_image zh-lightbox-thumb\" width=\"1197\" data-original=\"https://pic4.zhimg.com/8a517ecb76ee3704e81aa399144e6beb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1197'%20height='589'&gt;&lt;/svg&gt;\" data-rawwidth=\"1197\" data-rawheight=\"589\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1197\" data-original=\"https://pic4.zhimg.com/8a517ecb76ee3704e81aa399144e6beb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/8a517ecb76ee3704e81aa399144e6beb_720w.png?source=54b3c3a5\"></figure><br>另外还可以利用Excel，把心仪妹子的图片拿到手，然后用Excel化成点阵图并进行油画效果的处理，然后送给她撩一撩。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/ae03578effcf9a205d0ad3c267d9eaa6_720w.png?source=54b3c3a5\" class=\"content_image\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='0'%20height='0'&gt;&lt;/svg&gt;\" class=\"content_image lazy\" data-actualsrc=\"https://pic1.zhimg.com/50/ae03578effcf9a205d0ad3c267d9eaa6_720w.png?source=54b3c3a5\"></figure><br><b>4、</b><b>撰写</b><b>八股文</b><br>这是帮朋友实现的一个项目，他们实验室是研究某类事故并对重大事故进行鉴定，最后发布word版的正式报告。之前的工作流程是在专业的软件中完成计算和仿真，最后按照正式报告八股文的行文，把各种关键信息填进去，最后写成Word文件。写报告的过程枯燥而没有技术含量，但却要反复进行。<br><br>通过下图的Word+VBA，完成主要的交互界面并连接计算软件。在通过简单的交互获取主要信息后，在后台完成计算并将主要信息填写入八股文的Word模版，最终完成报告，同时将结构化的信息存入Access数据库。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/7ad977587312726306a95db0a7197aa7_720w.png?source=54b3c3a5\" data-rawwidth=\"866\" data-rawheight=\"521\" class=\"origin_image zh-lightbox-thumb\" width=\"866\" data-original=\"https://pic4.zhimg.com/7ad977587312726306a95db0a7197aa7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='866'%20height='521'&gt;&lt;/svg&gt;\" data-rawwidth=\"866\" data-rawheight=\"521\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"866\" data-original=\"https://pic4.zhimg.com/7ad977587312726306a95db0a7197aa7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/7ad977587312726306a95db0a7197aa7_720w.png?source=54b3c3a5\"></figure><br><b>5、管理项目及同步内容</b><br>这是协助某国际大型汽车制造厂完成新品牌及其新款车型上市，面临车型即将断档的窘境，该新车型的上市非常关键，不能错失时间节点。然而，新车型上市涉及到无数分支：制造、产品、市场、渠道、营销、公关、财务等等，同时还要协调欧洲的两个总部以及中国的两个分部。<br><br>这次咨询的核心任务就是项目管理，总控整个大项目的进度，并每周向中国区的CEO汇报进度并发掘出易出现问题的关键节点以调配资源。我们4个咨询顾问分配下去各自负责几个部门或者项目分支，和团队一起规划流程、画甘特图、确认里程碑及时间点、安排负责人等等。当每天回到办公室大家将进度汇总在一起的时候发现了挑战及难点，每条任务线并不是独立发展的，而是各条任务线交织在一起并互相影响。<br><ul><li>某些核心人员在多个任务线出现。比如：负责预算的财务人员，几乎要出现在各条线中负责相关预算的审批环节</li><li>某些任务线的里程碑是其他任务线里程碑的必要条件而相互关联。比如：新车的下线时间影响发布会的时间，相关法规测试的通过又影响车辆的下线时间等等</li></ul><br>当任务线增多以及任务线之间的交叉越发频繁的时候，汇总的任务将会几何级数增加，这就是我们在项目过程中遇到的问题。于是我利用Excel+VBA完成了这个工作的自动化。主要实现的功能：<br><ul><li>自动将4个顾问手中分散的Excel文件汇集在一起形成一个大的总表，如下图</li><li>各顾问手中的表格是按照部门维度来划分的，汇总后需要按照不同的维度来输出不同类型的表格，比如：按任务线输出表格、按责任人输出表格、所有延误任务的表格、所有需要资源重点投入任务的表格等等</li></ul><figure><noscript><img src=\"https://pic4.zhimg.com/50/735d490e3ccd5ada806b28230e7d7c31_720w.png?source=54b3c3a5\" data-rawwidth=\"921\" data-rawheight=\"663\" class=\"origin_image zh-lightbox-thumb\" width=\"921\" data-original=\"https://pic4.zhimg.com/735d490e3ccd5ada806b28230e7d7c31_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='921'%20height='663'&gt;&lt;/svg&gt;\" data-rawwidth=\"921\" data-rawheight=\"663\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"921\" data-original=\"https://pic4.zhimg.com/735d490e3ccd5ada806b28230e7d7c31_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/735d490e3ccd5ada806b28230e7d7c31_720w.png?source=54b3c3a5\"></figure><br>在此基础之上，还要将上面提到的各种维度下的所有表格（大概有200多张），按要求格式粘贴到PPT中，每周提交给中国区的总部进行汇报和评估。密密麻麻的表格如下图。于是，我又写了一个程序将Excel中的表格输出到Powerpoint中，将一个秘书每次需要数小时才能完成的工作，简化成了一键发布，并可以在Excel中完成对PPT的更新。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/13113c0de51532ae9d52781b90a5f984_720w.png?source=54b3c3a5\" data-rawwidth=\"1725\" data-rawheight=\"745\" class=\"origin_image zh-lightbox-thumb\" width=\"1725\" data-original=\"https://pic1.zhimg.com/13113c0de51532ae9d52781b90a5f984_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1725'%20height='745'&gt;&lt;/svg&gt;\" data-rawwidth=\"1725\" data-rawheight=\"745\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1725\" data-original=\"https://pic1.zhimg.com/13113c0de51532ae9d52781b90a5f984_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/13113c0de51532ae9d52781b90a5f984_720w.png?source=54b3c3a5\"></figure><br>这个项目的程序量不小，近似于写了一个迷你版的Microsoft Project来进行项目管理。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/6686906f828d327e4e90bd0f33adbffa_720w.png?source=54b3c3a5\" data-rawwidth=\"1841\" data-rawheight=\"813\" class=\"origin_image zh-lightbox-thumb\" width=\"1841\" data-original=\"https://pic1.zhimg.com/6686906f828d327e4e90bd0f33adbffa_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1841'%20height='813'&gt;&lt;/svg&gt;\" data-rawwidth=\"1841\" data-rawheight=\"813\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1841\" data-original=\"https://pic1.zhimg.com/6686906f828d327e4e90bd0f33adbffa_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/6686906f828d327e4e90bd0f33adbffa_720w.png?source=54b3c3a5\"></figure><br>最后，下图中密密麻麻的PPT每周需要更新一次，每次都是快100张的工作量，然而基本上都是靠Excel来自动完成更新的。因为PPT的模版每次变化不大，我将这些模版记录下来，每周更新的时候只要根据Excel中最新的数据更改PPT中的数据即可。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/14ce50e4e2f1859d8d85c80b04ac669d_720w.png?source=54b3c3a5\" data-rawwidth=\"1709\" data-rawheight=\"757\" class=\"origin_image zh-lightbox-thumb\" width=\"1709\" data-original=\"https://pic2.zhimg.com/14ce50e4e2f1859d8d85c80b04ac669d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1709'%20height='757'&gt;&lt;/svg&gt;\" data-rawwidth=\"1709\" data-rawheight=\"757\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1709\" data-original=\"https://pic2.zhimg.com/14ce50e4e2f1859d8d85c80b04ac669d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/14ce50e4e2f1859d8d85c80b04ac669d_720w.png?source=54b3c3a5\"></figure><br><br><b>6、海量下载Bloomberg数据并完成分析</b><br>通过Bloomberg的VBA API，海量下载数百只目标股票的tick data以及order book。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/1753b3966dc2c5a0e7d339fed7ab5979_720w.png?source=54b3c3a5\" data-rawwidth=\"930\" data-rawheight=\"273\" class=\"origin_image zh-lightbox-thumb\" width=\"930\" data-original=\"https://pic4.zhimg.com/1753b3966dc2c5a0e7d339fed7ab5979_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='930'%20height='273'&gt;&lt;/svg&gt;\" data-rawwidth=\"930\" data-rawheight=\"273\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"930\" data-original=\"https://pic4.zhimg.com/1753b3966dc2c5a0e7d339fed7ab5979_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/1753b3966dc2c5a0e7d339fed7ab5979_720w.png?source=54b3c3a5\"></figure><br>并根据实现构建好的数学模型，在后台完成计算，将上述的实时数据转化成每只股票实时的trading cost，实时展现在交易员最常用的Excel界面中，方便交易员评估当下的交易成本以便于优化交易策略。<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/183842f4c1a2307f18d03b8cb20657c8_720w.png?source=54b3c3a5\" data-rawwidth=\"1205\" data-rawheight=\"222\" class=\"origin_image zh-lightbox-thumb\" width=\"1205\" data-original=\"https://pic2.zhimg.com/183842f4c1a2307f18d03b8cb20657c8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1205'%20height='222'&gt;&lt;/svg&gt;\" data-rawwidth=\"1205\" data-rawheight=\"222\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1205\" data-original=\"https://pic2.zhimg.com/183842f4c1a2307f18d03b8cb20657c8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/183842f4c1a2307f18d03b8cb20657c8_720w.png?source=54b3c3a5\"></figure><br><br><blockquote>更多文章请到<a href=\"http://zhuanlan.zhihu.com/hemingke\" class=\"internal\">数据冰山 - 知乎专栏</a><br>更多回答请看<a href=\"https://www.zhihu.com/people/he-ming-ke\" class=\"internal\">何明科的主页</a></blockquote>", "你是如何自学 Python 的？": "<p>强烈推荐一本书！！</p><p>这个题回答太多了，看视频打代码什么的都不靠谱，对于零基础的人来说，资料越多就越乱，最好的办法就是找一本好书，跟着从头到尾学，无任何编程基础，也能一两个月入门。</p><p>我要推荐的就是一款爆款书，当时我就是被这本书带着入门的，所以非常感谢这本书，也想把这么好的书让更多新手知道</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a6f8d3e7e4c99d2b5ccc325ee52f5be8_720w.jpg?source=54b3c3a5\" data-rawwidth=\"960\" data-rawheight=\"1280\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-35abfc19e41ef2798d4d4ca2ae64de94_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"960\" data-original=\"https://pic4.zhimg.com/v2-a6f8d3e7e4c99d2b5ccc325ee52f5be8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='960'%20height='1280'&gt;&lt;/svg&gt;\" data-rawwidth=\"960\" data-rawheight=\"1280\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-35abfc19e41ef2798d4d4ca2ae64de94_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"960\" data-original=\"https://pic4.zhimg.com/v2-a6f8d3e7e4c99d2b5ccc325ee52f5be8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a6f8d3e7e4c99d2b5ccc325ee52f5be8_720w.jpg?source=54b3c3a5\"></figure><p>就是这个书，淘宝当当亚马逊都有，六七十块钱吧。真的是非常物超所值，这本书会让你觉得编程so easy，so因吹斯汀</p><p>这本书对于新手真是太友好了。真的是保姆级的手把手教程。没有任何编程基础的人也完全可以学会python，这本书我真的怎么夸他都不为过。看了那么多python书，最适合新手入门的就是这本</p><p>    书整体分为两部分，基础语法和项目实践，我随便摘几个目录贴一下吧</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-ea2cfbafc0e72f8e13e92676ac06941f_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1500\" data-rawheight=\"2000\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-bc4a199d090c66f538b857e2c1cc8f44_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1500\" data-original=\"https://pic3.zhimg.com/v2-ea2cfbafc0e72f8e13e92676ac06941f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1500'%20height='2000'&gt;&lt;/svg&gt;\" data-rawwidth=\"1500\" data-rawheight=\"2000\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-bc4a199d090c66f538b857e2c1cc8f44_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1500\" data-original=\"https://pic3.zhimg.com/v2-ea2cfbafc0e72f8e13e92676ac06941f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-ea2cfbafc0e72f8e13e92676ac06941f_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-0f8b38464b02077c854937060762054d_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1500\" data-rawheight=\"2000\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-93cfb060d798721109c5bd97dc19cea3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1500\" data-original=\"https://pic4.zhimg.com/v2-0f8b38464b02077c854937060762054d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1500'%20height='2000'&gt;&lt;/svg&gt;\" data-rawwidth=\"1500\" data-rawheight=\"2000\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-93cfb060d798721109c5bd97dc19cea3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1500\" data-original=\"https://pic4.zhimg.com/v2-0f8b38464b02077c854937060762054d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-0f8b38464b02077c854937060762054d_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1b102f5a5415f4f2768f7e31c81fef9d_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1500\" data-rawheight=\"2000\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c81e80a0adfc515cd3dc9eb8f8b6c0f3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1500\" data-original=\"https://pic4.zhimg.com/v2-1b102f5a5415f4f2768f7e31c81fef9d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1500'%20height='2000'&gt;&lt;/svg&gt;\" data-rawwidth=\"1500\" data-rawheight=\"2000\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c81e80a0adfc515cd3dc9eb8f8b6c0f3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1500\" data-original=\"https://pic4.zhimg.com/v2-1b102f5a5415f4f2768f7e31c81fef9d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1b102f5a5415f4f2768f7e31c81fef9d_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-44acd865de317e1d6135573d8ed98da3_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1500\" data-rawheight=\"2000\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-ac8ef327a6570f4f25a887e99649fbdc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1500\" data-original=\"https://pic2.zhimg.com/v2-44acd865de317e1d6135573d8ed98da3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1500'%20height='2000'&gt;&lt;/svg&gt;\" data-rawwidth=\"1500\" data-rawheight=\"2000\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-ac8ef327a6570f4f25a887e99649fbdc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1500\" data-original=\"https://pic2.zhimg.com/v2-44acd865de317e1d6135573d8ed98da3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-44acd865de317e1d6135573d8ed98da3_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-7dafbf78bab3ae9923346911dd97e24b_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1500\" data-rawheight=\"2000\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-cacde49d4ae529c819a48a8b84db76ba_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1500\" data-original=\"https://pic4.zhimg.com/v2-7dafbf78bab3ae9923346911dd97e24b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1500'%20height='2000'&gt;&lt;/svg&gt;\" data-rawwidth=\"1500\" data-rawheight=\"2000\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-cacde49d4ae529c819a48a8b84db76ba_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1500\" data-original=\"https://pic4.zhimg.com/v2-7dafbf78bab3ae9923346911dd97e24b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-7dafbf78bab3ae9923346911dd97e24b_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-f2b4ec07a05ebf8e51686e7747304cd3_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1500\" data-rawheight=\"2000\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a6f1fe97d86c484b665c5852403f5eff_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1500\" data-original=\"https://pic4.zhimg.com/v2-f2b4ec07a05ebf8e51686e7747304cd3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1500'%20height='2000'&gt;&lt;/svg&gt;\" data-rawwidth=\"1500\" data-rawheight=\"2000\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a6f1fe97d86c484b665c5852403f5eff_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1500\" data-original=\"https://pic4.zhimg.com/v2-f2b4ec07a05ebf8e51686e7747304cd3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-f2b4ec07a05ebf8e51686e7747304cd3_720w.jpg?source=54b3c3a5\"></figure><p>  基础语法部分就是介绍python语法，一些最基本的语法和编程的概念</p><p>  项目实践总共有三个项目，一个外星人入侵的游戏，一个数据可视化程序，一个web应用程序。程序很有趣，并且讲解非常细腻，很多书写项目部分的时候直接把代码扔出来，没有分解没有讲解，就算跟着打完一遍，也没有任何收获，就像练习打字一样。这本书讲解也是保姆级的教程</p><p>     一些小建议小tips:</p><p>  如果是新手的话，建议语法部分跟着书打代码，所有代码都打一遍，无论简单还是复杂，新手要多打代码才有手感</p><p>  语法部分每一小节都有几个习题，这本书的习题都不难，并且量很小，而且都是本节讲过的东西，参照前面的讲解都能做出来。新手的话，建议把习题都做了，即使一眼就能看出来怎么写也要打一遍，因为总会有莫名其妙的各种问题，不能眼高手低，要实践</p><p>     建议用时</p><p>下图是我当时学python的时候写的日志，记录自己每天做了什么，以及明天计划，当时就是这样的进度，大概不到一个月学完了语法（我这个速度不算快），也就是前11章，然后是后面的项目部分跟着打代码，这个做了多久我忘了</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-18f562b1486db9b9fe4c305eed42aa97_720w.jpg?source=54b3c3a5\" data-rawwidth=\"750\" data-rawheight=\"1334\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7447709a12106212a5f41b730f7e60c7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"750\" data-original=\"https://pic1.zhimg.com/v2-18f562b1486db9b9fe4c305eed42aa97_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='750'%20height='1334'&gt;&lt;/svg&gt;\" data-rawwidth=\"750\" data-rawheight=\"1334\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7447709a12106212a5f41b730f7e60c7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"750\" data-original=\"https://pic1.zhimg.com/v2-18f562b1486db9b9fe4c305eed42aa97_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-18f562b1486db9b9fe4c305eed42aa97_720w.jpg?source=54b3c3a5\"></figure><p>这本书项目部分我没有打完，然后紧接着有用python的项目，我就觉得自己入门了，豁然开朗了。学会python对于别的编程语言也有很大帮助因为思想差不多，只是语法不同。</p><p>补充一下，书中用的编辑器不好用，打代码还是用pycharm吧，然后配置ananconda。对新手来说，第一次配置环境还是有难度的，所以我出了个保姆级视频教程手把手教大家一步步装，视频在b站，链接<a href=\"https://link.zhihu.com/?target=https%3A//b23.tv/62qr9z\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">b23.tv/62qr9z</span><span class=\"invisible\"></span></a>。希望能帮助到大家。</p><p>你们如果有人吃了我的安利买了这本书开始学习并有所收获，欢迎大家来我这儿反馈交流哦</p><p>刚申请了个微博账号：兔子喵爱编程，欢迎大家来交流唠嗑~</p><p>建了个编程交流QQ群，群里会分享各种编程资料和分享编程心得，欢迎进群唠嗑：1165967079</p><p>…………………………………………一个手动分隔符</p><p>很多人学编程最大的阻力不是学不会，而是坚持不下去，学了三天就扔了。</p><p>所以给自制力不够的朋友推荐一个课：夜曲编程。这个宝藏课程是我在百词斩背单词的时候，突然发现的。一直觉得百词斩做的还不错，就去了解了一下。这个课延续了百词斩一贯的有趣的画风，把很多概念做成了漫画形式，易懂又有趣，对初学者特别友好。</p><p>例如下面对“变量”和“赋值”的解释，就很形象：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-c8f9218b8f43786292c4802f3cdf9fa1_720w.jpg?source=54b3c3a5\" data-rawwidth=\"921\" data-rawheight=\"544\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d03673bb27f2bfef74938c54c19d252e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"921\" data-original=\"https://pic3.zhimg.com/v2-c8f9218b8f43786292c4802f3cdf9fa1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='921'%20height='544'&gt;&lt;/svg&gt;\" data-rawwidth=\"921\" data-rawheight=\"544\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d03673bb27f2bfef74938c54c19d252e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"921\" data-original=\"https://pic3.zhimg.com/v2-c8f9218b8f43786292c4802f3cdf9fa1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-c8f9218b8f43786292c4802f3cdf9fa1_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-0c987fc1b7ff6313eeafe80ab5b2413b_720w.jpg?source=54b3c3a5\" data-rawwidth=\"922\" data-rawheight=\"694\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a3d196e661f12ff1e3fb88eb478d6999_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"922\" data-original=\"https://pic4.zhimg.com/v2-0c987fc1b7ff6313eeafe80ab5b2413b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='922'%20height='694'&gt;&lt;/svg&gt;\" data-rawwidth=\"922\" data-rawheight=\"694\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a3d196e661f12ff1e3fb88eb478d6999_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"922\" data-original=\"https://pic4.zhimg.com/v2-0c987fc1b7ff6313eeafe80ab5b2413b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0c987fc1b7ff6313eeafe80ab5b2413b_720w.jpg?source=54b3c3a5\"></figure><p>另一个优点是用手机就能学，每天十分钟，一个月学会python，学的还不痛苦。</p><p>真的是一门很好的课，讲解也很详细：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-347e27f56f60fd41a97b4407b194a9ff_720w.jpg?source=54b3c3a5\" data-rawwidth=\"921\" data-rawheight=\"714\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-caa0098db602582911198bf625742623_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"921\" data-original=\"https://pic4.zhimg.com/v2-347e27f56f60fd41a97b4407b194a9ff_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='921'%20height='714'&gt;&lt;/svg&gt;\" data-rawwidth=\"921\" data-rawheight=\"714\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-caa0098db602582911198bf625742623_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"921\" data-original=\"https://pic4.zhimg.com/v2-347e27f56f60fd41a97b4407b194a9ff_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-347e27f56f60fd41a97b4407b194a9ff_720w.jpg?source=54b3c3a5\"></figure><p>最重要的！！这个能让你坚持下去的原因是：坚持完成80%的题，就会送颜值很高的蓝牙键盘！当你想放弃了，想一想蓝牙键盘就又坚持了一下，坚持着坚持着就学完了。感兴趣的朋友去微信公众号搜“夜曲编程”就行了。真 · 良心推荐！！推荐给觉得编程无聊或者容易半途而废的朋友！</p><p>…………………………补充内容的分隔符</p><p>评论有人问网易课是什么，我解释下啊，我在学python的同时还在学c++和深度学习，网易课不是python的，是深度学习的课。</p><p>所以你学python如果全天都在学的话，进度得是我的双倍或三倍哦⊙∀⊙</p>", "知乎上这么多推崇学 Python 入 IT 行的，如果他们学完 Python 这一套找不到工作怎么办？": "<p>还不是因为刚好手上有Python的视频课- -||，开个玩笑，我不仅有Python、Java、PHP、还有前端，C语言和C++以及C#；光说不放资源的都是耍流氓！</p><p><b>Python练手项目视频如下：</b></p><ul><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/343.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【Python】2小时利用Python实现一个聊天器</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/361.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python从零基础到大牛项目实战：抓取景点评论数量实现旅游景点推荐</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/372.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">春运回家抢票无忧，Python大牛带你实现12306全自动抢票</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/76.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python之微信开发神器</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/75.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python之爬虫开发帝王</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/78.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python之大数据开发奇兵</a></b></li></ul><p><b>Python自学基础知识如下：</b></p><ul><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/273.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门教程完整版（懂中文就能学会）</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/71.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python网络爬虫第一天</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/72.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python网络爬虫第二天</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/240.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">6节课掌握Python爬虫视频</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/242.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">6节课机器学习入门</a></b> </li></ul><p>题主说的这一套是哪一套东西？另外你以为在转行之前大家就能找到工作过了吗？Python学到人工智能之前，是一定要有算法和数据结构的支撑了。如果底层再接触到计算机原理，或者说是看过《计算机导论》。你是一定可以找到工作的。不管是培训机构还是自学吧，社会上的初级人才过多了。还有就是很多企业招聘Python其实都是默认Java转Python的。</p><ul><li><b>操作系统和计算机组成原理：《深入理解计算机系统》</b></li><li><b>算法和数据结构：《算法导论》</b></li><li><b>数据库：《Mysql菜鸟入门系列》进阶的话---&gt;《高性能Mysql》</b></li><li><b>语言本身：《Python编程：从入门到实践》《Python核心编程》</b></li><li><b>还有机器学习和金融等方面的书：<a href=\"https://zhuanlan.zhihu.com/p/34378860\" class=\"internal\">这些是 Python 官方推荐的最好书籍（推荐）</a></b> </li></ul><p>个人认为选择转行的，一般都是不满于现状，那么学完找不到工作是很坑，可是浅浅的学一些就准备放弃了也怪不得什么培训机构也怪不得行情不好。你要是努力了，真学下来“这一套”那找不到工作不太可能。低不成高不就的劝退，能吃苦学习下去大家还是加油吧。向下扎根向上生长！</p><p><b>有关学习Python的文章：</b></p><ul><li><b><a href=\"https://www.zhihu.com/question/55493026/answer/609522449\" class=\"internal\">你们都是怎么学 Python 的？</a></b> </li><li><b><a href=\"https://www.zhihu.com/question/36805695/answer/569309272\" class=\"internal\">要学 Python 需要怎样的基础？</a></b> </li><li><b><a href=\"https://www.zhihu.com/question/27386361/answer/560891895\" class=\"internal\">Python 学习完基础语法知识后，如何进一步提高？</a></b></li></ul><p><b>Python每个阶段课后习题（按照顺序）：</b></p><ul><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9485315688324720075%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础知识习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9541747371111551572%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python有关变量、数据类型以及运算符的习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_10283849747793374459%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python函数相关的练习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9704460656615148696%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python中判断语句以及循环语句的习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_8687215274625857630%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python字符串操作的相关函数习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_8877283644906851257%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python中列表、元祖和字典的习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9549998076213819918%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python函数的闭包、装饰器等练习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9807478801544533165%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python中文件操作的相关习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_10161298216139163786%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python异常相关的全部笔试题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9458427505191681354%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python中模块的所含内容习题</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_9310937568005107218%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python面向对象习题，笔试内容</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=https%3A//mbd.baidu.com/newspage/data/landingshare%3FpageType%3D1%26isBdboxFrom%3D1%26context%3D%2520%257B%2522nid%2522%253A%2522news_8840878862176327795%2522%252C%2522sourceFrom%2522%253A%2522bjh%2522%257D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python封装、继承和多态以及类方法等习题</a></b></li></ul><p><b>量化交易文章也分享给你们：</b></p><ul><li><b><a href=\"https://zhuanlan.zhihu.com/p/70140232\" class=\"internal\">Python之量化交易学习第一天</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/70142138\" class=\"internal\">Python量化交易：策略创建运行流程</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/70467726\" class=\"internal\">应用history_bars实现股票合约历史行情数据获取</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/70697267\" class=\"internal\">使用Python获取股票合约数据（附源码）</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/70819450\" class=\"internal\">使用Python获取财务数据，量化交易的源码</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/71015674\" class=\"internal\">Python量化交易：回测交易接口</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/71686100\" class=\"internal\">量化交易：了解投资组合的市场价值和资金价值</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/71861353\" class=\"internal\">Python量化交易：策略评价指标</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/72042573\" class=\"internal\">Python量化交易：实现第一个股票策略</a></b></li><li><b><a href=\"https://zhuanlan.zhihu.com/p/72982532\" class=\"internal\">Python量化交易：多因子策略与理论介绍</a></b> </li></ul><p>Python的确更适合作为技术的辅助而不是技术的支撑，但是Python绝对是帮助你迈进编程最简单简洁的一步。这是我整理的干货大全了，每一个看到这篇回答，有想放弃的念头的大家！请千万不要放弃！我还在努力的收集资料给大家持续更新，你凭啥先放弃了？我整这么多谁看！？</p><p>记得关注一下哦，更多资源都会更新。</p>", "用 Python 自动化办公能做到哪些有趣或有用的事情？": "<p>利益相关：Python办公自动化课程的讲师</p><p><br></p><p>我想介绍一下我是如何从每天工作<b>8小时</b>，进化成每天工作<b>10分钟</b>的。</p><p>不涉及太多的技术细节，毕竟知乎是一个分（现）享（编）知（故）识（事）的地方</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-0e6d3c2e607a67c79eba058d509196a3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"422\" data-rawheight=\"196\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-fc6f72c1734cc61deab88af4a49068fc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"422\" data-original=\"https://pic2.zhimg.com/v2-0e6d3c2e607a67c79eba058d509196a3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='422'%20height='196'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"422\" data-rawheight=\"196\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-fc6f72c1734cc61deab88af4a49068fc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"422\" data-original=\"https://pic2.zhimg.com/v2-0e6d3c2e607a67c79eba058d509196a3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-0e6d3c2e607a67c79eba058d509196a3_720w.jpg?source=54b3c3a5\"></figure><h3>0.先自我介绍一下：</h3><p>我不是程序员，大学学的也<b>不是IT</b>专业。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a2c5c7ddab82b736150c9bffcb76d255_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"220\" data-rawheight=\"229\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-6a5d5116041467d074d55e5601fa1d50_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"220\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='220'%20height='229'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"220\" data-rawheight=\"229\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-6a5d5116041467d074d55e5601fa1d50_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"220\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a2c5c7ddab82b736150c9bffcb76d255_720w.jpg?source=54b3c3a5\"></figure><p>我在一个主要业务是成品粮交易的企业工作，我的岗位的主要工作就是制作各类数据统计报表、台账、数据图表等等，反正就是各类日报，每天都要做一遍，此外还有什么周报月报什么的……这个岗位之前的同事，每天至少要花3.5到4个小时去折腾Excel，使用数据透视图、vlookup、其他各类函数去做出一份内含3000多个数据的日报。如果领导临时安排什么工作的话，那就要加班从浩如烟海的数据里找领导要的东西了。</p><h3>1.噩梦开始时：</h3><p>我刚接手工作时，我们有一个巨大的，达70多M的Excel文件，每次公司配发的破电脑打开就需要小二十分钟，里面存着我们近十年的采购的每一车的详细信息……然后里面的数据格式还都是混乱的，</p><p>打个比方，比如我们有个供货商全名叫：ABCD有限责任公司，</p><p>那么这个Excel中会存有</p><p>AB公司、</p><p>AB有限公司、</p><p>CD有限责任公司、</p><p>CD责任有限公司、</p><p>ACBD有限公司</p><p>ABD公司</p><p>等等等等名字</p><p>在我第一天看到这个Excel的时候</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-53330ab066e0698d76bb10883b665f47_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"299\" data-rawheight=\"280\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3bc66eb8fb511c7d7ae4ab09c50f68be_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"299\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='299'%20height='280'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"299\" data-rawheight=\"280\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3bc66eb8fb511c7d7ae4ab09c50f68be_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"299\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-53330ab066e0698d76bb10883b665f47_720w.jpg?source=54b3c3a5\"></figure><p>后来交接的同事告诉我，她用的Excel的 vlookup 函数，当匹配不上的时候，就手工搜索……</p><p>然后……我……</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-d49a9e77ac69fb7ff1dbb67d2b72a69f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"310\" data-rawheight=\"265\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-10f06832e3cddacf36ce5ae7c197573b_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"310\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='310'%20height='265'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"310\" data-rawheight=\"265\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-10f06832e3cddacf36ce5ae7c197573b_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"310\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-d49a9e77ac69fb7ff1dbb67d2b72a69f_720w.jpg?source=54b3c3a5\"></figure><p>就这样，经历了噩梦般的几个月……</p><p>等到了2017年年初，看到一个词:</p><p>图灵完备。</p><p>一个图灵完备的语言理论上能解决任何算法。</p><p> |</p><p> |</p><p>V</p><p>显然，Python是一种图灵完备的语言。</p><p> |</p><p> |</p><p>V</p><p>那Python应该在理论上能替我处理所有事情（生孩子应该不行~~）</p><p> |</p><p> |</p><p>V</p><p>我为什么不试着用Python去替我完成工作呢？</p><h3>2.走了一些弯路，但胜过原地踏步</h3><p>我的第一步是从数据清洗开始的。（当然那时并不知道这个叫数据清洗）</p><p>先把刚才说的那个70M的Excel导成csv，去掉了其中不必要的格式、样式、对象等。</p><p>然后我想统一一下各个数据的标准名称，刚才说了，由于经手的人太多，同一个数据，怎么表述的都有，几十万的数据量，人工交叉比对的话显然是不现实的。（后来才知道了笛卡尔积这个词）</p><p>我第一步先使用了Excel自身的去重功能，将所有的供货商名称进行了一个去重，剩下了大概5000个左右的名称。</p><p>然后，作为一个懒人，我肯定不会用人工去比对了。</p><p>Python有一个库，叫做fuzzywuzzy，用它来进行模糊匹配。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>from fuzzywuzzy import fuzz\nprint( fuzz.ratio(\"内容1\", \"内容2\")）\n</code></pre></div><p>会输出一个0——100的数字，数字越大代表这两个内容越相似。</p><p>所以我就写了一个循环，把这5000多个项目里面，匹配度超过70%以上的数据组都筛了出来，再去Excel里面手工替换（没办法，那时候还不会操作Excel）</p><p>然后整理了一下各个行列的位置，这样我就有了一个相对准确的数据源。</p><p>后来思考了一下，把数据存在Excel里面不是个长久之计啊，毕竟几十万数据呢，就想把数据导入到数据库里。大学时候考过计算机二级的Access（当然，虽然我考过，但是没考过……），就想导入Access，可是那个Python库没弄明白，硬是读不出来，就卡死了。</p><p>后来想到，之前自己从网上下载的某某私服的一键端里，有个MySQL数据库的一键启动方式，试了试居然能用，就把那个MySQL程序整个拷出来、清干净，作为了我的数据库。（当时想学怎么自己配置MySQL来着，没研究明白……这个数据库也就是我们现在提供的MySQL数据库的前身，当然了，我们现在提供的是重新制作的无毒的船新版本）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-79168eff8d152cee27ee64957726945c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"576\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-03f683149ae9667b9ad65be08b571138_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"534\" data-original=\"https://pic2.zhimg.com/v2-79168eff8d152cee27ee64957726945c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='534'%20height='576'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"576\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-03f683149ae9667b9ad65be08b571138_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"534\" data-original=\"https://pic2.zhimg.com/v2-79168eff8d152cee27ee64957726945c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-79168eff8d152cee27ee64957726945c_720w.jpg?source=54b3c3a5\"></figure><p>然后就是使用Navicat导入Excel，使用pymysql库进行读取，这样，咱也是趁数据库的人了~</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-fefaf0c0c8350abe75e272e79600ecf5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"248\" data-rawheight=\"293\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-493f68d50d5d79b51b2cf74a82ecf9f5_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"248\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='248'%20height='293'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"248\" data-rawheight=\"293\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-493f68d50d5d79b51b2cf74a82ecf9f5_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"248\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-fefaf0c0c8350abe75e272e79600ecf5_720w.jpg?source=54b3c3a5\"></figure><p>接下来，就是要进行数据分析了，由于当时没学会pandas，数据透视图的效果死活做不出来，不得已，只好新建N个列表，用一堆if...else... ，把同类数据存入同一个列表中，求和，求平均值之类的（<b>笨办法也是办法，能抓住耗子就是好猫，先把程序跑起来能用就好</b>）</p><p>分析出了结果，要写入excel了，但是由于没有研究明白怎么进行追加写入（xlutils库各种限定太多了……），只好使用xlwt把数据写到一个空Excel中，然后手工把一整片复制粘贴过去……反正也是解决了……能用了……</p><p>因为每天的仓库返回的数据还要向数据库里追加，就写了个录入程序，先用xlrd读取、然后fuzzywuzzy模糊匹配、最后pymysql写入。</p><p>这时候，我的工作已由每天<b>七八个小时</b>，进化到了每天<b>4小时左右</b>。</p><p>（这一部分代码就不贴了，祖传代码向来被称为屎山，这些代码也是简陋的过分的那种……）</p><h3>3.走上杂务工作的快车道</h3><blockquote>罗伯特·清琦写的那本《富爸爸穷爸爸》提出过一个概念，当你实现财务自由以后，你的财富积累就会走上良性循环的快车道，你的就会越来越容易提高被动收入。</blockquote><h2>同理，<b>当你实现一部分的工作自动化以后，你就会走上一个“工作自由”的快车道，因为你有更多的时间能用来研究如何去更高效的完成余下的那堆工作，然后，每天工作的时间就会越来越短。</b></h2><p>为什么上文中我有那么多括号写的各种搞不定？因为没时间啊！</p><p>现在好了，每天的工作时间已经被我砍了一半了，那么我就可以思考，如何解决各类的技术问题。</p><p>我学会了Excel的各种库，比如xlrd、xlwt、xlsxwriter、openpyxl、xlwings、win32com，能根据自己的需要选择需要用的库；还学会了同属Office系列的python-docx和python-pptx，开始尝试自动制作Word和PPT；学会了自动发邮件的stmp库、zmail库；学会了能操作微信发消息的itchat；学了爬虫、学了解压缩、学了调整图片大小、学了Word转pdf等等等等很多库或者功能。</p><p>随着学习，每天的工作时间越来越短……</p><p>现在，我每天的工作，只需要十分钟，最快记录四分钟，就能完成。</p><p>每天上班，第一件事，优雅的运行一个py文件，一堆import后面，只有</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-559eae4d15c26c2a460f129985e232d3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1138\" data-rawheight=\"657\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-4c88a2ba9f5e9835832eac439c171216_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1138\" data-original=\"https://pic2.zhimg.com/v2-559eae4d15c26c2a460f129985e232d3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1138'%20height='657'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1138\" data-rawheight=\"657\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-4c88a2ba9f5e9835832eac439c171216_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1138\" data-original=\"https://pic2.zhimg.com/v2-559eae4d15c26c2a460f129985e232d3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-559eae4d15c26c2a460f129985e232d3_720w.jpg?source=54b3c3a5\"></figure><p>就完成了日常工作，然后就是需要打印，手签，送各领导审阅的过程了。</p><p>一个保守的、传统的、几十年都不会起一丝波澜的国有企业，硬生生被我干出来了一个IT岗，升职加薪都已达成。</p><h2>4、后续的思考</h2><p>现在，我能极快的完成每天的工作，而后就是大片的学习思考的时间。</p><p>如今，</p><p>我已经，</p><p>我已经，</p><p>我已经，</p><p>把数据库移到了一台淘汰下来的办公电脑上，又用另外一台热备，作为公共联网数据库；</p><p>我已经，</p><p>用pyqt写了一个带gui的数据输出软件，所有同事都可以自由输出数据进行分析了；</p><p>我已经，</p><p>用pandas、matplotlib写了一个自动生成数据分析图片的软件，再做月报、周报什么的汇报材料，不用再通过Excel手工作图了；</p><p>我已经，</p><p>用pandas、matplotlib配合pyqt写了一个入库分析软件，大家输入时间段和限定条件后一键进行数据分析了，不会有同事老找我要数据了；</p><p>我已经，</p><p>用xlrd、python-docx写了一个合同生成器，旺季采购的同事不用焦头烂额的改合同了；</p><p>我已经，</p><p>用numpy配合pyqt做了一个购销存平衡软件，可以让领导们在决策时通过拖动滑块就可以实时展现不同购、销情况下库存情况了；</p><p>我已经，</p><p>用爬虫配合pymysql写了一个实时粮价获取数据库，告别了浏览网页逐行复制价格的方式；</p><p><br></p><p><br></p><p><br></p><p>未来，</p><p>未来，</p><p>未来，</p><p>未来，</p><p>我计划做一个公司内部网站，把之前的所有C/S架构的软件都改成B/S。</p><p>未来，</p><p>我计划做一个数据驾驶舱，供领导决策使用。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-5f7b79a2115b881c03094ab9bb020f5e_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"337\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-67bf985cbc0708cda7899071da0ad09c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-5f7b79a2115b881c03094ab9bb020f5e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='337'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"337\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-67bf985cbc0708cda7899071da0ad09c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-5f7b79a2115b881c03094ab9bb020f5e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-5f7b79a2115b881c03094ab9bb020f5e_720w.jpg?source=54b3c3a5\"><figcaption>图片来自网上，我就是想做成这样子</figcaption></figure><p>未来，</p><p>我计划做一个访客人脸识别，方便在重要客户进大门以后提醒领导到门口迎接。</p><p>未来，</p><p>我计划做一个更智能的爬虫，能在网上自动收集市场信息。</p><p>未来，</p><p>我计划做一个更智能的进销存平衡软件，能使用最优化进行购销平衡计算。</p><p>未来，</p><p>我计划做一套发票管理系统给财务、一套物料管理系统给物资、一套工资系统给HR……</p><h2><br>那么，你的未来，是每天继续做着重复的工作，还是从工作中解放自己，去拥抱更大的世界呢。</h2>"}{"C#、C++、Java、Python 选择哪个好？": "<p>第一次正儿八经在知乎回答，居然这么多赞，看来知乎上IT男很多啊。谢谢大家！不知道能不能破千，要是破千的话，可以考虑写点技术的干货。</p><p>——————————————以下是原答。</p><p>作为一个20年的老程序员来回答一下。</p><p>1998毕业，现在自己做一家IT公司，依然喜欢写代码。</p><p>工作这么多年，正式项目用过的语言有： Pascal/Delphi,dBase/FoxBase,FoxPro,VB,VBScript,JavaScript,COBOL,C/C++,Lua,Java,C#,各种数据库的SQL。</p><p>最早学的是Pascal，大学里面学数据结构用的，毕业以后用delphi写了一个小项目，然后再也没有用过。</p><p>dBase/FoxBase也是学校里面学数据库的时候教的，然后毕业以后用的是FoxPro，也是做了一个小项目，后面基本就没用了。</p><p>VB/VBScript作为主力语言，从1998年用到2002年，对，那时候做ASP。也用VB写过还算有规模的EXE的项目。至今书橱里面那本《VB5金典》依然保佑一席之地。VB做快速开发真的很好用。然而<a href=\"https://link.zhihu.com/?target=http%3A//VB.Net\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">VB.Net</span><span class=\"invisible\"></span></a>就压根没看过。那已经不是VB了。</p><p>因为Web开发基本上没有断过，JavaScript一直陪我到现在。</p><p>COBOL是原来在对日外包公司工作的时候，接了日本一个野村证券的项目，居然是COBOL，然后，作为新技术研发部的负责人，当仁不让上了。边学边做项目，做完就扔了。</p><p>C是从开始编程就学的，断断续续用一点点，2003年做银行项目的时候，用IBM小型机，Tuxedo中间件，然后只能用C/C++语言编程（那个时候银行还不怎么接受Java）。然后自己开始创业，做游戏，用OpenGL做了一个游戏引擎，跨平台的那种，一次编写，Windows、Android、iOS都能跑。C++写的。中间尝试了一下Lua，写了两个小游戏，觉得对程序的掌控能力还是比C差远了，就放弃了。</p><p>最后就是Java和C#这对双子星，是用的时间最长，做过项目最多的。C#是从2001年开始，beta版本开始学的。记得第一个项目是2002年6、7月的样子吧，那时候公司接了一个比较大的Web项目，本来是准备用ASP做的，结果那时候我正好在学C#，然后看了一下说是10月份会发布正式版（时间大概是那样吧，年数长了，记忆有点模糊），然后仗着自己是项目负责人，外加老板不懂技术，就擅自决定用C#/<a href=\"https://link.zhihu.com/?target=http%3A//ASP.Net\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">ASP.Net</span><span class=\"invisible\"></span></a>来做。项目做完大概是10月份，在项目上线的前几天，微软发了正式版ASP.Net1.0，项目有惊无险的上线了。现在想想有点作死的感觉。如果微软把.Net正式版的发布时间往后推一个月，很难想象老板会拿我怎么样。</p><p>Java差不多跟C#同时学的，然后一直做啊做，从EJB做到SSH，再到Android。那时候年轻，学习的精力旺盛，然后觉得C#和Java似乎差的不是太多。</p><p>PHP看过，没用过。Python看过，没用过。还有Ruby，看过，没用过。我说看过的意思大概就是写过Hello World，但是没有拿来做过项目。</p><p>我是真的喜欢写程序，所以有什么新奇的东西，都喜欢拿来跑一跑。</p><p>然后说说对编程的看法。</p><p>首先，我认为，语言没有高下之分，只有应用场景之分。作为一个技术决策者，拿到任何一个项目，首先第一个考虑的，不是怎么做，而是用什么做。如果你拿到的是一个Web项目，我认为，在很多情况下，JSP、PHP、<a href=\"https://link.zhihu.com/?target=http%3A//ASP.Net\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">ASP.Net</span><span class=\"invisible\"></span></a>甚至Node.js基本上都是等价的，应该都能够很好的完成项目的开发，选择什么技术开发，看自己所拥有的资源禀赋和具体情况。如果手下一帮弟兄都是搞Java的，当然JSP啊，如果手下小弟都是做C#，当然<a href=\"https://link.zhihu.com/?target=http%3A//ASP.Net\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">ASP.Net</span><span class=\"invisible\"></span></a>啊。当然，项目有特殊要求的除外，比如，如果甲方是银行，那估计就没法用<a href=\"https://link.zhihu.com/?target=http%3A//ASP.Net\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">ASP.Net</span><span class=\"invisible\"></span></a>了，如果是有客户端的项目，当然C#+WinForm啊，如果是做安卓，当然Java啊。</p><p>其次，作为一个好的程序员，应该至少会三种以上语言，这样你能够充分接受不同语言的风格，更关键的是你会去关注不同技术社区的讨论，开阔眼界，对编程的本质会有更深刻的体会，然后你会觉得，看任何语言都是差不多的。我经常对公司的技术人员讲，要用Java的编程思想来写C#的代码。这是不同技术社区的风格体现出来的。在Java的社区，你能看到更多的对模式、框架的讨论，而微软虽然自己做的东西很讲究模式和框架，但似乎更喜欢做好一堆全家桶给你，让你去做快速开发。</p><p>第三，对各种语言的感受，写起来最爽最有成就感的当然是C，那种一切尽在掌握的感觉是很奇妙的。不过我现在公司没有C/C++程序员了，因为公司不做游戏了，我也有起码5年没碰C了。我最喜欢的还是C#，我很崇拜安德鲁，C#的语法和机制真的设计的很精妙：泛型、delegate/event、Attribute、Lamda表达式、函数式编程，总觉得这个语言的设计给人一种特别的精致美感，能满足我对一门好的语言的所有的想象。自从.Net Core以后，跨平台也不是问题了。相对Java来说，我更喜欢C#。当然，我是不会排斥Java的，只要做Java能赚钱。</p><p>第四，我觉得数据结构真的非常重要，如果你想成为高手的话。在学校里面，一定要把这门课反反复复的学习。当然，如果你只想做做Web开发，写写网页的话，当我没说。</p><p>最后，对计算机专业的学生来说，我认为，在大学就是要打好基础。语言的东西真的不难，所有语言的编程思想都是想通的，语法其实也都大同小异，无外乎顺序结构、循环结构、分支结构。不用太焦虑应用型的开发，这些东西其实学起来是很快的。重要的是基础。C语言是必学的，学好C，让你对计算机的原理（数据结构、寄存器、内存、硬盘读写等等）有更深刻的认识。然后，为了工作，学学Java，学学C#。数据结构、编译原理这样的课程，当你工作年限变长，开始写架构、开始做性能优化的时候，你会觉得特别有用。当然，最开始的简单开发任务基本上用不着。不过，不想做高手的程序员，当然不是好程序员，是吧？</p><p>还有，其实我是非常建议，作为程序员，C#是必学的，不是因为我个人喜欢C#，是因为，实际上，按照我的习惯，在做项目的过程中，我经常会写一些小工具，而这些小工具，很多时候当然都是写成exe啦，所以，一般我都会选择用C#来写。</p><p>——————————————————</p><p>补充一点，我认为好的程序员不能把自己绑定在一种语言上，不能把自己就定义为JAVA程序员，C#程序员，等等。还是那句话，语言没有高下之分，只有适用的场景。好的程序员，应该有很快学会一种新的语言，并解决实际问题的能力。在我二十年的程序生涯中，有过不止一次，因为项目，一两天学一种语言的基本语法，然后边Google函数和库用法，边完成项目，然后项目完成后就扔一边的经历。</p><p>写程序，关键的是解决问题的思路，而不是语言本身。对语言来说，无外乎语法，函数，类库，现成的框架这些东西，这些都是“术”，而你对数据结构，设计模式，系统架构，计算机原理这些东西的理解，才是“道”。补充一点，对SSH这种现成框架的使用，并不能称为架构设计。</p><p>再举个例子，比如你要做网络编程，那么你对TCP/IP的理解，socket是怎么回事，怎么握手，怎么发送数据之类的理解是最基础的，是所有语言都通用的，至于最后你用JAVA来写，还是用C#来写，有多大区别？其实都是大同小异。</p><p>最后，要成为高手，学好英语，学会翻墙，一定要用Google。记住一点，凡是能百度到中文资料的内容，都已经不是“高级”的内容了。</p>", "使用 Python 会降低程序员的编程能力吗？": "<b><u>会。</u></b><br><br>十年前，Pascal。我会精确计算每个数组和变量使用的内存，熟练地用非递归方法改写程序，最短的时间内自己实现各种排序，多源最短路径，求凸包和相邻点，动态规划，二分图匹配和网络流算法等等等等，同时考虑算法的最坏复杂度和最高项前边的那个常数。现在，我一个都不记得了是的<b>现在列举这些名词我就是在装逼。</b><br><br>五年前，C。我会自认为炫酷的使用函数指针，强制类型转换，goto语句，宏来实现各种技巧（他喵的全是Linux kernel害的）。我挣扎在多线程，多进程和各种锁。我试着照ICC出来的汇编改程序。但你让我不看书写个红黑树出来我是做不到了。现在，你突然让我写个C程序我得想一下语法。（<b>所以这里我还是在装逼。</b>）<br><br>现在，Python。写之前习惯性搜一下有没有现成的库。不会自己去实现图的数据结构了，因为有NetworkX。不会自己去处理网络通信了，用Redis搞个发布订阅机制或者干脆实现个ReST服务都没几行代码。多线程？Gevent搞异步多简单速度还比你快。<br><br>我变笨了。<br><br><br><u>但是。</u><br><br><br>十年前我只能刷刷USACO和浙大同济的Online Judge。AC是最高目标。<br>五年前我只能写写自己用的小软件系统驱动什么的，或者通宵写个大作业。<br>现在我在研究用Evolutionary Optimisation在云平台上调度Scientific Workflow。<br><br><b><u>会什么</u></b>和<b><u>干什么</u></b>，你觉得哪个重要？<br><br>======<br>感谢 <a data-hash=\"d57fda570dcc03d00de0e7a5d6e8b780\" href=\"https://www.zhihu.com/people/d57fda570dcc03d00de0e7a5d6e8b780\" class=\"member_mention\" data-editable=\"true\" data-title=\"@徐酿泉\" data-tip=\"p$b$d57fda570dcc03d00de0e7a5d6e8b780\" data-hovercard=\"p$b$d57fda570dcc03d00de0e7a5d6e8b780\">@徐酿泉</a>的意见。<br><br>我的意思并不是说因为用这些语言所以在干这些事儿，而是确确实实感觉到这些年自己的编程能力（或者说基本功，因为毕竟很多高级的技巧我也会的越来越多）在下降，而且我认为这和我用的语言越来越高级是有一定关系的。当然语言和做的事之间完全没什么必然关系。但是以前的水平高又怎么样呢？做出来的不过是没有人关心的玩具罢了。即使能力值降低了，不过既然现在在做也可以做更有意义的事了，谁还关心跑分呢。<br><br>日，我发现语文能力也下降了。。。<br>======<br>呃。。我又换Clojure了。。。<br>呃。。我又换Haskell了。。。", "为什么自学Python看不进去？": "<h2>如果你自学Python只是看教程的话，你可能学2年都入不了门……</h2><p>学习学习，重要的是<b>一边学</b>；<b>一边练习</b>。个人推荐尝试海伦泰勒学习法</p><blockquote>先用1-2h阅读学习一段时间<br>然后默记一段时间<br>随后自问其中的知识点<br>最后把学到的知识实践（并非原版，已经过提炼）</blockquote><p>换在Python上面，你很可能是已经因为长时间背教程/书籍上的内容，大脑已经非常抗拒学习了。</p><blockquote>提示：关注微信公众号 【七月在线实验室】，让自己变得更强！在公众号内发“ZH”。即可获得BAT面试题100道和课程代金劵等精美好礼哦！</blockquote><p>你需要的是能给快速用Python实现、耍起来的小项目。</p><p>得到足够的反馈、动力，让你感到愉悦，这样才能更快更高效的继续学习。</p><h2>一、教你如何用Python进行数据分析，kaggle竞赛-泰坦尼克</h2><p>作者：寒小阳，也是我们七月在线的讲师。</p><p><a href=\"https://link.zhihu.com/?target=https%3A//blog.csdn.net/han_xiaoyang/article/details/49797143\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">blog.csdn.net/han_xiaoy</span><span class=\"invisible\">ang/article/details/49797143</span><span class=\"ellipsis\"></span></a></p><h2>二、GitHub万星项目</h2><p>这个项目列举了30+个用Python，就能简单、快速应用的小项目</p><p>1.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/batch_file_rename.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">batch_file_rename.py</a> - 批量重命名指定目录下面所有文件的后缀名。</p><p>2.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/create_dir_if_not_there.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">create_dir_if_not_there.py</a> - 检查用户主目录中是否存在目录，如果不存在则创建目录。</p><p>3.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/youtube-downloader%2520fast.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">快速Youtube下载器</a> - 使用aria2c多线程快速下载YouTube视频。</p><p>4.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/tree/master/Google%2520Image%2520Downloader\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Google Image Downloader</a> - 查询指定词语并从Google中下图。</p><p>5.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/dir_test.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">dir_test.py</a> - 测试目录是否<code>testdir</code>存在，如果不存在，它将为您创建目录。</p><p>6.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/env_check.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">env_check.py</a> - 将检查是否已设置所需的所有环境变量。</p><p>7.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/fileinfo.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">fileinfo.py</a> - 显示文件的信息。</p><p>8.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/folder_size.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">folder_size.py</a> - 统计文件夹大小。</p><p>9.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/logs.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">logs.py</a> - 将搜索<code>*.log</code>指定目录中的所有文件，对其进行压缩，然后按日期。</p><p>10.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/move_files_over_x_days.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">move_files_over_x_days.py</a> - 将指定年龄（以天为单位）的所有文件从源目录移动到目标目录。</p><p>11.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/nslookup_check.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">nslookup_check.py</a> - 这个简单的脚本打开文件<code>server_list.txt</code>，然后为每个文件执行nslookup检查DNS条目。</p><p>12.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/osinfo.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">osinfo.py</a> - 显示操作系统的一些信息。</p><p>13.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/ping_servers.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ping_servers.py</a> - 根据提供的参数，此脚本将ping与该应用程序组关联的服务器。</p><p>14.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/ping_subnet.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ping_subnet.py</a> - 在提供前3个八位字节后，此文件将扫描可用地址的最终范围。</p><p>15.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/powerdown_startup.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">powerdown_startup.py</a> - 此文件通过服务器列表并ping机器，如果它已启动，它将加载putty会话，如果不是，它将通知您。</p><p>16.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/puttylogs.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">puttylogs.py</a> - 此文件会压缩给定目录中的所有日志。</p><p>17.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/script_count.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">script_count.py</a> - 统计目录下不同脚本。</p><p>18.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/script_listing.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">script_listing.py</a> - 此文件将列出给定目录中的所有文件，并遍历所有子目录。</p><p>19.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/testlines.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">testlines.py</a> - 这个简单的脚本打开一个文件，打印出100行。</p><p>20.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/tweeter.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">tweeter.py</a> - 用脚本发推特。</p><p>21.光收藏不点赞=耍流氓</p><h2><b>转载自公众号“七月在线实验室”</b></h2><p><b>↓</b>↓↓</p><p><b>公号后台回复“666”。即可免费获得 七月在线【面试求职 第四期】课程+最新升级版《名企AI面试100题》电子书。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-6f13a2c6b4158fc14ee50e8299b62bde_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1192\" class=\"origin_image zh-lightbox-thumb\" width=\"1000\" data-original=\"https://pic4.zhimg.com/v2-6f13a2c6b4158fc14ee50e8299b62bde_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1000'%20height='1192'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1192\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1000\" data-original=\"https://pic4.zhimg.com/v2-6f13a2c6b4158fc14ee50e8299b62bde_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-6f13a2c6b4158fc14ee50e8299b62bde_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-918d9244cb11362b27bce59a32c3466e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"4160\" class=\"origin_image zh-lightbox-thumb\" width=\"750\" data-original=\"https://pic4.zhimg.com/v2-918d9244cb11362b27bce59a32c3466e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='750'%20height='4160'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"4160\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"750\" data-original=\"https://pic4.zhimg.com/v2-918d9244cb11362b27bce59a32c3466e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-918d9244cb11362b27bce59a32c3466e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>《名企AI⾯试100题》涵盖<b>计算机语⾔基础、算法和⼤数据、机器学习、深度学习、应⽤⽅向 (CV NLP 推荐 ⾦融风控)等五⼤章节</b>，每⼀段代码、每⼀道题⽬的解析都经过了反复审查或review。</p><p><b>部分内容展示</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-0d61ae9e352e05e24db7631ed6389551_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"538\" data-rawheight=\"765\" class=\"origin_image zh-lightbox-thumb\" width=\"538\" data-original=\"https://pic4.zhimg.com/v2-0d61ae9e352e05e24db7631ed6389551_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='538'%20height='765'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"538\" data-rawheight=\"765\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"538\" data-original=\"https://pic4.zhimg.com/v2-0d61ae9e352e05e24db7631ed6389551_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-0d61ae9e352e05e24db7631ed6389551_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-310b312d4c8ab605a5e32c92cf6c6d45_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"759\" class=\"origin_image zh-lightbox-thumb\" width=\"534\" data-original=\"https://pic4.zhimg.com/v2-310b312d4c8ab605a5e32c92cf6c6d45_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='534'%20height='759'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"759\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"534\" data-original=\"https://pic4.zhimg.com/v2-310b312d4c8ab605a5e32c92cf6c6d45_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-310b312d4c8ab605a5e32c92cf6c6d45_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-883648bbf11b54cdb98069c061aab4eb_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"537\" data-rawheight=\"765\" class=\"origin_image zh-lightbox-thumb\" width=\"537\" data-original=\"https://pic1.zhimg.com/v2-883648bbf11b54cdb98069c061aab4eb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='537'%20height='765'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"537\" data-rawheight=\"765\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"537\" data-original=\"https://pic1.zhimg.com/v2-883648bbf11b54cdb98069c061aab4eb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-883648bbf11b54cdb98069c061aab4eb_720w.jpg?source=54b3c3a5\"><figcaption>（点击图片可查看大图）</figcaption></figure><p></p>", "怎样学 Python？": "<p>0715更：</p><p>干货图谱上一个！！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ba728ed8e0d658dcb80c37b5ab8c2bd3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5173\" data-rawheight=\"3579\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-34ad29aafa837f6e111ba728ae5e2565_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"5173\" data-original=\"https://pic2.zhimg.com/v2-ba728ed8e0d658dcb80c37b5ab8c2bd3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='5173'%20height='3579'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5173\" data-rawheight=\"3579\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-34ad29aafa837f6e111ba728ae5e2565_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"5173\" data-original=\"https://pic2.zhimg.com/v2-ba728ed8e0d658dcb80c37b5ab8c2bd3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ba728ed8e0d658dcb80c37b5ab8c2bd3_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>根据我自己的经验来说，想从零开始学Python，以后也确实想找相关的工作，基本是下边这三种方式：</p><ul><li>继续上学。报个这方面的专业，学上两三年，老师就在身边，有啥不懂的问题，直接办公室走一趟，毕业的时候去找工作不成大问题；</li><li>看书自学。这块可以看看我之前推荐的GitHub【Python百天之路】-骆昊，对细节把握很到位！</li><li>在网上找视频课自学。你可以利用碎片时间去学，时间上会更节省，我为了苦学Python大概买了十多门课吧。</li></ul><p>读研读博这件事时间成本比较高，我对自己没有完全的自信，所以我思考再三，还是决定踏入社会浪潮了。（但是对于学习能力强，本科也比较优秀的学生，非常建议继续读研读博，未来踏入社会起薪会非常高，我现在身边就有两个博士大神，我只能膜拜了。。。）</p><p>进入社会之后，我基本就是买书和看视频自学，这回给你们来个全方位安利：</p><h2>一、网站推荐</h2><p><b>1、Python </b></p><p>Python初学者的法宝，如果你想下载Python，最好还是在这个网址去下，不要想着用一些不明来源的安装包。在这里，你不仅可以下载各种版本的Python源代码和安装程序，更有各种文献资料、Python交流社区，还会告诉你Python的最新行情，不得不感叹，这功能太强大！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1227\" data-rawheight=\"235\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c3ff6a926f09ecf7de0e8cff74f12030_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1227\" data-original=\"https://pic2.zhimg.com/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1227'%20height='235'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1227\" data-rawheight=\"235\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c3ff6a926f09ecf7de0e8cff74f12030_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1227\" data-original=\"https://pic2.zhimg.com/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-be04324870b7c46ccc431389a37e86f3_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.python.org/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-ff06c339780f23112c1cbbbb284158ff_l.jpg?source=54b3c3a5\" data-image-width=\"200\" data-image-height=\"200\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Welcome to Python.org</a><p><b>2、菜鸟教程</b></p><p>站内的知识点很全面，无论你想学习哪种领域，都可以轻松在这里找到合适的资料。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1278\" data-rawheight=\"142\" class=\"origin_image zh-lightbox-thumb\" width=\"1278\" data-original=\"https://pic1.zhimg.com/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1278'%20height='142'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1278\" data-rawheight=\"142\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1278\" data-original=\"https://pic1.zhimg.com/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-16c7f6244fa6ecd8c7a5ac72f0a4324e_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.runoob.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">菜鸟教程 - 学的不仅是技术，更是梦想！</a><p><b>3、Codecademy</b></p><p>这个学习网站很大的优势就是在浏览器上直接编写代码，轻松解决了初学者程序环境安装的困扰。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"944\" data-rawheight=\"136\" class=\"origin_image zh-lightbox-thumb\" width=\"944\" data-original=\"https://pic1.zhimg.com/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='944'%20height='136'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"944\" data-rawheight=\"136\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"944\" data-original=\"https://pic1.zhimg.com/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-16c2d460da01b0af80d8943c5de00a07_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.codecademy.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">codecademy.com/</span><span class=\"invisible\"></span></a><p><b>4、Coursera</b></p><p>如果你英文比较好，交流没有问题的话，比较推荐这个网站。这是一个课程学习网站，内容涵盖编程各个领域，目前已经和200+所大学合作课程，还可以在线读学士、硕士学位。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-81745d14b1bde5ecd1bd04a48d24be28_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1072\" data-rawheight=\"212\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-73b40b638b9e768fb56ec0a6dabe2ec6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1072\" data-original=\"https://pic1.zhimg.com/v2-81745d14b1bde5ecd1bd04a48d24be28_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1072'%20height='212'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1072\" data-rawheight=\"212\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-73b40b638b9e768fb56ec0a6dabe2ec6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1072\" data-original=\"https://pic1.zhimg.com/v2-81745d14b1bde5ecd1bd04a48d24be28_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-81745d14b1bde5ecd1bd04a48d24be28_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.coursera.org/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">coursera.org/</span><span class=\"invisible\"></span></a><p><b>5、CSDN</b></p><p>如果说你的英文是难题，给你推荐CSDN，是国内老牌程序员社区，里边有各领域博文、资料、课程，基本很多专业问题都可以在这里查。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1105\" data-rawheight=\"201\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-fc2258a955c3632a9c11c8ce1aa8c044_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1105\" data-original=\"https://pic4.zhimg.com/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1105'%20height='201'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1105\" data-rawheight=\"201\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-fc2258a955c3632a9c11c8ce1aa8c044_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1105\" data-original=\"https://pic4.zhimg.com/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-65a368dad9b598fd40e2de9a12edbbc4_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//edu.csdn.net%3Futm_source%3Deduxy_zhihu_0710_thdz_edu\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CSDN学院-IT实战派</a><h2>二、书籍推荐</h2><p><b>1、《笨办法学Python》</b></p><p>如果是初学Python的话，没有什么编程基础，还是比较适合从这本开始学的。整体是以习题的方式开始引导初学者学习编程。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-fa3d4da81eac4d25263f7558eec368e1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"640\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-a717b8b1b9764379ebb730bd3608e9c1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-fa3d4da81eac4d25263f7558eec368e1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='640'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"640\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-a717b8b1b9764379ebb730bd3608e9c1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-fa3d4da81eac4d25263f7558eec368e1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-fa3d4da81eac4d25263f7558eec368e1_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//m.tb.cn/h.VJQdwV1\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">笨办法学Python</a><p><b>2、《Python Cookbook》</b></p><p>这本书既有知识点的详细讲解，又有更多高阶用法的延伸，对于已经有一定基础但是掌握不牢的同学来说，无疑是值得拥有的好书。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7949fe082eca48c4cb65728598006c0e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"469\" data-rawheight=\"617\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-8d63fe117497e9b67a8cb8487a981a19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"469\" data-original=\"https://pic2.zhimg.com/v2-7949fe082eca48c4cb65728598006c0e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='469'%20height='617'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"469\" data-rawheight=\"617\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-8d63fe117497e9b67a8cb8487a981a19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"469\" data-original=\"https://pic2.zhimg.com/v2-7949fe082eca48c4cb65728598006c0e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7949fe082eca48c4cb65728598006c0e_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//m.tb.cn/h.VqHmgp4\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Cookbook</a><p><b>3、《流畅的Python》</b></p><p>这本书对于Python的高级用法探究很深入，涵盖了数据结构、对象、并行与并发、元编程等多个方向。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-fb5f1217be61867e0b90dbbc6fc099ed_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"924\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-2b2ce74a87239f5fbd9d9ebba9701fdf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"700\" data-original=\"https://pic1.zhimg.com/v2-fb5f1217be61867e0b90dbbc6fc099ed_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='700'%20height='924'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"924\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-2b2ce74a87239f5fbd9d9ebba9701fdf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"700\" data-original=\"https://pic1.zhimg.com/v2-fb5f1217be61867e0b90dbbc6fc099ed_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-fb5f1217be61867e0b90dbbc6fc099ed_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//m.tb.cn/h.VJQ6Gsz\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">流畅的Python</a><h2>三、课程推荐</h2><p>其实，除了学习网站和书籍，我还在网易云课堂、51、慕课、CSDN学院买了不下10套关于Python入门的课，在得到也买了时间管理课。</p><p>我自己的话，因为我是想进行系统学习，也想节省一些学习时间，加上我也比较懒，非得有人督促着才能坚持不懈，所以我选了CSDN的Python训练营。</p><a href=\"https://link.zhihu.com/?target=https%3A//t.csdnimg.cn/eEpR\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-e059f149d5f1062e4b6e4831078ae220_bh.jpg?source=54b3c3a5\" data-image-width=\"750\" data-image-height=\"320\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python工程师-CSDN学院</a><p><br></p><p>最近正在学习Python的进阶领域-AI，这回同样参与了一个训练营，深刻感受到监督使人进步！不为别的，也是希望自己以后的工作范围更广，也能跟上时代的脚步。</p><a href=\"https://link.zhihu.com/?target=https%3A//marketing.csdn.net/p/b3bca8ef2345fbda9e52fe414d5f28d9%3Futm_source%3Deduxy_zwzhihu_xtk\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">人工智能工程师</a><p>也许有人会问：“你干嘛把自己逼得那么紧，安安稳稳的不就很好了吗？”</p><p>作为一个人，如果长期处于一个舒适安逸的环境，慢慢就会被这种安逸笼罩，变得懒惰，原本拥有的能力也会逐步减弱，当有一天危险来临，所在的舒适圈被打破，连生存下去都是个难题！</p><p>所以，为了好好活下去，要不跳出舒适圈，要不就扩大你的舒适圈。</p><p>跳出舒适圈，意味着你要彻底离开现在的区域，也许是换个城市、换个工作、甚至换个行业，让自己重新拥有危机感，让新环境逼着你去成长；扩大舒适圈，就是让自己能生存的舒适范围更大，主动学习、提升你的能力。</p><p>我选择的是从零开始全方向提升，因为我想着，既然要痛苦，就直接痛苦这一次。</p><hr><p><b>Github上有一篇从“从新手到大师”的百天之路！绝对干的干货，之前和大家分享过了，还是一样推荐！（在后面!!!）</b></p><p><b>首先讲一下Python的学习路线</b></p><p><b>Python学习路线图：</b></p><p><b>python语言基础</b></p><p>（1）Python3入门，数据类型，字符串<br>（2）判断/循环语句，函数，命名空间，作用域<br>（3）类与对象，继承，多态<br>（4）tkinter界面编程<br>（5）文件与异常，数据处理简介<br>（6）Pygame实战飞机大战，2048</p><p><b>python语言高级</b></p><p>（1）Python常见第三方库与网络编程<br>（2）Python正则表达式<br>（3）邮箱爬虫，文件遍历，金融数据爬虫，多线程爬虫<br>（4）Python线程、进程<br>（5）Python MySQL数据库，协程，jython</p><p><b>python全栈工程师前端</b></p><p>(1) HTML<br>(2) HTML5<br>(3) CSS<br>(4) CSS3<br>(5) 网页界面设计实战<br>(6) javaScript<br>(7) jquerry<br>(8) jquerry EasyUI, Mobile简介，photoshop<br>(9) Bootstrap</p><p><b>python全栈工程师后端</b></p><p>(1) Django入门<br>(2) Django高级<br>(3) Django实战</p><p><b>python全栈工程师后端高级</b><br>(1) Flask开发原理<br>(2) Flask开发项目实践<br>(3) Tornado开发原理<br>(4) Tornado开发项目实践</p><p><b>Linux基础</b></p><p>(1) 文件处理命令<br>(2) 权限管理命令<br>(3) 帮助命令<br>(4) 文件搜索命令<br>(5) 压缩解压命令<br>(6) 命令使用技巧<br>(7) VIM使用<br>(8) 软件包管理<br>(9) 用户和用户组管理<br>(10) Linux Shell开发</p><p><b>Linux运维自动化开发</b></p><p>(1) Python开发Linux运维<br>(2) Linux运维报警工具开发<br>(3) Linux运维报警安全审计开发<br>(4) Linux业务质量报表工具开发<br>(5) Kali安全检测工具检测<br>(6) Kali 密码破解实战</p><p><b>python数据分析</b></p><p>(1) numpy数据处理<br>(2) pandas数据分析<br>(3) matplotlib数据可视化<br>(4) scipy数据统计分析<br>(5) python 金融数据分析</p><p><b>python大数据</b><br>(1) Hadoop HDFS<br>(2) python Hadoop MapReduce<br>(3) python Spark core<br>(4) python Spark SQL<br>(5) python Spark MLlib</p><p><b>python机器学习</b></p><p>(1) 机器学习基础知识简介<br>(2) KNN算法<br>(3) 线性回归<br>(4) 逻辑斯蒂回归算法<br>(5) 决策树算法<br>(6) 朴素贝叶斯算法<br>(7) 支持向量机<br>(8) 聚类k-means算法</p><h2>学习的三大原则</h2><p><b>1、简单入手原则</b></p><p>从简单的开始。任何事情从简单的开始，容易入门，容易产生\"兴趣\"，然后是有成就感，有自信才容易把学习进行下去。所以Python学习应遵守\"简单原则\"，包括看代码、写代码都应从最简单的开始，因为简单原则有巨大的优点。</p><p><b>2、循序渐进原则</b></p><p>很多大神上来就强调什么完美的逻辑，优越的语法，其实这些在初学时是没有必要的。为什么这么说？可能有些朋友也发现了，其实Python也好，包括学习任何一门自己语言也好，比如英语、日语。最重要的不是什么逻辑，语法，而是为了达到沟通和交流目的，敢于开口交流（九年义务哑吧英语除外）。Python就是人和机器交流的语言，开始得敢说，机器能听懂了，能完成基本功能了。我们再慢慢的提高完美的逻辑，优越的语法哈，不可能一上来就写个四大名著出来。当然，开始还是可以养成一些好的基础习惯的，比如多写备注，多写总结，分享心得。多说一句，为什么要分享心得，虽然有很多人写了很多资料，但那不是我们的收获，根据“学习金字塔理论”我们可知，吸收效率最高的学习方法是“能给别人讲会了”。</p><p><b>3、从量到质原则</b></p><p>只有从量变才能到质变，这个是颠覆不破的道理，外国人说“重复是技能之母”（repetition is the motherof skill），中国人说“熟能生巧”(su neng sheng qiao)，其实都是一个意思。可以回忆一下我们学习过的任何一种技能的过程。无论是游自行车还是骑泳，都是重复同一类动作的过程，慢慢的把这项技能变成身体的一部分。任在刚开始学习Python编程时，重复原则就更为重要。</p><h2><b>入门的基本方法</b></h2><p>关于学习的方法，也是孔子和弗洛伊德一起写的对联，上联是“隔行如隔山”，下联是“隔行不隔理”，横批“啥都一样”。学习的方法基本上就是：学教材、看案例、查字典，对应下面的方法。</p><p><b>1、系统学习法</b></p><p>Python也是：单词、语法、文章。从False、None、True、and、as、assert、break、class、continue、def、del、elif、else、except、finally、for、from、global、if、import、in、is、lambda、nonlocal、not、or、pass、raise、return、try、while、with、yield入手，再学习函数、类、模块到项目。这种学习的方法就是找一本书，然后一页一页的看，一页一页的敲，慢慢的就会建立起自己的知识结构，这样的好处是基础比较扎实，从易到难，问题是成效慢，易枯燥。</p><p><b>2、模仿学习法</b></p><p>模仿是人类成长进步的永恒阶梯。孩子成长就是个模仿的过程，他们每天模仿父母、周围的人、电视。我们编程的模仿就是大量的看别人的代码，然后模仿。如何看别人的代码呢？</p><ul><li>a、先看大概，知道人家的代码大体上要完成什么功能。</li><li>b、再来精读，看看人家每句话都是怎么说的。</li><li>c、找到差距，自己背着写一次完成同样功能的代码，再看看与高手们代码的差别。</li><li>d、融会贯通，把自己得到的内容精髓和大神们的代码结合起来，慢慢变成自己的代码风格。</li></ul><p>3、目标除障法</p><p>这种学习方法，比如先想到要西天取经，遇到问题再通过各种办法来解决。在这里又细分成一些具体的方法，比如：</p><ul><li>a、观察法：认真看代码哪里出问题了，这绝对不是废话。</li><li>b、去除法：把程序的语句减少到最小，看核心语句是不是出现了问题。</li><li>c、分割法：出现问题，把代码分成几块，看看哪块出现问题。</li><li>d、比较法：把别人的程序和自己的比较，把有问题的和没有问题的代码比较。</li><li>e、添加法：实现了一个小功能，再慢慢的增加更多的功能，也是一种学习方法。</li></ul><h2>提高的具体方法</h2><p>学习基础Python单词、语法、文章学的差不多了，就要提高到Python的高级境界。如何提高呢？</p><p><b>1、给自己创造到好的学习环境</b></p><p>找到一台好电脑，一本好的教材，“拳不离手，曲不离口”每天拿出时间来学习，还是说熟能生巧的问题。</p><p><b>2、到Python论坛</b></p><p>当然不能光看不说，到论坛学习的时候，还需要学会问和分享，在那里充分展示自己的收获，终极目标找到一群志同道合的人。</p><p><b>3、找高手一对一指导</b></p><p>现在高手很多，可以主动跟他们交流，或者花钱找一个高手学习，也不是不可以。</p><p><b>4、还是多进行编程练习</b></p><p>多看项目代码，给自己提出更高的目标，遇到问题再找高手去提问。最后，聪明的你一定会发现，上边的那些方法其实学什么都行。</p><p><br></p><p>Github上有位名叫骆昊 (jackfrued) 的资深程序员，为大家规划了一条从“从新手到大师”的百天之路！我觉得这个模式你可以参考一下。</p><p>现在已经有5w+星了！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-853cafba51a782833e6cc98faa88b0a0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1007\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb\" width=\"1007\" data-original=\"https://pic2.zhimg.com/v2-853cafba51a782833e6cc98faa88b0a0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1007'%20height='470'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1007\" data-rawheight=\"470\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1007\" data-original=\"https://pic2.zhimg.com/v2-853cafba51a782833e6cc98faa88b0a0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-853cafba51a782833e6cc98faa88b0a0_720w.jpg?source=54b3c3a5\"></figure><p>给初学者的几个建议：</p><ul><li>Make English as your working language.</li><li>Practice makes perfect.</li><li>All experience comes from mistakes.</li><li>Don't be one of the leeches.</li><li>Either stand out or kicked out.</li></ul><p>先附上github地址：</p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://github.com/jackfrued/Python-100-Day</a><p><br></p><p>下面是这个一百天计划里面的学习框架，我在这里放上来。</p><h2>Day01~15 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python语言基础</a></h2><blockquote>Day01 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/01.%25E5%2588%259D%25E8%25AF%2586Python.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">初识Python</a></blockquote><p>Python简介 - Python的历史 / Python的优缺点 / Python的应用领域</p><p>搭建编程环境 - Windows环境 / Linux环境 / MacOS环境</p><p>从终端运行Python程序 - Hello, world / print函数 / 运行程序</p><p>使用IDLE - 交互式环境(REPL) / 编写多行代码 / 运行程序 / 退出IDLE</p><p>注释 - 注释的作用 / 单行注释 / 多行注释</p><blockquote>Day02 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/02.%25E8%25AF%25AD%25E8%25A8%2580%25E5%2585%2583%25E7%25B4%25A0.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">语言元素</a></blockquote><p>程序和进制 - 指令和程序 / 冯诺依曼机 / 二进制和十进制 / 八进制和十六进制</p><p>变量和类型 - 变量的命名 / 变量的使用 / input函数 / 检查变量类型 / 类型转换</p><p>数字和字符串 - 整数 / 浮点数 / 复数 / 字符串 / 字符串基本操作 / 字符编码</p><p>运算符 - 数学运算符 / 赋值运算符 / 比较运算符 / 逻辑运算符 / 身份运算符 / 运算符的优先级</p><p>应用案例 - 华氏温度转换成摄氏温度 / 输入圆的半径计算周长和面积 / 输入年份判断是否是闰年</p><blockquote>Day03 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/03.%25E5%2588%2586%25E6%2594%25AF%25E7%25BB%2593%25E6%259E%2584.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">分支结构</a></blockquote><p>分支结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图</p><p>if语句 - 简单的if / if-else结构 / if-elif-else结构 / 嵌套的if</p><p>应用案例 - 用户身份验证 / 英制单位与公制单位互换 / 掷骰子决定做什么 / 百分制成绩转等级制 / 分段函数求值 / 输入三条边的长度如果能构成三角形就计算周长和面积</p><blockquote>Day04 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/04.%25E5%25BE%25AA%25E7%258E%25AF%25E7%25BB%2593%25E6%259E%2584.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">循环结构</a></blockquote><p>循环结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图</p><p>while循环 - 基本结构 / break语句 / continue语句</p><p>for循环 - 基本结构 / range类型 / 循环中的分支结构 / 嵌套的循环 / 提前结束程序</p><p>应用案例 - 1~100求和 / 判断素数 / 猜数字游戏 / 打印九九表 / 打印三角形图案 / 猴子吃桃 / 百钱百鸡</p><blockquote>Day05 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/05.%25E6%259E%2584%25E9%2580%25A0%25E7%25A8%258B%25E5%25BA%258F%25E9%2580%25BB%25E8%25BE%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">构造程序逻辑</a></blockquote><p>基础练习 - 水仙花数 / 完美数 / 五人分鱼 / Fibonacci数列 / 回文素数</p><p>综合练习 - Craps赌博游戏</p><blockquote>Day06 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/06.%25E5%2587%25BD%25E6%2595%25B0%25E5%2592%258C%25E6%25A8%25A1%25E5%259D%2597%25E7%259A%2584%25E4%25BD%25BF%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">函数和模块的使用</a></blockquote><p>函数的作用 - 代码的坏味道 / 用函数封装功能模块</p><p>定义函数 - def语句 / 函数名 / 参数列表 / return语句 / 调用自定义函数</p><p>调用函数 - Python内置函数 / 导入模块和函数</p><p>函数的参数 - 默认参数 / 可变参数 / 关键字参数 / 命名关键字参数</p><p>函数的返回值 - 没有返回值 / 返回单个值 / 返回多个值</p><p>作用域问题 - 局部作用域 / 嵌套作用域 / 全局作用域 / 内置作用域 / 和作用域相关的关键字</p><p>用模块管理函数 - 模块的概念 / 用自定义模块管理函数 / 命名冲突的时候会怎样（同一个模块和不同的模块）</p><blockquote>Day07 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/07.%25E5%25AD%2597%25E7%25AC%25A6%25E4%25B8%25B2%25E5%2592%258C%25E5%25B8%25B8%25E7%2594%25A8%25E6%2595%25B0%25E6%258D%25AE%25E7%25BB%2593%25E6%259E%2584.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">字符串和常用数据结构</a></blockquote><p>字符串的使用 - 计算长度 / 下标运算 / 切片 / 常用方法</p><p>列表基本用法 - 定义列表 / 用下表访问元素 / 下标越界 / 添加元素 / 删除元素 / 修改元素 / 切片 / 循环遍历</p><p>列表常用操作 - 连接 / 复制(复制元素和复制数组) / 长度 / 排序 / 倒转 / 查找</p><p>生成列表 - 使用range创建数字列表 / 生成表达式 / 生成器</p><p>元组的使用 - 定义元组 / 使用元组中的值 / 修改元组变量 / 元组和列表转换</p><p>集合基本用法 - 集合和列表的区别 / 创建集合 / 添加元素 / 删除元素 / 清空</p><p>集合常用操作 - 交集 / 并集 / 差集 / 对称差 / 子集 / 超集</p><p>字典的基本用法 - 字典的特点 / 创建字典 / 添加元素 / 删除元素 / 取值 / 清空</p><p>字典常用操作 - keys()方法 / values()方法 / items()方法 / setdefault()方法</p><p>基础练习 - 跑马灯效果 / 列表找最大元素 / 统计考试成绩的平均分 / Fibonacci数列 / 杨辉三角</p><p>综合案例 - 双色球选号 / 井字棋</p><blockquote>Day08 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/08.%25E9%259D%25A2%25E5%2590%2591%25E5%25AF%25B9%25E8%25B1%25A1%25E7%25BC%2596%25E7%25A8%258B%25E5%259F%25BA%25E7%25A1%2580.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">面向对象编程基础</a></blockquote><p>类和对象 - 什么是类 / 什么是对象 / 面向对象其他相关概念</p><p>定义类 - 基本结构 / 属性和方法 / 构造器 / 析构器 / __str__方法</p><p>使用对象 - 创建对象 / 给对象发消息</p><p>面向对象的四大支柱 - 抽象 / 封装 / 继承 / 多态</p><p>基础练习 - 定义学生类 / 定义时钟类 / 定义图形类 / 定义汽车类</p><blockquote>Day09 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/09.%25E9%259D%25A2%25E5%2590%2591%25E5%25AF%25B9%25E8%25B1%25A1%25E8%25BF%259B%25E9%2598%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">面向对象进阶</a></blockquote><p>属性 - 类属性 / 实例属性 / 属性访问器 / 属性修改器 / 属性删除器 / 使用__slots__</p><p>类中的方法 - 实例方法 / 类方法 / 静态方法</p><p>运算符重载 - __add__ / __sub__ / __or__ /__getitem__ / __setitem__ / __len__ / __repr__ / __gt__ / __lt__ / __le__ / __ge__ / __eq__ / __ne__ / __contains__</p><p>类(的对象)之间的关系 - 关联 / 继承 / 依赖</p><p>继承和多态 - 什么是继承 / 继承的语法 / 调用父类方法 / 方法重写 / 类型判定 / 多重继承 / 菱形继承(钻石继承)和C3算法</p><p>综合案例 - 工资结算系统 / 图书自动折扣系统 / 自定义分数类</p><blockquote>Day10 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/10.%25E5%259B%25BE%25E5%25BD%25A2%25E7%2594%25A8%25E6%2588%25B7%25E7%2595%258C%25E9%259D%25A2%25E5%2592%258C%25E6%25B8%25B8%25E6%2588%258F%25E5%25BC%2580%25E5%258F%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">图形用户界面和游戏开发</a></blockquote><p>使用tkinter开发GUI</p><p>使用pygame三方库开发游戏应用</p><p>“大球吃小球”游戏</p><blockquote>Day11 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/11.%25E6%2596%2587%25E4%25BB%25B6%25E5%2592%258C%25E5%25BC%2582%25E5%25B8%25B8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文件和异常</a></blockquote><ul><li>读文件 - 读取整个文件 / 逐行读取 / 文件路径</li><li>写文件 - 覆盖写入 / 追加写入 / 文本文件 / 二进制文件</li><li>异常处理 - 异常机制的重要性 / try-except代码块 / else代码块 / finally代码块 / 内置异常类型 / 异常栈 / raise语句</li><li>数据持久化 - CSV文件概述 / csv模块的应用 / JSON数据格式 / json模块的应用</li></ul><blockquote>Day12 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/12.%25E5%25AD%2597%25E7%25AC%25A6%25E4%25B8%25B2%25E5%2592%258C%25E6%25AD%25A3%25E5%2588%2599%25E8%25A1%25A8%25E8%25BE%25BE%25E5%25BC%258F.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">字符串和正则表达式</a></blockquote><ul><li>字符串高级操作 - 转义字符 / 原始字符串 / 多行字符串 / in和 not in运算符 / is开头的方法 / join和split方法 / strip相关方法 / pyperclip模块 / 不变字符串和可变字符串 / StringIO的使用</li><li>正则表达式入门 - 正则表达式的作用 / 元字符 / 转义 / 量词 / 分组 / 零宽断言 /贪婪匹配与惰性匹配懒惰 / 使用re模块实现正则表达式操作（匹配、搜索、替换、捕获）</li><li>使用正则表达式 - re模块 / compile函数 / group和groups方法 / match方法 / search方法 / findall和finditer方法 / sub和subn方法 / split方法</li><li>应用案例 - 使用正则表达式验证输入的字符串</li></ul><blockquote>Day13 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/13.%25E8%25BF%259B%25E7%25A8%258B%25E5%2592%258C%25E7%25BA%25BF%25E7%25A8%258B.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">进程和线程</a></blockquote><ul><li>进程和线程的概念 - 什么是进程 / 什么是线程 / 多线程的应用场景</li><li>使用进程 - fork函数 / multiprocessing模块 / 进程池 / 进程间通信</li><li>使用线程 - thread模块 / threading模块 / Thread类 / Lock类 / Condition类 / 线程池</li></ul><blockquote>Day14 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/14.%25E7%25BD%2591%25E7%25BB%259C%25E7%25BC%2596%25E7%25A8%258B%25E5%2585%25A5%25E9%2597%25A8%25E5%2592%258C%25E7%25BD%2591%25E7%25BB%259C%25E5%25BA%2594%25E7%2594%25A8%25E5%25BC%2580%25E5%258F%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网络编程入门和网络应用开发</a></blockquote><ul><li>计算机网络基础 - 计算机网络发展史 / “TCP-IP”模型 / IP地址 / 端口 / 协议 / 其他相关概念</li><li>网络应用模式 - “客户端-服务器”模式 / “浏览器-服务器”模式</li><li>基于HTTP协议访问网络资源 - 网络API概述 / 访问URL / requests模块 / 解析JSON格式数据</li><li>Python网络编程 - 套接字的概念 / socket模块 / socket函数 / 创建TCP服务器 / 创建TCP客户端 / 创建UDP服务器 / 创建UDP客户端 / SocketServer模块</li><li>电子邮件 - SMTP协议 / POP3协议 / IMAP协议 / smtplib模块 / poplib模块 / imaplib模块</li><li>短信服务 - 调用短信服务网关</li></ul><blockquote>Day15 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day01-15/15.%25E5%259B%25BE%25E5%2583%258F%25E5%2592%258C%25E5%258A%259E%25E5%2585%25AC%25E6%2596%2587%25E6%25A1%25A3%25E5%25A4%2584%25E7%2590%2586.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">图像和文档处理</a></blockquote><ul><li>用Pillow处理图片 - 图片读写 / 图片合成 / 几何变换 / 色彩转换 / 滤镜效果</li><li>读写Word文档 - 文本内容的处理 / 段落 / 页眉和页脚 / 样式的处理</li><li>读写Excel文件 - xlrd模块 / xlwt模块</li><li>生成PDF文件 - pypdf2模块 / reportlab模块</li></ul><h2>Day16~Day20 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day16-20/16.Python%25E8%25AF%25AD%25E8%25A8%2580%25E8%25BF%259B%25E9%2598%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python语言进阶</a></h2><ul><li>常用数据结构</li><li>函数的高级用法 - “一等公民” / 高阶函数 / Lambda函数 / 作用域和闭包 / 装饰器</li><li>面向对象高级知识 - “三大支柱” / 类与类之间的关系 / 垃圾回收 / 魔术属性和方法 / 混入 / 元类 / 面向对象设计原则 / GoF设计模式</li><li>迭代器和生成器 - 相关魔术方法 / 创建生成器的两种方式 /</li><li>并发和异步编程 - 多线程 / 多进程 / 异步IO / async和await</li></ul><h3>Day21~30 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day21-30/21.Web%25E5%2589%258D%25E7%25AB%25AF%25E6%25A6%2582%25E8%25BF%25B0.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Web前端入门</a></h3><ul><li>用HTML标签承载页面内容</li><li>用CSS渲染页面</li><li>用JavaScript处理交互式行为</li><li>jQuery入门和提高</li><li>Vue.js入门</li><li>Element的使用</li><li>Bootstrap的使用</li></ul><h3>Day31~35 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day31-35/31.%25E7%258E%25A9%25E8%25BD%25ACLinux%25E6%2593%258D%25E4%25BD%259C%25E7%25B3%25BB%25E7%25BB%259F.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">玩转Linux操作系统</a></h3><ul><li>操作系统发展史和Linux概述</li><li>Linux基础命令</li><li>Linux中的实用程序</li><li>Linux的文件系统</li><li>Vim编辑器的应用</li><li>环境变量和Shell编程</li><li>软件的安装和服务的配置</li><li>网络访问和管理</li><li>其他相关内容</li></ul><h3>Day36~40 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day36-40\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据库基础和进阶</a></h3><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day36-40/36.%25E5%2585%25B3%25E7%25B3%25BB%25E5%259E%258B%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593MySQL.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">关系型数据库MySQL</a></li><ul><li>关系型数据库概述</li><li>MySQL的安装和使用</li><li>SQL的使用</li><ul><li>DDL - 数据定义语言 - create / drop / alter</li><li>DML - 数据操作语言 - insert / delete / update / select</li><li>DCL - 数据控制语言 - grant / revoke</li></ul><li>相关知识</li><ul><li>范式理论 - 设计二维表的指导思想</li><li>数据完整性</li><li>数据一致性</li></ul><li>在Python中操作MySQL</li></ul><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day36-40/39.NoSQL%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">NoSQL入门</a></li><ul><li>NoSQL概述</li><li>Redis概述</li><li>Mongo概述</li></ul></ul><h3>Day41~55 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">实战Django</a></h3><blockquote>Day41 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/41.%25E5%25BF%25AB%25E9%2580%259F%25E4%25B8%258A%25E6%2589%258B.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">快速上手</a></blockquote><ul><li>Web应用工作原理和HTTP协议</li><li>Django框架概述</li><li>5分钟快速上手</li><li>使用视图模板</li></ul><blockquote>Day42 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/42.%25E6%25B7%25B1%25E5%2585%25A5%25E6%25A8%25A1%25E5%259E%258B.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">深入模型</a></blockquote><ul><li>关系型数据库配置</li><li>管理后台的使用</li><li>使用ORM完成对模型的CRUD操作</li><li>Django模型最佳实践</li><li>模型定义参考</li></ul><blockquote>Day43 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/43.%25E9%259D%2599%25E6%2580%2581%25E8%25B5%2584%25E6%25BA%2590%25E5%2592%258CAjax%25E8%25AF%25B7%25E6%25B1%2582.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">静态资源和Ajax请求</a></blockquote><ul><li>加载静态资源</li><li>用Ajax请求获取数据</li></ul><blockquote>Day44 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/44.%25E8%25A1%25A8%25E5%258D%2595%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">表单的应用</a></blockquote><ul><li>表单和表单控件</li><li>跨站请求伪造和CSRF令牌</li><li>Form和ModelForm</li><li>表单验证</li></ul><blockquote>Day45 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/45.Cookie%25E5%2592%258CSession.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Cookie和Session</a></blockquote><ul><li>实现用户跟踪</li><li>cookie和session的关系</li><li>Django框架对session的支持</li><li>视图函数中的cookie读写操作</li></ul><blockquote>Day46 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/46.%25E6%258A%25A5%25E8%25A1%25A8%25E5%2592%258C%25E6%2597%25A5%25E5%25BF%2597.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">报表和日志</a></blockquote><ul><li>通过HttpResponse修改响应头</li><li>使用StreamingHttpResponse处理大文件</li><li>使用xlwt生成Excel报表</li><li>使用reportlab生成PDF报表</li><li>使用ECharts生成前端图表</li><li>配置日志和Django-Debug-Toolbar</li></ul><blockquote>Day47 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/47.%25E4%25B8%25AD%25E9%2597%25B4%25E4%25BB%25B6%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">中间件的应用</a></blockquote><ul><li>什么是中间件</li><li>Django框架内置的中间件</li><li>自定义中间件及其应用场景</li></ul><blockquote>Day48 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/48.%25E5%2589%258D%25E5%2590%258E%25E7%25AB%25AF%25E5%2588%2586%25E7%25A6%25BB%25E5%25BC%2580%25E5%258F%2591%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">前后端分离开发入门</a></blockquote><ul><li>返回JSON格式的数据</li><li>用Vue.js渲染页面</li></ul><blockquote>Day49 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/49.RESTful%25E6%259E%25B6%25E6%259E%2584%25E5%2592%258CDRF%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RESTful架构和DRF入门</a><br>Day50 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/50.RESTful%25E6%259E%25B6%25E6%259E%2584%25E5%2592%258CDRF%25E8%25BF%259B%25E9%2598%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RESTful架构和DRF进阶</a><br>Day51 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/51.%25E4%25BD%25BF%25E7%2594%25A8%25E7%25BC%2593%25E5%25AD%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用缓存</a></blockquote><ul><li>网站优化第一定律</li><li>在Django项目中使用Redis提供缓存服务</li><li>在视图函数中读写缓存</li><li>使用装饰器实现页面缓存</li><li>为数据接口提供缓存服务</li></ul><blockquote>Day52 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/52.%25E6%2596%2587%25E4%25BB%25B6%25E4%25B8%258A%25E4%25BC%25A0.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文件上传和富文本编辑</a></blockquote><ul><li>文件上传表单控件和图片文件预览</li><li>服务器端如何处理上传的文件</li><li>富文本编辑器概述</li><li>wangEditor的使用</li></ul><blockquote>Day53 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/53.%25E7%259F%25AD%25E4%25BF%25A1%25E5%2592%258C%25E9%2582%25AE%25E4%25BB%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">短信和邮件</a></blockquote><ul><li>常用短信网关平台介绍</li><li>使用螺丝帽发送短信</li><li>Django框架对邮件服务的支持</li></ul><blockquote>Day54 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/54.%25E5%25BC%2582%25E6%25AD%25A5%25E4%25BB%25BB%25E5%258A%25A1%25E5%2592%258C%25E5%25AE%259A%25E6%2597%25B6%25E4%25BB%25BB%25E5%258A%25A1.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">异步任务和定时任务</a></blockquote><ul><li>网站优化第二定律</li><li>配置消息队列服务</li><li>在项目中使用celery实现任务异步化</li><li>在项目中使用celery实现定时任务</li></ul><blockquote>Day55 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day41-55/55.%25E5%258D%2595%25E5%2585%2583%25E6%25B5%258B%25E8%25AF%2595%25E5%2592%258C%25E9%25A1%25B9%25E7%259B%25AE%25E4%25B8%258A%25E7%25BA%25BF.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">单元测试和项目上线</a></blockquote><ul><li>Python中的单元测试</li><li>Django框架对单元测试的支持</li><li>使用版本控制系统</li><li>配置和使用uWSGI</li><li>动静分离和Nginx配置</li><li>配置HTTPS</li></ul><h3>Day56~60 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-65\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">实战Flask</a></h3><blockquote>Day56 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/56.Flask%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Flask入门</a><br>Day57 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/57.%25E6%25A8%25A1%25E6%259D%25BF%25E7%259A%2584%25E4%25BD%25BF%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">模板的使用</a><br>Day58 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/58.%25E8%25A1%25A8%25E5%258D%2595%25E7%259A%2584%25E5%25A4%2584%25E7%2590%2586.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">表单的处理</a><br>Day59 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/59.%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593%25E6%2593%258D%25E4%25BD%259C.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据库操作</a><br>Day60 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day56-60/60.%25E9%25A1%25B9%25E7%259B%25AE%25E5%25AE%259E%25E6%2588%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">项目实战</a></blockquote><h3>Day61~65 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">实战Tornado</a></h3><blockquote>Day61 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/61.%25E9%25A2%2584%25E5%25A4%2587%25E7%259F%25A5%25E8%25AF%2586.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">预备知识</a></blockquote><ul><li>并发编程</li><li>I/O模式和事件驱动</li></ul><blockquote>Day62 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/62.Tornado%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tornado入门</a></blockquote><ul><li>Tornado概述</li><li>5分钟上手Tornado</li><li>路由解析</li><li>请求处理器</li></ul><blockquote>Day63 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/63.%25E5%25BC%2582%25E6%25AD%25A5%25E5%258C%2596.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">异步化</a></blockquote><ul><li>aiomysql和aioredis的使用</li></ul><blockquote>Day64 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/64.WebSocket%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">WebSocket的应用</a></blockquote><ul><li>WebSocket简介</li><li>WebSocket服务器端编程</li><li>WebSocket客户端编程</li><li>项目：Web聊天室</li></ul><blockquote>Day65 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day61-65/65.%25E9%25A1%25B9%25E7%259B%25AE%25E5%25AE%259E%25E6%2588%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">项目实战</a></blockquote><ul><li>前后端分离开发和接口文档的撰写</li><li>使用Vue.js实现前端渲染</li><li>使用ECharts实现报表功能</li><li>使用WebSocket实现推送服务</li></ul><h3>Day66~75 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">爬虫开发</a></h3><blockquote>Day66 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/66.%25E7%25BD%2591%25E7%25BB%259C%25E7%2588%25AC%25E8%2599%25AB%25E5%2592%258C%25E7%259B%25B8%25E5%2585%25B3%25E5%25B7%25A5%25E5%2585%25B7.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网络爬虫和相关工具</a></blockquote><ul><li>网络爬虫的概念及其应用领域</li><li>网络爬虫的合法性探讨</li><li>开发网络爬虫的相关工具</li><li>一个爬虫程序的构成</li></ul><blockquote>Day67 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/67.%25E6%2595%25B0%25E6%258D%25AE%25E9%2587%2587%25E9%259B%2586%25E5%2592%258C%25E8%25A7%25A3%25E6%259E%2590.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据采集和解析</a></blockquote><ul><li>数据采集的标准和三方库</li><li>页面解析的三种方式：正则表达式解析 / XPath解析 / CSS选择器解析</li></ul><blockquote>Day68 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/68.%25E5%25AD%2598%25E5%2582%25A8%25E6%2595%25B0%25E6%258D%25AE.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">存储数据</a></blockquote><ul><li>如何存储海量数据</li><li>实现数据的缓存</li></ul><blockquote>Day69 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/69.%25E5%25B9%25B6%25E5%258F%2591%25E4%25B8%258B%25E8%25BD%25BD.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">并发下载</a></blockquote><ul><li>多线程和多进程</li><li>异步I/O和协程</li><li>async和await关键字的使用</li><li>三方库aiohttp的应用</li></ul><blockquote>Day70 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/70.%25E8%25A7%25A3%25E6%259E%2590%25E5%258A%25A8%25E6%2580%2581%25E5%2586%2585%25E5%25AE%25B9.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">解析动态内容</a></blockquote><ul><li>JavaScript逆向工程</li><li>使用Selenium获取动态内容</li></ul><blockquote>Day71 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/71.%25E8%25A1%25A8%25E5%258D%2595%25E4%25BA%25A4%25E4%25BA%2592%25E5%2592%258C%25E9%25AA%258C%25E8%25AF%2581%25E7%25A0%2581%25E5%25A4%2584%25E7%2590%2586.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">表单交互和验证码处理</a></blockquote><ul><li>自动提交表单</li><li>Cookie池的应用</li><li>验证码处理</li></ul><blockquote>Day72 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/72.Scrapy%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy入门</a></blockquote><ul><li>Scrapy爬虫框架概述</li><li>安装和使用Scrapy</li></ul><blockquote>Day73 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/73.Scrapy%25E9%25AB%2598%25E7%25BA%25A7%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy高级应用</a></blockquote><ul><li>Spider的用法</li><li>中间件的应用：下载中间件 / 蜘蛛中间件</li><li>Scrapy对接Selenium抓取动态内容</li><li>Scrapy部署到Docker</li></ul><blockquote>Day74 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/74.Scrapy%25E5%2588%2586%25E5%25B8%2583%25E5%25BC%258F%25E5%25AE%259E%25E7%258E%25B0.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy分布式实现</a></blockquote><ul><li>分布式爬虫的原理</li><li>Scrapy分布式实现</li><li>使用Scrapyd实现分布式部署</li></ul><blockquote>Day75 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day66-75/75.%25E7%2588%25AC%25E8%2599%25AB%25E9%25A1%25B9%25E7%259B%25AE%25E5%25AE%259E%25E6%2588%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">爬虫项目实战</a></blockquote><ul><li>爬取招聘网站数据</li><li>爬取房地产行业数据</li><li>爬取二手车交易平台数据</li></ul><h3>Day76~90 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据处理和机器学习</a></h3><blockquote>Day76 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/76.%25E6%259C%25BA%25E5%2599%25A8%25E5%25AD%25A6%25E4%25B9%25A0%25E5%259F%25BA%25E7%25A1%2580.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">机器学习基础</a><br>Day77 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/77.Pandas%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Pandas的应用</a><br>Day78 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/78.NumPy%25E5%2592%258CSciPy%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">NumPy和SciPy的应用</a><br>Day79 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/79.Matplotlib%25E5%2592%258C%25E6%2595%25B0%25E6%258D%25AE%25E5%258F%25AF%25E8%25A7%2586%25E5%258C%2596\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Matplotlib和数据可视化</a><br>Day80 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/80.k%25E6%259C%2580%25E8%25BF%2591%25E9%2582%25BB%25E5%2588%2586%25E7%25B1%25BB.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">k最近邻(KNN)分类</a><br>Day81 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/81.%25E5%2586%25B3%25E7%25AD%2596%25E6%25A0%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">决策树</a><br>Day82 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/82.%25E8%25B4%259D%25E5%258F%25B6%25E6%2596%25AF%25E5%2588%2586%25E7%25B1%25BB.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">贝叶斯分类</a><br>Day83 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/83.%25E6%2594%25AF%25E6%258C%2581%25E5%2590%2591%25E9%2587%258F%25E6%259C%25BA.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">支持向量机(SVM)</a><br>Day84 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/84.K-%25E5%259D%2587%25E5%2580%25BC%25E8%2581%259A%25E7%25B1%25BB.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">K-均值聚类</a><br>Day85 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/85.%25E5%259B%259E%25E5%25BD%2592%25E5%2588%2586%25E6%259E%2590.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">回归分析</a><br>Day86 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/86.%25E5%25A4%25A7%25E6%2595%25B0%25E6%258D%25AE%25E5%2588%2586%25E6%259E%2590%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">大数据分析入门</a><br>Day87 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/87.%25E5%25A4%25A7%25E6%2595%25B0%25E6%258D%25AE%25E5%2588%2586%25E6%259E%2590%25E8%25BF%259B%25E9%2598%25B6.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">大数据分析进阶</a><br>Day88 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/88.Tensorflow%25E5%2585%25A5%25E9%2597%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tensorflow入门</a><br>Day89 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/89.Tensorflow%25E5%25AE%259E%25E6%2588%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tensorflow实战</a><br>Day90 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day76-90/90.%25E6%258E%25A8%25E8%258D%2590%25E7%25B3%25BB%25E7%25BB%259F.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">推荐系统</a></blockquote><h3>Day91~100 - <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">团队项目开发</a></h3><blockquote>第91天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/91.%25E5%259B%25A2%25E9%2598%259F%25E9%25A1%25B9%25E7%259B%25AE%25E5%25BC%2580%25E5%258F%2591%25E5%2587%2586%25E5%25A4%2587.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">团队项目开发准备</a></blockquote><ol><li>软件过程模型</li></ol><ul><li>经典过程模型（瀑布模型）<br></li><ul><li>可行性分析（研究做还是不做），输出《可行性分析报告》。</li><li>需求分析（研究做什么），输出《需求规格说明书》和产品界面原型图。</li><li>概要设计和详细设计，输出概念模型图、物理模型图、类图、时序图等。</li><li>编码 / 测试。</li><li>上线 / 维护。</li><li>敏捷开发（Scrum）- 产品所有者、Scrum Master、研发人员 - Sprint<br></li><ul><li>产品的Backlog（用户故事、产品原型）。</li><li>计划会议（评估和预算）。</li><li>日常开发（站立会议、番茄工作法、结对编程、测试先行、代码重构……）。</li><li>修复bug（问题描述、重现步骤、测试人员、被指派人）。</li><li>评审会议（Showcase）。</li><li>回顾会议（当前周期做得好和不好的地方）。</li></ul></ul></ul><p>补充：敏捷软件开发宣言<br></p><ul><ul><ul><li><b>个体和互动</b> 高于 流程和工具</li><li><b>工作的软件</b> 高于 详尽的文档</li><li><b>客户合作</b> 高于 合同谈判</li><li><b>响应变化</b> 高于 遵循计划</li></ul></ul></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-ce5f820b4293e1eeb3d267a34f3f3110_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2848\" data-rawheight=\"1664\" class=\"origin_image zh-lightbox-thumb\" width=\"2848\" data-original=\"https://pic1.zhimg.com/v2-ce5f820b4293e1eeb3d267a34f3f3110_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2848'%20height='1664'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2848\" data-rawheight=\"1664\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2848\" data-original=\"https://pic1.zhimg.com/v2-ce5f820b4293e1eeb3d267a34f3f3110_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-ce5f820b4293e1eeb3d267a34f3f3110_720w.jpg?source=54b3c3a5\"></figure><p><br>角色：产品所有者（决定做什么，能对需求拍板的人）、团队负责人（解决各种问题，专注如何更好的工作，屏蔽外部对开发团队的影响）、开发团队（项目执行人员，具体指开发人员和测试人员）。<br>准备工作：商业案例和资金、合同、憧憬、初始产品需求、初始发布计划、入股、组建团队。<br>敏捷团队通常人数为8-10人。<br>工作量估算：将开发任务量化，包括原型、Logo设计、UI设计、前端开发等，尽量把每个工作分解到最小任务量，最小任务量标准为工作时间不能超过两天，然后估算总体项目时间。把每个任务都贴在白板上面，白板上分三部分：to do（待完成）、in progress（进行中）和done（已完成）。</p><ol><li>项目团队组建</li></ol><ul><li>团队的构成和角色<br>说明：谢谢付祥英女士绘制了下面这张精美的公司组织架构图。<br></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-405573bc2c41c2269d9525e7d30e29ab_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1070\" data-rawheight=\"689\" class=\"origin_image zh-lightbox-thumb\" width=\"1070\" data-original=\"https://pic4.zhimg.com/v2-405573bc2c41c2269d9525e7d30e29ab_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1070'%20height='689'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1070\" data-rawheight=\"689\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1070\" data-original=\"https://pic4.zhimg.com/v2-405573bc2c41c2269d9525e7d30e29ab_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-405573bc2c41c2269d9525e7d30e29ab_720w.jpg?source=54b3c3a5\"></figure><ul><ul><li>编程规范和代码审查（flake8、pylint）</li></ul></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-9d9e88a5b557b8218a1fab2155677194_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1768\" data-rawheight=\"808\" class=\"origin_image zh-lightbox-thumb\" width=\"1768\" data-original=\"https://pic2.zhimg.com/v2-9d9e88a5b557b8218a1fab2155677194_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1768'%20height='808'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1768\" data-rawheight=\"808\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1768\" data-original=\"https://pic2.zhimg.com/v2-9d9e88a5b557b8218a1fab2155677194_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-9d9e88a5b557b8218a1fab2155677194_720w.jpg?source=54b3c3a5\"></figure><ul><ul><li>Python中的一些“惯例”（请参考<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Python%25E6%2583%25AF%25E4%25BE%258B.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Python惯例-如何编写Pythonic的代码》</a>）</li><li>影响代码可读性的原因：<br></li><ul><li>代码注释太少或者没有注释</li><li>代码破坏了语言的最佳实践</li><li>反模式编程（意大利面代码、复制-黏贴编程、自负编程、……）</li></ul></ul></ul><ol><li>团队开发工具介绍</li></ol><ul><li>版本控制：Git、Mercury</li><li>缺陷管理：<a href=\"https://link.zhihu.com/?target=https%3A//about.gitlab.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Gitlab</a>、<a href=\"https://link.zhihu.com/?target=http%3A//www.redmine.org.cn/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Redmine</a></li><li>敏捷闭环工具：<a href=\"https://link.zhihu.com/?target=https%3A//www.zentao.net/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">禅道</a>、<a href=\"https://link.zhihu.com/?target=https%3A//www.atlassian.com/software/jira/features\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">JIRA</a></li><li>持续集成：<a href=\"https://link.zhihu.com/?target=https%3A//jenkins.io/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Jenkins</a>、<a href=\"https://link.zhihu.com/?target=https%3A//travis-ci.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Travis-CI</a></li></ul><p>请参考<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/%25E5%259B%25A2%25E9%2598%259F%25E9%25A1%25B9%25E7%259B%25AE%25E5%25BC%2580%25E5%258F%2591.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《团队项目开发》</a>。</p><h3>项目选题和理解业务</h3><ol><li>选题范围设定</li></ol><ul><li>CMS（用户端）：新闻聚合网站、问答/分享社区、影评/书评网站等。</li><li>MIS（用户端+管理端）：KMS、KPI考核系统、HRS、CRM系统、供应链系统、仓储管理系统等。</li><li>App后台（管理端+数据接口）：二手交易类、报刊杂志类、小众电商类、新闻资讯类、旅游类、社交类、阅读类等。</li><li>其他类型：自身行业背景和工作经验、业务容易理解和把控。</li></ul><ol><li>需求理解、模块划分和任务分配</li></ol><ul><li>需求理解：头脑风暴和竞品分析。</li><li>模块划分：画思维导图（XMind），每个模块是一个枝节点，每个具体的功能是一个叶节点（用动词表述），需要确保每个叶节点无法再生出新节点，确定每个叶子节点的重要性、优先级和工作量。</li><li>任务分配：由项目负责人根据上面的指标为每个团队成员分配任务。</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f309876270b182a35f8bce02ca554b00_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1950\" data-rawheight=\"530\" class=\"origin_image zh-lightbox-thumb\" width=\"1950\" data-original=\"https://pic1.zhimg.com/v2-f309876270b182a35f8bce02ca554b00_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1950'%20height='530'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1950\" data-rawheight=\"530\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1950\" data-original=\"https://pic1.zhimg.com/v2-f309876270b182a35f8bce02ca554b00_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f309876270b182a35f8bce02ca554b00_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ol><li>制定项目进度表（每日更新）<br></li></ol><h3>第92天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/92.Docker%25E5%259C%25A8%25E9%25A1%25B9%25E7%259B%25AE%25E4%25B8%25AD%25E7%259A%2584%25E5%25BA%2594%25E7%2594%25A8.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Docker的使用</a></h3><h3>第93天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/93.%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593%25E8%25AE%25BE%25E8%25AE%25A1%25E5%2592%258COOAD.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据库设计和OOAD</a></h3><h3>概念模型和正向工程</h3><ol><li>UML（统一建模语言）的类图</li></ol><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-1688a7b35bfc3d0f133fb5621c1a638c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1104\" data-rawheight=\"804\" class=\"origin_image zh-lightbox-thumb\" width=\"1104\" data-original=\"https://pic2.zhimg.com/v2-1688a7b35bfc3d0f133fb5621c1a638c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1104'%20height='804'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1104\" data-rawheight=\"804\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1104\" data-original=\"https://pic2.zhimg.com/v2-1688a7b35bfc3d0f133fb5621c1a638c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-1688a7b35bfc3d0f133fb5621c1a638c_720w.jpg?source=54b3c3a5\"></figure><ol><li>通过模型创建表（正向工程）<br>python manage.py makemigrations app python manage.py migrate</li></ol><h3>物理模型和反向工程</h3><ol><li>PowerDesigner<br></li></ol><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-336f81e1bcbb8c06b73ebbd503be92c9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1300\" data-rawheight=\"1100\" class=\"origin_image zh-lightbox-thumb\" width=\"1300\" data-original=\"https://pic2.zhimg.com/v2-336f81e1bcbb8c06b73ebbd503be92c9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1300'%20height='1100'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1300\" data-rawheight=\"1100\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1300\" data-original=\"https://pic2.zhimg.com/v2-336f81e1bcbb8c06b73ebbd503be92c9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-336f81e1bcbb8c06b73ebbd503be92c9_720w.jpg?source=54b3c3a5\"></figure><p>2.通过数据表创建模型（反向工程）<br>python manage.py inspectdb &gt; app/models.py</p><blockquote>第94天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/94.%25E7%25BD%2591%25E7%25BB%259CAPI%25E6%258E%25A5%25E5%258F%25A3%25E8%25AE%25BE%25E8%25AE%25A1.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网络API接口设计</a><br>第95天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/95.%25E4%25BD%25BF%25E7%2594%25A8Django%25E5%25BC%2580%25E5%258F%2591%25E9%25A1%25B9%25E7%259B%25AE.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用Django开发项目</a></blockquote><h3>项目开发中的公共问题</h3><ol><li>数据库的配置（多数据库、主从复制、数据库路由）</li><li>缓存的配置（分区缓存、键设置、超时设置、主从复制、故障恢复（哨兵））</li><li>日志的配置</li><li>分析和调试（Django-Debug-ToolBar）</li><li>好用的Python模块（日期计算、图像处理、数据加密、三方API）</li></ol><h3>REST API设计</h3><ol><li>RESTful架构</li></ol><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//www.ruanyifeng.com/blog/2011/09/restful.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">理解RESTful架构</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.ruanyifeng.com/blog/2014/05/restful_api.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RESTful API设计指南</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.ruanyifeng.com/blog/2018/10/restful-api-best-practices.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RESTful API最佳实践</a></li></ul><ol><li>API接口文档的撰写</li></ol><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//rap2.taobao.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RAP2</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//yapi.demo.qunar.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">YAPI</a></li></ul><ol><li><a href=\"https://link.zhihu.com/?target=https%3A//www.django-rest-framework.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">django-REST-framework</a>的应用</li></ol><h3>项目中的重点难点剖析</h3><ol><li>使用缓存缓解数据库压力 - Redis</li><li>使用消息队列做解耦合和削峰 - Celery + RabbitMQ</li></ol><h3>第96天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/96.%25E8%25BD%25AF%25E4%25BB%25B6%25E6%25B5%258B%25E8%25AF%2595%25E5%2592%258C%25E8%2587%25AA%25E5%258A%25A8%25E5%258C%2596%25E6%25B5%258B%25E8%25AF%2595.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">软件测试和自动化测试</a></h3><h3>单元测试</h3><ol><li>测试的种类</li><li>编写单元测试（unittest、pytest、nose2、tox、ddt、……）</li><li>测试覆盖率（coverage）</li></ol><h3>项目部署</h3><ol><li>部署前的准备工作</li></ol><ul><li>关键设置（SECRET_KEY / DEBUG / ALLOWED_HOSTS / 缓存 / 数据库）</li><li>HTTPS / CSRF_COOKIE_SECUR / SESSION_COOKIE_SECURE</li><li>日志相关配置</li></ul><ol><li>Linux常用命令回顾</li><li>Linux常用服务的安装和配置</li><li>uWSGI/Gunicorn和Nginx的使用</li></ol><ul><li>Gunicorn和uWSGI的比较</li><ul><li>对于不需要大量定制化的简单应用程序，Gunicorn是一个不错的选择，uWSGI的学习曲线比Gunicorn要陡峭得多，Gunicorn的默认参数就已经能够适应大多数应用程序。</li><li>uWSGI支持异构部署。</li><li>由于Nginx本身支持uWSGI，在线上一般都将Nginx和uWSGI捆绑在一起部署，而且uWSGI属于功能齐全且高度定制的WSGI中间件。</li><li>在性能上，Gunicorn和uWSGI其实表现相当。</li></ul></ul><ol><li>虚拟化技术（Docker）</li></ol><h3>性能测试</h3><ol><li>AB的使用</li><li>SQLslap的使用</li><li>sysbench的使用</li></ol><h3>自动化测试</h3><ol><li>使用Shell和Python进行自动化测试</li><li>使用Selenium实现自动化测试</li></ol><ul><li>Selenium IDE</li><li>Selenium WebDriver</li><li>Selenium Remote Control</li></ul><ol><li>测试工具Robot Framework介绍</li></ol><blockquote>第97天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/97.%25E7%2594%25B5%25E5%2595%2586%25E7%25BD%2591%25E7%25AB%2599%25E6%258A%2580%25E6%259C%25AF%25E8%25A6%2581%25E7%2582%25B9%25E5%2589%2596%25E6%259E%2590.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">电商网站技术要点剖析</a><br>第98天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/98.%25E9%25A1%25B9%25E7%259B%25AE%25E9%2583%25A8%25E7%25BD%25B2%25E4%25B8%258A%25E7%25BA%25BF%25E5%2592%258C%25E6%2580%25A7%25E8%2583%25BD%25E8%25B0%2583%25E4%25BC%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">项目部署上线和性能调优</a></blockquote><ol><li>MySQL数据库调优</li><li>Web服务器性能优化</li></ol><p>3.代码性能调优</p><ul><li>多线程</li><li>异步化</li></ul><p>4.静态资源访问优化</p><ul><ul><li>云存储</li><li>CDN</li></ul></ul><blockquote>第99天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/99.%25E9%259D%25A2%25E8%25AF%2595%25E4%25B8%25AD%25E7%259A%2584%25E5%2585%25AC%25E5%2585%25B1%25E9%2597%25AE%25E9%25A2%2598.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">面试中的公共问题</a><br>第100天：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days/blob/master/Day91-100/100.%25E8%258B%25B1%25E8%25AF%25AD%25E9%259D%25A2%25E8%25AF%2595.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">英语面试</a></blockquote><p>作者：骆昊 (jackfrued)</p><p>来源：github</p><p>github地址：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/jackfrued/Py</span><span class=\"invisible\">thon-100-Days</span><span class=\"ellipsis\"></span></a></p><p><br></p><p><b>希望能够帮助到想要学好Python的同学！</b></p>", "如何用一段简单的代码讲述一个悲伤的故事？": "<div class=\"highlight\"><pre><code class=\"language-c\"><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;stdio.h&gt;</span><span class=\"cp\"></span>\n<span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span> \n    <span class=\"kt\">double</span> <span class=\"n\">world</span><span class=\"p\">;</span>\n    <span class=\"kt\">unsigned</span> <span class=\"n\">letter</span><span class=\"p\">;</span>\n    <span class=\"kt\">short</span> <span class=\"n\">stay</span><span class=\"p\">;</span>\n    <span class=\"kt\">long</span> <span class=\"n\">memories</span><span class=\"p\">;</span>\n    <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"I miss you.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>", "为什么铺天盖地都是Python的广告？": "<p>面试官问我：“看你简历之前，先问你一个问题，全民学Python编程可行么？”</p><p>我冷笑。</p><p><br></p><p>我知道他想要我回答“可以”，实际上可以个屁，如果不是因为吃青菜面的时候没钱加鸡蛋，我可能立刻拍桌子告诉他：全民学office可行吗？全民健身可行吗？全民学英语可行吗？什么全民全民全民，说出来不就是想跨界割韭菜，前端时间还全民学空气币！学抖音！一群镰刀渣！</p><p><br></p><p>但我想吃煎蛋了。楼下餐馆的小姐姐虽然不够好看，也不够温柔，煎蛋的油可能太油，我还是想吃煎蛋。</p><p><br></p><p>但是如果我没有这份工作，我可能连青菜面都吃不上了。</p><p><br></p><p>所以我立刻转成了高冷笑，然后转成了高深莫测笑，呡了口白开水，我淡定的说：“当然可以”。</p><p><br></p><p>“Python太适合大家来学习了！小朋友可以学，什么scratch，拖拽图形，不专业，低级！满足不了有钱人的父母的需要，拉不开差距！要钱投资在孩子身上是为了干嘛，当然就是要拉开差距，家庭月收入10万和家庭月收入5000的人，在一个教室里同样的老师学同样难度的scratch？怎么拉开差距？必须要学高大上的Python！你要说Python怎么高大上了？现在最火的人工智能知道么，全是Python写的！会Python，你就已经打开了人工智能之路，年薪200万！值不值？你要跟他讲，先学语文再拿诺贝尔文学奖，没人信。你要说先学会打字，再哪诺贝尔文学奖，他就信了！什么数学，算法都让一边去，得Python者得天下！你看，小孩子的群体有了吧？高考都考Python呢！”</p><p>“大学生呢？大学生计算机系的要不要学？要不要学？要不要学？学c？学JAVA？学PHP？学js？学oc？low！学c的饿死了，学JAVA的竞争激烈，学PHP的没人要，学js的没技术含量！而且，Python简单，强大，人人学得会！你看，隔壁7岁小朋友都在学Python！而且入门月薪就过万，你说招聘岗位上没有Python的职位？你看这不有十几家公司找Python的么？说明你先人一步，难道等烂大街的时候再学？你看那家叫什么修真院的公司没？说学JAVA找到工作要900小时的编程时间，900小时，你有那么多时间没？Python不一样，每周两个小时听听课，2个月就能找工作了！你看，爬虫10分钟教程，简单吧？5分钟搭个web网站，简单吧？效率就是价值，这就是Python值钱的原因！”</p><p>“你说你不是科班生？你是土木机械电子的？那更要学Python了！计科专业都去做JAVA和c了，你当然学Python了，不然你也学不会别的啊。osi七层模型你不懂吧？数据结构你不懂吧？编译原理你不懂吧？不懂就对了，人家学四年，你现在学四个月，人生苦短，我学Python，你看，3分钟，就能解析一个文本了，快不快？连IDE都不用，直接Vim上！酷炫！”</p><p><br></p><p>“你说你不想做研发，你是一个产品运营？那必须学Python啊，运营是不是要数据分析？你看这个，拿Excel表格分析数据的十年运营，薪水1万5，你看这个，用Python分析数据的半年运营，薪水2万8！还是因为老板天天请他吃烧烤留下来的，你看螃蟹都想从9.9爬到19.9的篮子里，人难道不想有上进薪么？”</p><p><br></p><p>“你说你压根不是互联网行业的？哎呦喂你幸好问到我了。现在万物联网，连潘石屹都在学Python，一个盖房子的搬砖之余都不忘融入互联网的潮流，这就是大势！你可以不当程序员，但是你不可以不懂编程！你娶不了苍老师，难道就不像苍老师学习了么。python是什么，是赋能工具，链接旧世界和互联网新世界的桥梁！而且，领导知道你会Python，肯定加薪，为嘛？爱学习！妹子知道你会Python，肯定崇拜你，为什么？会编程的人都好厉害！你是个妹子，更得会Python，为什么？会跳舞会唱歌的妹子多了去，有几个妹子会编程？酷！”</p><p><br></p><p>“你说你都退休了？年纪大了？那不更得学Python了？老两口在家寂寞吧？手机都用不利索，跟子孙拿来的共同语言？学Python多好，学会了谁还想带孙子玩呀！你看能抓全世界的图！教你爬虫，大爷你看，这是美国的，这是日本的，这是澳大利亚的，都会自动更新！学不学？难道去跳广场舞重新投入江湖争斗啊？算了吧，人心险恶，你学Python。”</p><p><br></p><p>“您看，什么人不需要学Python？”</p><p><br></p><p>面试官脸上露出了满意的笑容，说：“你被录用了，很适合做一个电话销售，底薪1500，其他靠提成。现在，告诉我你之前是做什么的？”</p><p><br></p><p>我很激动，紧紧握着面试官的手，说：“我学了2个月的Python，找了3年的工作。”</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/zvideo/1309486533935063040\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"Python时代\" data-poster=\"https://pic4.zhimg.com/v2-a19e210202b6c16a64962079762369e0.jpg?source=1940ef5c\" data-lens-id=\"1309486532239904768\">              <img class=\"thumbnail\" src=\"https://pic4.zhimg.com/v2-a19e210202b6c16a64962079762369e0.jpg?source=1940ef5c\">              <span class=\"content\">                <span class=\"title\">Python时代<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/zvideo/1309486533935063040</span>              </span>            </a>            "}{"零基础如何学爬虫技术？": "<p>第一：Python爬虫学习系列教程（来源于某博主：<a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/1052.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">cuiqingcai.com/1052.htm</span><span class=\"invisible\">l</span><span class=\"ellipsis\"></span></a>）</p><p>Python版本：2.7 <br></p><p>整体目录： </p><p>一、爬虫入门</p><p>1. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/927.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫入门一之综述</a></p><p>2. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/942.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫入门二之爬虫基础了解</a></p><p>3. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/947.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫入门三之Urllib库的基本使用</a></p><p>4. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/954.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫入门四之Urllib库的高级用法</a></p><p>5. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/961.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫入门五之URLError异常处理</a></p><p>6. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/968.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫入门六之Cookie的使用</a></p><p>7. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/977.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫入门七之正则表达式</a></p><p>二、爬虫实战</p><p>1. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/990.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫实战一之爬取糗事百科段子</a></p><p>2. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/993.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫实战二之爬取百度贴吧帖子</a></p><p>3. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/2083.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫实战三之实现山东大学无线网络掉线自动重连</a></p><p>4. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/1001.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫实战四之抓取淘宝MM照片</a></p><p>5. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/1076.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫实战五之模拟登录淘宝并获取所有订单</a></p><p>6. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/1972.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫实战六之抓取爱问知识人问题并保存至数据库</a></p><p>7. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/997.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫实战七之计算大学本学期绩点</a></p><p>8. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/2852.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫实战八之利用Selenium抓取淘宝匿名旺旺</a></p><p>三、爬虫利器</p><p>1. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/2556.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫利器一之Requests库的用法</a></p><p>2. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/1319.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫利器二之Beautiful Soup的用法</a></p><p>3. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/2621.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫利器三之Xpath语法与lxml库的用法</a></p><p>4. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/2577.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫利器四之PhantomJS的用法</a></p><p>5. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/2599.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫利器五之Selenium的用法</a></p><p>6. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/2636.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫利器六之PyQuery的用法</a></p><p>四、爬虫进阶</p><p>1. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/2433.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫进阶一之爬虫框架概述</a></p><p>2. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/2443.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫进阶二之PySpider框架安装配置</a></p><p>3. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/912.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫进阶三之爬虫框架Scrapy安装配置</a></p><p>4. <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/2652.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫进阶四之PySpider的用法</a></p><p><br></p><p>我把我的所学所得总结并写了一本Python爬虫电子书，把我自己学习到的爬虫知识精华提炼了出来，这本电子书已经帮助上万位同学<b>从0开始学会了Python和爬虫</b>，如果你也感兴趣的话，点击下方链接可以免费获取。</p><a href=\"https://link.zhihu.com/?target=https%3A//t.1yb.co/7HXS\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">路人甲分享的：Python爬虫电子书和数据分析电子书</a><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/cb1988827eb53002ebb9d3ac9864d197_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"80\" class=\"origin_image zh-lightbox-thumb\" width=\"1000\" data-original=\"https://pic2.zhimg.com/cb1988827eb53002ebb9d3ac9864d197_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1000'%20height='80'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"80\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1000\" data-original=\"https://pic2.zhimg.com/cb1988827eb53002ebb9d3ac9864d197_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/cb1988827eb53002ebb9d3ac9864d197_720w.jpg?source=54b3c3a5\"></figure><p>第二（第一的姊妹篇）：<a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/column/details/why-bug.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫入门教程</a>（来源于博主：blog.csdn.net/column/details/why-bug.html）</p><p>Python版本：2.7</p><p>教程目录：</p><p><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/pleasecallmewhy/article/details/8922826\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[Python]网络爬虫（一）：抓取网页的含义和URL基本构成</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/pleasecallmewhy/article/details/8923067\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[Python]网络爬虫（二）：利用urllib2通过指定的URL抓取网页内容</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/pleasecallmewhy/article/details/8923725\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[Python]网络爬虫（三）：异常的处理和HTTP状态码的分类</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/pleasecallmewhy/article/details/8924889\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[Python]网络爬虫（四）：Opener与Handler的介绍和实例应用</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/pleasecallmewhy/article/details/8925978\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[Python]网络爬虫（五）：urllib2的使用细节与抓站技巧</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/pleasecallmewhy/article/details/8927832\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[Python]网络爬虫（六）：一个简单的百度贴吧的小爬虫</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/pleasecallmewhy/article/details/8929576\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[Python]网络爬虫（七）：Python中的正则表达式教程</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/pleasecallmewhy/article/details/8932310\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[Python]网络爬虫（八）：糗事百科的网络爬虫（v0.3）源码及解析(简化更新)</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/pleasecallmewhy/article/details/8934726\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[Python]网络爬虫（九）：百度贴吧的网络爬虫（v0.4）源码及解析</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/pleasecallmewhy/article/details/9305229\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[Python]网络爬虫（十）：一个爬虫的诞生全过程（以山东大学绩点运算为例）</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/pleasecallmewhy/article/details/19354723\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[Python]网络爬虫（11）：亮剑！爬虫框架小抓抓Scrapy闪亮登场！</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/pleasecallmewhy/article/details/19642329\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[Python]网络爬虫（12）：爬虫框架Scrapy的第一个爬虫示例入门教程</a></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/b0a1d270b45c17dd8c3e857d76bc0c47_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"80\" class=\"origin_image zh-lightbox-thumb\" width=\"1000\" data-original=\"https://pic1.zhimg.com/b0a1d270b45c17dd8c3e857d76bc0c47_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1000'%20height='80'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"80\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1000\" data-original=\"https://pic1.zhimg.com/b0a1d270b45c17dd8c3e857d76bc0c47_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/b0a1d270b45c17dd8c3e857d76bc0c47_720w.jpg?source=54b3c3a5\"></figure><p>第三：你已经看完上面（第一或者第二）的教程：再推荐知乎用户<a class=\"member_mention\" href=\"https://www.zhihu.com/people/59328831039fee3533cb44e99cd4efc4\" data-hash=\"59328831039fee3533cb44e99cd4efc4\" data-hovercard=\"p$b$59328831039fee3533cb44e99cd4efc4\">@陈唯源</a> 的实战练习博客 </p><p><a href=\"https://www.zhihu.com//link.zhihu.com/?target=http%3A//blog.csdn.net/cwyalpha/article/details/48110727\" class=\"internal\">Python爬虫学习记录（1）——Xiami全站播放数</a></p><p><a href=\"https://www.zhihu.com//link.zhihu.com/?target=http%3A//blog.csdn.net/cwyalpha/article/details/48110863\" class=\"internal\">Python爬虫学习记录（2）——LDA处理歌词</a></p><p><a href=\"https://www.zhihu.com//link.zhihu.com/?target=http%3A//www.datatang.com/data/43972\" class=\"internal\">百度音乐带标签，作曲，演唱者，类别的歌词数据</a></p><p><a href=\"https://www.zhihu.com//link.zhihu.com/?target=http%3A//blog.csdn.net/cwyalpha/article/details/48111041\" class=\"internal\">Python爬虫学习记录（4）——传说中的足彩倍投法。。好像也不是那么靠谱</a></p><p><a href=\"https://www.zhihu.com//link.zhihu.com/?target=http%3A//www.datatang.com/data/44171\" class=\"internal\">2011~2013.5全球所有足球比赛比分数据以及足彩各公司盘口</a></p><p><a href=\"https://www.zhihu.com//link.zhihu.com/?target=http%3A//blog.csdn.net/cwyalpha/article/details/48110941\" class=\"internal\">Python爬虫学习记录（3）——用Python获取虾米加心歌曲，并获取MP3下载地址</a></p><p><a href=\"https://www.zhihu.com//link.zhihu.com/?target=http%3A//blog.csdn.net/cwyalpha/article/details/48111101\" class=\"internal\">Python爬虫学习记录（5）——python mongodb + 爬虫 + web.py 的acfun视频排行榜</a> </p><p><br></p><p><a href=\"https://www.zhihu.com//link.zhihu.com/?target=http%3A//blog.csdn.net/cwyalpha/article/details/48111173\" class=\"internal\">Python爬虫学习记录（0）——Python 爬虫抓站 记录（虾米，百度，豆瓣，新浪微博）</a></p><p>第四：最后推荐知乎用户<a class=\"member_mention\" href=\"https://www.zhihu.com/people/9ce91cd5ba9301a43e7bb63496f2ec0f\" data-hash=\"9ce91cd5ba9301a43e7bb63496f2ec0f\" data-hovercard=\"p$b$9ce91cd5ba9301a43e7bb63496f2ec0f\">@gaga salamer</a> 的实战练习博客</p><p><a href=\"https://link.zhihu.com/?target=http%3A//aljun.me/post/17\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">爬虫教程（1）基础入门</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//aljun.me/post/18\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">爬虫教程（2）性能进阶 </a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//aljun.me/post/22\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">知乎用户信息爬虫（规模化爬取）</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//aljun.me/post/4\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">用scrapy爬取豆瓣电影新片榜</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//aljun.me/post/5\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">用scrapy对豆瓣top250页面爬取（多页面爬取）</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//aljun.me/post/6\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">用scrapy自动爬取下载图片</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//aljun.me/post/7\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">用scrapy自动下载石原sama的豆瓣影人图集(727张图片，自动下载）</a> </p><p>希望以上的教程可以帮助到大家。</p><hr><p>我把我的所学所得总结并写了一本Python爬虫电子书，把我自己学习到的爬虫知识精华提炼了出来，这本电子书已经帮助上万位同学<b>从0开始学会了Python和爬虫</b>，如果你也感兴趣的话，点击下方链接可以免费获取。</p><a href=\"https://link.zhihu.com/?target=https%3A//t.1yb.co/7HXS\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">路人甲分享的：Python爬虫电子书和数据分析电子书</a><p></p>", "Top2博士毕业，几乎不会编程，没写过python，是不是人生没有希望了?": "<p>众所周知，在21世纪，只要你不会Python，那么基本上等同于废人。要学会Python，必须通过自学+练习，如果你是通过上了Python培训班学习的，那也根本称不上学会。</p><p>刚才有个朋友问我x老师发生了什么事，我说怎么回事，他给了发了几张截图。</p><p>我一看，原来是昨天，有两个年轻人。三十来岁，一个读了土木，一个学了Java。他们说，诶…有一个说他在旅馆把腰给扭坏了，x老师你能不能教教我Python，诶…帮助治疗一下……我的腰椎。</p><p>我说可以。我说那些高校在机房里教的都是Java，C++，写死程序，不好用，他不服气。</p><p>诶……我说小朋友，你二十行Java来写我这个刚刚编译出的功能，他写不出。</p><p>他说你这也没用。</p><p>我说我这个有用，这是Python，传统编程是讲究面向对象的，四两拨千斤。两百多行Java代码，都比不过我这一个模块调用。</p><p>他非要和我试试♂，我说可以。诶……我一说完他啪一下就开始编程了，很快啊！</p><p>然后上来就是一个Web开发，吭，一个Socket类，多平台运行，我全部实现了啊！</p><p>实现了以后自然是传统编程的点到为止，类库已经调用在程序里但是还没运行，我笑一下准备退出。因为这时间，按照传统编程的点到为止他已经输了，如果我一点击运行，一下子就把他的二百行代码功能实现了，调用完第三方库，没有运行，他也承认，我的程序先比他跑出来。他不知道我可以定义第三方库，他承认我的功能比他的完善，啊！</p><p>我编完的时候没有运行，他突然帮我点了一下，我大意了啊，没有提前debug，诶…有个递归函数给我的机器…啊，栈溢出，但没关系啊！他也说，他截图也说了，两分多钟以后，当时宕机了，卡得不能动，我说停停。然后两分钟，两分多钟以后尾递归优化诶就好了！我说小伙子你不讲码德你不懂，他说x老师对不起…对不起，我不懂规矩。啊，我是……他说他是乱点的。他可不是乱点的啊，多线程跨平台开发，训练有素，后来他说他写过三四年C++，啊，看来是，有bear来！</p><p>这个年轻人不讲码德，来骗，来偷袭我这个三十多岁的程序员，这好吗，这不好！</p><p>我劝！这些年轻人耗子尾汁，好好反思，以后不要再犯这样的聪明，小聪明，啊……编程要以和为贵，要讲码德，不要搞窝里斗。</p><p>谢谢朋友们！</p>", "学 Python 都用来干嘛的？": "<h2>可以拿来了解女朋友情绪变化，顺道自动回复。</h2><p>还能一键扣图，让开淘宝店的设计师下岗，在一旁痛哭流涕……</p><p><br></p><blockquote><b>提示：关注微信公众号 【七月在线实验室】，让自己变得更强！在公众号内发“ZH”。即可获得BAT面试题100道和课程代金劵等精美好礼哦！</b></blockquote><p><br></p><h2>一</h2><blockquote>虽然程序员不会有女朋友，但是这个也可以用在同性朋友身上哦。</blockquote><p>再也不用担心工作忙，没法经常和她/他/它聊天了。</p><p>可以实时知道女友的情感情绪指数，再也不用担心女友莫名其妙生气了。</p><p>还能顺道教女朋友学英语（女朋友一定很惊喜）</p><p>为了方便快速开发，我们使用python中的wxpy模块完成微信的基本操作。</p><p>首先，我们设置一个config.ini配置文件，并从这个配置文件开始读取信息。这些参数一看就懂，所以无需多言。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># 读取配置文件\ncf = configparser.ConfigParser()\ncf.read(\"./config.ini\",encoding='UTF-8')\n\n# 设置女友的微信名称，记住，不是微信ID也不是微信备注\n# 你女友的微信名称，记住，不是微信ID也不是微信备注\nmy_lady_wechat_name = cf.get(\"configuration\", \"my_lady_wechat_name\")\n\n# 设置早上起床时间，中午吃饭时间，下午吃饭时间，晚上睡觉时间\nsay_good_morning = cf.get(\"configuration\", \"say_good_morning\")\nsay_good_lunch = cf.get(\"configuration\", \"say_good_lunch\")\nsay_good_dinner = cf.get(\"configuration\", \"say_good_dinner\")\nsay_good_dream = cf.get(\"configuration\", \"say_good_dream\")\n\n# 设置女友生日信息\n# 几月，注意补全数字，为两位数，比如6月必须写成06\nbirthday_month = cf.get(\"configuration\", \"birthday_month\")\n# 几号，注意补全数字，为两位数，比如6号必须写成08\nbirthday_day = cf.get(\"configuration\", \"birthday_day\")\n\n# 读取早上起床时间，中午吃饭时间，下午吃饭时间，晚上睡觉时间的随机提示语\n# 一般这里的代码不要改动，需要增加提示语可以自己打开对应的文件修改\n#早上起床问候语列表，数据来源于新浪微博\nstr_list_good_morning = ''\nwith open(\"./remind_sentence/sentence_good_morning.txt\", \"r\",encoding='UTF-8') as f:\n    str_list_good_morning = f.readlines()\nprint(str_list_good_morning)\n\n#中午吃饭问候语列表，数据来源于新浪微博\nstr_list_good_lunch = ''\nwith open(\"./remind_sentence/sentence_good_lunch.txt\", \"r\",encoding='UTF-8') as f:\n    str_list_good_lunch = f.readlines()\nprint(str_list_good_lunch)\n\n#晚上吃饭问候语列表，数据来源于新浪微博\nstr_list_good_dinner = ''\nwith open(\"./remind_sentence/sentence_good_dinner.txt\", \"r\",encoding='UTF-8') as f:\n    str_list_good_dinner = f.readlines()\nprint(str_list_good_dinner)\n\n#晚上睡觉问候语列表，数据来源于新浪微博\nstr_list_good_dream = ''\nwith open(\"./remind_sentence/sentence_good_dream.txt\", \"r\",encoding='UTF-8') as f:\n    str_list_good_dream = f.readlines()\nprint(str_list_good_dream)\n\n# 设置晚上睡觉问候语是否在原来的基础上再加上每日学英语精句\n# False表示否 True表示是\nif((cf.get(\"configuration\", \"flag_learn_english\")) == '1'):\n    flag_learn_english = True\nelse:\n    flag_learn_english = False\nprint(flag_learn_english)\n# 设置所有问候语结束是否加上表情符号\n# False表示否 True表示是\nstr_emoj = \"(•‾̑⌣‾̑•)✧˖°----(๑´ `๑)----(๑¯ิε ¯ิ๑)----(๑•́ ₃ •̀๑)----( ∙̆ .̯ ∙̆ )----(๑˘ ˘๑)----(●′ω`●)----(●･̆⍛･̆●)----ಥ_ಥ----_(:qゝ∠)----(´；ω；`)----( `)3')----Σ((( つ•̀ω•́)つ----╰(*´︶`*)╯----( ´´ิ∀´ิ` )----(´∩｀。)----( ื▿ ื)----(｡ŏ_ŏ)----( •ิ _ •ิ )----ヽ(*΄◞ิ౪◟ิ‵ *)----( ˘ ³˘)----(; ´_ゝ`)----(*ˉ﹃ˉ)----(◍'౪`◍)ﾉﾞ----(｡◝‿◜｡)----(ಠ .̫.̫ ಠ)----(´◞⊖◟`)----(。≖ˇェˇ≖｡)----(◕ܫ◕)----(｀◕‸◕´+)----(▼ _ ▼)----( ◉ืൠ◉ื)----ㄟ(◑‿◐ )ㄏ----(●'◡'●)ﾉ♥----(｡◕ˇ∀ˇ◕）----( ◔   ◔ )----( ´◔ ‸◔`)----(☍﹏⁰)----(♥◠‿◠)----ლ(╹◡╹ლ )----(๑꒪◞౪◟꒪๑)\"\nstr_list_emoj = str_emoj.split('----')\nif ((cf.get(\"configuration\", \"flag_wx_emoj\")) == '1'):\n    flag_wx_emoj = True\nelse:\n    flag_wx_emoj = False\nprint(str_list_emoj)\n\n# 设置节日祝福语\n# 情人节祝福语\nstr_Valentine = cf.get(\"configuration\", \"str_Valentine\")\nprint(str_Valentine)\n\n# 三八妇女节祝福语\nstr_Women = cf.get(\"configuration\", \"str_Women\")\nprint(str_Women)\n\n# 平安夜祝福语\nstr_Christmas_Eve = cf.get(\"configuration\", \"str_Christmas_Eve\")\nprint(str_Christmas_Eve)\n# 圣诞节祝福语\nstr_Christmas = cf.get(\"configuration\", \"str_Christmas\")\nprint(str_Christmas)\n\n# 她生日的时候的祝福语\nstr_birthday = cf.get(\"configuration\", \"str_birthday\")\nprint(str_birthday)\n</code></pre></div><p>设置完相关参数以后，我们再来学习一下，如何每天教女友学英语：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># 获取每日励志精句\ndef get_message():\n    r = requests.get(\"http://open.iciba.com/dsapi/\")\n    note = r.json()['note']\n    content = r.json()['content']\n    return note,content\n</code></pre></div><p>如果你愿意，可以在上面对时间的判断中，加入一些其他你想要的，这样你女友就更开心啦！后期如果有时间，我将会加上以上节日问候功能。</p><p>接着，开启微信机器人，为了程序的健壮性，自动判断一下操作系统，根据不同操作系统执行不同指令：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># 启动微信机器人，自动根据操作系统执行不同的指令\n# windows系统或macOS Sierra系统使用bot = Bot()\n# linux系统或macOS Terminal系统使用bot = Bot(console_qr=2)\nif('Windows' in platform.system()):\n    # Windows\n    bot = Bot()\nelif('Darwin' in platform.system()):\n    # MacOSX\n    bot = Bot()\nelif('Linux' in platform.system()):\n    # Linux\n    bot = Bot(console_qr=2,cache_path=True)\nelse:\n    # 自行确定\n    print(\"无法识别你的操作系统类型，请自己设置\")\n</code></pre></div><p>只有每天的问候和节日问候是仅仅不够的，我们必须时刻知道她的情绪指数，这里可以使用snowNlp或者jieba来做分析，但是为了能够在打包成exe可执行文件时使得程序尽可能小，我们采取直接调用接口的方式来做。代码如下：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># 接收女友消息监听器\n# 女友微信名\nmy_girl_friend = bot.friends().search(my_lady_wechat_name)[0]\n# chats=my_girl_friend 表示接收消息的对象，也就是女友\n# except_self=False 表示同时也接收自己发的消息，不需要接收自己消息的可以去掉\n@bot.register(chats=my_girl_friend, except_self=False)\ndef print_others(msg):\n    # 输出聊天内容\n    print(msg.text)\n\n    # 做极其简单的情感分析\n    # 结果仅供参考，请勿完全相信\n    postData = {'data':msg.text}\n    response = post('https://bosonnlp.com/analysis/sentiment?analysisType=',data=postData)\n    data = response.text\n\n    # 情感评分指数(越接近1表示心情越好，越接近0表示心情越差)\n    now_mod_rank = (data.split(',')[0]).replace('[[','')\n    print(\"来自女友的消息:%s\\n当前情感得分:%s\\n越接近1表示心情越好，越接近0表示心情越差，情感结果仅供参考，请勿完全相信！\\n\\n\" % (msg.text, now_mod_rank))\n\n    # 发送信息到文件传输助手\n    mood_message = u\"来自女友的消息:\" + msg.text + \"\\n当前情感得分:\" + now_mod_rank + \"\\n越接近1表示心情越好，越接近0表示心情越差，情感结果仅供参考，请勿完全相信！\\n\\n\"\n    bot.file_helper.send(mood_message)\n</code></pre></div><p>教完女友学英语后，开始把我们的关心语发给她。这里涉及到wxpy模块的相关操作，很简单，看我的例子就会了：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># 发送消息给她\ndef send_message(your_message):\n    try:\n        # 对方的微信名称\n        my_friend = bot.friends().search(my_lady_wechat_name)[0]\n\n        # 发送消息给对方\n        my_friend.send(your_message)\n    except:\n\n        # 出问题时，发送信息到文件传输助手\n        bot.file_helper.send(u\"守护女友出问题了，赶紧去看看咋回事~\")\n</code></pre></div><p>最后，就是如何每天定时发关心语给女友的问题了。</p><p>首先来个while循环，365天无限关心</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># 来个死循环，24小时关心她\n    while(True):\n\n        # 提示\n        print(\"守护中，时间:%s\"% time.ctime())\n\n        # 每天定时问候，早上起床，中午吃饭，晚上吃饭，晚上睡觉\n        # 获取时间，只获取时和分，对应的位置为倒数第13位到倒数第8位\n        now_time = time.ctime()[-13:-8]\n        if (now_time == say_good_morning):\n            # 随机取一句问候语\n            message = choice(str_list_good_morning)\n\n            # 是否加上随机表情\n            if(flag_wx_emoj):\n                message = message + choice(str_list_emoj)\n\n            send_message(message)\n            print(\"提醒女友早上起床:%s\" % time.ctime())\n\n        …………这下面还有很多代码，我就不列出来了…………\n   # 延时60秒\n   time.sleep(60)\n</code></pre></div><p>最后，输入以下代码开始守护女友模式吧~</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># 开始守护女友\n    t = Thread(target=start_care, name='start_care')\n    t.start()\n</code></pre></div><h2><b>使用教程</b></h2><p><b>pip安装下列包：</b></p><ul><li>[x] pip install wxpy</li><li>[x] pip install requests</li></ul><p><b>设置以下内容：</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>[configuration]\n\n# 设置女友的微信名称，记住，不是微信ID也不是微信备注\nmy_lady_wechat_name = 小强子\n\n# 设置女友生日信息\n# 若某一项月份或者日期不想设置，请输入99，不能留空\n# 几月，注意补全数字，为两位数，比如6月必须写成06\nbirthday_month = 03\n# 几号，注意补全数字，为两位数，比如6号必须写成08\nbirthday_day = 18\n\n# 设置早上起床时间，中午吃饭时间，下午吃饭时间，晚上睡觉时间\n# 若某一项时间不想设置，请输入99:00，不能留空\nsay_good_morning = 03:09\nsay_good_lunch = 03:10\nsay_good_dinner = 03:11\nsay_good_dream = 03:12\n\n# 设置晚上睡觉问候语是否在原来的基础上再加上每日学英语精句\n# 1表示是，0表示否\nflag_learn_english = 1\n\n# 设置所有问候语结束是否加上表情符号\n# 1表示是，0表示否\nflag_wx_emoj = 1\n\n# 设置节日祝福语\n# 情人节祝福语\nstr_Valentine = 亲爱的，情人节快乐！我想和你一起分享生命中的每一天，直到永远。\n\n# 三八妇女节祝福语\nstr_Women = 嘿，女神节到了，祝我的女神开心快乐！你每天都是那么好看^_^\n\n# 平安夜祝福语\nstr_Christmas_Eve = 宝贝，平安夜快乐，你吃苹果了吗？n(*≧▽≦*)n\n\n# 圣诞节祝福语\nstr_Christmas = 小仙女，圣诞节快乐哦！（づ￣3￣）づ╭❤～\n\n# 她生日的时候的祝福语\nstr_birthday = 亲爱的，生日快乐，我已经给你准备好了礼物哦，明天你就能看到啦！(*@ο@*) 哇～\n</code></pre></div><h2><b>演示图片</b></h2><figure data-size=\"small\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-261107441d6360c6d6613a6eeb5909dd_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1080\" data-rawheight=\"1730\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-261107441d6360c6d6613a6eeb5909dd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='1730'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1080\" data-rawheight=\"1730\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-261107441d6360c6d6613a6eeb5909dd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-261107441d6360c6d6613a6eeb5909dd_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"small\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-d024629ab74c8f0bed5a5d1b03521b8e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1080\" data-rawheight=\"1921\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-d024629ab74c8f0bed5a5d1b03521b8e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='1921'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1080\" data-rawheight=\"1921\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-d024629ab74c8f0bed5a5d1b03521b8e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-d024629ab74c8f0bed5a5d1b03521b8e_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"small\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1e80d9ee17243edd31179ea07b623c43_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"677\" data-rawheight=\"443\" class=\"origin_image zh-lightbox-thumb\" width=\"677\" data-original=\"https://pic1.zhimg.com/v2-1e80d9ee17243edd31179ea07b623c43_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='677'%20height='443'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"677\" data-rawheight=\"443\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"677\" data-original=\"https://pic1.zhimg.com/v2-1e80d9ee17243edd31179ea07b623c43_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1e80d9ee17243edd31179ea07b623c43_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"small\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-529ae3495da2e9cfee7d6740a6a23401_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"877\" data-rawheight=\"721\" class=\"origin_image zh-lightbox-thumb\" width=\"877\" data-original=\"https://pic1.zhimg.com/v2-529ae3495da2e9cfee7d6740a6a23401_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='877'%20height='721'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"877\" data-rawheight=\"721\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"877\" data-original=\"https://pic1.zhimg.com/v2-529ae3495da2e9cfee7d6740a6a23401_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-529ae3495da2e9cfee7d6740a6a23401_720w.jpg?source=54b3c3a5\"></figure><blockquote>原作者：云外孤岛 <a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/cloudbird/p/10534658.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">cnblogs.com/cloudbird/p</span><span class=\"invisible\">/10534658.html</span><span class=\"ellipsis\"></span></a></blockquote><p>至于没有女朋友的……</p><p>要不考虑一下它</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-fc43db93b5cc0608867898bb2778376f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"327\" data-rawheight=\"350\" class=\"content_image\" width=\"327\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='327'%20height='350'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"327\" data-rawheight=\"350\" class=\"content_image lazy\" width=\"327\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-fc43db93b5cc0608867898bb2778376f_720w.jpg?source=54b3c3a5\"></figure><h2>二</h2><blockquote>本段转载自：高级农民工（ID：Mocun6）</blockquote><p>这张逼死淘宝专业抠图店家的照片，用3行Python代码，花5秒就能超高精度抠图。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-93597216b728630ae6f6ebc9213f1d4d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-aef16cd8e85b0e5c2166c4cfac557c17_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-93597216b728630ae6f6ebc9213f1d4d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='608'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-aef16cd8e85b0e5c2166c4cfac557c17_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-93597216b728630ae6f6ebc9213f1d4d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-93597216b728630ae6f6ebc9213f1d4d_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-80dc9df62c9ea9eb747ee8a4df81e731_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-13989898c578ae01f04ed41b003c641d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-80dc9df62c9ea9eb747ee8a4df81e731_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='608'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-13989898c578ae01f04ed41b003c641d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-80dc9df62c9ea9eb747ee8a4df81e731_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-80dc9df62c9ea9eb747ee8a4df81e731_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-09cee6122d5771cf0bc7d9792b6c80be_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"483\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c8acac1c73567207a5fa382ce17fafab_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-09cee6122d5771cf0bc7d9792b6c80be_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='483'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"483\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c8acac1c73567207a5fa382ce17fafab_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-09cee6122d5771cf0bc7d9792b6c80be_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-09cee6122d5771cf0bc7d9792b6c80be_720w.jpg?source=54b3c3a5\"></figure><p>这里的 API 接口来源于 Remove.bg 网站，一个邮箱账号可以申请一个免费接口，可处理 50 张照片，如果想处理更多或者生成高清照片，需要买套餐，算下来价格大概是 <b>1 元一张</b>。</p><p>上淘宝搜索「<b>证件照换底色</b>」的店铺，发现多数店铺收费是 <b>5 元</b>，觉得利用好价格差空间，应该有商机。</p><p>接着比较感兴趣淘宝店家是怎么抠图的，抠图的质量如何，于是选择了排名前两位的店家来做测试，跟掌柜开始了一段「<b>套路</b>」聊天。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-92136ca60c394e9d44960e6558ca2eed_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"638\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b8ef8e005c3d4e2db5bd429526278211_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-92136ca60c394e9d44960e6558ca2eed_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='638'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"638\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b8ef8e005c3d4e2db5bd429526278211_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-92136ca60c394e9d44960e6558ca2eed_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-92136ca60c394e9d44960e6558ca2eed_720w.jpg?source=54b3c3a5\"></figure><p>先找了第一家店主，店主上来就说先发照片，抠图满意再付款，于是就发了文章开头那张比较难抠的一张，想看看他们水平怎么样：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-eb5108a0294e665a61df8086955e172c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"523\" data-rawheight=\"2754\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-eda314d98428dd84198a6f3ed0820a32_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"523\" data-original=\"https://pic4.zhimg.com/v2-eb5108a0294e665a61df8086955e172c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='523'%20height='2754'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"523\" data-rawheight=\"2754\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-eda314d98428dd84198a6f3ed0820a32_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"523\" data-original=\"https://pic4.zhimg.com/v2-eb5108a0294e665a61df8086955e172c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-eb5108a0294e665a61df8086955e172c_720w.jpg?source=54b3c3a5\"></figure><p>没想到店主这一抠就是二十分钟。。。</p><p>满心期待地打开图片一看，头发丝抠的不好，照片色彩也变了：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-4b63c7daf07aa9b760d9da70bfbf7127_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-ef610a3d11b51bef2ddcdaf395f3ac49_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-4b63c7daf07aa9b760d9da70bfbf7127_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='608'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-ef610a3d11b51bef2ddcdaf395f3ac49_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-4b63c7daf07aa9b760d9da70bfbf7127_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-4b63c7daf07aa9b760d9da70bfbf7127_720w.jpg?source=54b3c3a5\"></figure><p>跟第二家店掌柜聊了后，也是花了 16 分钟弄好，比第一家稍好一点：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a695e18788f30c7d9f86883d145c479a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b3b4b351d5342ae2b3c989a22121f7c2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-a695e18788f30c7d9f86883d145c479a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='608'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b3b4b351d5342ae2b3c989a22121f7c2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-a695e18788f30c7d9f86883d145c479a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a695e18788f30c7d9f86883d145c479a_720w.jpg?source=54b3c3a5\"></figure><p>把三幅图一对比，从头发丝抠的效果和照片的色彩还原度就可以看出还是 AI 效果最好，而且只需要 5 秒钟。</p><p>于是，大致可以总结<b>这款 AI 工具从效果和效率上基本碾压手动 PS 的淘宝店家。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ef1e13253d65ca4e4bd351c184df93fc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-b2330f7f9fd0cb9960eb80aa58267b17_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-ef1e13253d65ca4e4bd351c184df93fc_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='608'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-b2330f7f9fd0cb9960eb80aa58267b17_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-ef1e13253d65ca4e4bd351c184df93fc_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ef1e13253d65ca4e4bd351c184df93fc_720w.jpg?source=54b3c3a5\"></figure><p>心疼掌柜，花了 20 分钟还没有拿下我这一单……</p><p>这么难抠的图 AI 工具效果都好，那简单的证件照应该更没问题，基本确定有商机。</p><p><br></p><p><br></p><hr><p><br></p><p><br></p><p>接下来用 Python 把上面的代码进行完善打包成 exe 文件执行。</p><p>轻松实现这样的功能：<b>只需要简单敲几下键盘，就可以随意批量更换照片的背景色</b>（常见的白、蓝、红三种颜色），<b>然后秒换背景出图</b>。</p><p>效果如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-26b27a75eb55c868dc893e411d6a8f31_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"639\" data-rawheight=\"359\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-26b27a75eb55c868dc893e411d6a8f31_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"639\" data-original=\"https://pic2.zhimg.com/v2-26b27a75eb55c868dc893e411d6a8f31_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='639'%20height='359'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"639\" data-rawheight=\"359\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-26b27a75eb55c868dc893e411d6a8f31_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"639\" data-original=\"https://pic2.zhimg.com/v2-26b27a75eb55c868dc893e411d6a8f31_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-26b27a75eb55c868dc893e411d6a8f31_720w.gif?source=54b3c3a5\"></figure><p>具体实现很简单，第一步输入 API，第二步输入图片所在文件夹，接着程序就会先抠图，生成带透明背景的 PNG 格式图形。  </p><p>接下来第三步利用 PIL 库来设置图片的背景颜色，键入一个字母就可以秒生成对应的背景色证件照。</p><ul><li>b：blue 蓝色</li><li>r：red 红色</li><li>w：white 白色</li></ul><p>这样就做成了一个简单的证件照更换工具，拿去开个淘宝店和抠图的设计师抢饭吃没有压力……</p><p>估计打死店主也都想不到让自己下岗的是几行代码……效率还是自己的N倍……</p><p>此工具可关注公众号“七月在线实验室”后，发“证件照”获取。</p><p><br></p><h2><b>转载自公众号“七月在线实验室”</b></h2><p><b>↓</b>↓↓</p><p><b>公号后台回复“666”。即可免费获得 七月在线【面试求职 第四期】课程+最新升级版《名企AI面试100题》电子书。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-6f13a2c6b4158fc14ee50e8299b62bde_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1192\" class=\"origin_image zh-lightbox-thumb\" width=\"1000\" data-original=\"https://pic1.zhimg.com/v2-6f13a2c6b4158fc14ee50e8299b62bde_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1000'%20height='1192'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1192\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1000\" data-original=\"https://pic1.zhimg.com/v2-6f13a2c6b4158fc14ee50e8299b62bde_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-6f13a2c6b4158fc14ee50e8299b62bde_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-918d9244cb11362b27bce59a32c3466e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"4160\" class=\"origin_image zh-lightbox-thumb\" width=\"750\" data-original=\"https://pic2.zhimg.com/v2-918d9244cb11362b27bce59a32c3466e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='750'%20height='4160'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"4160\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"750\" data-original=\"https://pic2.zhimg.com/v2-918d9244cb11362b27bce59a32c3466e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-918d9244cb11362b27bce59a32c3466e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>《名企AI⾯试100题》涵盖<b>计算机语⾔基础、算法和⼤数据、机器学习、深度学习、应⽤⽅向 (CV NLP 推荐 ⾦融风控)等五⼤章节</b>，每⼀段代码、每⼀道题⽬的解析都经过了反复审查或review。</p><p><b>部分内容展示</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-0d61ae9e352e05e24db7631ed6389551_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"538\" data-rawheight=\"765\" class=\"origin_image zh-lightbox-thumb\" width=\"538\" data-original=\"https://pic1.zhimg.com/v2-0d61ae9e352e05e24db7631ed6389551_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='538'%20height='765'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"538\" data-rawheight=\"765\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"538\" data-original=\"https://pic1.zhimg.com/v2-0d61ae9e352e05e24db7631ed6389551_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-0d61ae9e352e05e24db7631ed6389551_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-310b312d4c8ab605a5e32c92cf6c6d45_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"759\" class=\"origin_image zh-lightbox-thumb\" width=\"534\" data-original=\"https://pic2.zhimg.com/v2-310b312d4c8ab605a5e32c92cf6c6d45_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='534'%20height='759'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"759\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"534\" data-original=\"https://pic2.zhimg.com/v2-310b312d4c8ab605a5e32c92cf6c6d45_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-310b312d4c8ab605a5e32c92cf6c6d45_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-883648bbf11b54cdb98069c061aab4eb_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"537\" data-rawheight=\"765\" class=\"origin_image zh-lightbox-thumb\" width=\"537\" data-original=\"https://pic1.zhimg.com/v2-883648bbf11b54cdb98069c061aab4eb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='537'%20height='765'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"537\" data-rawheight=\"765\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"537\" data-original=\"https://pic1.zhimg.com/v2-883648bbf11b54cdb98069c061aab4eb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-883648bbf11b54cdb98069c061aab4eb_720w.jpg?source=54b3c3a5\"><figcaption>（点击图片可查看大图）</figcaption></figure><p></p>", "初学 Python 者自学 Anaconda 的正确姿势是什么？": "<p>事实上Anaconda 和 Jupyter notebook已成为数据分析的标准环境。</p><p>简单来说，Anaconda是包管理器和环境管理器，Jupyter notebook 可以将数据分析的代码、图像和文档全部组合到一个web文档中。</p><p><br></p><p>接下来我详细介绍下Anaconda，并在最后给出Jupyter notebook：</p><p><b>1.Anaconda是什么？</b></p><p><b>2.如何安装？</b></p><p><b>3. 如何管理包？</b></p><p><b>4.Jupyter notebook如何快速上手？</b></p><p><br></p><p><b>不过在开始前我需要强调下，下面的步骤你要亲自跟着敲一遍并在自己的电脑上实践。虽然下面你会遇到很多命令，给了谁都记不住的。但是别怕，也别中途放弃，因为你没必要记住命令，因为当你在后面学习数据分析用的多了，自然就记住了。</b></p><p><b>记不住也没关系，学会在哪查找就可以了。你只需要跟着上面步骤操作下，并理解了每一步是干什么的就可以了。后面遇到要做的事情，忘记了回头查这个文档就可以了。</b></p><p><b>刚开始学习的过程就像下面这个图，只要中途不放弃，自己实际操作一遍，我保证你可以熟练上手。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-17d0d8c61591b46f7d0e704bcb4ce9e8_720w.gif?source=54b3c3a5\" data-rawwidth=\"284\" data-rawheight=\"344\" data-size=\"normal\" data-caption=\"\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-17d0d8c61591b46f7d0e704bcb4ce9e8_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"284\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='284'%20height='344'&gt;&lt;/svg&gt;\" data-rawwidth=\"284\" data-rawheight=\"344\" data-size=\"normal\" data-caption=\"\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-17d0d8c61591b46f7d0e704bcb4ce9e8_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"284\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-17d0d8c61591b46f7d0e704bcb4ce9e8_720w.gif?source=54b3c3a5\"></figure><blockquote><b>1.Anaconda是什么？</b></blockquote><p>Anaconda在英文中是“蟒蛇”，麻辣鸡（Nicki Minaj妮琪·米娜）有首歌就叫《Anaconda》，表示像蟒蛇一样性感妖娆的身体。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-152adf3e7a247a612f4b08ce5786f439_720w.jpg?source=54b3c3a5\" data-rawwidth=\"757\" data-rawheight=\"592\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"757\" data-original=\"https://pic2.zhimg.com/v2-152adf3e7a247a612f4b08ce5786f439_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='757'%20height='592'&gt;&lt;/svg&gt;\" data-rawwidth=\"757\" data-rawheight=\"592\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"757\" data-original=\"https://pic2.zhimg.com/v2-152adf3e7a247a612f4b08ce5786f439_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-152adf3e7a247a612f4b08ce5786f439_720w.jpg?source=54b3c3a5\"></figure><p>所有你看下面Anaconda的图标就像一个收尾互相咬住的“蟒蛇”。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-3e35b424d5820055f7b3674c1b5fe78b_720w.jpg?source=54b3c3a5\" data-rawwidth=\"615\" data-rawheight=\"290\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"615\" data-original=\"https://pic4.zhimg.com/v2-3e35b424d5820055f7b3674c1b5fe78b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='615'%20height='290'&gt;&lt;/svg&gt;\" data-rawwidth=\"615\" data-rawheight=\"290\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"615\" data-original=\"https://pic4.zhimg.com/v2-3e35b424d5820055f7b3674c1b5fe78b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-3e35b424d5820055f7b3674c1b5fe78b_720w.jpg?source=54b3c3a5\"></figure><p><b>你可能已经安装了 Python，那么为什么还需要 Anaconda？有以下3个原因：</b></p><p>1）Anaconda 附带了一大批常用数据科学包，它附带了 conda、Python 和 150 多个科学包及其依赖项。因此你可以立即开始处理数据。</p><p>2）管理包</p><p>Anaconda 是在 conda（一个包管理器和环境管理器）上发展出来的。</p><p>在数据分析中，你会用到很多第三方的包，而conda（包管理器）可以很好的帮助你在计算机上安装和管理这些包，包括安装、卸载和更新包。</p><p>3）管理环境</p><p>为什么需要管理环境呢？</p><p>比如你在A项目中用了 Python 2，而新的项目B老大要求使用Python 3，而同时安装两个Python版本可能会造成许多混乱和错误。这时候 conda就可以帮助你为不同的项目建立不同的运行环境。</p><p><br></p><p>还有很多项目使用的包版本不同，比如不同的pandas版本，不可能同时安装两个 Numpy 版本，你要做的应该是，为每个 Numpy 版本创建一个环境，然后项目的对应环境中工作。这时候conda就可以帮你做到。</p><p><br></p><blockquote><b>2. 如何安装Anaconda？</b></blockquote><p>Anaconda 可用于多个平台（ Windows、Mac OS X 和 Linux）。你可以在下面地址上找到安装程序和安装说明。根据你的操作系统是32位还是64位选择对应的版本下载。</p><p>官网地址：<a href=\"https://link.zhihu.com/?target=https%3A//docs.anaconda.com/anaconda/install/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">docs.anaconda.com/anaco</span><span class=\"invisible\">nda/install/</span><span class=\"ellipsis\"></span></a></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-c7bd6ce9fc16bdf9310f40e79930facd_720w.jpg?source=54b3c3a5\" data-rawwidth=\"672\" data-rawheight=\"354\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-df2f737433f9c8cd226fdd2caef80c79_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"672\" data-original=\"https://pic4.zhimg.com/v2-c7bd6ce9fc16bdf9310f40e79930facd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='672'%20height='354'&gt;&lt;/svg&gt;\" data-rawwidth=\"672\" data-rawheight=\"354\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-df2f737433f9c8cd226fdd2caef80c79_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"672\" data-original=\"https://pic4.zhimg.com/v2-c7bd6ce9fc16bdf9310f40e79930facd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-c7bd6ce9fc16bdf9310f40e79930facd_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>如果官网地址网速太慢无法下载，可以从下面路径中找到安装包（网盘链接：<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1bwhXmhzQ9XBpqomTKKIgLw\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/1bwhXmh</span><span class=\"invisible\">zQ9XBpqomTKKIgLw</span><span class=\"ellipsis\"></span></a> 提取码：3z6q）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-78c97adeb151bf201f235e9a31bb646c_720w.jpg?source=54b3c3a5\" data-rawwidth=\"391\" data-rawheight=\"209\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-03defb6cd454ee3732ed28a952267c30_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"391\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='391'%20height='209'&gt;&lt;/svg&gt;\" data-rawwidth=\"391\" data-rawheight=\"209\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-03defb6cd454ee3732ed28a952267c30_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"391\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-78c97adeb151bf201f235e9a31bb646c_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-fe529eb1026b4828fc441b3efeb8db8f_720w.jpg?source=54b3c3a5\" data-rawwidth=\"618\" data-rawheight=\"169\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"618\" data-original=\"https://pic2.zhimg.com/v2-fe529eb1026b4828fc441b3efeb8db8f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='618'%20height='169'&gt;&lt;/svg&gt;\" data-rawwidth=\"618\" data-rawheight=\"169\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"618\" data-original=\"https://pic2.zhimg.com/v2-fe529eb1026b4828fc441b3efeb8db8f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-fe529eb1026b4828fc441b3efeb8db8f_720w.jpg?source=54b3c3a5\"></figure><p>Anaconda 的下载文件比较大（约 500 MB），因为它附带了 Python 中最常用的数据科学包。</p><p>如果计算机上已经安装了 Python，安装不会对你有任何影响。实际上，脚本和程序使用的默认 Python 是 Anaconda 附带的 Python，<b>所以安装完Anaconda已经自带安装好了Python，不需要你再安装Python了。</b></p><p><b>注意：如果你是windows 10系统，注意在安装Anaconda软件的时候，右击安装软件→选择以管理员的身份运行。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e9596c4ec59191f7531fd6ce55eeb1bb_720w.jpg?source=54b3c3a5\" data-rawwidth=\"542\" data-rawheight=\"542\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"542\" data-original=\"https://pic4.zhimg.com/v2-e9596c4ec59191f7531fd6ce55eeb1bb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='542'%20height='542'&gt;&lt;/svg&gt;\" data-rawwidth=\"542\" data-rawheight=\"542\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"542\" data-original=\"https://pic4.zhimg.com/v2-e9596c4ec59191f7531fd6ce55eeb1bb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e9596c4ec59191f7531fd6ce55eeb1bb_720w.jpg?source=54b3c3a5\"></figure><p><br></p><blockquote><b>3.如何管理包？</b></blockquote><p>安装了 Anaconda 之后，就可以很方便的管理包了（安装，卸载，更新）。</p><p>按下图点击菜单栏，打开Anaconda Navigator</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-b0b7939aeef7f34d16208eec1d5c3334_720w.jpg?source=54b3c3a5\" data-rawwidth=\"354\" data-rawheight=\"370\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-e981379c8dfc838f8e84601dd9ee9d05_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"354\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='354'%20height='370'&gt;&lt;/svg&gt;\" data-rawwidth=\"354\" data-rawheight=\"370\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-e981379c8dfc838f8e84601dd9ee9d05_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"354\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-b0b7939aeef7f34d16208eec1d5c3334_720w.jpg?source=54b3c3a5\"></figure><p>然后在Anaconda Navigator中按下图操作</p><p><b>1）列出已安装的包</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-28fd11333e1d79099549d2e70f176004_720w.jpg?source=54b3c3a5\" data-rawwidth=\"732\" data-rawheight=\"458\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-85791be0506f3f6e3e991c4acf4e8f72_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"732\" data-original=\"https://pic2.zhimg.com/v2-28fd11333e1d79099549d2e70f176004_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='732'%20height='458'&gt;&lt;/svg&gt;\" data-rawwidth=\"732\" data-rawheight=\"458\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-85791be0506f3f6e3e991c4acf4e8f72_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"732\" data-original=\"https://pic2.zhimg.com/v2-28fd11333e1d79099549d2e70f176004_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-28fd11333e1d79099549d2e70f176004_720w.jpg?source=54b3c3a5\"></figure><p><b>2）安装或者更新包</b></p><p>下图中第5步，“apply”表示安装这个包，‘clear’表示删除已经安装的包。</p><p>如果没有“apply” 这个按钮，表示这个包已经安装过了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e8e2e9bcafb98c5165c991cde451fc97_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1364\" data-rawheight=\"730\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-833702b616964d2f7bcdd7a636c058b0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1364\" data-original=\"https://pic4.zhimg.com/v2-e8e2e9bcafb98c5165c991cde451fc97_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1364'%20height='730'&gt;&lt;/svg&gt;\" data-rawwidth=\"1364\" data-rawheight=\"730\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-833702b616964d2f7bcdd7a636c058b0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1364\" data-original=\"https://pic4.zhimg.com/v2-e8e2e9bcafb98c5165c991cde451fc97_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e8e2e9bcafb98c5165c991cde451fc97_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>3）如果遇到需要输入conda命令的，可以按下图打开conda的命令端，然后输入命令</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a59e65f85eea9aa2062c984513cfc653_720w.jpg?source=54b3c3a5\" data-rawwidth=\"686\" data-rawheight=\"406\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-710f3b438b21c9db1f7e412824bebcdb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"686\" data-original=\"https://pic2.zhimg.com/v2-a59e65f85eea9aa2062c984513cfc653_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='686'%20height='406'&gt;&lt;/svg&gt;\" data-rawwidth=\"686\" data-rawheight=\"406\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-710f3b438b21c9db1f7e412824bebcdb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"686\" data-original=\"https://pic2.zhimg.com/v2-a59e65f85eea9aa2062c984513cfc653_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a59e65f85eea9aa2062c984513cfc653_720w.jpg?source=54b3c3a5\"></figure><p>按照上面的步骤你亲自操作一遍后，你已经学会了Anaconda，并安装好你的数据分析Pyhton环境了，接下来你就可以愉快的使用Jupyter notebook来做数据分析了：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/question/46309360/answer/254638807\" data-image=\"https://pic1.zhimg.com/v2-d07ddde1d96cd3a71a5ecffe738907c2_bh.jpg?source=54b3c3a5\" data-image-width=\"2332\" data-image-height=\"1378\" class=\"internal\">jupyter notebook 可以做哪些事情？</a><p><b>其他常见问题，见这里：</b></p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://zhuanlan.zhihu.com/p/34337889\" data-image=\"https://pic4.zhimg.com/v2-a60191999304930ef4f399aae47c3fc3_720w.jpg?source=54b3c3a5\" data-entity-type=\"article\" class=\"internal\"><span class=\"invisible\">https://</span><span class=\"visible\">zhuanlan.zhihu.com/p/34</span><span class=\"invisible\">337889</span><span class=\"ellipsis\"></span></a><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/lives/903272047218692096\" data-image=\"https://pic1.zhimg.com/bc9809df2fc0e97fd3748dddcf17dd05_l.jpg?source=54b3c3a5\" data-image-width=\"1242\" data-image-height=\"1242\" class=\"internal\">零基础掌握人工智能(AI)核心语言：Python</a><p></p>", "编程新手如何提高编程能力？": "其实很多人学编程都会遇到困难，我觉得其中一个根本原因是他们没搞明白学编程到底是学什么。<br><br>编程不是一种知识，而是一门手艺。<br><br>我们从小到大的学习都是学习知识，流程一般是课前看书预习，上课听讲，下课做作业，然后复习考试。但是学手艺可不是这么学的。<br><br>我们先拿游泳举例，游泳不是知识，而是技能，也可以算门手艺吧。<br>需要预习吗？需要上课听讲吗？不需要，因为两岁小孩都能学会游泳，他们连话都不太会说呢，怎么可能听课预习呢。游泳是通过在水里的练习，教练手把手地传授动作，一点一点提高熟练度学会的。<br><br>我们再来看看弹琴，学钢琴一定要有钢琴，音乐基础知识也是老师在练琴间隙传授的，并且一定会结合练习，另外练琴时间是很重要的，必须保证一定的练习量，有些理想远大的琴童练琴时间可以用惨无人道丧心病狂来形容。<br><br>千万别把编程看作知识，计算机科学是知识，但是编程是手艺。<br>既然是手艺就要用学手艺的思路去学习。<br><br>以动手练习为主，看书学习为辅，甚至极端点，初学的时候除了看必要的文档都可以不看书，等有了一定编程基础后再去看书，看完书立刻动手编程去验证书上的理论知识。<br>练习一定要循序渐进，把手艺分解成几个简单的动作，反复练习直到熟练，然后再把基本动作组合起来练习直到熟练。拿C语言举例，比如从认真写好一个Hello world开始，然后去熟悉 if  for while 等基本关键字，然后熟悉字符串操作，内存操作，练习查找 排序 二叉树等基本算法数据结构，然后学习一个小型Framework。。。。<br>找个师傅，手艺的一大特点就是自学是很慢的，而且容易走弯路，而有人手把手教要快得多，手艺有很多细节，实际操作经验，需要去体会感受的东西，这些细节书上基本不会有。<br>坚持做大量的练习，以代码行数为例，每年50000行左右是比较一般的练习量，有毅力的话可以挑战10万行。（有人说代码行数不代表什么，行数多不见得程序就对，写得好的程序代码很少blablabla，滚，去跟朗朗说去，告诉他其实不用练那么长时间琴。）<br><br>回忆下自己当年是怎么学会骑自行车，学会游泳，学会打篮球的，按照那个思路去学编程，而不是用你学大学课程的思路去学编程。<br><br>记住，编程是手艺，不是知识。<br><br>＝＝＝＝＝＝<br>最后再强调下，对编程能力本质最好的比喻就是弹琴。但是有了编程能力还不能算优秀的程序员，优秀的程序员是作曲家，他们不仅能想出优美的旋律，并且能弹奏出来，就像优秀的程序员不仅能想出优美的算法架构，而且能把它变成可执行代码。你很难想像作曲的人不会任何乐器。<br><br>很多人的问题是想当作曲家却不肯下功夫去练琴。<br><br>打个预防针，估计有人会举出反例说我就知道某某某作曲家不会乐器（其实真的有）。<br>我要说的是，等你成了公认的著名作曲家之后再说自己不会乐器，那你牛逼。<br>在成名之前就这么说那是煞笔。", "PHP、Java、Python、C、C++ 这几种编程语言都各有什么特点或优点？": "<p>相信每一个计算机科班出身的同学或许都有这样的经历：在大三的某一天，仿佛打通了全身筋脉一般把三年的所学：“数电里的与非门——计算机体系结构——汇编语言——C语言——C＋＋语言——Java语言”。所有知识全部串联了起来。所有这些语言的出现都仿佛都有了必然性和追根溯源的历史感。</p><p><br></p><p><br></p><p>**阅读指引**</p><p>读懂此文，需要以下基础:</p><p>1. 至少写过50000行的代码;</p><p>2. 汇编基础（静态数据段，代码段，堆栈段）。</p><p><br></p><p><br></p><p>有以下或者类似知识就更好了：</p><p>1. C语言编译，C++对象模型，MFC反射的实现</p><p>2. JAVA的解释器运行原理</p><p>3. 使用过javascript，Python，PHP：感受过代码和类型系统在运行时的自由程度的不同</p><p>4. 计算机组成原理</p><p><br></p><p><br></p><p>**序 —— 一些问题**</p><p>1. 程序设计语言的目的是什么？</p><p>2. 为什么大多数语言有控制流？逐行执行+跳转。这与我们的需求差很远（例如一个教务管理系统、一个自动打车APP）</p><p>3. 为什么类型申明在C语言中要与控制流隔离开来?</p><p>4. 现在主流语言最基本的元素是？</p><p>5. 有没有语言它的类型结构，在运行时也可以改变？</p><p>动态性？</p><p><br></p><p>什么是动态性？</p><p>1. 编译后确定了什么信息，之后不再改变；</p><p>2. 运行时可以改变、添加什么；</p><p>3. 运行时是否保存着类型信息。</p><p><br></p><p>程序中的信息分为几类？</p><p>1. 数据信息</p><p>a) 编译时Meta-Data元数据（类型框架、空间占用）</p><p>b) 运行时Meta-Data元数据（继承体系、用于new或者反射）（特别区别编译与运行的Meta-Data的不同。）</p><p>c) 堆栈段中地址偏移（C++的switch case中不能声明变量、共享内存）</p><p>d) 静态段中地址</p><p>2. 指令信息</p><p>a) 代码段（动态性需要操作系统或者虚拟机支持，例如动态链接库，动态类加载，lisp语言自生成代码）</p><p><br></p><p><br></p><p>**语言举例**</p><p><br></p><p>**汇编语言**</p><p><br></p><p>汇编语言没有动态性吗？</p><p>没有。首先，寄存器、数据段、堆栈、代码段完全由程序员控制。完完全全是写死了的。然后，根据冯诺伊曼机的规则；取指令，执行，取指令，执行……</p><p><br></p><p><br></p><p>既然都有数据段了，还要堆栈段来做什么？这不是多余？</p><p>一开始本没有堆栈，直到60年代出现了module模块化，才有了堆栈。汇编中的模块叫子程序，不过仍旧靠程序员全权控制。</p><p><br></p><p>堆栈和模块化的优点有？</p><p>1. 递归</p><p>2. 功能分离到模块，可复用</p><p>3. 封装作用域</p><p><br></p><p>堆栈和模块化的缺点有？</p><p>1. 时间上：保存现场、还原现场的代价（另，高级语言编译“消除尾递归”节约部分成本）</p><p>2. 空间上：爆栈的危险</p><p><br></p><p><br></p><p>**C语言**</p><p><br></p><p>C语言比起汇编多了什么东西？</p><p>1. 编译器</p><p>2. 表达式（相比汇编，可以处理多个操作数了。）</p><p>3. 函数与模块｛｝（真·模块化，栈操作无需程序员完成）</p><p>4. 类型（原子类型、结构类型、数组、指针）</p><p>5. 头文件，库</p><p>总之，C语言并没有比汇编多了新的特性，它只是把汇编的繁琐操作抽象出来，让编译器完成，减轻程序员负担。</p><p><br></p><p>编译器的作用是？</p><p>（减少程序员负担）</p><p>1. 解析表达式，控制流（汇编中指令只有1-3个操作数，而表达式可以多个操作数）</p><p>2. 模块和函数的抽象（完成堆栈中保存恢复现场的工作）</p><p>3. 类型变量的管理（所有变量被替换成直接访问的地址，最快的访问速率）</p><p>4. 代码优化</p><p><br></p><p>变量是替换成可以直接访问地址的？</p><p>a) 编译时的Meta-Data（struct的成员，数组的长度，以便替换到指令流；只在编译器中维护，编译结束后丢弃）</p><p>b) 计算出每个变量相对于该模块的偏移（一旦算出该偏移地址，将固定在执行码中，无法改变；就是说编译完成后，所有变量的偏移地址都固定下来了。）</p><p>c) 对变量的存储进行管理（所有的变量/内存地址的布置，都是在编译时确定的；也就是说，可执行码中没有类型信息，只有地址，任何数据都是地址来操作，完全和汇编类似。至于寄存器的安排，那是更下一层的类似缓存策略算法的结果。）</p><p><br></p><p>编译出来的执行码与汇编的执行码有特征的区别吗？</p><p>没有。特别是在编译器优化之后。</p><p>无法通过执行码，区分汇编和C程序。</p><p>打个比方，一只“程序猫”在黑笼子里，在里面喵喵的叫，无法通过它的叫声来判断它是“汇编猫”还是“C语言猫”。</p><p><br></p><p>从效率上来讲，C的多余代价在哪里？</p><p>1. 编译的时间</p><p>2. 模块的堆栈操作</p><p>总之，经过优化的C程序执行码与汇编效率几乎相同。</p><p>因为从理论上来说，C并没有引入运行时的新机制。</p><p>我理解的C语言只是一种汇编的宏而已。</p><p>**C++语言**</p><p>（推荐《深度探索C++对象模型》）</p><p><br></p><p>C++语言比C语言多了什么？</p><p>1. 成员函数</p><p>2. 类型继承体系</p><p>3. 虚函数、虚继承</p><p>4. 模板</p><p>5. 涉及到了多种编程范式</p><p>（开始更抽象，语言逐渐开始脱离冯氏结构。）</p><p>其中，面向对象的思想，让程序与现实事物的关系更加紧密。</p><p>程序设计的负担，也因为OO与设计模式的流行，而变得轻松。</p><p><br></p><p>编程范式是什么？</p><p>就是一套指导思想行为准则。</p><p>（例如，C是过程式，Haskell是函数式，JAVA是面向对象，Python是简单的大杂烩，shell是调用命令的，lua是调用c程序的，PHP是写页面的，ProLog是线性逻辑推理的。</p><p>再例如，UML是描述规格specification的，XML是存储数据的。</p><p>再再例如，CSS是描述网页表现的，HTML是描述网页内容的。</p><p>javascript比较神奇，不敢说。）</p><p><br></p><p><br></p><p>C++有什么编程范式？</p><p>1. 过程式（使用STL的类C语言编程）</p><p>2. ADT式（自定义抽象数据类型，继承；但是不用new，不用virtual；拷贝构造；为了防止资源泄漏，也发明了RAII的方式进行资源的初始化和释放）</p><p>3. 面向对象式（使用new，使用virtual，需要指针或引用；实现多态。）</p><p>4. 泛型编程（《Modern C++ Design》各种奇淫技巧，业务层代码比较少遇到）</p><p><br></p><p>C++编译器是怎样实现的？</p><p>C++开始有一个叫做cfront的编译器，即把C++语言先翻译成C语言。</p><p>然后再用C编译器来编译，C的编译器并不知道此段代码是来自C++还是C。</p><p><br></p><p>C++语言特性分别是怎样实现？简单说。</p><p>1. 成员变量：和C语言的struct 类似，最后也会被直接替换成地址，便于高效访问。</p><p>2. 成员函数：使用特殊函数名编码方案，翻译成C函数，并添加this指针作参数。（如___clsA12345func001(...,clsA *this)）</p><p>3. 类型继承体系：通过C++编译时的Meta-Data来实现。即在编译时，编译器是知道类型信息与继承体系的，但是编译成C语言后就丧失了此类型信息。</p><p>4. 虚函数、虚继承：为了支持多态，这也是“面向对象”最重要的特性，使用了虚函数表和虚基类表。注意，运行时多态是通过运行时查表实现的。稍后详细说。</p><p>5. 模板：通过代码复制的方式实现。每次编译都需要重新编译，不能编成库文件直接使用。</p><p><br></p><p>C++编译器的准则与virtual机制？</p><p>1. 首先，C++的编译准则，希望做到与C一样的效率。希望做到以下：</p><p>——a) 没有运行时调用间接性。任何数据在运行时都是一个地址直接就访问到。</p><p>——b) 没有运行时的Meta-Data。无需通过Meta-Data来访问某个复杂的类层次。</p><p>——c) 所有的数据都希望用C中struct来实现，即在编译时就确定好对象及其成员地址。</p><p>2. 以上，在过程式范式，与ADT范式中都是成立的。</p><p>3. 但是，在面向对象范式中，渴望做到：</p><p>**需要维系着同一个继承体系成员结构的一致性，只有这样，才能保证运行时的多态性。即希望通过同一个入口，访问到父类或者子类的相同数据成员、函数成员，而不在乎具体对象的是父类还是子类。**</p><p><br></p><p>C++的virtual机制如何实现的？</p><p>a) 虚函数</p><p>i. 虚函数，运行时，每个有虚函数的类型（哪怕是子类）都维持着一个虚函数表，这已经是运行时的Meta-Data，通过查表，即可找到对象自己的虚函数。</p><p>ii. 例如clone肯定是object.__vptr__Base-&gt;#3()，无论具体的对象。</p><p>b) 多重继承</p><p>——如何处理后继的base基类？由编译器判断指针类型并加上相应的偏移。</p><p>c) 虚继承</p><p>——添加一个虚基类指针，指向共享部分。</p><p>这样的缺点有两个：</p><p>1. 虚基类的子类都要背负一个基类指针指向共享部分。如果继承了多个虚基类，还需要多个这样的指针。（Microsoft的解决方法是增加一个虚基类表，类似于虚函数表。）</p><p>2. 虚继承链条的增加，会导致间接访问的层次增加。例如两个菱形继承的串联。</p><p><br></p><p>跨平台的级别有哪些级别？——头文件，库，源代码</p><p>1. C++确实在源代码的层次是可能跨平台的（例如《POSA2》中加了针对不同平台的各种宏的代码）。</p><p>2. 也可以通过相同的头文件去访问不同平台的库。</p><p>3. 但是，不同操作系统中的不同的API大大增加了跨平台的难度。</p><p>4. 跨平台的责任留给了程序员（充斥着大量宏的C++跨平台代码确实让人头疼。）</p><p>5. 编译器面对不同的系统也不敢作为，它只是负责编译源代码，链接。</p><p><br></p><p>如何使用C++才能保证其高效性能？</p><p>1. 有额外负担的机制：虚函数，虚继承，拷贝构造。</p><p>2. 用一次虚函数，多了一次指针寻址的效率损失，并且相对于inline内联（另，inline是编译器优化的重头），还损失了保存和恢复现场的效率。</p><p>3. 用一次虚继承，也多一次指针寻址的效率损失。（另，虚基类没有成员变量没有虚函数的时候会被优化。这也是JAVA可以多重继承接口interface的原因。）</p><p>4. 不要使用virtual在复杂的多继承，深层次继承中。</p><p>5. 编译速度会较慢：virtual机制会使编译器处理更多的Meta-Data。</p><p><br></p><p><br></p><p>**JAVA语言**</p><p>（推荐《本地Java代码的静态编译和动态编译问题》）</p><p><br></p><p>JAVA语言比C++语言多了什么？</p><p><br></p><p>1. 虚拟机</p><p>a) 跨平台</p><p>b) 动态编译</p><p>c) 动态特性</p><p>2. 没有指针</p><p>3. 没有类的多继承，有接口的多继承。</p><p>4. 统一的库</p><p>从编译来说，JAVA比C++迈出了一大步。</p><p>它的跨平台特性和运行时的灵活性，为JAVA自己以及未来语言都提供了很多可能性。</p><p><br></p><p>虚拟机的好处有什么？</p><p>1. 跨平台：在OS与字节码间隔了一层。实现了程序员无负担的跨平台。</p><p>2. 动态编译：许多信息不必在编译后确定，为动态特性提供可能，稍后详细说。</p><p>3. 运行时维护着类型信息，甚至可以加载新的类型。（CORBRA依赖这个实现）</p><p><br></p><p><br></p><p>JAVA编译执行的过程是怎样的？</p><p><br></p><p>1. 编译后产生一个基于堆栈的字节码。</p><p>2. JRE在不同的OS上提供支持。</p><p>3. 起初的JRE是解释执行的，效率低下。</p><p>a) 获取待执行的下一个字节码。</p><p>b) 解码。</p><p>c) 从操作数堆栈获取所需的操作数。</p><p>d) 按照 JVM 规范执行操作。</p><p>e) 将结果写回堆栈。</p><p><br></p><p>JAVA是如何解决执行效率低下的问题呢？</p><p>使用JIT（Just-in-time）编译器进行动态编译。</p><p><br></p><p>JIT（Just-in-time）是怎样运行的呢？如何解决了效率的问题？ </p><p>如上图：</p><p>1. 每次按照一个function来编译。转成中间表示，并优化其效率，再生成可执行码。</p><p>2. 编译器的编译线程和执行线程是分开的，应用程序不会等待编译的执行。</p><p>3. 分析框架Profiler会观察程序行为，对频繁执行的function进一步优化。（例如function内部对象维持一个池不必每次生成。）</p><p><br></p><p>动态编译的优点有什么？</p><p>可以根据程序的行为，优化其代码</p><p>1. 例如频繁执行的function——热方法</p><p>2. 例如arrayCopy方法，如果每次都拷贝大段内存，在指令集中有特别指令可以加速。</p><p>3. 例如类层次结构，多态的优化。（大多数虚调用都有其固定的一个目标，JIT因此生成的直接调用代码比虚表调用代码的效率会更高。）</p><p><br></p><p>动态编译的缺点有什么？</p><p>1. 大量的初始编译会影响程序启动时间。</p><p>2. 运行时候的编译，行为分析都需要花费时间。</p><p>3. 运行效率达到稳定需要时间。</p><p>4. 实时GUI型的程序不能忍受“动态编译”和“GC”带来的延迟。</p><p>JAVA如何解决实时的需求？</p><p><br></p><p>使用AOT（Ahead-of-time）编译器：预先编译成为可执行码。</p><p>AOT（Ahead-of-time）的缺点:</p><p>对于一些动态特性的支持效率低下</p><p>1. 反射机制</p><p>2. 运行时类加载</p><p>JIT与AOT的对比</p><p><br></p><p><br></p><p>总体来说，JAVA适合怎样的应用呢？</p><p>JAVA比较时候需要长期运行的应用，例如Web服务器，Daemon服务。</p><p><br></p><p>**函数式语言**</p><p><br></p><p>函数式语言通常有哪些呢？</p><p><br></p><p>1. 函数式语言</p><p>a) Lisp</p><p>b) Scheme</p><p>c) Haskell（纯函数式）</p><p>d) F#？</p><p>2. 包含了函数式特性的语言</p><p>a) Python</p><p>b) Javascript</p><p>c) JAVA</p><p>d) C?</p><p><br></p><p><br></p><p>函数式语言有哪些特性？</p><p><br></p><p>1. 函数无副作用，只对输入输出有作用</p><p>2. 高阶函数，lamda演算。(这个像C函数指针，但是它是高阶的，即返回值可能也是函数)</p><p>3. 没有过程，类似规格说明的语法，更容易理解，自解释。</p><p>4. 基于list的编程，函数更通用。</p><p>5. 惰性计算（这个很像“树形DP”）</p><p>6. 有对应的数学形式化表达，有可能证明其正确性。（最终目标可能是保证程序没有bug。）</p><p>7. 其模型适合多核或者分布式的计算。</p><p>a) 不变性（immutable）</p><p>b) 惰性计算/按需计算（lazy evaluation）</p><p>c) **最重要的是，由于函数式语言不可在同一数据上做修改，每一次运用一个函数都会在新的位置产生新的数据，这与过程式语言在同一位置对数据做多次操作不同：函数式语言的函数依赖于前一次函数产生的结果数据，过程式语言依赖于数据的位置。这里函数式语言就暗含了计算的依赖顺序，如果没有前后顺序关系，就可以并发。而过程式语言没有指定这个顺序，就需要通过加锁、Actor、Channel等模式来指定这个顺序**</p><p>总的来说，函数式语言，向着更抽象迈了一大步，更像是数学上的表达，几乎与冯诺伊曼体系断绝了关系。</p><p><br></p><p><br></p><p>函数式语言的劣势？</p><p><br></p><p>1. 效率不高（因为其抽象，远离了冯诺伊曼体系）</p><p>2. 平台以及开发环境都比较简单。</p><p>3. 缺少推广，应用不广泛</p><p><br></p><p>**逻辑程序设计**</p><p>ProLog语言，线性逻辑。人工智能语言。没有接触过。</p><p><br></p><p><br></p><p>**总结**</p><p>动态性有哪些呢？</p><p>1. 多态性：运行时根据具体对象来访问属于它的方法。（而不理会指针的类型。）</p><p>2. 反射：运行时维系着类型结构的Meta-Data。</p><p>3. 运行时类加载：运行后再次加载新的数据类型和指令流。</p><p>4. 动态链接：OS根据按需链接库文件。</p><p><br></p><p>编译语言 和 解释语言 的分界在哪里？</p><p>语言本身并没有编译类型或者解释类型。（例如：JAVA也可以静态编译后成可执行码。）只有少数运行时特性是依赖于解释型的。（可能需要运行环境的支持。）</p><p><br></p><p>为什么解释语言都需要虚拟机或者运行环境支持？</p><p>动态编译，运行时Meta-Data的保存，这些功能对于每个程序都是一致的。</p><p>所以把它们分离开来，不必每个程序植入这些代码</p><p><br></p><p>非脚本语言 和 脚本语言</p><p>脚本语言，我理解是负责调度其他代码的语言。</p><p>例如shell脚本（调用命令），lua（调用C）。</p><p><br></p><p>跨平台分为哪些层次？</p><p>1. 源码跨平台（C，C++，但是因为系统调用接口不同，程序员负担太大，但是汇编却不是。）</p><p>2. 执行码跨平台（JAVA，有些语言直接从源码解释执行，例如Javascript，PHP）</p><p>发展历史（推荐《近看图灵碗 (一. 从苏黎世到巴黎)》）</p><p><br></p><p>学术上有哪些实验性语言？</p><p>1. Fortran</p><p>2. ALGOL58</p><p>3. ALGOL60</p><p>4. Lisp</p><p>5. smalltalk</p><p><br></p><p>常用语言</p><p>过程式：C，ALGOL，Pascal，</p><p>面向对象式：C++，smalltalk，JAVA，Delphi</p><p>函数式：Lisp，Scheme，Haskell，</p><p>逻辑式：Prolog</p><p>脚本？PHP，Python，Ruby</p><p>存储描述信息：XML，CSS，HTML</p><p><br></p><p>**回答问题**</p><p>程序设计语言的目的是什么？</p><p>1. 控制数据</p><p>2. 控制指令流</p><p>为什么大多数语言有控制流？逐行执行+跳转。这与我们的需求差很远（例如一个教务管理系统。）</p><p>逐行执行，很大程度是起源于冯诺依曼体系结构。</p><p><br></p><p>为什么类型申明在C语言中要与控制流隔离开来?</p><p>因为在编译时，具体的类型信息，要转化成地址偏移，然后替换控制流中的类型变量。</p><p><br></p><p>现在主流语言最基本的元素是？</p><p>控制流 与 类型系统。</p><p><br></p><p>有没有语言它的类型结构，在运行时也可以改变？</p><p>Javascript只有对象没有类，使用prototype的方式继承，运行时给某个对象添加新的数据成员。没有类型体系。</p><p>许多后来的语言在运行时都保存着类型信息的，例如Python，JAVA。</p><p><br></p><p>**综上所述**</p><p>控制流——指令流</p><p>类型系统——为了计算出变量地址信息</p><p>区分运行时的Meta-Data与编译时的Meta-Data</p><p></p><p></p>"}{"学好深度学习，Python 得达到什么程度？": "<h2><b>我觉得真心不难，学习路线图应该是这样的：</b></h2><h2><b>第一步：学Python3，不要学Python2了，到2020年Python2就不再被维护了。下面是我觉得最好的Python3自学书籍下载链接。</b></h2><a href=\"https://link.zhihu.com/?target=http%3A//www.panc.cc/info/9f288d16b6ff7a64\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-731f2c115eec8dd6554f150c2ef13940_l.jpg?source=54b3c3a5\" data-image-width=\"289\" data-image-height=\"288\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3程序开发指南.第二版(带书签).pdf</a><h2><b>第二步：学习深度学习简单的例子，如MNIST, CIFAR, PTB, Word2Vec等等。只要学习了这里面的基础任务，基本可以说是入门了。我建议结合网上的深度学习教材来看代码。</b></h2><a href=\"https://link.zhihu.com/?target=https%3A//github.com/tensorlayer/tensorlayer/blob/master/examples/README.md\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-550a06f2e294af36ff2e90cf143fe847_l.jpg?source=54b3c3a5\" data-image-width=\"400\" data-image-height=\"400\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">深度学习: 基础例子</a><h2><b>第三步：学习更加复杂的深度学习例子，并尝试重现一篇自己喜欢的paper。下面的链接中整理了计算机视觉、自然语言处理、生成对抗网络等中大型应用的代码链接。</b></h2><a href=\"https://link.zhihu.com/?target=https%3A//github.com/tensorlayer/awesome-tensorlayer\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-550a06f2e294af36ff2e90cf143fe847_l.jpg?source=54b3c3a5\" data-image-width=\"400\" data-image-height=\"400\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">深度学习: 例子大全</a><h2><b>第四步：对强化学习感兴趣的同学，可以看看这套代码库，我们用简单且统一的代码模版，实现了大部分的强化学习算法，并不断地添加最新算法。我们最近在写一本深度强化学习的书，也是用Python作为例子的。</b></h2><a href=\"https://zhuanlan.zhihu.com/p/68950847\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-adbfd7f3b21e727da834253e685da2ad_bh.jpg?source=54b3c3a5\" data-image-width=\"1628\" data-image-height=\"638\" class=\"internal\">深度\"强化\"学习:实现全家桶</a><h2><b>开源项目组和学校最近在招人，对AI感兴趣的同学可以看看我的主页：</b></h2><b><a href=\"https://link.zhihu.com/?target=https%3A//zsdonghao.github.io\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-d32de634f27578aec248fc6491cf7b91_200x0.jpg?source=54b3c3a5\" data-image-width=\"760\" data-image-height=\"974\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Hao Dong Homepage</a></b><h2><b>别光收藏呀，也点赞一下呀 ～～</b></h2><hr><h2>其他回答：</h2><a href=\"https://zhuanlan.zhihu.com/p/74968094\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-884fc984580f2786d042403f3e6b312f_bh.jpg?source=54b3c3a5\" data-image-width=\"668\" data-image-height=\"500\" class=\"internal\">Maix-EMC：AI科学家的硬件梦 | 嵌入式工程师的AI梦</a><a href=\"https://www.zhihu.com/question/63359251/answer/485600807\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">在DeepMind或OpenAI工作是什么体验？</a><a href=\"https://www.zhihu.com/question/59002888/answer/339429161\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">AI领域的灌水之风如何破局？</a><p></p>", "新手如何入门pytorch？": "<p><b>第一步</b> <b>github的 </b><a href=\"https://link.zhihu.com/?target=http%3A//pytorch.org/tutorials/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">tutorials</a>  尤其是那个60分钟的入门。只能说比tensorflow简单许多, 我在火车上看了一两个小时就感觉基本入门了. 另外<i>jcjohnson</i> 的<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jcjohnson/pytorch-examples\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Simple examples to introduce PyTorch</a> 也不错 </p><p><b>第二步</b> <b>example </b>参考 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/pytorch/examples\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">pytorch/examples</a> 实现一个最简单的例子(比如训练mnist )。</p><p><b>第三步</b> <b>通读doc</b> <a href=\"https://link.zhihu.com/?target=http%3A//pytorch.org/docs/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PyTorch doc</a> 尤其是<a href=\"https://link.zhihu.com/?target=http%3A//pytorch.org/docs/notes/autograd.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">autograd</a>的机制，和<a href=\"https://link.zhihu.com/?target=http%3A//pytorch.org/docs/nn.html%23torch.nn.Module\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">nn.module</a> <i>,<a href=\"https://link.zhihu.com/?target=http%3A//pytorch.org/docs/optim.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">optim</a> 等</i>相关内容。文档现在已经很完善，而且绝大部分文档都是<b>作者亲自写</b>的，质量很高。</p><p><b>第四步</b> <b>论坛讨论</b> <a href=\"https://link.zhihu.com/?target=https%3A//discuss.pytorch.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PyTorch Forums</a> 。论坛很活跃，而且质量很高，pytorch的维护者(作者)回帖很及时的。每天刷一刷帖可以少走很多弯路，避开许多陷阱,消除很多思维惯性.尤其看看那些阅读量高的贴，刷帖能从作者那里学会如何写出bug-free clean and elegant 的代码。如果自己遇到问题可以先搜索一下，一般都能找到解决方案，找不到的话大胆提问，大家都很热心的。</p><p><b>第五步</b> <b>阅读源代码</b> fork pytorch，pytorch-vision等。相比其他框架，pytorch代码量不大，而且抽象层次没有那么多，很容易读懂的。通过阅读代码可以了解函数和类的机制，此外它的很多函数,模型,模块的实现方法都如教科书般经典。还可以关注官方仓库的issue/pull request, 了解pytorch开发进展，以及避坑。</p><p>还可以加入 slack群组讨论，e-mail订阅等</p><p>总之  pytorch入门很简单，代码很<b>优雅</b>，是我用过的最<a href=\"https://link.zhihu.com/?target=http%3A//www.baidu.com/link%3Furl%3DZ0NtRMChanjECZY1UVxGh5lD6gJmKhDc18QvWDF4qqCbutWtgAaLVH0jfEyvwpvT\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Pythonic</a>的框架. 欢迎入坑。</p><p><br></p><p><b>推销一下我写的教程：<a href=\"https://link.zhihu.com/?target=http%3A//github.com/chenyuntc/pytorch-book\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">chenyuntc/pytorch-book</a> 用notebook写的教程，里面还有很多有趣的例子，比如用GAN生成动漫头像，用CharRNN写唐诗，类Prisma的滤镜（风格迁移）和图像描述等 </b></p><p><br></p><p>---------------------------分割线--------------------------<br>2.20 更新:美化了格式,修正语法. 本来还想补充一些内容, 但是想了想还是算了. 很多时候选择太多反而没了选择. 上面五步是我自己在学习pytorch的时候积累的经验, 个人认为很适合入门,也足够了.<br>1. 关于如何照着example实现简单的例子, 我的做法是认真看几遍example的实现代码.理解透,然后自己从头写, 实现相同的模型, 实在卡住了写不下去可以看一下, 但是绝对不能copy and paste. 当你实现了一个简单的例子(比如tutorial 的 mnist) 基本上对pytorch的主要内容都有了大概的了解. 写的时候会涉及 dataset,nn.module, optim, loss等许多模块, 也算是加深理解. 我用pytorch 写的第一个模型是DCGAN , 寒假在家远程实验室服务器用ipython notebook写的 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/chenyuntc/pytorch-GAN\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub-chenyuntc/pytorch-GAN</a>, 然后看到了新出的大作WGAN, 在DCGAN上做了一点点修改, 就实现了WGAN, 是我入门最快的一次.</p><p>2. 论坛的很多贴都是你以后可能遇到的问题 比如<br>如何Finetune <a href=\"https://link.zhihu.com/?target=https%3A//discuss.pytorch.org/t/how-to-perform-finetuning-in-pytorch/419\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">How to perform finetuning in Pytorch?</a> <br>如何从预训练好的网络中的某一层提取特征: <a href=\"https://link.zhihu.com/?target=https%3A//discuss.pytorch.org/t/how-to-extract-features-of-an-image-from-a-trained-model/119/32\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">How to extract features of an image from a trained model</a> <br>论坛贴比较少, 我觉得其中一个原因是很多问题都不是问题,比如如何共享参数, 这个在tensorflow中有专门的一章讲解, 但是用pytorch写可能都不会意识到有这个问题---直接用就是了 <a href=\"https://link.zhihu.com/?target=https%3A//discuss.pytorch.org/t/how-to-create-model-with-sharing-weight/398/2\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">How to create model with sharing weight?</a> 比如如何用在模型运行时实现条件判断--直接用if. 如何查看中间结果?--直接print. 如何修改参数--直接赋值. 相比于tensorflow,pytorch更接近python的写法.</p><p>3. 关于如何阅读源代码: 我是这样的. fork, clone ,然后用vscode打开--- 大概浏览一下, 知道类, 模块之间的关系. 然后重点阅读一些经典函数的代码, 按ctrl单击调用的函数在不同文件中跳转, 了解函数调用关系. 此外torch-vision中很多模型如ResNet的实现也很简洁.</p><p>4. 一些其它的例子:</p><ul><li>50行实现GAN <a href=\"https://link.zhihu.com/?target=https%3A//github.com/devnag/pytorch-generative-adversarial-networks\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">devnag/pytorch</a> </li><li>pytorch 资源合集 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/ritchieng/the-incredible-pytorch\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">The Incredible PyTorch</a> </li><li>加强版pytorch tutorial侧重NLP <a href=\"https://link.zhihu.com/?target=https%3A//github.com/spro/practical-pytorch\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">spro/practical-pytorch</a> </li><li>利用LSTM学习梯度下降法等优化方法：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/ikostrikov/pytorch-meta-optimizer\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ikostrikov/pytorch-meta-optimizer: A PyTorch implementation of Learning to learn by gradient descent by gradient descent</a> </li><li>WGAN的官方实现 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/martinarjovsky/WassersteinGAN\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"> martinarjovsky/WassersteinGAN</a> </li></ul><p>####################更新######################</p><p><br></p><p>安利 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/a3e80b702265d6149bf9e559d523c88f\" data-hash=\"a3e80b702265d6149bf9e559d523c88f\" data-hovercard=\"p$b$a3e80b702265d6149bf9e559d523c88f\">@莫烦</a> 的PyTorch教程(视频+代码)详情见专栏文章 <a href=\"https://zhuanlan.zhihu.com/p/26670032\" class=\"internal\">等什么, 赶快抱紧 PyTorch 的大腿!</a></p><p>#################### end #############################</p>", "如何在业余时学数据分析？": "<p>以下方法仅适用开发出身或有语言基础的同学。</p><p><br></p><p>我的情况跟题主是一样的，软件工程出身，在之前一直在做Java/Python开发，无意之中接触到了爬虫，接触了一堆一堆的数据，之后慢慢开始对数据感兴趣，开始学习一些数据分析的技能：凭着爬虫以及数据分析的技能我找到了理想中的数据分析岗位。所以我对自己的评价一直是：<b>科班出身的软件工程师、野路子的数据分析师。</b></p><p><br></p><p>从Java/Python开发到Python爬虫到数据分析，有很多人是看着我一步一步走过来的，我想在这里根据我自己这段野路子的学习经历说一说非科班如何利用业余时间学数据分析，当然只是数据分析，不是数据挖掘。</p><p><br></p><p>数据分析师的能力分为：<b>分析能力和业务能力，</b> <a class=\"member_mention\" href=\"https://www.zhihu.com/people/1226dd3baa23701c8bb28f60e6904a7e\" data-hash=\"1226dd3baa23701c8bb28f60e6904a7e\" data-hovercard=\"p$b$1226dd3baa23701c8bb28f60e6904a7e\">@邹昕</a> 大神说：<b>分析能力决定一个数据分析师的下限，业务能力决定一个数据分析师的上限。</b></p><p><br></p><p>因为是开发出身，我的方法与其他人的不同，</p><p>我把数据分析的学习分为两个大的阶段，：</p><hr><p>我把我学习数据分析的经验总结成了一本电子书，这本电子书帮助了不少人成功转行了数据分析，你要是感兴趣的话可以点下方链接获取到这本电子书。</p><p><br></p><a href=\"https://link.zhihu.com/?target=https%3A//t.1yb.co/7HXS\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-b84d1bb91953c1ee544f5077b1bf4cb8_bh.jpg?source=54b3c3a5\" data-image-width=\"531\" data-image-height=\"227\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">路人甲分享的：Python爬虫电子书和数据分析电子书</a><p><br></p><p><br></p><p>学习的第一阶段：这一阶段是为了培养自己做分析的能力</p><p><b>第一阶段的基础是要有数据</b></p><p>分析能力相对来说是死板的，通常你需要学会掌握下面这些技能：</p><ul><li>数据分析常用哪些算法？</li><li>需要用哪些库？</li><li>如何进行计算？</li><li>进行可视化，每一种图表的用途是什么？</li></ul><p><br></p><p>为了解决上面抛出的问题，你可以仔细学习阅读下面的书籍：</p><p>1. <a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/25779298/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">利用Python进行数据分析 (豆瓣)</a></p><p>2. <a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/10561724/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">SciPy and NumPy (豆瓣)</a></p><p><br></p><p>当然，如果你不想用Pyhton用R去搞这么复杂的计算，那你也可以直接把清理好的数据扔在一些做计算和可视化的工具里，我比较熟悉的就是：Tableau，以及据说不错的Power BI.当然最后你发现还是学习Python或者R的数据分析库来的实在，因为他们更加灵活。</p><p><br></p><p>在第一阶段用工具结合Python我留下了一些文章，可以作为参考，这些都是在爬虫抓了很多数据之后，先有数据后结合教程书籍分析学习产生的内容。</p><p>1. <a href=\"https://zhuanlan.zhihu.com/p/24554589\" class=\"internal\">链家网的租房数据做些有意思的事情？</a></p><p>2. <a href=\"https://zhuanlan.zhihu.com/p/24420062\" class=\"internal\">豆瓣读书分析报告</a></p><p>3. <a href=\"https://zhuanlan.zhihu.com/p/24133117\" class=\"internal\">爬取6.6w+豆瓣电影之后的分析故事</a></p><p><br></p><p>学习的第二阶段：<b>这一阶段是为了培养自己做业务的能力</b></p><p>在第一阶段的学习你已经学会了：</p><ul><li>对数据的整体感知</li><li>知道什么时候该用什么图表</li><li>掌握了一些基本的算法和分析库</li></ul><p><br></p><p>这一阶段，技术不再是你的障碍，<b>重点是要有IDEA</b></p><p>这一阶段数据分析的步骤通常为：</p><ul><li>我想要做什么？分析什么？</li><li>是否有数据能提供支持？把你想做的抽象成数据。</li><li>数据获取/数据清洗</li><li>开始进行分析（语言、工具）</li></ul><p><br></p><p>我们能看到这四个步骤后两个步骤是在第一阶段学习的内容，所以我们只要把精力聚焦在前两个步骤就可以了，那么怎样培养自己数据分析的IDEA，我的方法是：多学多看多做。</p><p><br></p><p>多看：看一些实战IDEA较多的书籍</p><p>1. <a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/25833225/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据之美 (豆瓣)</a></p><p>2. <a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/3283973/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">啤酒与尿布 (豆瓣)</a></p><p>3. <a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/5257905/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">深入浅出数据分析 (豆瓣)</a></p><p><br></p><p>多做：</p><p>网络上有很多数据分析的案例，很简单易懂，在深层的技术点也不难，你完全可以按照他的思路重新做一遍，就变成了你的思路了。</p><p><b>数据冰山的数据分析文章：</b></p><p>1. <a href=\"https://zhuanlan.zhihu.com/p/20604082?refer=hemingke\" class=\"internal\">生活中的数据犀利哥之一：开篇及选车</a></p><p>2. <a href=\"https://zhuanlan.zhihu.com/p/20604263?refer=hemingke\" class=\"internal\">生活中的数据犀利哥之二：排队</a></p><p>3. <a href=\"https://zhuanlan.zhihu.com/p/20605096?refer=hemingke\" class=\"internal\">生活中的数据犀利哥之三：找座</a></p><p>4. <a href=\"https://zhuanlan.zhihu.com/p/20640434?refer=hemingke\" class=\"internal\">生活中的数据犀利哥之四：看趋势</a></p><p>5. <a href=\"https://zhuanlan.zhihu.com/p/25629403\" class=\"internal\">生活中的数据犀利哥之五：找错因果关系</a></p><p>6. <a href=\"https://zhuanlan.zhihu.com/p/25555346\" class=\"internal\">生活中的数据犀利哥之六：快递员送货</a></p><p>7. <a href=\"https://zhuanlan.zhihu.com/p/20355743?refer=hemingke\" class=\"internal\">北上广深哪里过得更潇洒</a></p><p>8. <a href=\"https://zhuanlan.zhihu.com/p/20559922?refer=hemingke\" class=\"internal\">沧海横流，看行业起伏（2015年）</a></p><p>9. <a href=\"https://zhuanlan.zhihu.com/p/20893016?refer=hemingke\" class=\"internal\">和颐事件之后: 怎么定酒店更有安全感？</a></p><p>10. <a href=\"https://zhuanlan.zhihu.com/p/20712815?refer=hemingke\" class=\"internal\">老鹿玩数据——不光是求婚神器（一）</a></p><p>11. <a href=\"https://zhuanlan.zhihu.com/p/20756963?refer=hemingke\" class=\"internal\">老鹿玩数据——不光是求婚神器（二）</a></p><p>12. <a href=\"https://zhuanlan.zhihu.com/p/24943568?refer=hemingke\" class=\"internal\">《春节自救指南》之数据分析</a></p><p><br></p><p><b>还有我曾经写的几篇文章：</b></p><p>1. <a href=\"https://zhuanlan.zhihu.com/p/25118397\" class=\"internal\">如何判断一场知乎live的质量？</a></p><p>2. <a href=\"https://zhuanlan.zhihu.com/p/25047215\" class=\"internal\">豆瓣5.6分的《西游伏妖篇》有水军吗？</a></p><p><br></p><p><b>团支书的一些回答和文章：</b></p><p>1. <a href=\"https://www.zhihu.com/question/44724619/answer/192049017\" class=\"internal\">怎样才能以最少的钱租个靠近地铁的房子？</a></p><p>2. <a href=\"https://www.zhihu.com/question/26673732/answer/183836709\" class=\"internal\">「上海富了周围，北京坑了周围」？ - 知乎</a></p><p>3. <a href=\"https://www.zhihu.com/question/29554848/answer/169811236\" class=\"internal\">如何不吹牛地形容北京有多大？ - 知乎</a></p><p><br></p><p>等等几位的文章都可以用来学习参考。</p><hr><p>我把我学习数据分析的经验总结成了一本电子书，这本电子书帮助了不少人成功转行了数据分析，你要是感兴趣的话可以点下方链接获取到这本电子书。<br></p><a href=\"https://link.zhihu.com/?target=https%3A//t.1yb.co/7HXS\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-b84d1bb91953c1ee544f5077b1bf4cb8_bh.jpg?source=54b3c3a5\" data-image-width=\"531\" data-image-height=\"227\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">路人甲分享的：Python爬虫电子书和数据分析电子书</a><p><br>通过以上数据分析算是入门了，至于如何进阶，我也在摸索中，希望有机会我可以更新到这篇回答里，也欢迎在学习数据分析的同学一起交流。</p>", "为什么很多人喜欢 Python？": "2005年中期，用了几天学完了Python，随后两天用了十几个小时写了编译原理的课程设计，这是我大学阶段所有课程设计里唯一没有延期的。<br><br>后来逐渐发现Python的简单可以把我的思想从编程语言的细节里解放出来，更关注实际要解决的问题。<br><br>就喜欢上了。<br><br>既然有人点赞，就再补充点。<br><br>很多人关注起Python就是因为简单易懂，做Web很方便。但在深入CS学科的很多高级主题时，Python能发挥出更加强大无比的力量。而这来自于Python是个好胶水。<br><br>坦白讲，Python不算最好的胶水，至少Lua做胶水就比Python好，API好用。但Python再算上强大的标准库、数据结构、友好的转义后，就脱颖而出了。<br><br>在科学计算领域，NumPy和SciPy的存在解放了很多人的思想束缚。其底层C模块，性能一流。<br><br>而当你需要一流的性能与一流的可调试性时，Python C模块是最好的选择。封装虽然有些麻烦，但封装后可以在Python里调用实在太方便。一些已有的C/C++应用也可以通过将函数封装给Python调用，而极大的降低调试难度，提升单元测试覆盖率。<br><br>2007年时我开始学Python的C模块编程，并在博客中放出了我的笔记。那时写了不少东西。封装libpcap后，做网络抓包，通信劫持，使得别人眼里，我俨然是个正经黑客。后来迷恋erlang期间，做了C node的Python封装，使得Python与Erlang可以互发消息，组建集群。搞硬件开发期间，封装了Cubieboard和RaspberryPi的GPIO、SPI等众多外设的Python接口，调试速度快到了云边。做USB通信期间，因为PyUSB不支持isochronous通信而自己重写了个libusb的Python封装，使得USB编程不再困难。做音视频识别的日子里，做了v4l2的Python封装，使得操作摄像头的控制精度达到了最高。<br><br>相比于其他人，用上这些Python封装后，迭代速度数十倍的提高带来了系统进化速度的极大提高。比如我在音视频识别的研究期间，因为NumPy和我自己的封装，每天动则十几次甚至几十次的迭代，优化算法的各种参数。使得我在不到两年时间里，识别效果就超过可某大学教授12年的研究成果。识别速度更是超出对方两个数量级。<br><br>对于各个领域的研究者，我是真心推荐Python的。用上NumPy和SciPy，你就拥有了极致的性能，顶级的可调式性，和产品级的稳定性。而这也使得Python的这套组合成为科学计算领域唯一能与matlab竞争的选择。<br><br>过200赞我就专门写一篇文章介绍用Python做科学计算的几个实例。<br><br>居然一个多小时就过200赞了。我的博客地址在 <a href=\"https://link.zhihu.com/?target=http%3A//gashero.iteye.com/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">gashero.iteye.com/</span><span class=\"invisible\"></span></a>  ，我会用大约一周来写，写完后会把地址贴到这里。感谢大家的厚爱。<br><br>人生苦短，快用Python！", "在大型项目上，Python 是个烂语言吗？": "<p>以前的雇主，是3-4万人大厂，最核心业务有一个核心大数据系统python写的：</p><ol><li>使用各类数据库实时维护的人类最完整某类型文件库，含数亿文档的数十亿文档版本</li><li>各类传统的分析工具、估价、OCR了的文档的错误估算等等等</li><li>各类查询、搜索、阅读、手工分组分类、标注工具等等等</li><li>机器学习的文档分类，全套自己做的，算法部分C++写的，别的都是Python</li><li>对接各类通用或自研大数据分析的接口，对接公司别的平台的各类接口</li><li>各类爬虫，爬整个互联网，在互联网上找出所有相关的信息，匹配起来</li></ol><p>我全程参与，负责1/4/5/6部分，最保守计算，全套50万行python这个量级肯定有的</p><p>做了好几年，离职回国才开始看zhihu，第一次在zhihu上听说python不适合写大项目。当然，也有可能各位口中的大项目都是那种好几百万行上千万行的，那种我倒真没有经验。</p><p>不必说python怎么怎么好，它问题很多，比如：</p><ol><li>慢，真的很慢</li><li>因为慢，很多时候得花时间去做其它语言看起来无谓的“优化”</li><li>GIL这种几十年不变的东西，让人对Python社区是否有诚意改进表示怀疑</li><li>Unicode支持烂</li><li>Python2/3的分裂是教科书级别的悲剧</li><li>部署起来各种奇葩</li></ol><p>但这不改变python写起来飞快、生态完备、在技术够的情况下可折腾的东西特别多等等优点。现在我用Golang最多，回想上面项目部分比如第六项爬虫相关那个，当时用Python做，从头到底几个人一个月时间就上线，我不认为Golang可以这么快。第一版上线一个月完成的东西包括：</p><ol><li>ec2上spot instance一个独立的竞价库，在规定的时限、预算目标、爬虫性能预估模型基础上，可以尽力去拍卖竞购所需要的计算资源提供平台。</li><li>爬整个alexa ranking前100万排名的网站的头几层页面，根据其内容选择数万和我们所需要信息相关的网站，把它们全站爬一次。初次爬，要求24小时内出结果。</li><li>一个自己设计的web mining组合算法，从上述爬回来的几个T的数据里挖出我们有价值的某类产品信息。注意，数万网站、数百万网页格式，直接regex/xpath都是完全没有用的。数万网站涉及M个国家、N种语言。</li><li>数据清洗，给出一个自动估算的准确度预测</li><li>和内部一个百万级数据的产品数据库整合，把上述爬回来处理好的数据做成一个“网上如此描述本产品”的功能，展示一段机器通过上述挖掘处理以后的数据的综述。</li><li>和内部一个百万级数据的产品数据库整合，把上述爬回来处理好的数据中出现的却无法匹配到我方内部数据的产品做置信评估，选出数万高置信的，供人工分析、排查并最终。</li><li>每天增量更新上述各项。</li></ol><p><b>语言永远不核心，工具永远不关键，只有人是关键。</b></p><p>国内互联网圈子最关键的问题是水平不高，人却自大了。知乎上无意义的讨论某个语言好、某个语言不好，似乎特别起劲。反正cool的东西99%的团队做不出那是肯定的，反正可以来知乎怪语言、怪系统、怪体制，总之都是别人的错，写代码的小白最正确！</p><p>欢迎来怼。我的发言的核心思想就一条：国内互联网圈子这种从来没有成功设计推广过任何一种语言的总体上公认技术落后的团体，成天从python怼到golang，只是在反复给明眼人解释为什么国内技术落后。各主流语言的编译器、runtime、标准库等等都开源了，空谈真的误事，<b>你觉得哪个语言哪个方面不好，请拿出你的解决方案和实现来说话</b>，哪怕你的pull request被否决掉了，请给出详情，大家就事论事看解决方案。还请键盘侠们回归技术人员的淳朴本质，吹骗混蒙的方式开口闭口某个语言怎么怎么有问题，真的很low很丢脸。</p><p><br></p><p>很多年轻新入行的朋友评论区的留言让我感觉他们其实是现在行业浮躁氛围的受害者。我没有能力说去一一帮助他们，但愿意提供一些CS PhD毕业全职写代码很多年的过来人的意见：</p><ol><li>语言是有好坏，肯定要有所选择，但除非你是做编译器、标准库等直接语言方向的，过度关注语言就是本末倒置。</li><li>最容易走弯路形成这种本末倒置的原因就是没有自己一个感兴趣且擅长的CS领域。数据库、大数据、分布式、人工智能、机器学习、图形学、UI、操作系统、高性能、安全、理论计算等等等等领域，不去好好选几个自己喜欢的然后持续投入，过度关注语言这种工具，自己亏太大了。</li><li>当你身边有人并非从事语言直接相关的工作，但开口闭口就是这个流行的语言有这样那样毛病，那个小众语言多优美高效，千万要看清楚，此人不是已经走了上述弯路，就是靠谈语言来吹、蒙、混、骗。</li><li>语言不是一个可以长久获得回报的东西。C++在15年前很热，Java/C#在10年前很热，Python热了几年了，Golang这几年开始热了。但你真的只能年轻一次，投入在语言上不值得，成天在网上和人吹Python多烂Golang多差，其实最对不起自己。</li></ol><p></p>", "怎么自学python，大概要多久？": "<p>说到python，不得不提一下<b>廖雪峰</b>。国内自学python的应该很少有人不知道他的。</p><blockquote>廖雪峰老师：曾任职西门子、摩托罗拉、火币网等知名公司高级技术专家；其官方博客是很多技术人常用的参考教程，日访问量达5万+。</blockquote><p><b>完全零基础的话，建议花5个小时去听一下他的python入门课。（免费的）</b></p><p>官方介绍：通过本课程的学习，您将学会<b>搭建基本的Python开发环境，以函数为基础编写完整的Python代码，熟练掌握Python的基本数据类型以及list和dict的操作。</b></p><p>课表如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8678c2a5cb8d0ec1d4bd9f01b89ec8f1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1674\" data-rawheight=\"9446\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-97d3de4ad54e55c4e29aca90591880b9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1674\" data-original=\"https://pic1.zhimg.com/v2-8678c2a5cb8d0ec1d4bd9f01b89ec8f1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1674'%20height='9446'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1674\" data-rawheight=\"9446\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-97d3de4ad54e55c4e29aca90591880b9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1674\" data-original=\"https://pic1.zhimg.com/v2-8678c2a5cb8d0ec1d4bd9f01b89ec8f1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8678c2a5cb8d0ec1d4bd9f01b89ec8f1_720w.jpg?source=54b3c3a5\"></figure><p>看完之后，按照下边的流程自己挑感兴趣的去学【备注推荐的强烈建议去看，特别是项目的】</p><hr><h2>以下内容划重点：各种学习资源推荐<b>入门：</b></h2><h2><b>一、入门</b></h2><p><b>1.廖雪峰的官方网站教程</b>（必学）</p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.liaoxuefeng.com/wiki/1016959663602400\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">liaoxuefeng.com/wiki/10</span><span class=\"invisible\">16959663602400</span><span class=\"ellipsis\"></span></a></p><p><b>2.100天学python</b>（选学）</p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/jackfrued/Py</span><span class=\"invisible\">thon-100-Days</span><span class=\"ellipsis\"></span></a></p><p><b>3.python初学者教程</b>（选学，无聊时可看看）</p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Yixiaohan/codeparkshare\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/Yixiaohan/co</span><span class=\"invisible\">deparkshare</span><span class=\"ellipsis\"></span></a></p><h2><b>二、进阶：</b></h2><p><b>1.Python3高级核心技术97讲</b>（慕课网视频，推荐学习）<a href=\"https://link.zhihu.com/?target=https%3A//coding.imooc.com/class/200.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">coding.imooc.com/class/</span><span class=\"invisible\">200.html</span><span class=\"ellipsis\"></span></a><br></p><p><b>2.python各种标准库</b>（尤其是时间操作、文件操作、多线程、多进程、协程的使用）<a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/library/index.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">docs.python.org/zh-cn/3</span><span class=\"invisible\">/library/index.html</span><span class=\"ellipsis\"></span></a></p><h2><b>三、web：</b></h2><p><b>1.requests库</b>（必学）</p><p><a href=\"https://link.zhihu.com/?target=http%3A//2.python-requests.org/zh_CN/latest/user/quickstart.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">2.python-requests.org/z</span><span class=\"invisible\">h_CN/latest/user/quickstart.html</span><span class=\"ellipsis\"></span></a></p><p><br></p><p><b>2.django</b>（必学）</p><p><b>django官方文档</b>（当做工具书用）</p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.djangoproject.com/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">djangoproject.com/</span><span class=\"invisible\"></span></a></p><p><br></p><p><b>3.djangorestframwork官方文档</b>（看Quickstart部分）</p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.django-rest-framework.org/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">django-rest-framework.org</span><span class=\"invisible\">/</span><span class=\"ellipsis\"></span></a></p><p><br></p><p><b>4.Vue+Django REST framework打造生鲜电商项目</b>（慕课网视频，推荐学习）</p><p><a href=\"https://link.zhihu.com/?target=https%3A//coding.imooc.com/class/131.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">coding.imooc.com/class/</span><span class=\"invisible\">131.html</span><span class=\"ellipsis\"></span></a></p><p><br></p><p><b>5.强力django+杀手级xadmin，打造上线标准的在线教育平台</b>（慕课网视频，推荐学习）</p><p><a href=\"https://link.zhihu.com/?target=https%3A//coding.imooc.com/class/78.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">coding.imooc.com/class/</span><span class=\"invisible\">78.html</span><span class=\"ellipsis\"></span></a></p><p><br></p><p>tips：学完这两个实战课程，我敢保证你应该可以用django搭建一个自己的网站了，<b>但不建议一点基础没有就开始学习实战</b>。</p><h2><b>四、其他</b></h2><p><b>1.python面试题</b>（taizilongxu版）</p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/taizilongxu/interview_python\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/taizilongxu/</span><span class=\"invisible\">interview_python</span><span class=\"ellipsis\"></span></a></p><p><br></p><p><b>2.python面试题</b>（剑指offer）</p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/JushuangQiao/Python-Offer\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/JushuangQiao</span><span class=\"invisible\">/Python-Offer</span><span class=\"ellipsis\"></span></a></p><p><br></p><p><b>3.awesome-python</b>（各种好库推荐）</p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/vinta/awesome-python\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/vinta/awesom</span><span class=\"invisible\">e-python</span><span class=\"ellipsis\"></span></a></p><p><br></p><h2><b>五、书籍：</b></h2><p>推荐大家看下面两本书：</p><p><b>1.《python程序员面试算法宝典》</b></p><figure data-size=\"small\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-1a17efbf31ee9f71699485b35f0ea6af_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1080\" data-rawheight=\"1440\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-1a17efbf31ee9f71699485b35f0ea6af_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='1440'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1080\" data-rawheight=\"1440\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-1a17efbf31ee9f71699485b35f0ea6af_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-1a17efbf31ee9f71699485b35f0ea6af_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>2.《Python Linux 系统管理和自动化运维》</b></p><figure data-size=\"small\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e6c1e60fdaa893306510020c9f7daa73_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1080\" data-rawheight=\"1440\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-e6c1e60fdaa893306510020c9f7daa73_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='1440'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1080\" data-rawheight=\"1440\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-e6c1e60fdaa893306510020c9f7daa73_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e6c1e60fdaa893306510020c9f7daa73_720w.jpg?source=54b3c3a5\"></figure><p> 整体学下来一般来说是3-6个月左右。</p><p><b>觉得有帮助的话就点个赞吧。</b></p><a data-draft-node=\"block\" data-draft-type=\"ad-link-card\"></a><p></p>"}{"如何实现 C/C++ 与 Python 的通信？": "########## 以下所有文字均为答主手敲，转载请注明出处和作者 ##########<br>## 更新：关于ctypes，见拙作 <a href=\"http://zhuanlan.zhihu.com/python-dev/20152309\" class=\"internal\">聊聊Python ctypes 模块 - 蛇之魅惑 - 知乎专栏</a><br><br>属于混合编程的问题。较全面的介绍一下，不仅限于题主提出的问题。<br>以下讨论中，Python指它的标准实现，即CPython（虽然不是很严格）<br><br>本文分4个部分<br><ol><li>C/C++ 调用 Python （基础篇）— 仅讨论Python官方提供的实现方式</li><li>Python 调用 C/C++ （基础篇）— 仅讨论Python官方提供的实现方式</li><li>C/C++ 调用 Python （高级篇）— 使用 Cython</li><li>Python 调用 C/C++  （高级篇）— 使用 SWIG<br></li></ol>练习本文中的例子，需要搭建Python扩展开发环境。具体细节见<a href=\"http://zhuanlan.zhihu.com/python-dev/20150730\" class=\"internal\">搭建Python扩展开发环境 - 蛇之魅惑 - 知乎专栏</a><br><br><b>1 C/C++ 调用 Python（基础篇）</b><br>Python 本身就是一个C库。你所看到的可执行体python只不过是个stub。真正的python实体在动态链接库里实现，在Windows平台上，这个文件位于 %SystemRoot%\\System32\\python27.dll。<br><br>你也可以在自己的程序中调用Python，看起来非常容易：<br><br><div class=\"highlight\"><pre><code class=\"language-c\"><span></span><span class=\"c1\">//my_python.c</span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;Python.h&gt;</span><span class=\"cp\"></span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">argv</span><span class=\"p\">[])</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">Py_SetProgramName</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]);</span>\n  <span class=\"n\">Py_Initialize</span><span class=\"p\">();</span>\n  <span class=\"n\">PyRun_SimpleString</span><span class=\"p\">(</span><span class=\"s\">\"print 'Hello Python!'</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n  <span class=\"n\">Py_Finalize</span><span class=\"p\">();</span>\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>在Windows平台下，打开Visual Studio命令提示符，编译命令为<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>cl my_python.c -IC:\\Python27\\include C:\\Python27\\libs\\python27.lib\n</code></pre></div>在Linux下编译命令为<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>gcc my_python.c -o my_python -I/usr/include/python2.7/ -lpython2.7\n</code></pre></div>在Mac OS X 下的编译命令同上<br><br>产生可执行文件后，直接运行，结果为输出<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>Hello Python!\n</code></pre></div>Python库函数PyRun_SimpleString可以执行字符串形式的Python代码。<br><br>虽然非常简单，但这段代码除了能用C语言动态生成一些Python代码之外，并没有什么用处。我们需要的是C语言的数据结构能够和Python交互。<br><br>下面举个例子，比如说，有一天我们用Python写了一个功能特别强大的函数：<br><br><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">def</span> <span class=\"nf\">great_function</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n</code></pre></div><br>接下来要把它包装成C语言的函数。我们期待的C语言的对应函数应该是这样的：<br><br><div class=\"highlight\"><pre><code class=\"language-c\"><span></span><span class=\"kt\">int</span> <span class=\"nf\">great_function_from_python</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">res</span><span class=\"p\">;</span> \n    <span class=\"c1\">// some magic</span>\n    <span class=\"k\">return</span> <span class=\"n\">res</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>首先，复用Python模块得做‘import’，这里也不例外。所以我们把great_function放到一个module里，比如说，这个module名字叫 great_module.py<br><br>接下来就要用C来调用Python了，完整的代码如下：<br><div class=\"highlight\"><pre><code class=\"language-c\"><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;Python.h&gt;</span><span class=\"cp\"></span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">great_function_from_python</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">res</span><span class=\"p\">;</span>\n    <span class=\"n\">PyObject</span> <span class=\"o\">*</span><span class=\"n\">pModule</span><span class=\"p\">,</span><span class=\"o\">*</span><span class=\"n\">pFunc</span><span class=\"p\">;</span>\n    <span class=\"n\">PyObject</span> <span class=\"o\">*</span><span class=\"n\">pArgs</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">pValue</span><span class=\"p\">;</span>\n    \n    <span class=\"cm\">/* import */</span>\n    <span class=\"n\">pModule</span> <span class=\"o\">=</span> <span class=\"n\">PyImport_Import</span><span class=\"p\">(</span><span class=\"n\">PyString_FromString</span><span class=\"p\">(</span><span class=\"s\">\"great_module\"</span><span class=\"p\">));</span>\n\n    <span class=\"cm\">/* great_module.great_function */</span>\n    <span class=\"n\">pFunc</span> <span class=\"o\">=</span> <span class=\"n\">PyObject_GetAttrString</span><span class=\"p\">(</span><span class=\"n\">pModule</span><span class=\"p\">,</span> <span class=\"s\">\"great_function\"</span><span class=\"p\">);</span> \n    \n    <span class=\"cm\">/* build args */</span>\n    <span class=\"n\">pArgs</span> <span class=\"o\">=</span> <span class=\"n\">PyTuple_New</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n    <span class=\"n\">PyTuple_SetItem</span><span class=\"p\">(</span><span class=\"n\">pArgs</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">PyInt_FromLong</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">));</span>\n      \n    <span class=\"cm\">/* call */</span>\n    <span class=\"n\">pValue</span> <span class=\"o\">=</span> <span class=\"n\">PyObject_CallObject</span><span class=\"p\">(</span><span class=\"n\">pFunc</span><span class=\"p\">,</span> <span class=\"n\">pArgs</span><span class=\"p\">);</span>\n    \n    <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">PyInt_AsLong</span><span class=\"p\">(</span><span class=\"n\">pValue</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"n\">res</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>从上述代码可以窥见Python内部运行的方式：<br><ul><li>所有Python元素，module、function、tuple、string等等，实际上都是PyObject。C语言里操纵它们，一律使用PyObject *。</li><li>Python的类型与C语言类型可以相互转换。Python类型XXX转换为C语言类型YYY要使用PyXXX_AsYYY函数；C类型YYY转换为Python类型XXX要使用PyXXX_FromYYY函数。</li><li>也可以创建Python类型的变量，使用PyXXX_New可以创建类型为XXX的变量。</li><li>若a是Tuple，则a[i] = b对应于 PyTuple_SetItem(a,i,b)，有理由相信还有一个函数PyTuple_GetItem完成取得某一项的值。</li><li>不仅Python语言很优雅，Python的库函数API也非常优雅。</li></ul><br><p>现在我们得到了一个C语言的函数了，可以写一个main测试它</p><div class=\"highlight\"><pre><code class=\"language-c\"><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;Python.h&gt;</span><span class=\"cp\"></span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">great_function_from_python</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"p\">);</span> \n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">argv</span><span class=\"p\">[])</span> <span class=\"p\">{</span>\n    <span class=\"n\">Py_Initialize</span><span class=\"p\">();</span>\n    <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"%d\"</span><span class=\"p\">,</span><span class=\"n\">great_function_from_python</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">));</span>\n    <span class=\"n\">Py_Finalize</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</code></pre></div><br><p>编译的方式就用本节开头使用的方法。</p><p>在Linux/Mac OSX运行此示例之前，可能先需要设置环境变量：</p><p>bash:</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>export PYTHONPATH=.:$PYTHONPATH\n</code></pre></div><p>csh:</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>setenv PYTHONPATH .:$PYTHONPATH\n</code></pre></div><br><b>2 Python 调用 C/C++（基础篇）</b><br>这种做法称为Python扩展。<br>比如说，我们有一个功能强大的C函数：<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>int great_function(int a) {\n    return a + 1;\n}\n</code></pre></div>期望在Python里这样使用：<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; from great_module import great_function \n&gt;&gt;&gt; great_function(2)\n3\n</code></pre></div>考虑最简单的情况。我们把功能强大的函数放入C文件 great_module.c 中。<br><div class=\"highlight\"><pre><code class=\"language-c\"><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;Python.h&gt;</span><span class=\"cp\"></span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">great_function</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">static</span> <span class=\"n\">PyObject</span> <span class=\"o\">*</span> <span class=\"nf\">_great_function</span><span class=\"p\">(</span><span class=\"n\">PyObject</span> <span class=\"o\">*</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">PyObject</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">_a</span><span class=\"p\">;</span>\n    <span class=\"kt\">int</span> <span class=\"n\">res</span><span class=\"p\">;</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">PyArg_ParseTuple</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"s\">\"i\"</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">_a</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"nb\">NULL</span><span class=\"p\">;</span>\n    <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">great_function</span><span class=\"p\">(</span><span class=\"n\">_a</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"n\">PyLong_FromLong</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">static</span> <span class=\"n\">PyMethodDef</span> <span class=\"n\">GreateModuleMethods</span><span class=\"p\">[]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"p\">{</span>\n        <span class=\"s\">\"great_function\"</span><span class=\"p\">,</span>\n        <span class=\"n\">_great_function</span><span class=\"p\">,</span>\n        <span class=\"n\">METH_VARARGS</span><span class=\"p\">,</span>\n        <span class=\"s\">\"\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"nb\">NULL</span><span class=\"p\">,</span> <span class=\"nb\">NULL</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">NULL</span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"n\">PyMODINIT_FUNC</span> <span class=\"nf\">initgreat_module</span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span> <span class=\"n\">Py_InitModule</span><span class=\"p\">(</span><span class=\"s\">\"great_module\"</span><span class=\"p\">,</span> <span class=\"n\">GreateModuleMethods</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>除了功能强大的函数great_function外，这个文件中还有以下部分：<br><ul><li>包裹函数_great_function。它负责将Python的参数转化为C的参数（PyArg_ParseTuple），调用实际的great_function，并处理great_function的返回值，最终返回给Python环境。</li><li>导出表GreateModuleMethods。它负责告诉Python这个模块里有哪些函数可以被Python调用。导出表的名字可以随便起，每一项有4个参数：第一个参数是提供给Python环境的函数名称，第二个参数是_great_function，即包裹函数。第三个参数的含义是参数变长，第四个参数是一个说明性的字符串。导出表总是以{NULL, NULL, 0, NULL}结束。</li><li>导出函数initgreat_module。这个的名字不是任取的，是你的module名称添加前缀init。导出函数中将模块名称与导出表进行连接。</li></ul><br><p>在Windows下面，在Visual Studio命令提示符下编译这个文件的命令是</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>cl /LD great_module.c /o great_module.pyd -IC:\\Python27\\include C:\\Python27\\libs\\python27.lib\n</code></pre></div><p>/LD 即生成动态链接库。编译成功后在当前目录可以得到 great_module.pyd（实际上是dll）。这个pyd可以在Python环境下直接当作module使用。<br></p><br><p>在Linux下面，则用gcc编译：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>gcc -fPIC -shared great_module.c -o great_module.so -I/usr/include/python2.7/ -lpython2.7\n</code></pre></div><p>在当前目录下得到great_module.so，同理可以在Python中直接使用。</p><br><p><b>本部分参考资料</b><br></p><ul><li>《Python源码剖析-深度探索动态语言核心技术》是系统介绍CPython实现以及运行原理的优秀教程。</li><li>Python 官方文档的这一章详细介绍了C/C++与Python的双向互动<a class=\" wrap external\" href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/2/extending/index.html%23extending-index\" target=\"_blank\" rel=\"nofollow noreferrer\">Extending and Embedding the Python Interpreter</a></li><li>关于编译环境，本文所述方法仅为出示原理所用。规范的方式如下：<a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/2/extending/building.html%23building\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">3. Building C and C++ Extensions with distutils</a></li><li>作为字典使用的官方参考文档 <a class=\" wrap external\" href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/2/c-api/index.html%23c-api-index\" target=\"_blank\" rel=\"nofollow noreferrer\">Python/C API Reference Manual</a></li></ul><br>用以上的方法实现C/C++与Python的混合编程，需要对Python的内部实现有相当的了解。接下来介绍当前较为成熟的技术Cython和SWIG。<br><br><b>3 C/C++ 调用 Python（使用Cython）<br></b><br>在前面的小节中谈到，Python的数据类型和C的数据类型貌似是有某种“一一对应”的关系的，此外，由于Python（确切的说是CPython）本身是由C语言实现的，故Python数据类型之间的函数运算也必然与C语言有对应关系。那么，有没有可能“自动”的做替换，把Python代码直接变成C代码呢？答案是肯定的，这就是Cython主要解决的问题。<br><br>安装Cython非常简单。Python 2.7.9以上的版本已经自带easy_install：<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>easy_install -U cython\n</code></pre></div>在Windows环境下依然需要Visual Studio，由于安装的过程需要编译Cython的源代码，故上述命令需要在Visual Studio命令提示符下完成。一会儿使用Cython的时候，也需要在Visual Studio命令提示符下进行操作，这一点和第一部分的要求是一样的。<br><br>继续以例子说明：<br><div class=\"highlight\"><pre><code class=\"language-cython\"><span></span><span class=\"c\">#great_module.pyx</span>\n<span class=\"k\">cdef</span> <span class=\"kr\">public</span> <span class=\"nf\">great_function</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">index</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span>\n</code></pre></div>这其中有非Python关键字cdef和public。这些关键字属于Cython。由于我们需要在C语言中使用“编译好的Python代码”，所以得让great_function从外面变得可见，方法就是以“public”修饰。而cdef类似于Python的def，只有使用cdef才可以使用Cython的关键字public。<br><br>这个函数中其他的部分与正常的Python代码是一样的。<br><br>接下来编译 great_module.pyx<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>cython great_module.pyx\n</code></pre></div>得到great_module.h和great_module.c。打开great_module.h可以找到这样一句声明：<br><div class=\"highlight\"><pre><code class=\"language-c\"><span></span><span class=\"n\">__PYX_EXTERN_C</span> <span class=\"n\">DL_IMPORT</span><span class=\"p\">(</span><span class=\"n\">PyObject</span><span class=\"p\">)</span> <span class=\"o\">*</span><span class=\"n\">great_function</span><span class=\"p\">(</span><span class=\"n\">PyObject</span> <span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"n\">PyObject</span> <span class=\"o\">*</span><span class=\"p\">)</span>\n</code></pre></div>写一个main使用great_function。注意great_function并不规定a是何种类型，它的功能只是提取a的第index的成员而已，故使用great_function的时候，a可以传入Python String，也可以传入tuple之类的其他可迭代类型。仍然使用之前提到的类型转换函数PyXXX_FromYYY和PyXXX_AsYYY。<br><br><div class=\"highlight\"><pre><code class=\"language-c\"><span></span><span class=\"c1\">//main.c</span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;Python.h&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">\"great_module.h\"</span><span class=\"cp\"></span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">argv</span><span class=\"p\">[])</span> <span class=\"p\">{</span>\n    <span class=\"n\">PyObject</span> <span class=\"o\">*</span><span class=\"n\">tuple</span><span class=\"p\">;</span>\n    <span class=\"n\">Py_Initialize</span><span class=\"p\">();</span>\n    <span class=\"n\">initgreat_module</span><span class=\"p\">();</span>\n    <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"%s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"n\">PyString_AsString</span><span class=\"p\">(</span>\n                <span class=\"n\">great_function</span><span class=\"p\">(</span>\n                    <span class=\"n\">PyString_FromString</span><span class=\"p\">(</span><span class=\"s\">\"hello\"</span><span class=\"p\">),</span>\n                    <span class=\"n\">PyInt_FromLong</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">));</span>\n    <span class=\"n\">tuple</span> <span class=\"o\">=</span> <span class=\"n\">Py_BuildValue</span><span class=\"p\">(</span><span class=\"s\">\"(iis)\"</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s\">\"three\"</span><span class=\"p\">);</span>\n    <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"%d</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"n\">PyInt_AsLong</span><span class=\"p\">(</span>\n                <span class=\"n\">great_function</span><span class=\"p\">(</span>\n                    <span class=\"n\">tuple</span><span class=\"p\">,</span>\n                    <span class=\"n\">PyInt_FromLong</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">));</span>\n    <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"%s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"n\">PyString_AsString</span><span class=\"p\">(</span>\n                <span class=\"n\">great_function</span><span class=\"p\">(</span>\n                    <span class=\"n\">tuple</span><span class=\"p\">,</span>\n                    <span class=\"n\">PyInt_FromLong</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">));</span>\n    <span class=\"n\">Py_Finalize</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</code></pre></div>编译命令和第一部分相同：<br>在Windows下编译命令为<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>cl main.c great_module.c -IC:\\Python27\\include C:\\Python27\\libs\\python27.lib\n</code></pre></div>在Linux下编译命令为<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>gcc main.c great_module.c -o main -I/usr/include/python2.7/ -lpython2.7\n</code></pre></div>这个例子中我们使用了Python的动态类型特性。如果你想指定类型，可以利用Cython的静态类型关键字。例子如下：<br><br><div class=\"highlight\"><pre><code class=\"language-cython\"><span></span><span class=\"c\">#great_module.pyx</span>\n<span class=\"k\">cdef</span> <span class=\"kr\">public</span> <span class=\"kt\">char</span> <span class=\"nf\">great_function</span><span class=\"p\">(</span><span class=\"n\">const</span> <span class=\"n\">char</span> <span class=\"o\">*</span> <span class=\"n\">a</span><span class=\"p\">,</span><span class=\"nb\">int</span> <span class=\"n\">index</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span>\n</code></pre></div>cython编译后得到的.h里，great_function的声明是这样的：<br><div class=\"highlight\"><pre><code class=\"language-c\"><span></span><span class=\"n\">__PYX_EXTERN_C</span> <span class=\"nf\">DL_IMPORT</span><span class=\"p\">(</span><span class=\"kt\">char</span><span class=\"p\">)</span> <span class=\"n\">great_function</span><span class=\"p\">(</span><span class=\"kt\">char</span> <span class=\"k\">const</span> <span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"p\">);</span>\n</code></pre></div>很开心对不对！<br>这样的话，我们的main函数已经几乎看不到Python的痕迹了：<br><div class=\"highlight\"><pre><code class=\"language-c\"><span></span><span class=\"c1\">//main.c</span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;Python.h&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">\"great_module.h\"</span><span class=\"cp\"></span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">argv</span><span class=\"p\">[])</span> <span class=\"p\">{</span>\n    <span class=\"n\">Py_Initialize</span><span class=\"p\">();</span>\n    <span class=\"n\">initgreat_module</span><span class=\"p\">();</span>\n    <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"%c\"</span><span class=\"p\">,</span><span class=\"n\">great_function</span><span class=\"p\">(</span><span class=\"s\">\"Hello\"</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">));</span>\n    <span class=\"n\">Py_Finalize</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</code></pre></div>在这一部分的最后我们给一个看似实用的应用（仅限于Windows）：<br>还是利用刚才的great_module.pyx，准备一个dllmain.c：<br><div class=\"highlight\"><pre><code class=\"language-c\"><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;Python.h&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;Windows.h&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">\"great_module.h\"</span><span class=\"cp\"></span>\n\n<span class=\"k\">extern</span> <span class=\"nf\">__declspec</span><span class=\"p\">(</span><span class=\"n\">dllexport</span><span class=\"p\">)</span> <span class=\"kt\">int</span> <span class=\"kr\">__stdcall</span> <span class=\"n\">_great_function</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"kt\">char</span> <span class=\"o\">*</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">great_function</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">BOOL</span> <span class=\"n\">WINAPI</span> <span class=\"nf\">DllMain</span><span class=\"p\">(</span><span class=\"n\">HINSTANCE</span> <span class=\"n\">hinstDLL</span><span class=\"p\">,</span><span class=\"n\">DWORD</span> <span class=\"n\">fdwReason</span><span class=\"p\">,</span><span class=\"n\">LPVOID</span> <span class=\"n\">lpReserved</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">switch</span><span class=\"p\">(</span> <span class=\"n\">fdwReason</span> <span class=\"p\">)</span> <span class=\"p\">{</span> \n        <span class=\"k\">case</span> <span class=\"nl\">DLL_PROCESS_ATTACH</span><span class=\"p\">:</span>\n            <span class=\"n\">Py_Initialize</span><span class=\"p\">();</span>\n            <span class=\"n\">initgreat_module</span><span class=\"p\">();</span>\n            <span class=\"k\">break</span><span class=\"p\">;</span>\n        <span class=\"k\">case</span> <span class=\"nl\">DLL_PROCESS_DETACH</span><span class=\"p\">:</span>\n            <span class=\"n\">Py_Finalize</span><span class=\"p\">();</span>\n            <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">TRUE</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>在Visual Studio命令提示符下编译：<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>cl /LD dllmain.c great_module.c -IC:\\Python27\\include C:\\Python27\\libs\\python27.lib\n</code></pre></div>会得到一个dllmain.dll。我们在Excel里面使用它，没错，传说中的<b>Excel与Python混合编程</b>：<br><figure><noscript><img data-rawheight=\"797\" data-rawwidth=\"1007\" src=\"https://pic2.zhimg.com/50/2f45c9f2f8407d46f51f203efc2e8181_720w.png?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1007\" data-original=\"https://pic2.zhimg.com/2f45c9f2f8407d46f51f203efc2e8181_720w.jpg?source=54b3c3a5\"></noscript><img data-rawheight=\"797\" data-rawwidth=\"1007\" src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1007'%20height='797'&gt;&lt;/svg&gt;\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1007\" data-original=\"https://pic2.zhimg.com/2f45c9f2f8407d46f51f203efc2e8181_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/2f45c9f2f8407d46f51f203efc2e8181_720w.png?source=54b3c3a5\"></figure><br>参考资料：Cython的官方文档，质量非常高：<br><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//docs.cython.org/index.html\" target=\"_blank\" rel=\"nofollow noreferrer\">Welcome to Cython’s Documentation</a><br><br><b>4 Python调用C/C++（使用SWIG）</b><br><br>用C/C++对脚本语言的功能扩展是非常常见的事情，Python也不例外。除了SWIG，市面上还有若干用于Python扩展的工具包，比较知名的还有Boost.Python、SIP等，此外，Cython由于可以直接集成C/C++代码，并方便的生成Python模块，故也可以完成扩展Python的任务。<br><br>答主在这里选用SWIG的一个重要原因是，它不仅可以用于Python，也可以用于其他语言。如今SWIG已经支持C/C++的好基友Java，主流脚本语言Python、Perl、Ruby、PHP、JavaScript、tcl、Lua，还有Go、C#，以及R。SWIG是基于配置的，也就是说，原则上一套配置改变不同的编译方法就能适用各种语言（当然，这是理想情况了……）<br><br>SWIG的安装方便，有Windows的预编译包，解压即用，绿色健康。主流Linux通常集成swig的包，也可以下载源代码自己编译，SWIG非常小巧，通常安装不会出什么问题。<br><br>用SWIG扩展Python，你需要有一个待扩展的C/C++库。这个库有可能是你自己写的，也有可能是某个项目提供的。这里举一个不浮夸的例子：希望在Python中用到SSE4指令集的CRC32指令。<br><br>首先打开指令集的文档：<a class=\" external\" href=\"https://link.zhihu.com/?target=https%3A//software.intel.com/en-us/node/514245\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">software.intel.com/en-u</span><span class=\"invisible\">s/node/514245</span><span class=\"ellipsis\"></span></a><br>可以看到有6个函数。分析6个函数的原型，其参数和返回值都是简单的整数。于是书写SWIG的配置文件（为了简化起见，未包含2个64位函数）：<br><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>/* File: mymodule.i */\n%module mymodule\n\n%{\n#include \"nmmintrin.h\"\n%}\n\nint _mm_popcnt_u32(unsigned int v);\nunsigned int _mm_crc32_u8 (unsigned int crc, unsigned char v);\nunsigned int _mm_crc32_u16(unsigned int crc, unsigned short v);\nunsigned int _mm_crc32_u32(unsigned int crc, unsigned int v);\n</code></pre></div>接下来使用SWIG将这个配置文件编译为所谓Python Module Wrapper<br><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>swig -python mymodule.i\n</code></pre></div><br>得到一个 mymodule_wrap.c和一个mymodule.py。把它编译为Python扩展：<br><br><p>Windows：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>cl /LD mymodule_wrap.c /o _mymodule.pyd -IC:\\Python27\\include C:\\Python27\\libs\\python27.lib\n</code></pre></div><br><p>Linux：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>gcc -fPIC -shared mymodule_wrap.c -o _mymodule.so -I/usr/include/python2.7/ -lpython2.7\n</code></pre></div>注意输出文件名前面要加一个下划线。<br>现在可以立即在Python下使用这个module了：<br><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; import mymodule\n&gt;&gt;&gt; mymodule._mm_popcnt_u32(10)\n2\n</code></pre></div><br>回顾这个配置文件分为3个部分：<br><ol><li>定义module名称mymodule，通常，module名称要和文件名保持一致。</li><li>%{ %} 包裹的部分是C语言的代码，这段代码会原封不动的复制到mymodule_wrap.c</li><li>欲导出的函数签名列表。直接从头文件里复制过来即可。</li></ol><br><p>还记得本文第2节的那个great_function吗？有了SWIG，事情就会变得如此简单：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>/* great_module.i */\n%module great_module\n%{\nint great_function(int a) {\n    return a + 1;\n}\n%}\nint great_function(int a);\n</code></pre></div><p>换句话说，SWIG自动完成了诸如Python类型转换、module初始化、导出代码表生成的诸多工作。</p><br><p>对于C++，SWIG也可以应对。例如以下代码有C++类的定义：</p><div class=\"highlight\"><pre><code class=\"language-cpp\"><span></span><span class=\"c1\">//great_class.h</span>\n<span class=\"cp\">#ifndef GREAT_CLASS</span>\n<span class=\"cp\">#define GREAT_CLASS</span>\n<span class=\"k\">class</span> <span class=\"nc\">Great</span> <span class=\"p\">{</span>\n    <span class=\"k\">private</span><span class=\"o\">:</span>\n        <span class=\"kt\">int</span> <span class=\"n\">s</span><span class=\"p\">;</span>\n    <span class=\"k\">public</span><span class=\"o\">:</span>\n        <span class=\"kt\">void</span> <span class=\"n\">setWall</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">_s</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">_s</span><span class=\"p\">;};</span>\n        <span class=\"kt\">int</span> <span class=\"nf\">getWall</span> <span class=\"p\">()</span> <span class=\"p\">{</span><span class=\"k\">return</span> <span class=\"n\">s</span><span class=\"p\">;};</span>\n<span class=\"p\">};</span>\n<span class=\"cp\">#endif </span><span class=\"c1\">// GREAT_CLASS</span>\n</code></pre></div><p>对应的SWIG配置文件</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>/* great_class.i */\n%module great_class\n%{\n#include \"great_class.h\"\n%}\n%include \"great_class.h\"\n</code></pre></div><p>这里不再重新敲一遍class的定义了，直接使用SWIG的%include指令<br></p><p>SWIG编译时要加-c++这个选项，生成的扩展名为cxx</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>swig -c++ -python great_class.i\n</code></pre></div>Windows下编译：<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>cl /LD great_class_wrap.cxx /o _great_class.pyd -IC:\\Python27\\include C:\\Python27\\libs\\python27.lib\n</code></pre></div><p>Linux，使用C++的编译器</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>g++ -fPIC -shared great_class_wrap.cxx -o _great_class.so  -I/usr/include/python2.7/ -lpython2.7\n</code></pre></div>在Python交互模式下测试：<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; import great_class\n&gt;&gt;&gt; c = great_class.Great()\n&gt;&gt;&gt; c.setWall(5)\n&gt;&gt;&gt; c.getWall()\n5\n</code></pre></div>也就是说C++的class会直接映射到Python class<br><br>SWIG非常强大，对于Python接口而言，简单类型，甚至指针，都无需人工干涉即可自动转换，而复杂类型，尤其是自定义类型，SWIG提供了typemap供转换。而一旦使用了typemap，配置文件将不再在各个语言当中通用。<br><br><b>参考资料：</b><br>SWIG的官方文档，质量比较高。<a href=\"https://link.zhihu.com/?target=http%3A//www.swig.org/Doc3.0/Contents.html%23Contents\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">SWIG Users Manual</a><br>有个对应的中文版官网，很多年没有更新了。<br><br><b>写在最后：</b><br>由于CPython自身的结构设计合理，使得Python的C/C++扩展非常容易。如果打算快速完成任务，Cython（C/C++调用Python）和SWIG（Python调用C/C++）是很不错的选择。但是，一旦涉及到比较复杂的转换任务，无论是继续使用Cython还是SWIG，仍然需要学习Python源代码。<br><br>本文使用的开发环境：<br>Python 2.7.10<br>Cython 0.22<br>SWIG 3.0.6<br>Windows 10 x64 RTM<br>CentOS 7.1 AMD 64<br>Mac OSX 10.10.4<br>文中所述原理与具体环境适用性强。<br>文章所述代码均用于演示，缺乏必备的异常检查", "有没有简单一点的 Python 小例子或小项目？": "<p>可能很多人学编程有个误区，总想着从最基础的原理开始，看了一大堆书一堆视频还是不会，兴趣也早没了。而自己动手写代码是最好的开始方式，不管TM三七二十一，直接就是干，无论是看书还是看视频，确保身边有台电脑可以直接操作，就好比你拿到驾驶说明书一样，最好你已经坐在车上可以直接试验。 只是如果不够细心或对知识的掌握不够，误解某些重要概念，给以后写代码埋下隐患，这个时候你要去看官方文档，看最佳实践，看理论知识。</p><p>GitHub有个项目写了大量的Python小脚本，有近万个的Star，我列了30个Pyhon小例子，或许能帮助你快速上手Python，而且他们都是能在实际中可以用到的，有时还能帮助你节省大量时间，相信照着练完之后，代码水平会大有长进。</p><p>1、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/batch_file_rename.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">batch_file_rename.py</a> 批量重命名指定目录下面所有文件的后缀名。</p><p>2、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/create_dir_if_not_there.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">create_dir_if_not_there.py</a> 如果不存在的目录。</p><p>3、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/youtube-downloader%2520fast.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Fast Youtube Downloader</a> 多线程高速下载Youtube视频。</p><p>4、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/tree/master/Google%2520Image%2520Downloader\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Google Image Downloader</a> 根据指定词语从Google搜索图片并下载。</p><p>5、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/dir_test.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">dir_test.py</a> 检查目录 <code>testdir</code> 是否存在, 如果不存在则创建一个。</p><p>6、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/env_check.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">env_check.py</a> 检查环境变量</p><p>7、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/fileinfo.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">fileinfo.py</a> 展示文件的元信息</p><p>8、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/folder_size.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">folder_size.py</a> 统计当前当前文件夹的大小</p><p>9、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/logs.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">logs.py</a> 搜索指定目录下所有<code>*.log</code>文件，并压缩以日期格式转储。</p><p>10、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/move_files_over_x_days.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">move_files_over_x_days.py</a> 移动所有满足指定时间日期的文件从源目录到目标文件。</p><p>11、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/nslookup_check.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">nslookup_check.py</a> 打开文件<code>server_list.txt</code>，然后nslookup。</p><p>12、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/osinfo.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">osinfo.py</a> 检查系统信息</p><p>13、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/ping_servers.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ping_servers.py</a> 根据指定的参数，ping 应用组关联的服务器。</p><p>14、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/ping_subnet.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ping_subnet.py</a> ping 子网</p><p>15、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/powerdown_startup.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">powerdown_startup.py</a> 这个脚本将遍历服务器，如果服务器启动将用gputty登录，如果没有启动将会通知你。</p><p>16、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/puttylogs.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">puttylogs.py</a> 这个脚本将日志文件归档压缩到置顶目录</p><p>17、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/script_count.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">script_count.py</a> 统计目录下不同脚本</p><p>18、 [get_youtube_view.py] 这个标本用来统计 youtube 视频的观看次数，有时我也用来统计歌曲的播放次数。 19、 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/script_listing.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">script_listing.py</a> 这个脚本用来遍历指定目录以及子目录下面所有的文件</p><p>20、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/testlines.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">testlines.py</a> 这个脚本用来读取文件并打印100行</p><p>21、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/tweeter.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">tweeter.py</a> 用这个脚本发送Twitter</p><p>22、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/serial_scanner.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">serial_scanner.py</a> 端口扫描</p><p>23、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/CountMillionCharacter.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CountMillionCharacter.py</a> And <a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/CountMillionCharacters-2.0.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CountMillionCharacter2.0</a>.py 统计文本字符</p><p>24、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/xkcd_downloader.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">xkcd_downloader.py</a> 下载最新的XKCD漫画，然后将他们放入comics新文件夹</p><p>25、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/timymodule.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">timymodule.py</a> 一个更好的易于使用的timeit模块 26、 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/calculator.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">calculator.py</a> 使用 Python 的eval()函数实现计算器</p><p>27、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/Google_News.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Google_News.py</a> 使用BeautifulSoup通过新闻链接获取新闻标题</p><p>28、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/Cricket_score.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">cricket_live_score</a> 使用BeautifulSoup提供板球直播分数</p><p>29、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/youtube.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">youtube.py</a> 输入一首歌曲名称然后获取最佳匹配歌曲并播放</p><p>30、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/site_health.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">site_health.py</a> 检查远程服务器的健康情况</p><p>31、<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/SimpleStopWatch.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">SimpleStopWatch.py</a> 使用 time 模块简单实现秒表功能</p>", "Python 学习完基础语法知识后，如何进一步提高？": "<p>---4.30更新---感谢大家支持，点赞都破两千了。给大家整理出来新的资料，需要的小伙伴来自取：<br><b>Python练手项目视频如下：</b></p><ul><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/343.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【Python】2小时利用Python实现一个聊天器</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/361.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python从零基础到大牛项目实战：抓取景点评论数量实现旅游景点推荐</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/372.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">春运回家抢票无忧，Python大牛带你实现12306全自动抢票</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/76.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python之微信开发神器</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/75.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python之爬虫开发帝王</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/78.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python之大数据开发奇兵</a></b></li></ul><p><b>Python自学基础知识如下：</b></p><ul><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/273.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门教程完整版（懂中文就能学会）</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/71.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python网络爬虫第一天</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/72.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python网络爬虫第二天</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/240.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">6节课掌握Python爬虫视频</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/242.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">6节课机器学习入门</a></b> </li></ul><p><b>以下为原文内容：</b></p><h2>Python 学习完基础语法知识后，如何进一步提高：</h2><p>我是一个从小白到自学了python的同学。扫了一眼回答，大家都是发资源项目。<b>我想说个重点，找到以后自己的发展方向，你才有重点提高的方向讷！</b>不知道<b>题主的基础包括不包括：网络编程、并发编程、数据库编程、正则表达式、Linux系统应用、函数的高级应用</b>这些不。如果包括，那么就开始做个mini-web框架，不包括那么就学这些。</p><p><b>懒人目录</b></p><ul><li>找到发展方向，选择合适的学习线路图</li><li>找到线路图配套资料</li><li>整理出来各个阶段的项目</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb\" width=\"4096\" data-original=\"https://pic2.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='4096'%20height='419'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"4096\" data-original=\"https://pic2.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></figure><p><b>1.找到发展方向，选择合适的学习线路图</b></p><p>我一直都认为找到未来发展方向才是最重要的事情。我说说我自己吧，我一开始觉得python有发展方向，因为我是一个做推广的，也涉及到seo相关工作。我深知道数据的重要性，开始只是对python有了浓厚的兴趣，一腔热血准备学习python。但是，学了一些基础知识之后就放弃了，也许是因为书太厚看不下去，也许是因为不知道学的这些可以做什么。有一次工作当中，发现了爬虫对于我的推广工作很有利。很多杠精会说，有那么多可以爬虫的软件还学什么python，我就愿意自学哈。</p><p>所以我觉得仅仅对于小白来说，最重要的事情不是学完基础就继续。而是找到职业发展路径。知道发展了以后在去找重点去学习。</p><ul><li>如果未来发展是web方面：那么我们需要主要学的是python的基础、python的进阶、前端开发以及web开发；</li><li>如果未来的发展是爬虫工程师：那么我们需要学的除了上面这四中还要加上爬虫。</li><li>如果未来发展是数据工程师：那么还要掌握自动化运维、数据挖掘和分析以及</li><li>那么未来发展是人工智能的话：就要学习机器学习人工智能相关知识；</li></ul><p>上面这样的知识点可能会说懵大家，直接看各个阶段的相关知识拆解：<br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"2161\" data-rawheight=\"2143\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e3b31af19a8e6d9cff5f30cfdd79007e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2161\" data-original=\"https://pic4.zhimg.com/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2161'%20height='2143'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"2161\" data-rawheight=\"2143\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e3b31af19a8e6d9cff5f30cfdd79007e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2161\" data-original=\"https://pic4.zhimg.com/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\"><figcaption>图片来源网络，侵删</figcaption></figure><p>光学知识点没有用，因为真的不知道能做什么。可能有的人就知道，但是我当时不知道。所以，我觉得有必要清楚下面的图：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-91a51691f367798acbd46454e59966a9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3490\" data-rawheight=\"1338\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-67a7030bb014f7478a978c22fa7ac563_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"3490\" data-original=\"https://pic4.zhimg.com/v2-91a51691f367798acbd46454e59966a9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='3490'%20height='1338'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3490\" data-rawheight=\"1338\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-67a7030bb014f7478a978c22fa7ac563_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"3490\" data-original=\"https://pic4.zhimg.com/v2-91a51691f367798acbd46454e59966a9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-91a51691f367798acbd46454e59966a9_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb\" width=\"4096\" data-original=\"https://pic2.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='4096'%20height='419'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"4096\" data-original=\"https://pic2.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></figure><p><b>2.找到图中配套知识点以及资料</b></p><h2><b>第一阶段、Python基础</b></h2><p><b>知识点：</b></p><ul><li><b>计算机组成原理：</b>计算机组成部分、操作系统分类、B/S和C/S架构、理解软件与硬件的区别</li><li><b>Python变量以及开发环境：</b>字符串、数字、字典、列表、元祖等</li><li><b>流程控制语句：</b>程序的执行顺序，顺序执行、循环执行、选择执行</li><li><b>函数：</b>定义函数、调用函数、函数的嵌套、递归函数</li><li><b>文件的基本操作：</b>文件的打开、编辑、关闭</li><li><b>面向对象编程：</b>类对象、实例对象、定义类、实例化对象</li><li><b>异常处理：</b>学会捕捉异常、自定义异常</li><li><b>模块和包：</b>理解模块和包的概念并学会使用</li><li><b>飞机大战游戏制作：</b>自己独立完成飞机大战游戏</li></ul><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1smaYTkT%23list/path%3D%252F1%25E5%25AE%2598%25E7%25BD%2591%25E8%25A7%2586%25E9%25A2%2591%25E5%25BA%2593%28%25E5%258B%25BF%25E5%2588%25A0%29%252Fpython%25E5%25AD%25A6%25E7%25A7%2591%252FPython%25E5%2585%25AC%25E5%25BC%2580%25E8%25AF%25BE%252FPython%25E5%25B0%25B1%25E4%25B8%259A%25E5%2589%258D%25E6%2599%25AF%25E5%2589%2596%25E6%259E%2590-%25E5%25A4%25A7%25E9%2581%2593%25E4%25BD%25A0%25E4%25BB%25AC%25E6%258C%25A4%25EF%25BC%258C%25E6%2588%2591%25E5%258E%25BB%25E5%2590%2583%25E8%259E%2583%25E8%259F%25B9%252Fpython%25E5%25B0%25B1%25E4%25B8%259A%25E5%2589%258D%25E6%2599%25AF%25E5%2589%2596%25E6%259E%2590-%25E5%25A4%25A7%25E9%2581%2593%25E4%25BD%25A0%25E4%25BB%25AC%25E6%258C%25A4%25EF%25BC%258C%25E6%2588%2591%25E5%258E%25BB%25E5%2590%2583%25E8%259E%2583%25E8%259F%25B9-%25E8%25A7%2586%25E9%25A2%2591%26parentPath%3D%252F1%25E5%25AE%2598%25E7%25BD%2591%25E8%25A7%2586%25E9%25A2%2591%25E5%25BA%2593%28%25E5%258B%25BF%25E5%2588%25A0%29%252Fpython%25E5%25AD%25A6%25E7%25A7%2591%252FPython%25E5%2585%25AC%25E5%25BC%2580%25E8%25AF%25BE%252FPython%25E5%25B0%25B1%25E4%25B8%259A%25E5%2589%258D%25E6%2599%25AF%25E5%2589%2596%25E6%259E%2590-%25E5%25A4%25A7%25E9%2581%2593%25E4%25BD%25A0%25E4%25BB%25AC%25E6%258C%25A4%25EF%25BC%258C%25E6%2588%2591%25E5%258E%25BB%25E5%2590%2583%25E8%259E%2583%25E8%259F%25B9\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python就业前景剖析-大道你们挤，我去吃螃蟹-视频</a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1kWTtPaB%23list/path%3D%252F1%25E5%25AE%2598%25E7%25BD%2591%25E8%25A7%2586%25E9%25A2%2591%25E5%25BA%2593%28%25E5%258B%25BF%25E5%2588%25A0%29%252F%25E6%259C%25AA%25E5%258A%25A0%25E5%25B7%25A5%252FPython%25E5%2585%25A5%25E9%2597%25A8%25E6%2595%2599%25E7%25A8%258B%25E5%25AE%258C%25E6%2595%25B4%25E7%2589%2588%25EF%25BC%2588%25E6%2587%2582%25E4%25B8%25AD%25E6%2596%2587%25E5%25B0%25B1%25E8%2583%25BD%25E5%25AD%25A6%25E4%25BC%259A%25EF%25BC%2589%252FPython%25E5%2585%25A5%25E9%2597%25A8%25E6%2595%2599%25E7%25A8%258B%25E5%25AE%258C%25E6%2595%25B4%25E7%2589%2588%25EF%25BC%2588%25E6%2587%2582%25E4%25B8%25AD%25E6%2596%2587%25E5%25B0%25B1%25E8%2583%25BD%25E5%25AD%25A6%25E4%25BC%259A%25EF%25BC%2589%25E8%25A7%2586%25E9%25A2%2591%26parentPath%3D%252F1%25E5%25AE%2598%25E7%25BD%2591%25E8%25A7%2586%25E9%25A2%2591%25E5%25BA%2593%28%25E5%258B%25BF%25E5%2588%25A0%29%252F%25E6%259C%25AA%25E5%258A%25A0%25E5%25B7%25A5%252FPython%25E5%2585%25A5%25E9%2597%25A8%25E6%2595%2599%25E7%25A8%258B%25E5%25AE%258C%25E6%2595%25B4%25E7%2589%2588%25EF%25BC%2588%25E6%2587%2582%25E4%25B8%25AD%25E6%2596%2587%25E5%25B0%25B1%25E8%2583%25BD%25E5%25AD%25A6%25E4%25BC%259A%25EF%25BC%2589\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门教程完整版（懂中文就能学会）视频</a> </p><h2><b>第二阶段、Python和Linux高级</b></h2><p><b>知识点：</b></p><p><b>Linux系统应用：</b>Linux发行版系统的使用、基本的操作语句</p><p><b>网络编程：</b>TCP/IP协议、服务器工作过程</p><p><b>并发编程：</b>线程、进程、协程</p><p><b>函数高级应用：</b>熟练使用函数的调用等</p><p><b>正则表达式：</b>熟练舒勇re模块的各种方法</p><p><b>数据库：</b>关系型数据库、非关系型数据库、MySQL</p><p><b>Python语法进阶：</b>闭包、装饰器、生成器、迭代器</p><p><b>mini-web服务器：</b>根据网络服务的过程写出简易的web服务器</p><p><b>mini-web框架：</b>可以编写简易的web服务器框架</p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1zNPuuqIN4HBkqRaEaHyjoQ\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">01linux基础视频.rar</a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1pNr8mMJ%23list/path%3D%252F\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Web服务器案例视频</a> </p><h2>第三阶段：前端开发</h2><p><b>知识点</b></p><ul><li><b>HTML的学习：</b>HTML的文档结构、快速创建HTML方法</li><li><b>CSS：</b>CSS的使用</li><li><b>PS的简单应用：</b>Photoshop的基本使用、取色、图层</li><li><b>JavaScript的学习：</b>JavaScript的基本语法</li><li><b>jQuery的学习：</b>jQuery的使用</li><li><b>Vue框架：</b>框架的使用以及注意点</li></ul><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1skDXr6t%23list/path%3D%252F\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Javascript基础加强视频（新）</a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1bUdzAkPVHJrJPcBuOgKpgA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">vuejs入门到精通商品视频教程</a> </p><h2><b>第四阶段：Web开发</b></h2><ul><li><b>Flask web框架的使用：</b>模板与表单、数据库的使用、单元测试、第三方扩展与部署、Redis缓存使用、GIT版本控制、云服务器的使用、验证码的收发、网站项目开发实战</li><li><b>Django web框架的使用：</b>框架的使用方法、模型介绍、ORM以及数据库操作、视图以及模板、Django中间件、Django REST Framework、网站项目开发实战</li></ul><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1nwM4CFB%23list/path%3D%252F\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">6节课入门Flask框架web开发视频</a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1EpVPkqOUNZZ0TNzIPWDt0Q%23list/path%3D%252F\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Django框架视频</a> </p><h2>第五阶段：爬虫开发</h2><p>知识点：</p><ul><li><b>爬虫开发的知识体系与相关工具：</b>网络爬虫的原理以及相关爬虫工具</li><li><b>MongoDB数据库：</b>数据库的增删改查</li><li><b>Scrapy框架：</b>框架的原理以及使用</li><li><b>定制化爬虫采集系统：</b>数据的采集、分析</li><li><b>爬虫实战项目：</b>实用型综合爬虫应用 </li></ul><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1c3Jzk9y%23list/path%3D%252F\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">6节课掌握Python爬虫视频</a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1qYXDitI%23list/path%3D%252F\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy爬虫框架视频</a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1snfsThb%23list/path%3D%252F\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python之爬虫开发帝王-video</a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1snqOBIt%23list/path%3D%252F\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网络爬虫-利用python实现爬取网页神技-1</a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1bqVCaYV%23list/path%3D%252F\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网络爬虫-利用python实现爬取网页神技-2</a> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb\" width=\"4096\" data-original=\"https://pic2.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='4096'%20height='419'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"4096\" data-original=\"https://pic2.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></figure><p><b>3.整理出来各个阶段的项目</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-5117213abf78396bfd438dcbaf94b348_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"227\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-a1f2f35f871f340270aae36806271fbe_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"888\" data-original=\"https://pic4.zhimg.com/v2-5117213abf78396bfd438dcbaf94b348_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='888'%20height='227'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"227\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-a1f2f35f871f340270aae36806271fbe_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"888\" data-original=\"https://pic4.zhimg.com/v2-5117213abf78396bfd438dcbaf94b348_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-5117213abf78396bfd438dcbaf94b348_720w.jpg?source=54b3c3a5\"></figure><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1htA3p3I\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python之35个项目实战；密码：pt3r</a> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb\" width=\"4096\" data-original=\"https://pic1.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='4096'%20height='419'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"4096\" data-original=\"https://pic1.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></figure><p>以上就是我学习python的时候，学到直到爬虫阶段的全部知识点以及收集整理的资源。图片的话侵权的。可以评论告知。有小伙伴觉得还有用的话，希望多多点赞支持我哦~，记得关注哦。</p><p></p><p></p>", "现在为什么 Python 这么火？": "<p>因为人生苦短要用python啊！</p><p>你瞧瞧其他语言之父。。。</p><p><b><a href=\"https://link.zhihu.com/?target=http%3A//vb.net\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">vb.net</span><span class=\"invisible\"></span></a>之父 ——lan Cooper</b> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-c1ca831215170692fa7e4b21f5695cfc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"321\" data-rawheight=\"396\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-1ba549aebcf135ccaf99a588bc1e4ea6_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"321\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='321'%20height='396'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"321\" data-rawheight=\"396\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-1ba549aebcf135ccaf99a588bc1e4ea6_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"321\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-c1ca831215170692fa7e4b21f5695cfc_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>Java之父——James Gosling</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-5d1e742587cc8888b4e4347396a1b5e4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"440\" data-rawheight=\"442\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c609335d8a4533a05847c993356892a0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"440\" data-original=\"https://pic1.zhimg.com/v2-5d1e742587cc8888b4e4347396a1b5e4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='440'%20height='442'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"440\" data-rawheight=\"442\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c609335d8a4533a05847c993356892a0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"440\" data-original=\"https://pic1.zhimg.com/v2-5d1e742587cc8888b4e4347396a1b5e4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-5d1e742587cc8888b4e4347396a1b5e4_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>PHP之父 ——Rasmus Lerdorf</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-5cddb4f40bad76b920ba424624e4d73b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"366\" data-rawheight=\"550\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8b512634f75a98b061cff6dfc173548b_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"366\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='366'%20height='550'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"366\" data-rawheight=\"550\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8b512634f75a98b061cff6dfc173548b_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"366\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-5cddb4f40bad76b920ba424624e4d73b_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>Objective-C之父——Brad Cox</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-9f1286fa3029033099008f002c3e829b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"767\" data-rawheight=\"406\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8ace2a8c0f1632372bc255e41da0e316_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"767\" data-original=\"https://pic1.zhimg.com/v2-9f1286fa3029033099008f002c3e829b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='767'%20height='406'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"767\" data-rawheight=\"406\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8ace2a8c0f1632372bc255e41da0e316_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"767\" data-original=\"https://pic1.zhimg.com/v2-9f1286fa3029033099008f002c3e829b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-9f1286fa3029033099008f002c3e829b_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>JavaScript之父——Brendan Eich</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-24b942cae60667fd094834eb8ba9798f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-74d849f8527980c1970f8a2a51b9fc08_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-24b942cae60667fd094834eb8ba9798f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-74d849f8527980c1970f8a2a51b9fc08_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-24b942cae60667fd094834eb8ba9798f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-24b942cae60667fd094834eb8ba9798f_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>Go语言之父 ——rob pike</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a6f312b40a777a7371b597391888800e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"315\" data-rawheight=\"426\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-052e395e658c2fdbefc3308aab4f31b9_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"315\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='315'%20height='426'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"315\" data-rawheight=\"426\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-052e395e658c2fdbefc3308aab4f31b9_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"315\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a6f312b40a777a7371b597391888800e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>Pascal之父——Niklaus Wirth </b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a6307fe5b66614bbd2bc2b75bd426b61_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"306\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-8c1cc200b9f5d167d49d58b71c7f3d6e_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"400\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='306'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"306\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-8c1cc200b9f5d167d49d58b71c7f3d6e_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"400\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a6307fe5b66614bbd2bc2b75bd426b61_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>C++之父 ——Bjarne Stroustrup</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-31ccd340238de3b9745d005715dab1a4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"300\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-9fc696581b252cbcd3a546d147c8767b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-31ccd340238de3b9745d005715dab1a4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='300'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"300\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-9fc696581b252cbcd3a546d147c8767b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-31ccd340238de3b9745d005715dab1a4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-31ccd340238de3b9745d005715dab1a4_720w.jpg?source=54b3c3a5\"></figure><p>.</p><p>.</p><p>.</p><p>再看看！<b>Python之父--Guido van Rossum</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-86831f888eff76219b2b2f30cd6bb9f5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"322\" data-rawheight=\"392\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-3a42aeae7206706567bf51ad9e84fc22_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"322\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='322'%20height='392'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"322\" data-rawheight=\"392\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-3a42aeae7206706567bf51ad9e84fc22_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"322\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-86831f888eff76219b2b2f30cd6bb9f5_720w.jpg?source=54b3c3a5\"></figure><p>Python发展接近三十年，确实已经成为了编程语言中的“网红”。</p><p>很多程序员都喜欢Python，但不仅仅是程序员喜欢，Python这个技能也能让你在就业市场上拿到很好的offer。</p><p>因为<b>Python仍旧是目前IT就业市场最受欢迎，最热门的技术技能之一</b>，且容易上手，学会了python，可以大幅提高IT人的自身竞争力。</p><p>在知名技术交流网站Stack Overflow在2019年年初推出的开发人员调查报告中，有四分之一的开发者表示，Python是他们最想学习的编程语言，这也是Python连续三年获得这个榜单的第一名。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-7a81bf63741aabe5f2e4a33a188a5521_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"820\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-b7ba4fa4520b2ee1ce946c510ed0b321_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"534\" data-original=\"https://pic4.zhimg.com/v2-7a81bf63741aabe5f2e4a33a188a5521_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='534'%20height='820'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"820\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-b7ba4fa4520b2ee1ce946c510ed0b321_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"534\" data-original=\"https://pic4.zhimg.com/v2-7a81bf63741aabe5f2e4a33a188a5521_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-7a81bf63741aabe5f2e4a33a188a5521_720w.jpg?source=54b3c3a5\"></figure><p>Python为网络上搜索教程频率最高的编程语言，甚至比一直以来的“霸主”PHP都要高。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-b7e39070b2a172ffc94db8c2f9e9e5aa_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"456\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-743294ac05d28473ed191267f9785527_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"900\" data-original=\"https://pic2.zhimg.com/v2-b7e39070b2a172ffc94db8c2f9e9e5aa_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='900'%20height='456'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"456\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-743294ac05d28473ed191267f9785527_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"900\" data-original=\"https://pic2.zhimg.com/v2-b7e39070b2a172ffc94db8c2f9e9e5aa_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-b7e39070b2a172ffc94db8c2f9e9e5aa_720w.jpg?source=54b3c3a5\"></figure><p>根据知名求职服务网站indeed的统计，Python开发人员的平均年薪为<b>116,379美元</b>，是美国薪酬最高的编程语言的软件工程师。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-ef28fa021df445ec1ef76e5d4a29f629_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"375\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-16fb749c2c3978c2ed751f90088d9b5c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"570\" data-original=\"https://pic1.zhimg.com/v2-ef28fa021df445ec1ef76e5d4a29f629_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='570'%20height='375'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"375\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-16fb749c2c3978c2ed751f90088d9b5c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"570\" data-original=\"https://pic1.zhimg.com/v2-ef28fa021df445ec1ef76e5d4a29f629_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-ef28fa021df445ec1ef76e5d4a29f629_720w.jpg?source=54b3c3a5\"></figure><p>这样看来，如果想要拿到更好的薪水，学会Python变得越来越有必要。</p><h2>01. 为什么选择Python</h2><p>Python能成为如今的主流编程语言之一不是没有原因的。其中，最主要的原因大概有以下几点：</p><p><b>1.适合初学者</b></p><p>Python具有语法简单、语句清晰的特点，这就让初学者在学习阶段可以把精力集中在编程对象和思维方法上。</p><p><b>2.大佬都在用</b></p><p>Google，YouTube，Facebook，IBM，NASA，Yahoo，ACH，和NECH只是技术领域中使用Python的几个大公司，它们也在不断招收Python工程师们。</p><p><b>3.应用超广泛</b></p><p>作为是一种多才多艺的语言，从网站搭建到数据处理再到小工具小游戏的设计，都能用到Python。</p><p><b>4.人工智能必备</b></p><p>随着人工智能的兴起，Python作为一种科学语言的流行程度急剧上升。有许多机器学习库就是用Python编写的。</p><h2>02. 怎样学Python</h2><h2>网课</h2><p><b><a href=\"https://link.zhihu.com/?target=https%3A//www.youtube.com/playlist%3Flist%3DPLS1QulWo1RIaJECMeUT4LFwJ-ghgoSH6n\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Tutorial for Beginners (For Absolute Beginners)</a></b></p><p>油管上的面向初学者的Python视频教程，主要是用语言讲解一些基础结构。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-733caebf7ff4a9866711b575b237972e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"903\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-733caebf7ff4a9866711b575b237972e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='903'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"903\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-733caebf7ff4a9866711b575b237972e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-733caebf7ff4a9866711b575b237972e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b><a href=\"https://link.zhihu.com/?target=https%3A//www.jiuzhang.com/course/41/%3Futm_source%3Dsc-zhihuanswer-cyc1224\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">九章基础算法班（Python）</a></b></p><p>硅谷工程师中文在线直播授课，免费试听，是Python和算法的结合课程。使用Python3作为课程语言，无需任何Python语言或编程基础，从零基础开始学习Python编程，算法和数据结构。非常适合小白入门或有转专业找工作需求的小伙伴们。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-c04d542dabe21b4a9a9ab48db942abb5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"381\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-f93a7751013fc647f63649102ad0a94c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic4.zhimg.com/v2-c04d542dabe21b4a9a9ab48db942abb5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='800'%20height='381'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"381\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-f93a7751013fc647f63649102ad0a94c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"800\" data-original=\"https://pic4.zhimg.com/v2-c04d542dabe21b4a9a9ab48db942abb5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-c04d542dabe21b4a9a9ab48db942abb5_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b><a href=\"https://link.zhihu.com/?target=https%3A//developers.google.com/edu/python/introduction%3Fhl%3Dzh-CN%26csw%3D1\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Google's Python Class</a></b></p><p>Google上的Python教程，同样也是面向初学者，没有什么基础的也可以学习。不过这个课程主要是面向Python2的，针对Python3的一些内容还尚未更新。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-55ceabe9abf517d2a04f2d4bd7c60c2f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"903\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-55ceabe9abf517d2a04f2d4bd7c60c2f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='903'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"903\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-55ceabe9abf517d2a04f2d4bd7c60c2f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-55ceabe9abf517d2a04f2d4bd7c60c2f_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b><a href=\"https://link.zhihu.com/?target=https%3A//www.liaoxuefeng.com/wiki/1016959663602400\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">廖雪峰的Python教程</a></b></p><p>国内很多人都在看都在推荐的Python教程，纯文档，全中文，免费，从Python的历史讲到Python在各方面的应用，深入浅出，循序渐进。不过需要对计算机和编程语言的一些基础知识有一些了解。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-2b24ff925caff8394d711fa84b08a9e0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"903\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-2b24ff925caff8394d711fa84b08a9e0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='903'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"903\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-2b24ff925caff8394d711fa84b08a9e0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-2b24ff925caff8394d711fa84b08a9e0_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b><a href=\"https://link.zhihu.com/?target=https%3A//www.coursera.org/specializations/introduction-scripting-in-python%3FranMID%3D40328%26ranEAID%3Dskg%252FSko%252FYbo%26ranSiteID%3Dskg_Sko_Ybo-f_SpTVSmkkrH4qAY771nMg%26siteID%3Dskg_Sko_Ybo-f_SpTVSmkkrH4qAY771nMg%26utm_content%3D10%26utm_medium%3Dpartners%26utm_source%3Dlinkshare%26utm_campaign%3Dskg%252FSko%252FYbo\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Introduction to Scripting in Python Specialization</a></b></p><p>Coursera上的Python教程，从一开始介绍一些基础的Python理论知识慢慢的引导到在实际案例中的应用，可以慢慢的对Python由越来越深的理解也能一步一步加强对Python内容的应用能力。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-a12ea9e24f224ce645ba140caf85ec68_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"903\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-a12ea9e24f224ce645ba140caf85ec68_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='903'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"903\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-a12ea9e24f224ce645ba140caf85ec68_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-a12ea9e24f224ce645ba140caf85ec68_720w.jpg?source=54b3c3a5\"></figure><h2>书籍</h2><p><b>入门阶段</b></p><p><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/26829016/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python编程：从入门到实践</a></p><p>一本针对所有层次的Python用户的Python入门书，涉及到关于Python的很多的基础概念并且辅以练习。前半讲理论后半重实践，会以实际的开发项目的讲解引导读者进一步学习这门语言。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-0012b84cf20c0de67d2d96a9486d7aac_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"591\" data-rawheight=\"742\" class=\"origin_image zh-lightbox-thumb\" width=\"591\" data-original=\"https://pic2.zhimg.com/v2-0012b84cf20c0de67d2d96a9486d7aac_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='591'%20height='742'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"591\" data-rawheight=\"742\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"591\" data-original=\"https://pic2.zhimg.com/v2-0012b84cf20c0de67d2d96a9486d7aac_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-0012b84cf20c0de67d2d96a9486d7aac_720w.jpg?source=54b3c3a5\"></figure><p><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/26005639/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">父与子的编程之旅</a></p><p>是一对父子共同创作，适合家长和孩子共同学习的一本编程书，从基础内容开始讲解到后期实现游戏的编程，为了增加趣味性而在其中添加了很多的卡通形象。由于其中内容讲解的较为基础，所以也适合普通的初学入门者学习。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8a2bf5a5e23238fd559acd00f49353e5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"491\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"491\" data-original=\"https://pic2.zhimg.com/v2-8a2bf5a5e23238fd559acd00f49353e5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='491'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"491\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"491\" data-original=\"https://pic2.zhimg.com/v2-8a2bf5a5e23238fd559acd00f49353e5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8a2bf5a5e23238fd559acd00f49353e5_720w.jpg?source=54b3c3a5\"></figure><p><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/30237842/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">笨办法写Python</a></p><p>适合对计算机和编程了解不多的读者学习，通过简单习题的方法引导读者一步一步的去学习编程，让读者从简单的编程技术开始，慢慢的体验到软件开发的完整过程。这个系列在海外有着十分广泛的群众基础。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-df8b9c4b422f2adafaf11fc398bf4db5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"398\" data-rawheight=\"500\" class=\"content_image\" width=\"398\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='398'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"398\" data-rawheight=\"500\" class=\"content_image lazy\" width=\"398\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-df8b9c4b422f2adafaf11fc398bf4db5_720w.jpg?source=54b3c3a5\"></figure><p><b>进阶阶段</b></p><p><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/27028517/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">流畅的Python</a></p><p>致力于让广大Python程序员能把代码写的更流畅，减少重复劳动，并且会涉及到一些Python语言中的高级用法，帮助很多的中高级程序员进一步的去理解和使用这一门语言。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-87136f6bb7fd30c7e37f8cbaebdf6aca_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1425\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-87136f6bb7fd30c7e37f8cbaebdf6aca_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='1425'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1425\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-87136f6bb7fd30c7e37f8cbaebdf6aca_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-87136f6bb7fd30c7e37f8cbaebdf6aca_720w.jpg?source=54b3c3a5\"></figure><p><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/26381341/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Cookbook</a></p><p>介绍了Python应用在各个领域中的一些使用技巧和方法，对于有一定Python编程经验的人来说是一本实用的工具参考书。书中包含了大量实用的编程技巧和示例代码，并在Python 3.3环境下进行了测试，可以很方便地应用到实际项目中去。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-02f63f4f971a8d3c2a7c1b8ea3c572d3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"655\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic1.zhimg.com/v2-02f63f4f971a8d3c2a7c1b8ea3c572d3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='500'%20height='655'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"655\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"500\" data-original=\"https://pic1.zhimg.com/v2-02f63f4f971a8d3c2a7c1b8ea3c572d3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-02f63f4f971a8d3c2a7c1b8ea3c572d3_720w.jpg?source=54b3c3a5\"></figure><p><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/26709315/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Effective Python</a></p><p>副标题是叫《编写高质量Python代码的59个有效方法》，内容上主要涵盖了很多的Python方面的代码实用范例，而且还提出了很多方案让用户能避开写代码时会遇到的问题。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e243825c268aefe005cc1f68d001b188_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"368\" data-rawheight=\"485\" class=\"content_image\" width=\"368\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='368'%20height='485'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"368\" data-rawheight=\"485\" class=\"content_image lazy\" width=\"368\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e243825c268aefe005cc1f68d001b188_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><b>实际应用方面</b></h2><p><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/25779298/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">利用Python进行数据分析</a></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-7b31dfcb83e290fbcffefffea00d1214_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"377\" data-rawheight=\"500\" class=\"content_image\" width=\"377\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='377'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"377\" data-rawheight=\"500\" class=\"content_image lazy\" width=\"377\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-7b31dfcb83e290fbcffefffea00d1214_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>通过大量详细的案例分析，利用多种Python的数据库来讲解Python在数据分析方面解决实际问题的方案，适合刚刚接触Python的分析人员以及刚刚接触科学计算的Python程序员。</p><p><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/30175598/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 3网络爬虫开发实战</a></p><p>爬虫也算是Python的一种非常广泛的应用了，很多的大数据产品都是利用Python来爬虫。这本书属于近两年国内在爬虫方面写的非常优秀的一本书了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f98c3bbbf6fafe0a92013bbc55d7c611_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"743\" data-rawheight=\"933\" class=\"origin_image zh-lightbox-thumb\" width=\"743\" data-original=\"https://pic4.zhimg.com/v2-f98c3bbbf6fafe0a92013bbc55d7c611_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='743'%20height='933'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"743\" data-rawheight=\"933\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"743\" data-original=\"https://pic4.zhimg.com/v2-f98c3bbbf6fafe0a92013bbc55d7c611_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f98c3bbbf6fafe0a92013bbc55d7c611_720w.jpg?source=54b3c3a5\"></figure><p><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/30293801/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python深度学习</a></p><p>这本书作者是目前使用最广泛的深度学习框架Keras的发布者，从这一点上来说，权威性得到了保障。这本书并不需要特别深刻的机器学习知识，读者在学习完这本书之后将获得搭建自己的深度学习环境的能力。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-102321b79a05ca33e19a964bf928a7c7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"796\" data-rawheight=\"1000\" class=\"origin_image zh-lightbox-thumb\" width=\"796\" data-original=\"https://pic2.zhimg.com/v2-102321b79a05ca33e19a964bf928a7c7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='796'%20height='1000'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"796\" data-rawheight=\"1000\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"796\" data-original=\"https://pic2.zhimg.com/v2-102321b79a05ca33e19a964bf928a7c7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-102321b79a05ca33e19a964bf928a7c7_720w.jpg?source=54b3c3a5\"></figure><h2>相关练手项目</h2><p>学习编程语言，大家都知道要多练才能更好的掌握这样一门语言，下面我们会推荐一些适合各个阶段的程序员们一些练手的项目。</p><p>目前，Python的应用方向主要是面向以下几点：</p><ul><li>web开发，主要框架有Django、Flask、Tornado‘</li><li>数据科学，主要框架是Numpy、Pandas、Matplotlib；</li><li>深度学习，主要框架是TensorFlow；</li><li>网络爬虫，主要框架是Scrapy。</li></ul><p>那么，如果能够确定下自己想要朝哪个方向发展，那么就可以针对性的做某一个方向的练手。下面我们将为大家列出一些具有代表性的练手小项目，供大家参考。</p><h2>web开发</h2><p>如今，Python里运用的最为广泛的一个框架就是Django了，很多网站都用的是这个框架，所以如果要快速熟悉Python在web开发方面的应用，那么可以从Django开始。下面是一些关键网络上的Django的练手小项目，可以参考这些内容进行进一步的练习。</p><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//www.liujiangblog.com/course/django/2\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">刘江的Django项目</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/driftluo/DjangoPractice\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Django练手小项目</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/ba7fbd1b34c6\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">姓名大全网站Django练手项目</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//bbs.51cto.com/thread-1556751-1.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">班级学生信息管理系统</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//heeeepin.com/django-tieba-post.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Django实现贴吧云回帖</a></li></ul><h2>数据科学</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//blog.csdn.net/yinger_0131/article/details/79493772\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">汽车销售偷漏纳税人识别</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//aosabook.org/en/500L/an-archaeology-inspired-database.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">用python实现一个数据库</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/623\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python实现火车票查询工具</a></li></ul><h2>深度学习</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/cysmith/neural-style-tf\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Neural Style</a>-照片的风格迁移</li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/mozilla/DeepSpeech\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Mozilla Deep Speech</a>-语音转文本</li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/google/deepdream\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Deepdream</a>-Google的开源图像识别工具</li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/alexjc/neural-doodle\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Neural Doodle</a>-把涂鸦风图片转换为艺术品风格的画作</li></ul><h2>网络爬虫</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LiuXingMing/SinaSpider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">新浪微博爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/airingursb/bilibili-user\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">bilibili用户爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/bowenpay/wechat-spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">微信公众号爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/yanzhou/CnkiSpider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">中国知网爬虫</a></li></ul><h2>其它有趣的项目</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/368\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">两百行代码做出2048小游戏</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//blog.csdn.net/xinkexueguanli/article/details/52552088\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python实现3D建模工具</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/fogleman/Minecraft\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">用Python写我的世界</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/greyli/PythonExercises\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">10道趣味Python练手题</a></li></ul><h2>学习路线</h2><p>列了这么多的干货，接下来的关键就是要开始学习了。</p><p>第一步当然是准备基础，准备运行环境，学习基础知识。在学习基础知识的阶段，可以选择读书，自制力稍微差一点的可以选择看网课，但是一定要好好的制定学习计划，从基础知识开始一步一步的深入。</p><p>第二步，了解了一些基础知识之后，可以开始写一些简单的项目，比如小游戏小项目之类的，巩固一下自己的知识。</p><p>第三步，同时也是相对来说最重要的一步，这个时候最好要确定一下自己的主攻方向了。</p><p>一般来说，确定下自己的开发方向的话，学习过程会更加顺利。比如说你确定要做web开发，主公Django框架的话，就要多多熟悉Django框架，各种web开发相关的内容和其他框架的相关知识也可以有所涉猎。</p><p>相信这样一定会让你有所收获，不虚此行。</p><hr><p><b>看完这篇文章后，有两件小事，能帮助你快速提升自己哟：</b></p><p>1、戳我 <b>免费试听</b><a href=\"https://link.zhihu.com/?target=https%3A//www.jiuzhang.com/course/41/%3Futm_source%3Dsc-zhihuanswer-cyc1224\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《九章算法基础班（python3）》</a>，<b>从Python语言讲到基础算法与数据结构</b>，开课以来已经帮数万人理清学习思路。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-196952128a132fd22ab26815dfdd0f2a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"602\" data-rawheight=\"350\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c8de65e4b4118ea2914ba388296ff3d7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"602\" data-original=\"https://pic1.zhimg.com/v2-196952128a132fd22ab26815dfdd0f2a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='602'%20height='350'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"602\" data-rawheight=\"350\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c8de65e4b4118ea2914ba388296ff3d7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"602\" data-original=\"https://pic1.zhimg.com/v2-196952128a132fd22ab26815dfdd0f2a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-196952128a132fd22ab26815dfdd0f2a_720w.jpg?source=54b3c3a5\"></figure><p>2、<b>点赞+关注</b>九章算法，让更多人看见这篇文章，这也鼓励我继续分享~</p>", "在大型项目上，Python 是个烂语言吗？": "<p>前YouTuber来讲讲YouTube的故事吧。话说我们YouTuber跟Instagram的朋友吃饭，都要事先约定不谈Python，不然YouTuber分分钟变祥林嫂。不过再怎么吐嘈，YouTube不管从历史，代码量，码农数量，还是支撑的业务规模看，都是一个成功的大型Python Web项目 —— 至少曾经是，为什么是曾经，请一定要看到最后。</p><p>YouTube从一开始就是一个典型的Python + MySQL项目。代码随着业务发展自然生长，在很多年前代码量就以百万计了。这时候的主要工程实践就是一些老生常谈：接口文档，单元测试和集成测试，严格的code review, 还是能维持feature开发；性能上前面一个高度优化的模板引擎 (<a href=\"https://link.zhihu.com/?target=https%3A//github.com/youtube/spitfire\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/youtube/spit</span><span class=\"invisible\">fire</span><span class=\"ellipsis\"></span></a>) 后面一个 DB Proxy (<a href=\"https://link.zhihu.com/?target=https%3A//vitess.io/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">vitess.io/</span><span class=\"invisible\"></span></a>) 就撑起了巨大的流量。Google的代码管理、构建系统和持续集成系统确实是好，serving infrastructure也够强悍，这些底子打得好是这个项目不用很多tricks都能撑到这么大的重要原因。</p><p>但此时软件复杂性的问题已经非常明显，在这个规模上YouTube居然还是一个单体项目，不是不想拆是拆不了。问题就出在「自然生长」上，YouTube代码有典型的分层和业务模块分离设计，但是在这个开发团队规模上，很难有一个独裁架构师管控代码设计，工程师为了一些局部优化目标加一些例外破坏原始架构设计，比如在貌似ORM层的地方放业务特定代码，或者为了实现功能跨模块直接调用。Code review能保证局部代码设计合理，高覆盖的测试能大概保证上线能跑，但长期下来那么多工程师那么多例外，软件整体就变成了一团分层不明，依赖混乱，无法拆分的东西。这是常见的软件工程问题，其实跟Python没什么关系，它在一个Python项目上的体现就是随便改一两行代码都有可能break掉完全不相关的不知什么东西，而且不花至少半个小时跑完至少几千个单元测试你都发现不了（跑完了也不保证能发现就是了），开发者肯定是不爽的，我自己就变成了祥林嫂，至于什么快速开发，从来就不存在。</p><p>由于核心数据库访问逻辑在这团无法拆分的大包里，要加涉及核心数据的功能，只能像滚屎球一样捏着鼻子继续往上加代码。但是对相对独立的新功能，工程师首先考虑的是不再需要用MySQL了 —— Google唯二大规模MySQL部署是广告后台和YouTube, 广告后台切Spanner/F1之后就只剩YouTube了，新功能都被鼓励用Spanner等Google原生存储平台。既然如此，那也就没有那坨Python貌似ORM又不是ORM的代码什么事了，业务逻辑当然就可以写成C++或者Java的后台服务。这时候YouTube就已经是一个Python+MySQL+一大堆C++/Java后台的混合架构。</p><p>真正让YouTuber觉得日子没法过了的，其实还是运行时的问题。由于GIL, Python在多线程环境中很难扩展，YouTube用的是prefork多进程模式。YouTube为了接入Google生产环境以及跟各种Google系统交互，难免要大量调用Google通用的C++库，然而这些C++库全都假定是在一个典型的单进程多线程环境下跑的，开几个后台线程，加载一个共享数据表稀松平常，因为它们都假定这些都是给几千个线程共享的资源开销平摊下来没什么，但到了YouTube的多进程环境就尴尬了，最直接的影响就是巨大的内存占用，那些年内存价格高企，问题就尤其突出。CPU单核性能不再提高之后，CPU开销也成了大问题。YouTube尝试过PyPy, 但是发现由于之前明显的CPU瓶颈已经被用C模块的方法优化掉了，接下来上PyPy并没有带来期望的明显性能提升。从profiler上看到的就是做大型复杂工程的人熟悉的：处处都性能不佳，处处都不是瓶颈的景象，软件太复杂，响应最简单的请求都要做很多免不了的事，就得花那么多CPU. pypy-stm 还很不成熟，破除GIL带来的prefork魔咒遥遥无期。走投无路之下YouTube甚至搞过Grumpy(<a href=\"https://link.zhihu.com/?target=https%3A//github.com/google/grumpy\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/google/grump</span><span class=\"invisible\">y</span><span class=\"ellipsis\"></span></a>) 这种疯狂的东西，就是一个用Go写的Python runtime, 企图用goroutine和将Python代码渐进移植成Go的方法破除性能屏障，项目似乎理所当然地没有了下文。光从性能上说另一个有希望的方向是Cython, 然而就像上面说的，明显CPU瓶颈已经用手写C模块优化过了，要再广泛铺开Cython必然要手工改写大量业务代码，话说既然都要手工改写了，那为什么还用Python呢？</p><p>花开两朵各表一支，在codebase上，YouTuber历尽千辛万苦，还是将代码分出来严格的Web前端和API层，API层严格划分出了服务模块，各层和模块间只能采用Protocol Buffer的RPC API交互。虽然由于各种不得已这个严格划分好了的Python codebase（居然）还是要整体发布，但是现在逐个模块重写，至少在技术上成了可能。</p><p>轰轰烈烈的 #YTFExit 运动开始了（YTFE = YouTube FrontEnd），运动还有一个契机：MySQL是真的撑不住了，就算技术上撑得住，Google SRE也不愿再为YouTube维护一套全Google唯一的巨型MySQL环境了。YouTube决定将所有存储迁移到Spanner, 并且重新设计表结构，那坨绕不开的数据访问Python代码横竖都是要重写的了。YouTube决定将API层的服务逐个用C++重写成独立部署的微服务，最大限度利用Google完善的C++ infrastructure, prefork什么的自然不会存在，性能的话，其实不管用什么语言只要把陈年代码推倒重写一次都能有显著提升，更别说是C++了。最后只剩下Web层还是Python, 而由于YouTube Web前端已经迁移到Polymer, 可以直接跟API层通信，需要服务器拼接Web页面的地方越来越少，剩下的Web层代码也越来越少，最终也将迁出Python体系。YouTube也将不再是一个Python项目了。</p><p>YouTube的故事就讲到这里。YouTube无疑是一个使用Python的成功项目，但Python是否就是YouTube各个时期最好的选择，每个参与者都有自己的结论。我们可以问很多假设性问题，像是假如YouTube是个独立公司不需要依赖其他Google软件，会不会在运行时问题上没那么痛苦，有更多优化的机会；假如及早在架构上严格拆分，开发效率是否就不会掉得这么严重；假如早年在用Go写Vitess的时候咬咬牙把YTFE也用Go重写了项目发展会不会更顺利。要是去深入思考每一个假如，就会发现这从来不是一个单纯的语言技术问题。</p><p>我自己的看法是，在一个大团队，长期开发的项目中，「自然生长」和滚屎球难以避免，在因此导致的软件复杂和冗余面前，单纯写代码的速度没有什么意义，在技术上能对项目有帮助的主要是 1. 编译和静态分析速度要快 2. 有个靠谱的运行时。Python在这两方面都没能做得很好（pytype没能在YouTube大规模铺开，因为对YouTube的规模来说它实在太慢了），不是说Python就一定做不好，只是在这个领域选择太多，为什么非要抱着Python不放？社区和生态系统就没有选择往这方面优化。#YTFExit 最终的选择居然是 C++, 要说C++在很多方面也非常不适合现代大型项目，比如编译时间就不及格，但是架不住那么多非C++不可的地方Google不得不下死力气优化，也符合了YouTube的要求。#YTFExit没有选择Go的最大考量是C++互操作性不好，如果不是因为Google的这个C++马太效应，要我开始一个YouTube这样的大型Web项目，我会选择Go.</p><p>当然命运没有给我这个如果，我离开YouTube后去了搞一个大型机器学习项目。本以为逃出了YouTube的焦油坑，结果到项目第一天就被糊了一脸稀烂的Python code. Python成了机器学习默认语言这事也有很多偶然，不过已是既成事实，对构建神经网络的前端DSL是Python这件事我没有什么意见。其实一个机器学习项目除了这一点神经网络构建外其他大部分的工作都是各种倒腾protobuf数据，我认为这是非常不适合Python的东西，但是既然Python是机器学习默认语言，大部分researcher开始倒腾数据的时候也是直接上Python, 你跟谁说理去？也许以后Python社区能大力出奇迹，让语言和生态变得特别适应这类的大型项目。所以一个语言的命运啊，当然要靠自我奋斗，但是也要考虑到历史的行程，这个显而易见的道理知乎小编认为政治敏感，摊手。</p>", "python如何画出漂亮的地图？": "<p>推荐一个超好用的python包<a href=\"https://link.zhihu.com/?target=https%3A//pypi.org/project/folium/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">folium</a>, 专门用于<b>地理数据可视化</b>，官方英文教程教程<a href=\"https://link.zhihu.com/?target=https%3A//python-visualization.github.io/folium/quickstart.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">点击这里</a>，查看本文源代码请<a href=\"https://link.zhihu.com/?target=https%3A//nbviewer.jupyter.org/github/gaonanlee/Visualization-Practice/blob/master/Folium%2520Visualization%2520Examples.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">点击这里</a>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-4ec6f4738108ddafa4a2e949b64017e7_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1224\" data-rawheight=\"736\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-16e46b65a65bd879864465eaadac309c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1224\" data-original=\"https://pic2.zhimg.com/v2-4ec6f4738108ddafa4a2e949b64017e7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1224'%20height='736'&gt;&lt;/svg&gt;\" data-rawwidth=\"1224\" data-rawheight=\"736\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-16e46b65a65bd879864465eaadac309c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1224\" data-original=\"https://pic2.zhimg.com/v2-4ec6f4738108ddafa4a2e949b64017e7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-4ec6f4738108ddafa4a2e949b64017e7_720w.jpg?source=54b3c3a5\"></figure><p>使用方法很简单，操作如下：</p><ol><li>导入包，创建一副世界地图</li></ol><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>import folium\nimport pandas as pd\n\n# define the world map\nworld_map = folium.Map()\n\n# display world map\nworld_map\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-5d713f1d7842f791401de32777ef3cc5_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1223\" data-rawheight=\"732\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7cab0e7173042d51f8aeee965940a928_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1223\" data-original=\"https://pic3.zhimg.com/v2-5d713f1d7842f791401de32777ef3cc5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1223'%20height='732'&gt;&lt;/svg&gt;\" data-rawwidth=\"1223\" data-rawheight=\"732\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7cab0e7173042d51f8aeee965940a928_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1223\" data-original=\"https://pic3.zhimg.com/v2-5d713f1d7842f791401de32777ef3cc5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-5d713f1d7842f791401de32777ef3cc5_720w.jpg?source=54b3c3a5\"></figure><p>2. 输入经纬度，尺度，在这里我们以旧金山（37.7749° N, 122.4194° W）为例。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># San Francisco latitude and longitude values\nlatitude = 37.77\nlongitude = -122.42\n\n# Create map and display it\nsan_map = folium.Map(location=[latitude, longitude], zoom_start=12)\n\n# Display the map of San Francisco\nsan_map\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-dd61da9ec500b3bc6f160c2f89668137_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1227\" data-rawheight=\"734\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-942def56adbf0121adf0ca730ac95067_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1227\" data-original=\"https://pic1.zhimg.com/v2-dd61da9ec500b3bc6f160c2f89668137_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1227'%20height='734'&gt;&lt;/svg&gt;\" data-rawwidth=\"1227\" data-rawheight=\"734\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-942def56adbf0121adf0ca730ac95067_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1227\" data-original=\"https://pic1.zhimg.com/v2-dd61da9ec500b3bc6f160c2f89668137_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-dd61da9ec500b3bc6f160c2f89668137_720w.jpg?source=54b3c3a5\"></figure><p>更改地图显示，默认为'OpenStreetMap'风格，我们还可以选择'Stamen Terrain', 'Stamen Toner'等。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># Create map and display it\nsan_map = folium.Map(location=[latitude, longitude], zoom_start=12,tiles='Stamen Toner')\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1cdba09f564d4df95512fdcd697ca76a_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1224\" data-rawheight=\"737\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-f67635be9254a08397a6b4c510013a32_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1224\" data-original=\"https://pic4.zhimg.com/v2-1cdba09f564d4df95512fdcd697ca76a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1224'%20height='737'&gt;&lt;/svg&gt;\" data-rawwidth=\"1224\" data-rawheight=\"737\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-f67635be9254a08397a6b4c510013a32_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1224\" data-original=\"https://pic4.zhimg.com/v2-1cdba09f564d4df95512fdcd697ca76a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1cdba09f564d4df95512fdcd697ca76a_720w.jpg?source=54b3c3a5\"></figure><p>3. 读取数据集（旧金山犯罪数据集）</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># Read Dataset \ncdata = pd.read_csv('https://cocl.us/sanfran_crime_dataset')\ncdata.head()\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-68751ecb623db1270dcc66f5a372bb4e_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1359\" data-rawheight=\"482\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-80e0d63f068ac74c6a4b431b6e636a66_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1359\" data-original=\"https://pic2.zhimg.com/v2-68751ecb623db1270dcc66f5a372bb4e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1359'%20height='482'&gt;&lt;/svg&gt;\" data-rawwidth=\"1359\" data-rawheight=\"482\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-80e0d63f068ac74c6a4b431b6e636a66_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1359\" data-original=\"https://pic2.zhimg.com/v2-68751ecb623db1270dcc66f5a372bb4e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-68751ecb623db1270dcc66f5a372bb4e_720w.jpg?source=54b3c3a5\"></figure><p>4. 在地图上显示前200条犯罪数据</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># get the first 200 crimes in the cdata\nlimit = 200\ndata = cdata.iloc[0:limit, :]\n\n# Instantiate a feature group for the incidents in the dataframe\nincidents = folium.map.FeatureGroup()\n\n# Loop through the 200 crimes and add each to the incidents feature group\nfor lat, lng, in zip(cdata.Y, data.X):\n    incidents.add_child(\n        folium.CircleMarker(\n            [lat, lng],\n            radius=7, # define how big you want the circle markers to be\n            color='yellow',\n            fill=True,\n            fill_color='red',\n            fill_opacity=0.4\n        )\n    )\n\n# Add incidents to map\nsan_map = folium.Map(location=[latitude, longitude], zoom_start=12)\nsan_map.add_child(incidents)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-257f6acf1315ad2bbf6e6c5f355b6710_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1226\" data-rawheight=\"730\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-6c334c8217bb686a1d871499fd7090b2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1226\" data-original=\"https://pic4.zhimg.com/v2-257f6acf1315ad2bbf6e6c5f355b6710_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1226'%20height='730'&gt;&lt;/svg&gt;\" data-rawwidth=\"1226\" data-rawheight=\"730\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-6c334c8217bb686a1d871499fd7090b2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1226\" data-original=\"https://pic4.zhimg.com/v2-257f6acf1315ad2bbf6e6c5f355b6710_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-257f6acf1315ad2bbf6e6c5f355b6710_720w.jpg?source=54b3c3a5\"></figure><p>5. 添加地理标签</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># add pop-up text to each marker on the map\nlatitudes = list(data.Y)\nlongitudes = list(data.X)\nlabels = list(data.Category)\n\nfor lat, lng, label in zip(latitudes, longitudes, labels):\n    folium.Marker([lat, lng], popup=label).add_to(san_map)    \n    \n# add incidents to map\nsan_map.add_child(incidents)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-603156031d393fefa2bb0040e83bd8a3_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1224\" data-rawheight=\"732\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e6e0f15cf208bf19c23dadcabebb61cf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1224\" data-original=\"https://pic2.zhimg.com/v2-603156031d393fefa2bb0040e83bd8a3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1224'%20height='732'&gt;&lt;/svg&gt;\" data-rawwidth=\"1224\" data-rawheight=\"732\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e6e0f15cf208bf19c23dadcabebb61cf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1224\" data-original=\"https://pic2.zhimg.com/v2-603156031d393fefa2bb0040e83bd8a3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-603156031d393fefa2bb0040e83bd8a3_720w.jpg?source=54b3c3a5\"></figure><p>6. 统计区域犯罪总数</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>from folium import plugins\n\n# let's start again with a clean copy of the map of San Francisco\nsan_map = folium.Map(location = [latitude, longitude], zoom_start = 12)\n\n# instantiate a mark cluster object for the incidents in the dataframe\nincidents = plugins.MarkerCluster().add_to(san_map)\n\n# loop through the dataframe and add each data point to the mark cluster\nfor lat, lng, label, in zip(data.Y, data.X, cdata.Category):\n    folium.Marker(\n        location=[lat, lng],\n        icon=None,\n        popup=label,\n    ).add_to(incidents)\n\n# add incidents to map\nsan_map.add_child(incidents)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-db3ec3d03f763150dd7f33bee48108f1_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1222\" data-rawheight=\"733\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a70b20c6864ba69e31f603e6d0ab2ba1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1222\" data-original=\"https://pic2.zhimg.com/v2-db3ec3d03f763150dd7f33bee48108f1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1222'%20height='733'&gt;&lt;/svg&gt;\" data-rawwidth=\"1222\" data-rawheight=\"733\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a70b20c6864ba69e31f603e6d0ab2ba1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1222\" data-original=\"https://pic2.zhimg.com/v2-db3ec3d03f763150dd7f33bee48108f1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-db3ec3d03f763150dd7f33bee48108f1_720w.jpg?source=54b3c3a5\"></figure><p>7. 读取geojson文件，可视化旧金山市10个不同Neighborhood的边界</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>import json\nimport requests\n\nurl = 'https://cocl.us/sanfran_geojson'\nsan_geo = f'{url}'\nsan_map = folium.Map(location=[37.77, -122.4], zoom_start=12)\nfolium.GeoJson(\n    san_geo,\n    style_function=lambda feature: {\n        'fillColor': '#ffff00',\n        'color': 'black',\n        'weight': 2,\n        'dashArray': '5, 5'\n    }\n).add_to(san_map)\n\n#display map\nsan_map\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-58b104c19091bcdce8452d30c6fcbee0_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1225\" data-rawheight=\"728\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-04728d1bddcd9e0780ff2311b6e83d63_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1225\" data-original=\"https://pic1.zhimg.com/v2-58b104c19091bcdce8452d30c6fcbee0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1225'%20height='728'&gt;&lt;/svg&gt;\" data-rawwidth=\"1225\" data-rawheight=\"728\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-04728d1bddcd9e0780ff2311b6e83d63_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1225\" data-original=\"https://pic1.zhimg.com/v2-58b104c19091bcdce8452d30c6fcbee0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-58b104c19091bcdce8452d30c6fcbee0_720w.jpg?source=54b3c3a5\"></figure><p>8. 统计每个区域的犯罪事件数目</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># Count crime numbers in each neighborhood\ndisdata = pd.DataFrame(cdata['PdDistrict'].value_counts())\ndisdata.reset_index(inplace=True)\ndisdata.rename(columns={'index':'Neighborhood','PdDistrict':'Count'},inplace=True)\ndisdata\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-2864f0d9c7c5cf84f899f9320d1f0e87_720w.jpg?source=54b3c3a5\" data-rawwidth=\"600\" data-rawheight=\"293\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-21f98b8cbba969bbe3030f403b3c04b4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-2864f0d9c7c5cf84f899f9320d1f0e87_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='293'&gt;&lt;/svg&gt;\" data-rawwidth=\"600\" data-rawheight=\"293\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-21f98b8cbba969bbe3030f403b3c04b4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-2864f0d9c7c5cf84f899f9320d1f0e87_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-2864f0d9c7c5cf84f899f9320d1f0e87_720w.jpg?source=54b3c3a5\"></figure><p>9. 创建Choropleth Map （颜色深浅代表各区犯罪事件数目）</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>m = folium.Map(location=[37.77, -122.4], zoom_start=12)\nfolium.Choropleth(\n    geo_data=san_geo,\n    data=disdata,\n    columns=['Neighborhood','Count'],\n    key_on='feature.properties.DISTRICT',\n    #fill_color='red',\n    fill_color='YlOrRd',\n    fill_opacity=0.7,\n    line_opacity=0.2,\n    highlight=True,\n    legend_name='Crime Counts in San Francisco'\n).add_to(m)\nm\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-4ec6f4738108ddafa4a2e949b64017e7_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1224\" data-rawheight=\"736\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-16e46b65a65bd879864465eaadac309c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1224\" data-original=\"https://pic1.zhimg.com/v2-4ec6f4738108ddafa4a2e949b64017e7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1224'%20height='736'&gt;&lt;/svg&gt;\" data-rawwidth=\"1224\" data-rawheight=\"736\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-16e46b65a65bd879864465eaadac309c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1224\" data-original=\"https://pic1.zhimg.com/v2-4ec6f4738108ddafa4a2e949b64017e7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-4ec6f4738108ddafa4a2e949b64017e7_720w.jpg?source=54b3c3a5\"></figure><p>10. 创建热力图</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>from folium.plugins import HeatMap\n\n# let's start again with a clean copy of the map of San Francisco\nsan_map = folium.Map(location = [latitude, longitude], zoom_start = 12)\n\n# Convert data format\nheatdata = data[['Y','X']].values.tolist()\n\n# add incidents to map\nHeatMap(heatdata).add_to(san_map)\n\nsan_map\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-8b064e610ce64b85804de65804f545a7_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1286\" data-rawheight=\"769\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-d676de2189e472b7d619061af687d841_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1286\" data-original=\"https://pic4.zhimg.com/v2-8b064e610ce64b85804de65804f545a7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1286'%20height='769'&gt;&lt;/svg&gt;\" data-rawwidth=\"1286\" data-rawheight=\"769\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-d676de2189e472b7d619061af687d841_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1286\" data-original=\"https://pic4.zhimg.com/v2-8b064e610ce64b85804de65804f545a7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-8b064e610ce64b85804de65804f545a7_720w.jpg?source=54b3c3a5\"></figure><p>本文源代码Jupyter notebook地址：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//nbviewer.jupyter.org/github/gaonanlee/Visualization-Practice/blob/master/Folium%2520Visualization%2520Examples.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Jupyter Notebook Viewer</a><p>GitHub下载地址：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//github.com/gaonanlee/Visualization-Practice/blob/master/Folium%2520Visualization%2520Examples.ipynb\" data-image=\"https://pic4.zhimg.com/v2-e05f517cb0ac3afc57ff166e76873091_l.jpg?source=54b3c3a5\" data-image-width=\"400\" data-image-height=\"400\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">gaonanlee/Visualization-Practice</a><p>最后，folium还可以用来创建动态热力图，动态路径图等，具体可参考Medium上的<a href=\"https://link.zhihu.com/?target=https%3A//medium.com/m/global-identity%3FredirectUrl%3Dhttps%253A%252F%252Ftowardsdatascience.com%252Fdata-101s-spatial-visualizations-and-analysis-in-python-with-folium-39730da2adf\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">这篇文章。</a></p><a data-draft-node=\"block\" data-draft-type=\"ad-link-card\"></a><p>实现效果如下图所示 (直接从Medium上抱过来的图，详细代码请点击上述链接）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-8749770c9240781facc9faef0007aa6e_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1016\" data-rawheight=\"674\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-e03ff107bf498d05b98868f1fbd94fe0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1016\" data-original=\"https://pic4.zhimg.com/v2-8749770c9240781facc9faef0007aa6e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1016'%20height='674'&gt;&lt;/svg&gt;\" data-rawwidth=\"1016\" data-rawheight=\"674\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-e03ff107bf498d05b98868f1fbd94fe0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1016\" data-original=\"https://pic4.zhimg.com/v2-8749770c9240781facc9faef0007aa6e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-8749770c9240781facc9faef0007aa6e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><hr><p><b>我的其他回答</b></p><p><a href=\"https://link.zhihu.com/?target=file%3A//rmit.internal/USRHome/eh4/e39764/Configuration/Desktop/%25E5%2593%25AA%25E4%25BA%259B%2520Python%2520%25E5%25BA%2593%25E8%25AE%25A9%25E4%25BD%25A0%25E7%259B%25B8%25E8%25A7%2581%25E6%2581%25A8%25E6%2599%259A%25EF%25BC%259F\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">哪些 Python 库让你相见恨晚？</a></p><p><a href=\"https://www.zhihu.com/question/56310477/answer/1110422008\" class=\"internal\">学习python中的pandas有没有好的教程推荐？</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/95461240\" class=\"internal\">机器学习中的因果关系: 从辛普森悖论（常见的统计学谬误）谈起</a></p><p>欢迎大家关注我的<a href=\"https://zhuanlan.zhihu.com/c_1134831892254924800\" class=\"internal\">机器学习笔记</a>专栏，我将用小白也能听懂的语言，为大家讲述机器学习中那些有趣好玩的知识 (●'◡'●)</p>"}{"为什么铺天盖地都是Python的广告？": "<p>在Java里打印 hello world</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>public class Main {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\n</code></pre></div><p>你需要了解：</p><ul><li>面向对象的基本知识</li><li>静态函数</li><li>参数</li><li>不要忘了打分号</li><li>返回值</li><li>数组</li><li>System.out 看着就很烦</li></ul><p>在 C++里面打印hello world</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#include &lt;iostream&gt;\n\nint main() {\n    std::cout &lt;&lt; \"Hello World!\";\n    return 0;\n}\n</code></pre></div><p>你需要了解：</p><ul><li>如何导入标准库</li><li>函数返回值</li><li>不要忘了打分号</li><li>数据类型</li><li>新手学学 学到指针可能就放弃了</li></ul><p>在 JavaScript里面打印hello world</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n\n&lt;body&gt;\n\n  &lt;p&gt;Before the script...&lt;/p&gt;\n\n  &lt;script&gt;\n    alert( 'Hello, world!' );\n  &lt;/script&gt;\n\n  &lt;p&gt;...After the script.&lt;/p&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre></div><p>你需要了解：</p><ul><li>HTML</li><li>看着就很复杂</li></ul><p>什么你说Node.js? 新手会知道怎么装Node.js ??</p><p>在Python里面打印hello world</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>print(\"Hello World!\")\n</code></pre></div><p>你需要了解：</p><ul><li>耶✌️我会编程了！</li></ul><p>再加上这几行</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>import numpy as np\nimport pandas as pd\nimport torch\n</code></pre></div><ul><li>耶✌️ 我会数据科学和深度学习了！</li></ul>", "零基础想系统地学习金融学、量化投资、数据分析、python，需要哪些课程、书籍？有哪些证书可以考？": "<p><b>7.10更新，最近写了关于量化交易的一些文章：</b></p><ul><li><a href=\"https://zhuanlan.zhihu.com/p/70140232\" class=\"internal\">Python之量化交易学习第一天</a> </li><li><a href=\"https://zhuanlan.zhihu.com/p/70142138\" class=\"internal\">Python量化交易：策略创建运行流程</a> </li><li><a href=\"https://zhuanlan.zhihu.com/p/70467726\" class=\"internal\">应用history_bars实现股票合约历史行情数据获取</a> </li><li><a href=\"https://zhuanlan.zhihu.com/p/70697267\" class=\"internal\">使用Python获取股票合约数据（附源码）</a> </li><li><a href=\"https://zhuanlan.zhihu.com/p/70819450\" class=\"internal\">使用Python获取财务数据，量化交易的源码</a> </li><li><a href=\"https://zhuanlan.zhihu.com/p/71015674\" class=\"internal\">Python量化交易：回测交易接口</a> </li><li><a href=\"https://zhuanlan.zhihu.com/p/71686100\" class=\"internal\">量化交易：了解投资组合的市场价值和资金价值</a> </li><li><a href=\"https://zhuanlan.zhihu.com/p/71861353\" class=\"internal\">Python量化交易：策略评价指标</a> </li><li><a href=\"https://zhuanlan.zhihu.com/p/72042573\" class=\"internal\">Python量化交易：实现第一个股票策略</a> </li><li><a href=\"https://zhuanlan.zhihu.com/p/72982532\" class=\"internal\">Python量化交易：多因子策略与理论介绍</a></li></ul><p>-------------------------分割-------------------------</p><p>感谢大家的支持！我要把下文当中视频全部放出来给你们，资料在文章中找一下，资料有源码+课程笔记视频就是这个链接。</p><h3>Python练手项目视频如下：</h3><ul><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/343.html%3Fgz\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【Python】2小时利用Python实现一个聊天器</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/361.html%3Fgz\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python从零基础到大牛项目实战：抓取景点评论数量实现旅游景点推荐</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/372.html%3Fgz\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">春运回家抢票无忧，Python大牛带你实现12306全自动抢票</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/76.html%3Fgz\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python之微信开发神器</a></b></li></ul><p>题主说的金融学还是量化投资，数据分析以及python这样的知识点。<b>其实一句话概括的话就是学习基于Python金融数据的量化分析课程。</b>我们知道近些年来，金融领域的量化分析越来越受到重视。所谓<b>金融量化就是：金融分析理论与计算机编程技术想结合。</b>可以利用线代计算机技术准确的实现金融资产定价和交易的机会。</p><p><b>这里放个懒人目录：</b></p><ul><li>Python在金融中应用的典型案例</li><li>Python的学习方法和思路</li><li>量化和数据分析的学习方法</li><li>适合金融领域相关的Python书籍</li></ul><p>上面说了其实楼主要学的就是基于python的金融数据。所以我在这里暂时分类为第一步我们来了解案例，清楚的知道python可以在金融领域做什么；了解过后就来聊聊如何学习python，一定是要有一定的基础之后再去学习量化和数据方面的知识。最后推荐给题主一些书。</p><ul><li><b>Python在金融中应用的典型案例：</b></li></ul><p>主要是分析学，在网络和金融这样的领域有了很突出的地位。应用各种软件组合起来进行数据的手机，数据管理以及数据分析，可以实现结论用作与商业决策、业务需求分析等等；在这个目录当中我们不过多的提那些python语言实际应用中的细节，在下一个目录里面说。主要在这讲些例子：</p><p><b>隐含波动率：</b>指的是不同期限期权的隐含波动率求解作用图，这事很多期权交易者以及风险管理者需要面对的日常。</p><p><b>MonteCarlo模拟：</b>通过MonteCarlo这个模拟来得到一组随着时间变化的股票指数，将选择的结果作成一张图，可以计算欧式期权的价值。这里是通过数值期权定价以及value-at-risk奉献管理以及信用价值调整的基础。</p><p><b>技术分析：</b>这也是在金融领域的必备技能，也就是通过之前的数据分析，完成对一个有科学数据依托的交易进行策略的回测。专业的投资者和一些业余的投资者通常会使用这类的投资分析。</p><p>可能有些小白发现有些不懂了，没关系。这里只是了解一下在金融领域我们依托python的话需要做什么。不懂就提问题，首先不懂的是金融学，不知道最基础掌握的是什么。最后的时候会给大家推荐金融学的书籍。还有不懂的是上面说的什么隐含波动率还有模拟以及如何数据分析。那么下面就来先了解一下python，基本上就可以知道了。</p><ul><li><b>Python的学习方法和思路：</b></li></ul><p>题主这样的学习方式，就是很清楚以后自己的未来发展，是我最建议的一种学习方式。就是有目的性比漫无目的只是想学python要容易找到捷径。因为我们只需要学习相关的知识就可以了。但是编程还是要从基础学习，先看下图：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"2161\" data-rawheight=\"2143\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e3b31af19a8e6d9cff5f30cfdd79007e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2161\" data-original=\"https://pic2.zhimg.com/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2161'%20height='2143'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"2161\" data-rawheight=\"2143\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e3b31af19a8e6d9cff5f30cfdd79007e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2161\" data-original=\"https://pic2.zhimg.com/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\"><figcaption>图片来源：黑马程序员论坛，侵删</figcaption></figure><p>看到这样的学习线路图不要慌，上面的知识点只是对于金融领域的话我们不需要全部都学习。第一我们要学习的是<b>python基础---→python高级---→---爬虫开发---→自动化运维---→数据挖掘与分析。</b>这篇内容会比较多，一个知识点一个知识点的往下说。真心的希望本文能帮助到更多的小伙伴。</p><p><b>（一）Python基础：</b></p><ul><li><b>1）计算机组成原理：</b>计算机组成部分、操作系统分类、B/S和C/S架构、理解软件与硬件的区别</li><li><b>2）Python变量以及开发环境：</b>字符串、数字、字典、列表、元祖等</li><li><b>3）流程控制语句：</b>程序的执行顺序，顺序执行、循环执行、选择执行</li><li><b>4）函数：</b>定义函数、调用函数、函数的嵌套、递归函数</li><li><b>5）文件的基本操作：</b>文件的打开、编辑、关闭</li><li><b>6）面向对象编程：</b>类对象、实例对象、定义类、实例化对象<br><b>7）异常处理：</b>学会捕捉异常、自定义异常<br><b>8）模块和包：</b>理解模块和包的概念并学会使用<br><b>9）飞机大战游戏制作：</b>自己独立完成飞机大战游戏</li></ul><p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/273.html%3Fgz\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Python入门教程完整版（懂中文就会）》</a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/12-dymJ8FjWzh6b5NKJuP3Q\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">配套资料</a>   提取码：gqly</p><p><b>（二）Python和Linux高级：</b></p><ul><li><b>1）Linux系统应用：</b>Linux发行版系统的使用、基本的操作语句</li><li><b>2）网络编程：</b>TCP/IP协议、服务器工作过程</li><li><b>3）并发编程：</b>线程、进程、协程</li><li><b>4）函数高级应用：</b>熟练使用函数的调用等</li><li><b>5）正则表达式：</b>熟练舒勇re模块的各种方法</li><li><b>6）数据库：</b>关系型数据库、非关系型数据库、MySQL<br><b>7）Python语法进阶：</b>闭包、装饰器、生成器、迭代器<br><b>8）mini-web服务器：</b>根据网络服务的过程写出简易的web服务器<br><b>9）mini-web框架：</b>可以编写简易的web服务器框架</li></ul><p><b>（三）爬虫开发</b></p><ul><li><b>1）爬虫开发的知识体系与相关工具：</b>网络爬虫的原理以及相关爬虫工具</li><li><b>2）MongoDB数据库：</b>数据库的增删改查</li><li><b>3）Scrapy框架：</b>框架的原理以及使用</li><li><b>4）定制化爬虫采集系统：</b>数据的采集、分析</li><li><b>5）爬虫实战项目：</b>实用型综合爬虫应用</li></ul><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1QgWQl-rWCNP9te_Yxny2VA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">配套资料</a>    提取码：8pdk</p><p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/258.html%3Fgz\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy爬虫框架精品视频</a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1eTSiguu\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">配套资料</a>     密码：cb66</p><p><b>（四）自动化运维：</b></p><ul><li><b>1）shell运维、脚本与变量：</b>运维简介、shell简介、脚本执行方法、开发规范</li><li><b>2）shell常见命令进阶：</b>表达式、linux常见符号、常见命令详解</li><li><b>3）shell流程控制：</b>选择语句、循环语句、函数</li><li><b>4）代码发布与环境部署：</b>掌握代码发布流程与环境部署</li><li><b>5）手工代码与脚本代码发布：</b>掌握手工代码发布与脚本代码发布</li></ul><p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/81.html%3Fgz\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python之自动话运维开发明星</a> </p><p><b>（五）数据挖掘与数据分析：</b></p><ul><li><b>1）基本概念：</b>顺序表、链表、栈、队列</li><li><b>2）排序与索引：</b>排序、索引、树与树算法</li><li><b>3）Series对象：</b>Series对象、DataFrame对象、DataFrame查询</li><li><b>4）数据操作：</b>数据的操作、存取与统计</li><li><b>5）Pandas绘图：</b>熟练使用Pandas</li><li><b>6）科学计算numpy、pandas：</b>numpy、pandas、matpalotlib、金融数据的综合分析处理</li></ul><p><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/80.html%3Fgz\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python之云计算开发王者-视频</a> </p><p><br></p><p>以上就是有关金融领域的python知识点大全了，我尽量为大家找到视频的网盘了。相关视频的资料，我再慢慢补充。希望小伙伴支持我哦。废话不说了，继续下面内容；</p><ul><li><b>量化和数据分析的学习方法：</b></li></ul><p>上面数据分析和挖掘基础的知识点也说的差不多了。跟金融还有没有什么关系。现在要说的是金融领域也就是目录一里面我们说到的那些可应用的知识点。</p><p><a href=\"https://link.zhihu.com/?target=https%3A//jingyan.baidu.com/article/ad310e80fdf5c61848f49e4b.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">如何用python计算隐含波动率</a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//blog.csdn.net/Cuixinyang19_/article/details/79888981\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">如何利用Python实现蒙特卡罗方法</a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//blog.csdn.net/geerniya/article/details/80534324\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">如何利用Python实现金融领域数据分析</a> </p><p>有关这里还有大量的知识点，我就不一一的敲代码了，这个是学习的第三阶段。前面两个阶段非常重要。首先是了解，其次是基础知识点，学会后再来看代码喽。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb\" width=\"4096\" data-original=\"https://pic4.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='4096'%20height='419'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"4096\" data-original=\"https://pic4.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></figure><ul><li><b>适合金融领域相关的Python书籍 </b></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-942b3ea721c516e8c84fdfe8b419f667_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"737\" data-rawheight=\"244\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-28e9fba8cf22b3328b10d13507ad0155_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"737\" data-original=\"https://pic2.zhimg.com/v2-942b3ea721c516e8c84fdfe8b419f667_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='737'%20height='244'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"737\" data-rawheight=\"244\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-28e9fba8cf22b3328b10d13507ad0155_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"737\" data-original=\"https://pic2.zhimg.com/v2-942b3ea721c516e8c84fdfe8b419f667_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-942b3ea721c516e8c84fdfe8b419f667_720w.jpg?source=54b3c3a5\"></figure><p>很适合小白的一本书，因为不知道题主指的是有没有金融学习方面的经验，所以就推荐这样的书看完了起码能够了解，经济学原理和时事发展；书中内容是问题和简答题，可以边学边做题。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-632b175a888cb8be10cb2bc8dfb93056_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1124\" data-rawheight=\"417\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-548b5010c268ccbc9c7a8d54f7f1c4b5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1124\" data-original=\"https://pic1.zhimg.com/v2-632b175a888cb8be10cb2bc8dfb93056_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1124'%20height='417'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1124\" data-rawheight=\"417\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-548b5010c268ccbc9c7a8d54f7f1c4b5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1124\" data-original=\"https://pic1.zhimg.com/v2-632b175a888cb8be10cb2bc8dfb93056_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-632b175a888cb8be10cb2bc8dfb93056_720w.jpg?source=54b3c3a5\"></figure><p>这本书介绍的是如何利用python开发科学计算机的应用程序，除了介绍数值计算以外，还重点介绍了如何制作交互式的图像。还有各种库的使用，以及领域也都是数据分析等等...</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-fccb6ae335cfec134e5fe655b8b88812_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"686\" data-rawheight=\"265\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-da2a833121f83e3866fbf289a68d819c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"686\" data-original=\"https://pic1.zhimg.com/v2-fccb6ae335cfec134e5fe655b8b88812_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='686'%20height='265'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"686\" data-rawheight=\"265\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-da2a833121f83e3866fbf289a68d819c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"686\" data-original=\"https://pic1.zhimg.com/v2-fccb6ae335cfec134e5fe655b8b88812_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-fccb6ae335cfec134e5fe655b8b88812_720w.jpg?source=54b3c3a5\"></figure><p>依旧是有关数据分析与挖掘的书，因为我们做金融的话主要是涉及和数字打交道。但是每一个学习python的小伙伴不要用这些书作为入门，只是建议大家在有一定的基础之后再来看这些书，作为提升也好作为工具书也好。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb\" width=\"4096\" data-original=\"https://pic2.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='4096'%20height='419'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"4096\" data-original=\"https://pic2.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></figure><p>暂时就这些吧，手码字很累。这篇问答，写了n+1个小时了。以后会把视频对应的学习资料源代码什么的给大家找到。但是也要看有没有人关注这个回答啦。题主加油，路漫漫其修远兮~!!</p><p></p>", "在线教育网站（Coursera、网易云课堂、腾讯课堂等）有哪些值得推荐的 Python 课程？": "<p></p><p><i><b>以下课程都为免费课程</b></i></p><p><i><b>python零基础相关</b>(5月30 11：20更新一次)</i></p><p><i>适用人群：</i></p><p>Python零基础的初学者、Web开发程序员、运维人员、有志于从事互联网行业以及各领域应用Python的人群</p><p><a href=\"https://link.zhihu.com/?target=http%3A//study.163.com/course/introduction/302001.htm%23/courseDetail\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">疯狂的Python：快速入门精讲</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//study.163.com/course/introduction/378003.htm%23/courseDetail\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">零基础入门学习Python</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//study.163.com/course/introduction/555014.htm%23/courseDetail\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">玩转Python语言</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.icourse163.org/course/bit-268001%23/info\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python语言程序设计</a><i>(<b>5月30 11：22更新，教程未完结)</b></i></p><p><a href=\"https://link.zhihu.com/?target=http%3A//mooc.study.163.com/course/HIT-1000002017%23/info\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">程序设计入门</a><i><b>（5月30 11：25更新，教程未完结)</b></i></p><p><a href=\"https://link.zhihu.com/?target=http%3A//open.163.com/special/Khan/computer.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">可汗学院公开课：计算机科学</a><i><b>（5月30 11：33更新，来源网易公开课，课程以python为基础)</b></i></p><p><b>python提高篇</b></p><p><a href=\"https://link.zhihu.com/?target=http%3A//study.163.com/course/introduction/932012.htm%23/courseDetail\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python 入门到精通</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//c.open.163.com/coursera/courseIntro.htm%3Fcid%3D88\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python交互式编程入门的课程主页</a><i><b>（5月30 11：27更新，来源网易公开课)</b></i></p><p><a href=\"https://link.zhihu.com/?target=http%3A//c.open.163.com/coursera/courseIntro.htm%3Fcid%3D2757\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python交互编程入门（第2部分）的课程主页</a><i><b>（5月30 11：28更新，来源网易公开课)</b></i></p><p><b>python  web方向</b></p><p><i><a href=\"https://link.zhihu.com/?target=http%3A//study.163.com/course/introduction/320022.htm%23/courseDetail\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Django 快速Web应用开发入门</a></i></p><p><i><b>python爬虫</b></i></p><p><i><a href=\"https://link.zhihu.com/?target=http%3A//study.163.com/course/introduction/1002810012.htm%23/courseDetail\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python实战：一周学会爬取网页</a></i></p><p><i><b>python数据分析方向</b></i></p><p><i><a href=\"https://link.zhihu.com/?target=http%3A//study.163.com/course/introduction/1401001.htm%23/courseDetail\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据分析实战基础课程</a></i></p><p><i><a href=\"https://link.zhihu.com/?target=http%3A//www.icourse163.org/course/nju-1001571005%23/info\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">用Python玩转数据</a>(<b>5月30 11：20更新)</b></i></p><p><i><b>python做游戏</b></i></p><p><i><a href=\"https://link.zhihu.com/?target=http%3A//study.163.com/course/introduction/1263029.htm%23/courseDetail\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">用Python做2048游戏</a></i></p><p><br></p><p>很多人问我如何学习Python爬虫和数据分析，我把我的所学所得总结并写了一本Python爬虫电子书和一本数数据分析电子书，这两本电子书已经帮助数十万位同学<b>从0开始学会了数据分析和Python爬虫</b>，如果你对这方面感兴趣的话，点击下方链接可以免费获取。</p><a href=\"https://link.zhihu.com/?target=https%3A//t.1yb.co/7HXS\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">路人甲分享的：Python爬虫电子书和数据分析电子书</a><p></p>", "什么原因让你想当程序员？": "<p>分享一个菊厂大神的故事：</p><p>不知道从什么时候起，亲戚朋友问我能不能买到打折手机时，我总会脱口而出：打折手机没有，打折基站，了解一下？说完自己都觉得有点无厘头，但似乎又是那么顺理成章。我想，无线的十年，写代码可能已经深深融入了我的生命，因为它不仅见证了我的青春年华，也见证了我不认怂的那些时刻。</p><p>这条路，我打算一头走到黑了！</p><p><b>程序员这辈子谁没遇到过几个bug</b></p><p>爱上编码，其实很偶然。在没有钱只有才的大学岁月里，在当时追女生还停留在手写情书的年代，我用OpenGL写了一个3D的迷宫游戏，在迷宫的关键路径上放上了女神的美照。一个小小的游戏，帮助我的兄弟打败了99%的直男，成功追到了学校的女神，我也成了我们那届男生眼中的“代码大牛”。初尝成功的滋味，让我觉得干软件这行，还行。</p><p>2007年底，我成功应聘到华为无线，在上海接首个落地成都研究所的产品UMTS Access Point，因为之前的游戏开发工作经历是顺风顺水，让我觉得基站软件编码没什么难的，但是进公司的第二个月，脸就被打得啪啪响。当时还是瀑布式开发，严格遵循预先计划的需求、分析、设计、编码、测试顺序进行，一个环节阻塞，所有人都得停下来。我负责的是系统广播消息的整改优化，当联调到我这时，DSP（基带子系统）却死活收不到我发的系统消息。我不停走读代码，却连续两天两夜毫无头绪，全部门100多号人因为我已经阻塞了48小时，部长不停在我座位后边转悠，盯着我屏幕那焦灼的眼神，都深深地刺痛着我，什么时候，我从别人眼中的大牛，变成了拖后腿的人了。</p><p>48小时后，部长觉得不能再这么枯等下去，安排了部门技术大牛来帮助我梳理思路，重新走读代码，终于找到了问题根因，原来在从CPU向DSP发送消息时，需要提前20ms发送，我当时过于自信，不知道信令之间有严格的时序关系，发送和接收是有延迟的，想当然认为优化成实时发送，不是更节约时间，更有效率么，于是不假思索地修改成了我心目中“更美”的代码。但就是这个“更美”，实际变成了Bug，阻塞了我们的联调。问题终于解决了，但就在那一晚，我人生中第一次失眠了，我甚至开始怀疑自己，是不是不适合干通信行业？</p><p>第二天，我找到部长，向他诉说我内心的煎熬和自信的崩塌，谁知道部长神情了然，说：“一个程序员，谁这辈子没遇到过几个Bug啊，都是自己亲手埋的雷，那就死活都要亲手把它挖出来。下一次，一定要由你自己来挖。”我俩相视一笑，突然间，我就释怀了。</p><p>经过这次挫折，我对做大型通信软件有了新的认识和了解。年轻的时候多少有些自负，自认为自己的代码水平不错，但实际上软件领域有太多的未知，一山更比一山高，不太懂的地方，不能想当然，得多向前辈请教。代码也不是越“美”就越好，在网运行的每一行代码都是多代华为人不断完善的结果，从表面上来看，这些代码离美还有一段距离，但是从业务场景和功能完备性上讲，它通常考虑比较周全，出问题的概率很低。</p><p>愈曲折，愈见大风景。</p><p><b>没有解决不了的bug，只有没找对方法的我们</b></p><p>带着对编码的敬畏，后来的我一直在业务组长期深耕。在自己熟悉的业务领域，无论特性开发，还是小的模块重构，都能游刃有余，主导的模块重构还获得过公司E2E质量奖，但也许正因为太熟悉了，太游刃有余了，感觉激情正在一点点地褪去。就在我以为自己会麻木，甚至动了别的心思的时候，一个扩展眼界的机会，找上门来了。也正是这次机会，让我坚定了继续在软件世界遨游的信念。</p><p>当时，根据公司要求产品线需要发起VxWorks切换Linux的hert 8.0性能攻关，每一年增加的10万+代码，会成为产品性能的包袱，所以每一年的性能攻关，都是项目的重中之重，但是平台切换和性能优化了多年，能想到的、该用的招式都用过了，大伙有些黔驴技穷了，怎么才能让性能KPI继续往上升呢？尤其是在4个月内要提升XX%，能按期达标吗？</p><p>部长找到我，问我愿不愿意接受这个高难度的挑战，支援项目组完成性能优化，支撑至少每秒1500次链路建立。这是我从未涉及的性能优化领域，我，行吗？</p><p>老婆给我打气，“这，不就是你正在寻找的，突破的机会吗？拿出你当年运动员的精神来，坚持、突破！你要相信自己，你可是‘百米飞人’哦。”这里要说明一下，我从小学就参加校田径队，一直到高中，从一个只是爱运动的小破孩，硬是练到了国家二级运动员，练成了研究所的“百米飞人”。</p><p>有了老婆这个坚强的后盾，我欣然进入了攻关组，并利用所有的业余时间，从各种渠道、多个维度，补充相关知识的学习。同时，也向产品线架构部专家请教攻关方向，向底层平台专家请教消息通信优化方向，向已经成功优化的部门请教Ans1编解码优化方法等等，一切可以想到的，有一线希望的方式方法，我都主张尝试一遍。从业务流程、业务算法、模块部署、热点代码、编译器选项等多个维度同时进攻，4个月后，我们如期顺利攻下了这个山头。</p><p>一时间，我百感交集，我认识到软件的路更宽了，曾经的我单纯认为软件开发不就是垒代码吗？谁让代码更简洁实用，谁就是大牛，其实不然，它更是合作，是探索，是智慧的碰撞。当我们费尽千辛万苦，齐心协力冲破“暴风骤雨”时，我心中的迷茫如乌云散开，我感受到了沐浴阳光的爽快与自信。这让我更加坚定了软件开发的选择，没有解决不了的Bug，只有没找对方法的我们。</p><figure data-size=\"small\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-39cbce71ab5034e685e096c2120b198f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"945\" data-rawheight=\"708\" class=\"origin_image zh-lightbox-thumb\" width=\"945\" data-original=\"https://pic4.zhimg.com/v2-39cbce71ab5034e685e096c2120b198f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='945'%20height='708'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"945\" data-rawheight=\"708\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"945\" data-original=\"https://pic4.zhimg.com/v2-39cbce71ab5034e685e096c2120b198f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-39cbce71ab5034e685e096c2120b198f_720w.jpg?source=54b3c3a5\"></figure><p><b>主管被我大胆的想法吓到了</b></p><p>5G TUE（测试终端）落地成都，部门要成立软件架构优化组，鉴于我以往的表现，部门希望我担任技术负责人，从一开始就解决未来可能出现的性能问题。我先后分析了号称世界最快的“并发框架Disruptor”，公司外研所开发的JSF，以及面向异构系统的OpenCL等各类并发框架后发现，其实取各家所长，开发一套全新的并发调度框架，更加有好处，能让TUE/CPE在生命周期内，都不用再考虑性能问题。这个架构可以结合TUE/CPE高负载，超低时延，多板多框共存，产品硬件单板每年更新，以及多产品OneTrack的业务特点，达成每秒百万级任务处理的性能规格。</p><p>我把全新开发并发框架这个想法跟部门主管简单说了下，主管吓了一跳，“这个想法太大胆了。” 原计划只是优化小改，现在却要完全重写，我们的软件实力是否足够？风险到底在哪里？能不能按时交付版本？性能会不会变得更差？会不会影响公司5G整体发布节奏？一连串的问号，让他的心里完全没底。我却坚信这个新框架如果做出来完全可以“碾压”原有架构，而且新架构会让整体更简洁，就像那张著名的印度街道电线图，只有重新铺设，架构才不会腐化，更有利于后面的开发和维护。但主管仍然不同意，认为风险还是太大。</p><p>我想到架构大师Till Adam曾经说过，优秀的架构师必须首先是一个推销员。于是我整理了新架构的各种优缺点分析，开始向主管、MDE游说，从进度分析、性能分析、架构预演、风险预判等维度，一一解决了他们的疑虑和担心。经过2周十来次密集的技术PK，部门终于同意，兵分两路，我一个人先开发架构原型，另一组人在原有架构上优化，谁先验证成功，提升更大，就用谁的架构去适配修改产品代码。</p><p>是时候用上以前积累的知识和技能了。我心中燃起一团火，只想着要拼尽所有将想法变成现实。3个月的时间，我心无旁骛全力以赴开发新架构，用老婆的话说，简直到了“魔怔”的地步，吃饭在想，走路在想，睡觉也在想，几乎没有一刻停止过思考。还记得最后一天，当新架构原型基本完成，上板性能压力测试远远超出预期，这样的结果，让我觉得，过去种种，值了。部门也终于信心十足，决定用我的新架构来启动业务层的适配修改。</p><p>2017年5月，上海通信展，TUE被集成在了汽车上，观众通过5G网络，在展厅遥控30公里外的汽车，实时控制。远程驾驶可以成为未来租车和共享汽车行业服务这种自动驾驶的补充，例如用户将车开到偏僻的场所，租车公司无需人力开回，只需利用远程驾驶就可召回、调度车辆。我和项目组的兄弟们通过网络直播，看到汽车被顺利遥控的那一刹那，我突然发现，原来我们的通信软件已经走在了世界科技的最前沿，我们正在构造未来智能化时代的通信基础，这种无与伦比的成就感和自豪感，瞬间盈满了内心。</p><figure data-size=\"small\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8e3dc414739e1c7ed340a955bdf9ef6e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"635\" data-rawheight=\"955\" class=\"origin_image zh-lightbox-thumb\" width=\"635\" data-original=\"https://pic2.zhimg.com/v2-8e3dc414739e1c7ed340a955bdf9ef6e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='635'%20height='955'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"635\" data-rawheight=\"955\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"635\" data-original=\"https://pic2.zhimg.com/v2-8e3dc414739e1c7ed340a955bdf9ef6e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8e3dc414739e1c7ed340a955bdf9ef6e_720w.jpg?source=54b3c3a5\"></figure><p>十年时光倾吐芳华，峥嵘岁月如墨留香。这十年里，无论是为了一行代码“死磕”，还是为了一个架构想破了头，穷尽了方法“折腾”，又或是为了“推销”自己的方案拼命争取，我没认过怂。所有的努力在看到自己编写的代码照进现实的那一刻，是作为程序员的我最大的骄傲。</p><p><br></p><p>《华为人》版权所有，请勿转载</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-a974ce8b690bac698eb5d6ecf2362626_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"240\" data-rawheight=\"240\" class=\"content_image\" width=\"240\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='240'%20height='240'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"240\" data-rawheight=\"240\" class=\"content_image lazy\" width=\"240\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-a974ce8b690bac698eb5d6ecf2362626_720w.jpg?source=54b3c3a5\"></figure><p></p>", "让一台电脑死机至少需要几行代码？": "<p>一行代码足矣。</p><p>对于window系统，下面的bat脚本就能让机器死机。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>start cmd ipconfig\n</code></pre></div><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/1002493456249233408\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"记得在虚机上运行啊\" data-poster=\"https://pic1.zhimg.com/v2-666566bbe7831cfd66ccc614b4016978.jpg\" data-lens-id=\"1002493456249233408\">              <img class=\"thumbnail\" src=\"https://pic1.zhimg.com/v2-666566bbe7831cfd66ccc614b4016978.jpg\">              <span class=\"content\">                <span class=\"title\">记得在虚机上运行啊<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/1002493456249233408</span>              </span>            </a>            <p>对于linux系统，fork炸弹就行。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>：（）{ ： | ： &amp; }；：\n</code></pre></div><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/1002492333060898816\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"同上\" data-poster=\"https://pic1.zhimg.com/v2-e6c2719a1f8e00d072b7fb83c76a872b.jpg\" data-lens-id=\"1002492333060898816\">              <img class=\"thumbnail\" src=\"https://pic1.zhimg.com/v2-e6c2719a1f8e00d072b7fb83c76a872b.jpg\">              <span class=\"content\">                <span class=\"title\">同上<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/1002492333060898816</span>              </span>            </a>            <p>不管是哪种，无非是无限次循环，吃尽系统资源，最后让机器宕机。</p><hr><p>最后说一下这个fork炸弹的原理吧。其实可以这样写：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>fun()\n{\n  fun | fun &amp; \n};\nfun\n</code></pre></div><p>知道啥意思了吧？fun函数里面执行fun本身并创建后台进程，这个&amp;就是指后台运行的意思，这样会导致无限次创建后台进程直到吃完系统资源。</p>", "怎么才能最短时、高效、踏实的学习 Python？": "建议读两本书：<br><br>1、<a href=\"https://link.zhihu.com/?target=http%3A//book.douban.com/subject/3288908/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">集体智慧编程 (豆瓣)</a><br>因为Python是一门不需要花太多精力（甚至可以说很少），就可以基本掌握的一门语言，所以推荐这本书。题主提到以后想学机器学习，这是一本非常好的入门书，书中的例子源码都是Python实现的，并且能帮你迅速熟悉Python相关的各种计算库。<br><br>2、<a href=\"https://link.zhihu.com/?target=http%3A//book.douban.com/subject/10590856/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">统计学习方法 (豆瓣)</a><br>考虑到题主要学得踏实，这本书深入浅出地讲了和机器学习有关的一切数学基础知识，一整本的干货，没有废话，非常值得一读。题主数学专业的话，读起来应该会比我更顺畅。<br><br><b>前景非常好，这两本书让我的年薪提升了不少，而且不会是死搬砖的工作。</b>"}{"毫无基础的人如何入门 Python ？": "<p>0基础入门Python，其实只需要一周的<b>碎片时间</b>就好啦！</p><p>Python这种高级编程语言，相比前编程明星C++和Java等更简单易操作。KDnuggets调查显示，目前Python已成为最受AI从业者欢迎的语言。 </p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-c7c8df054d1806a6f39486dc01a94ba6_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1044\" data-rawheight=\"902\" class=\"origin_image zh-lightbox-thumb\" width=\"1044\" data-original=\"https://pic1.zhimg.com/v2-c7c8df054d1806a6f39486dc01a94ba6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1044'%20height='902'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1044\" data-rawheight=\"902\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1044\" data-original=\"https://pic1.zhimg.com/v2-c7c8df054d1806a6f39486dc01a94ba6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-c7c8df054d1806a6f39486dc01a94ba6_720w.jpg?source=54b3c3a5\"><figcaption>△ Python超过R成最受欢迎语言</figcaption></figure><p><br>有不少慕名而来的同学和厚如砖的Python入门书对望一天后继而放弃，感慨：“这个入门的门槛有两米高吧。”</p><p><b>别慌</b>，Kaggle新开设的Python课或许就是你想要的。它<b>小巧</b>、<b>免费</b>、<b>可在线系统学习</b>，最重要的是，按每天只学习一小时来算，<b>入门仅需7天</b>。</p><p>一周的碎片时间，入门一种最 的编程语言，这究竟是个怎样的课程？ </p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-d1e817671e5e5fc2509301c705f0182f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"309\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-d1e817671e5e5fc2509301c705f0182f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='309'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"309\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-d1e817671e5e5fc2509301c705f0182f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-d1e817671e5e5fc2509301c705f0182f_720w.jpg?source=54b3c3a5\"></figure><h2><b>课程设置</b></h2><p>这套免费的课程总时长只有7小时，共分为14个小章节，课程内容涵盖了基础理论和动手实践。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-eb11f4a569718b02f81457d526825626_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"2045\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-eb11f4a569718b02f81457d526825626_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='2045'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"2045\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-eb11f4a569718b02f81457d526825626_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-eb11f4a569718b02f81457d526825626_720w.jpg?source=54b3c3a5\"><figcaption> △ 课程目录</figcaption></figure><p>其中，理论课中注重Python的语法、调用函数、内置文档、数据类型、列表推导等最底层的基础内容，实践课重在“抛砖引玉”，专门设置课程讲解与外部库连接的使用技巧，为下一步的探索打基础。</p><p>整个14节的课程，每节课完成时长平均30分钟，7天你就能轻松入门Python了。 </p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-d10b6a5fbd4d9c3aec0d341f5fc7667e_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"320\" data-rawheight=\"240\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-d10b6a5fbd4d9c3aec0d341f5fc7667e_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"320\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='320'%20height='240'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"320\" data-rawheight=\"240\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-d10b6a5fbd4d9c3aec0d341f5fc7667e_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"320\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-d10b6a5fbd4d9c3aec0d341f5fc7667e_720w.gif?source=54b3c3a5\"></figure><h2><b>课程体验</b></h2><p>量子位感受了一下，最大的体验是这个课程可以称得上是<b>手把手教你</b>了。比如在第一小节中，课程以一段具体的代码入手，逐行解释每一行的指令对应的动作，并逐行解释在代码块中不同行的具体作用。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-0ad7afb0bd401023e24e13bcb92c0278_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"668\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-0ad7afb0bd401023e24e13bcb92c0278_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='668'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"668\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-0ad7afb0bd401023e24e13bcb92c0278_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0ad7afb0bd401023e24e13bcb92c0278_720w.jpg?source=54b3c3a5\"></figure><p> 细致程度如同高中数学老师在你耳边重复“奇变偶不变，符号看象限”。想要课程地址？可直接前往文章末尾~</p><h2><b>短而美家族</b></h2><p>和Python课程一个系列，Kaggle还分享了一系列免费编程速成课。比如，<b>4</b>小时入门机器学习：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-9450b6c83582e361f847c278ac35d113_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"555\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-9450b6c83582e361f847c278ac35d113_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='555'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"555\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-9450b6c83582e361f847c278ac35d113_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-9450b6c83582e361f847c278ac35d113_720w.jpg?source=54b3c3a5\"></figure><p><b>4</b>小时学习用TensorFlow构建深度学习模型： </p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-4b259198debc2d605eae1a8418f4a483_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"546\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-4b259198debc2d605eae1a8418f4a483_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='546'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"546\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-4b259198debc2d605eae1a8418f4a483_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-4b259198debc2d605eae1a8418f4a483_720w.jpg?source=54b3c3a5\"></figure><p> 此外，还有<b>7</b>小时了解数据可视化，<b>3</b>小时入坑SQL，<b>4</b>小时学习Pandas等一系列课程。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-e46be8ea66ec1be49069a5b3839617a6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"462\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-e46be8ea66ec1be49069a5b3839617a6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='462'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"462\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-e46be8ea66ec1be49069a5b3839617a6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e46be8ea66ec1be49069a5b3839617a6_720w.jpg?source=54b3c3a5\"></figure><p> 这样看下来，Kaggle的这套入门系的课程具有相同的特点：总耗时短、拆分成小章节、动手性强，而且还免费，免费啊~</p><p>还不动起手来？</p><h2><b>地址传送门</b></h2><p>7天速成Python课：<br><i><a href=\"https://link.zhihu.com/?target=https%3A//www.kaggle.com/learn/python\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">kaggle.com/learn/python</span><span class=\"invisible\"></span></a></i></p><p>4小时入门机器学习：<br><i><a href=\"https://link.zhihu.com/?target=https%3A//www.kaggle.com/learn/machine-learning\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">kaggle.com/learn/machin</span><span class=\"invisible\">e-learning</span><span class=\"ellipsis\"></span></a></i></p><p>4小时了解深度学习：<br><i><a href=\"https://link.zhihu.com/?target=https%3A//www.kaggle.com/learn/deep-learning\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">kaggle.com/learn/deep-l</span><span class=\"invisible\">earning</span><span class=\"ellipsis\"></span></a></i></p><p>3小时喜提SQL:<br><i><a href=\"https://link.zhihu.com/?target=https%3A//www.kaggle.com/learn/sql\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">kaggle.com/learn/sql</span><span class=\"invisible\"></span></a></i></p><p>4小时get Pandas:<br><i><a href=\"https://link.zhihu.com/?target=https%3A//www.kaggle.com/learn/pandas\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">kaggle.com/learn/pandas</span><span class=\"invisible\"></span></a></i></p><p>7小时搞懂数据可视化：<br><i><a href=\"https://link.zhihu.com/?target=https%3A//www.kaggle.com/learn/data-visualisation\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">kaggle.com/learn/data-v</span><span class=\"invisible\">isualisation</span><span class=\"ellipsis\"></span></a></i></p><p>以上课程汇总：<br><i><a href=\"https://link.zhihu.com/?target=https%3A//www.kaggle.com/learn/overview\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">kaggle.com/learn/overvi</span><span class=\"invisible\">ew</span><span class=\"ellipsis\"></span></a></i></p><p>值得先码后看，祝你玩得愉快~</p><p>— <b>完</b> —</p><p>量子位 · QbitAI</p><p>վ'ᴗ' ի 追踪AI技术和产品新动态</p><p>戳右上角「+关注」获取最新资讯↗↗</p><p>如果喜欢，请分享or点赞吧~比心❤</p>", "Python 应该怎么去练习和使用？": "<p>有位名叫骆昊 (jackfrued) 的资深程序员，为大家规划了一条<b>从新手到老司机</b>的Python百天之路。<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub标星已近4万</a>。</p><p>从全方位熟悉语言，到Python的进阶用法，再到天南地北的实战攻略：只要沿着这条路走下去，就都会遇到。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-588f0e39768680055a8ea9e4e5c10628_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"508\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8e81309fe3962a8163749f7a067aa9a7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-588f0e39768680055a8ea9e4e5c10628_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='508'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"508\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8e81309fe3962a8163749f7a067aa9a7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-588f0e39768680055a8ea9e4e5c10628_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-588f0e39768680055a8ea9e4e5c10628_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>在百天日程表的上方，骆先生还温柔地鼓励了大家：</p><blockquote>Python是一个“优雅”、“明确”、“简单”的编程语言。<br>学习曲线低，非专业人士也能上手。</blockquote><p>你一定也想知道，这100天都会经历些什么。</p><h2><b>开始是萌新</b></h2><p>最初的15天，都是<b>Python语言基础</b>的修炼。基本功很重要，每日内容也很丰满：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"381\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='381'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"381\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>第一天，按照教程的步骤，搭好编程环境，充实的生活就可以展开了。</p><p>第二天是<b>语言元素</b>，第三天<b>分支结构</b>，第四天<b>循环结构</b>。比如，打开循环结构这一小节，会看到这类结构的用途讲解，各种语句的有毒基础用法，以及小练习：</p><blockquote>while循环</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-9642f926703e05eb63bb6f9665cf01c9_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"770\" data-rawheight=\"1024\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-5bdd94149e17f011fd87ad96803956a6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"770\" data-original=\"https://pic1.zhimg.com/v2-9642f926703e05eb63bb6f9665cf01c9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='770'%20height='1024'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"770\" data-rawheight=\"1024\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-5bdd94149e17f011fd87ad96803956a6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"770\" data-original=\"https://pic1.zhimg.com/v2-9642f926703e05eb63bb6f9665cf01c9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-9642f926703e05eb63bb6f9665cf01c9_720w.jpg?source=54b3c3a5\"><figcaption>△智商余额不足</figcaption></figure><p><br></p><p>第五天，就是初步总结和小测的日子了。看上去，测试题还很生动：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-931f9fcb7b801d937b0d090521069b68_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"215\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-5412ed9671c3993cd216a43e3c7cc2fb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-931f9fcb7b801d937b0d090521069b68_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='215'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"215\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-5412ed9671c3993cd216a43e3c7cc2fb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-931f9fcb7b801d937b0d090521069b68_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-931f9fcb7b801d937b0d090521069b68_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>后面的10天，大致是这样：<br></p><blockquote>第六天：函数和模块的使用<br>第七天：字符串和常用数据结构<br>第八天：面向对象编程基础<br>第九天：面向对象进阶<br>第十天：图形用户界面和游戏开发<br>第十一天：文件和异常<br>第十二天：字符串和正则表达式<br>第十三天：进程和线程<br>第十四天A：网络编程入门<br>第十四天B：网络应用开发<br>第十五天：图像和文档处理</blockquote><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-45d5ffa62ffb9ea8cf9014d85d405a1f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"285\" data-rawheight=\"249\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-45d5ffa62ffb9ea8cf9014d85d405a1f_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"285\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='285'%20height='249'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"285\" data-rawheight=\"249\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-45d5ffa62ffb9ea8cf9014d85d405a1f_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"285\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-45d5ffa62ffb9ea8cf9014d85d405a1f_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>其中，第十章是真·游戏课，会讲到“炮弹打中了飞机”“箱子摔在了地面上”这样的<b>碰撞</b>该怎么写，还要写个“<b>大球吃小球</b>”的游戏。</p><p>节奏这样欢快，这样治愈，你就不会放弃了吧。</p><p>至少，过了这15天，就不是个纯纯的萌新了。</p><h2><b>进阶与实践</b></h2><p>基础打好之后，第16-20天，是<b>Python语言进阶</b>修炼。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-138e2dff98eb812ee7a6f40c6e2f3443_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"396\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-a83ebd79906c2a04ebdeccb3208899b2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"654\" data-original=\"https://pic4.zhimg.com/v2-138e2dff98eb812ee7a6f40c6e2f3443_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='654'%20height='396'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"396\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-a83ebd79906c2a04ebdeccb3208899b2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"654\" data-original=\"https://pic4.zhimg.com/v2-138e2dff98eb812ee7a6f40c6e2f3443_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-138e2dff98eb812ee7a6f40c6e2f3443_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>你会把前面15天的修炼成果升级一波：用上不同的数据结构、算法，熟悉各种高级的操作。</p><p>这5天里，依然有许多有趣又经典的例子，比如在讲<b>贪心算法</b>的时候：</p><blockquote>假设小偷有一个背包，最多能装20公斤赃物，他闯入一户人家，发现如下表所示的物品。显然，他不能把所有物品都装进背包，所以必须确定拿走哪些物品，留下哪些物品。</blockquote><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d07f784d9fe4cf81d815c8064279ca5a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"548\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2aae0b5c503859c7d5bcf00818ca6ae4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"654\" data-original=\"https://pic4.zhimg.com/v2-d07f784d9fe4cf81d815c8064279ca5a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='654'%20height='548'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"548\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2aae0b5c503859c7d5bcf00818ca6ae4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"654\" data-original=\"https://pic4.zhimg.com/v2-d07f784d9fe4cf81d815c8064279ca5a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d07f784d9fe4cf81d815c8064279ca5a_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>当然，游戏还是不能少，本章有纸牌游戏可以写着玩。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-0998d7e78527e676fe6e4827496da869_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"169\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-0998d7e78527e676fe6e4827496da869_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"300\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='300'%20height='169'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"169\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-0998d7e78527e676fe6e4827496da869_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"300\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-0998d7e78527e676fe6e4827496da869_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>完成前20天的任务，你就是个小有经验的Python程序猿了。</p><p>再经过20天的姿势补充，就变得更加丰盈：</p><blockquote>第21-30天：Web前端入门<br>第31-35天：玩转Linux操作系统<br>第36-40天：数据库基础和进阶</blockquote><p>这时，可以走出家门，去广阔的天地里实践了：</p><blockquote>第41-55天：Django实战<br>第55-65天：Flask实战<br>第66-75天：爬虫开发<br>第76-90天：<b>数据处理和机器学习</b><br>第90-100天：团队项目开发</blockquote><p>你可能已经发现了，“数据处理和机器学习”是最持久的一章，<b>历时15天</b>。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-01b901e4984329da281742ef44da433c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"674\" data-rawheight=\"1408\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-382d70beb3aa6ea2c13cfa1bdd27fdb2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"674\" data-original=\"https://pic2.zhimg.com/v2-01b901e4984329da281742ef44da433c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='674'%20height='1408'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"674\" data-rawheight=\"1408\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-382d70beb3aa6ea2c13cfa1bdd27fdb2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"674\" data-original=\"https://pic2.zhimg.com/v2-01b901e4984329da281742ef44da433c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-01b901e4984329da281742ef44da433c_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>从各类Python库的用法，到决策树、贝叶斯分类、支持向量机这些常用方法，再到机器学习实战，这个章节都覆盖了。</p><p>美中不足，这章的教程似乎还没有更新完全。不过，但前面的75天，已经可以尽情探索了。</p><p>就算你已经不是纯纯的萌新，还是可以找到自己需要的章节，定点修炼。</p><p>那么，快开始吧：</p><p>项目传送门：<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/jackfrued/Py</span><span class=\"invisible\">thon-100-Days</span><span class=\"ellipsis\"></span></a></p><p>— <b>完</b> —</p><p>量子位 · QbitAI<br>վ'ᴗ' ի 追踪AI技术和产品新动态</p><a href=\"https://www.zhihu.com/org/liang-zi-wei-48\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-ca6e7ffc10a0d10edbae635cee82d007_l.jpg?source=54b3c3a5\" data-image-width=\"250\" data-image-height=\"250\" class=\"internal\">量子位</a><p>欢迎大家关注我们，以及订阅<a href=\"https://zhuanlan.zhihu.com/qbitai\" class=\"internal\">我们的知乎专栏</a></p>", "Python 有哪些好的学习资料或者博客？": "推荐<a href=\"https://link.zhihu.com/?target=http%3A//www.fullstackpython.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Full Stack Python</a> 有各种python资源汇总，从基础入门到各种框架web应用开发和部署，再到高级的ORM、Docker都有。以下是<a href=\"https://link.zhihu.com/?target=http%3A//www.fullstackpython.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Full Stack Python</a> 上总结的一些教程，我拙劣的翻译了以下，并调整（调整顺序并删了部分内容）了一下：<br><br><b>1、无开发经验，初学python<br></b><p>如果你不会其他语言，python是你的第一门语言：</p><ul><li><p><a href=\"https://link.zhihu.com/?target=http%3A//www.swaroopch.com/notes/python/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">A Byte of Python</a> （简明python教程，这个有中文版<a href=\"https://link.zhihu.com/?target=http%3A//www.kuqin.com/abyteofpython_cn/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">简明 Python 教程</a>）是非常好的入门教程。</p></li><br><li><a href=\"https://link.zhihu.com/?target=http%3A//learnpythonthehardway.org/book/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Learn Python the Hard Way</a> （Zed Shaw的免费教程，个人强烈推荐）<br></li><li><p>Python, Django and Flask教程： <a href=\"https://link.zhihu.com/?target=https%3A//realpython.com/%3Futm_source%3Dfsp%26utm_medium%3Dpromo%26utm_campaign%3Dbestresources\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Real Python</a> （收费，需购买）</p></li><li><p><a href=\"https://link.zhihu.com/?target=https%3A//www.youtube.com/watch%3Fv%3DmvK0UzFNw1Q\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">short 5 minute video</a> 解释了为什么你的出发点应该是要完成什么项目，或者解决什么问题，而不是为了学一门语言而去学一门语言。</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//www.diveinto.org/python3/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Dive into Python 3</a> 是一本开源的python教程，提供HTML和PDF版。</p></li><li><p>Code Academy 有一个为纯新手准备的 <a href=\"https://link.zhihu.com/?target=http%3A//www.codecademy.com/tracks/python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python track</a> 。</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//opentechschool.github.io/python-beginners/en/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Introduction to Programming with Python</a> 介绍了基本语法和控制结构等，提供了大量代码示例。</p></li><li><p>O'Reilly 的书 <a href=\"https://link.zhihu.com/?target=http%3A//greenteapress.com/thinkpython/html/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Think Python: How to Think Like a Computer Scientist</a> 是非常好的入门教材。</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//anandology.com/python-practice-book/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Practice Book</a> 是一本python练习的书，帮你掌握python基本语法。</p></li><li><p>想通过做实际项目来学编程？看看这个 <a href=\"https://link.zhihu.com/?target=https%3A//medium.com/learning-journalism-tech/five-mini-programming-projects-for-the-python-beginner-21492f6ce0f3\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">this list of 5 programming project for Python beginners</a>（5个适合python初学者的编程项目）。</p></li><li><p>Reddit的创造者之一写了一个教程，如何用python构建一个博客网站（<a href=\"https://link.zhihu.com/?target=https%3A//www.udacity.com/course/web-development--cs253\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">use Python to build a blog</a>.），使非常好的web编程入门。</p></li><li><p>The fullstack python的作者写了一篇关于如何学习python的文章<a href=\"https://link.zhihu.com/?target=http%3A//www.mattmakai.com/learning-python-for-non-developers.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">learning Python</a> 。</p></li></ul><br><b>2、有开发经验 ，初学Python</b><ul><li><p><a href=\"https://link.zhihu.com/?target=http%3A//learnxinyminutes.com/docs/python/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Learn Python in y minutes</a> ，让你在几分钟内快速上手，有个大概了解。</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//pymbook.readthedocs.org/en/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python for you and me</a> ， python的语法，语言的主要结构等，还包含来Flask Web App的教程。</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//docs.python-guide.org/en/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">The Hitchhiker’s Guide to Python</a></p></li><li><p><a href=\"https://link.zhihu.com/?target=https%3A//districtdatalabs.silvrback.com/how-to-develop-quality-python-code\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">How to Develop Quality Python Code</a> ，如何开发高质量的python代码</p></li></ul><br><b>3、进阶</b><br><ul><li><p><a href=\"https://link.zhihu.com/?target=http%3A//mirnazim.org/writings/python-ecosystem-introduction/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">The Python Ecosystem: An Introduction</a> ， 关于python生态系统，虚拟机、python包管理器pip、虚拟环境virtualenv、还有很多进阶主题</p></li><li><p>The <a href=\"https://link.zhihu.com/?target=http%3A//www.reddit.com/r/python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Subreddit</a> ，就是python的reddit节点（相当于中国的贴吧），是一个活跃的社区，可以交流讨论，解决问题等。</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//jessenoller.com/good-to-great-python-reads/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Good to Great Python Reads</a> ，收集进阶和高级python文章，讲了很多细微差异和python语言本身的细节。</p></li><li><p>博客 <a href=\"https://link.zhihu.com/?target=http%3A//freepythontips.wordpress.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Free Python Tips</a> ，有很多python和python生态系统的文章。</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//pythonbooks.revolunet.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Books</a> ，有一些免费的Python, Django, 数据分析等方面的书。</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//norvig.com/python-iaq.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python IAQ: Infrequently Asked Questions</a> ，关于python 经常问到的问题。</p></li></ul><br><b>4、视频，屏幕录像，演示文稿等</b><br><p>一些技术交流会议的视频录像： <a href=\"https://link.zhihu.com/?target=http%3A//www.fullstackpython.com/best-python-videos.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">best Python videos</a></p><br><b>5、python的包</b><ul><li><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/vinta/awesome-python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">awesome-python</a> ，收集了python各种非常好用非常酷的包，确实非常awesome，让作者相见恨晚（ I wish I had this page when I was just getting started）。</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//easy-python.readthedocs.org/en/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">easy-python</a></p></li></ul><br><b>6、 播客（Podcasts）</b><ul><li><p><a href=\"https://link.zhihu.com/?target=http%3A//www.talkpythontome.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Talk Python to Me</a> ， 关注使用python的人们和组织，每一期都会邀请一些开发者谈谈他们的工作等。</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//podcastinit.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Podcast.__init__</a> ，关于python和让python更牛B的人们。</p></li></ul><br><b>7、新闻资讯（可订阅）</b><ul><li><p><a href=\"https://link.zhihu.com/?target=http%3A//www.pythonweekly.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Weekly</a> ， 最新的python文章、视频、项目、资讯 。</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//pycoders.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PyCoder's Weekly</a> ，和python weekly类似。</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//importpython.com/newsletter/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Import Python</a></p></li></ul><br>以下是引用的原文：<br><blockquote>New to programming<p>If you're learning your first programming language these books were written with you in mind. Developers learning Python as a second or later language should skip down to the next section for \"experienced developers\".</p><ul><li><p>To get an introduction to Python, Django and Flask at the same time, consider purchasing the <a href=\"https://link.zhihu.com/?target=https%3A//realpython.com/%3Futm_source%3Dfsp%26utm_medium%3Dpromo%26utm_campaign%3Dbestresources\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Real Python</a> course by Fletcher, Michael and Jeremy.</p></li><li><p>This <a href=\"https://link.zhihu.com/?target=https%3A//www.youtube.com/watch%3Fv%3DmvK0UzFNw1Q\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">short 5 minute video</a> explains why it's better to think of projects you'd like to build and problems you want to solve with programming. Start working on those projects and problems rather than jumping into a specific language that's recommended to you by a friend.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//www.cs.hmc.edu/csforall/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CS for All</a> is an open book by professors at Harvey Mudd College which teaches the fundamentals of computer science using Python. It's an accessible read and perfect for programming beginners.</p></li><li><p>If you've never programmed before check out the <a href=\"https://link.zhihu.com/?target=http%3A//learntocodewith.me/getting-started/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Getting Started</a> page on <a href=\"https://link.zhihu.com/?target=http%3A//learntocodewith.me/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Learn To Code with Me</a> by <a href=\"https://link.zhihu.com/?target=https%3A//twitter.com/lebdev\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Laurence Bradford</a>. She's done an incredible job of breaking down the steps beginners should take when they're uncertain about where to begin.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//learnpythonthehardway.org/book/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Learn Python the Hard Way</a> is a free book by Zed Shaw.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//www.diveinto.org/python3/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Dive into Python 3</a> is an open source book provided under the Creative Commons license and available in HTML or PDF form.</p></li><li><p>While not Python-specific, Mozilla put together a <a href=\"https://link.zhihu.com/?target=https%3A//developer.mozilla.org/en-US/Learn\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Learning the Web</a> tutorial for beginners and intermediate web users who want to build websites. It's worth a look from a general web development perspective.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//www.swaroopch.com/notes/python/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">A Byte of Python</a> is a beginner's tutorial for the Python language.</p></li><li><p>Code Academy has a <a href=\"https://link.zhihu.com/?target=http%3A//www.codecademy.com/tracks/python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python track</a> for people completely new to programming.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//opentechschool.github.io/python-beginners/en/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Introduction to Programming with Python</a> goes over the basic syntax and control structures in Python. The free book has numerous code examples to go along with each topic.</p></li><li><p>Google put together a great compilation of materials and subjects you should read and learn from if you want to be a <a href=\"https://link.zhihu.com/?target=https%3A//www.google.com/about/careers/students/guide-to-technical-development.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">professional programmer</a>. Those resources are useful not only for Python beginners but any developer who wants to have a strong professional career in software.</p></li><li><p>The O'Reilly book <a href=\"https://link.zhihu.com/?target=http%3A//greenteapress.com/thinkpython/html/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Think Python: How to Think Like a Computer Scientist</a> is available in HTML form for free on the web.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//anandology.com/python-practice-book/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Practice Book</a> is a book of Python exercises to help you learn the basic language syntax.</p></li><li><p>Looking for ideas about what projects to use to learn to code? Check out <a href=\"https://link.zhihu.com/?target=https%3A//medium.com/learning-journalism-tech/five-mini-programming-projects-for-the-python-beginner-21492f6ce0f3\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">this list of 5 programming project for Python beginners</a>.</p></li><li><p>There's a Udacity course by one of the creators of Reddit that shows how to <a href=\"https://link.zhihu.com/?target=https%3A//www.udacity.com/course/web-development--cs253\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">use Python to build a blog</a>. It's a great introduction to web development concepts through coding.</p></li><li><p>I wrote a quick blog post on <a href=\"https://link.zhihu.com/?target=http%3A//www.mattmakai.com/learning-python-for-non-developers.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">learning Python</a> that non-technical folks trying to learn to program may find useful.</p></li></ul>Experienced developers new to Python<ul><li><p><a href=\"https://link.zhihu.com/?target=http%3A//learnxinyminutes.com/docs/python/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Learn Python in y minutes</a> provides a whirlwind tour of the Python language. The guide is especially useful if you're coming in with previous software development experience and want to quickly grasp how the language is structured.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//pymbook.readthedocs.org/en/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python for you and me</a> is an approachable book with sections for Python syntax and the major language constructs. The book also contains a short guide at the end to get programmers to write their first Flask web application.</p></li><li><p>Kenneth Reitz's <a href=\"https://link.zhihu.com/?target=http%3A//docs.python-guide.org/en/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">The Hitchhiker’s Guide to Python</a> contains a wealth of information both on the Python programming language and the community.</p></li><li><p><a href=\"https://link.zhihu.com/?target=https%3A//districtdatalabs.silvrback.com/how-to-develop-quality-python-code\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">How to Develop Quality Python Code</a> is a good read to begin learning about development environments, application dependencies and project structure.</p></li></ul>Beyond the basics<ul><li><p><a href=\"https://link.zhihu.com/?target=http%3A//mirnazim.org/writings/python-ecosystem-introduction/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">The Python Ecosystem: An Introduction</a> provides context for virtual machines, Python packaging, pip, virutalenv and many other topics after learning the basic Python syntax.</p></li><li><p>The <a href=\"https://link.zhihu.com/?target=http%3A//www.reddit.com/r/python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Subreddit</a> rolls up great Python links and has an active community ready to answer questions from beginners and advanced Python developers alike.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//jessenoller.com/good-to-great-python-reads/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Good to Great Python Reads</a> is a collection of intermediate and advanced Python articles around the web focused on nuances and details of the Python language itself.</p></li><li><p>The blog <a href=\"https://link.zhihu.com/?target=http%3A//freepythontips.wordpress.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Free Python Tips</a> provides posts on Python topics as well as news for the Python ecosystem.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//pythonbooks.revolunet.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Books</a> is a collection of freely available books on Python, Django, and data analysis.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//norvig.com/python-iaq.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python IAQ: Infrequently Asked Questions</a> is a list of quirky queries on rare Python features and why certain syntax was or was not built into the language.</p></li></ul>Videos, screencasts and presentations<p>Videos from conferences and meetups along with screencasts are listed on the <a href=\"https://link.zhihu.com/?target=http%3A//www.fullstackpython.com/best-python-videos.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">best Python videos</a> page.</p>Curated Python packages lists<ul><li><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/vinta/awesome-python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">awesome-python</a> is an incredible list of Python frameworks, libraries and software. I wish I had this page when I was just getting started.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//easy-python.readthedocs.org/en/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">easy-python</a> is like awesome-python although instead of just a Git repository this site is in the Read the Docs format.</p></li></ul>Podcasts<ul><li><p><a href=\"https://link.zhihu.com/?target=http%3A//www.talkpythontome.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Talk Python to Me</a> focuses on the people and organizations coding on Python. Each episode features a different guest interviewee to talk about his or her work.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//podcastinit.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Podcast.__init__</a> is another podcast on \"about Python and the people who make it great\".</p></li></ul>Newsletters<ul><li><p><a href=\"https://link.zhihu.com/?target=http%3A//www.pythonweekly.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Weekly</a> is a free weekly roundup of the latest Python articles, videos, projects and upcoming events.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//pycoders.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PyCoder's Weekly</a> is another great free weekly email newsletter similar to Python Weekly. The best resources are generally covered in both newsletters but they often cover different articles and projects from around the web.</p></li><li><p><a href=\"https://link.zhihu.com/?target=http%3A//importpython.com/newsletter/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Import Python</a> is a newer newsletter than Python Weekly and PyCoder's Weekly. So far I've found this newsletter often pulls from different sources than the other two. It's well worth subscribing to all three so you don't miss anything.</p></li></ul></blockquote>", "怎么才能最短时、高效、踏实的学习 Python？": "<p><a href=\"https://link.zhihu.com/?target=https%3A//www.dataquest.io/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Dataquest</a> 这个网站上提供了一系列和数据分析相关的python教程，从python基本语法到data analysis的基本函数，到PANDAS包的使用方法，到machine learning里常用的Python指令，甚至还有手把手教你玩Kaggle，简直不能更贴心~当然这个只是入门级教程，高级技巧就一点点的在实战项目里积累吧~</p><figure><noscript><img src=\"https://pic4.zhimg.com/50/00fb373ed5c75f07f346cd9b9ff54b93_720w.png?source=54b3c3a5\" data-rawwidth=\"1091\" data-rawheight=\"1019\" class=\"origin_image zh-lightbox-thumb\" width=\"1091\" data-original=\"https://pic2.zhimg.com/00fb373ed5c75f07f346cd9b9ff54b93_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1091'%20height='1019'&gt;&lt;/svg&gt;\" data-rawwidth=\"1091\" data-rawheight=\"1019\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1091\" data-original=\"https://pic2.zhimg.com/00fb373ed5c75f07f346cd9b9ff54b93_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/00fb373ed5c75f07f346cd9b9ff54b93_720w.png?source=54b3c3a5\"></figure><br><p>再补充一个coursera上的python课程，<a href=\"https://link.zhihu.com/?target=https%3A//www.coursera.org/learn/hipython/home/welcome\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">coursera.org/learn/hipy</span><span class=\"invisible\">thon/home/welcome</span><span class=\"ellipsis\"></span></a>，</p><p>用Python玩转数据，by Nanjing University，也非常方便贴心，而且是中文教程，老师讲的也很风趣幽默~</p><figure><noscript><img src=\"https://pic4.zhimg.com/50/110816953932abb1c6b48b7bd5f944ca_720w.png?source=54b3c3a5\" data-rawwidth=\"287\" data-rawheight=\"257\" class=\"content_image\" width=\"287\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='287'%20height='257'&gt;&lt;/svg&gt;\" data-rawwidth=\"287\" data-rawheight=\"257\" class=\"content_image lazy\" width=\"287\" data-actualsrc=\"https://pic4.zhimg.com/50/110816953932abb1c6b48b7bd5f944ca_720w.png?source=54b3c3a5\"></figure><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/429be83cbf48114d4d0ebac4826676b5_720w.png?source=54b3c3a5\" data-rawwidth=\"547\" data-rawheight=\"661\" class=\"origin_image zh-lightbox-thumb\" width=\"547\" data-original=\"https://pic4.zhimg.com/429be83cbf48114d4d0ebac4826676b5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='547'%20height='661'&gt;&lt;/svg&gt;\" data-rawwidth=\"547\" data-rawheight=\"661\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"547\" data-original=\"https://pic4.zhimg.com/429be83cbf48114d4d0ebac4826676b5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/429be83cbf48114d4d0ebac4826676b5_720w.png?source=54b3c3a5\"></figure><br><br><p>对于那些对机器学习以及数据挖掘感兴趣的筒子们,这里还有两个免费的进阶版教程,\n<a href=\"https://link.zhihu.com/?target=https%3A//generalassemb.ly/education/data-science/washington-dc/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Data Science Course</a> <a href=\"https://link.zhihu.com/?target=https%3A//github.com/justmarkham/DAT4\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub - justmarkham/DAT4: General Assembly&amp;#x27;s Data Science course in Washington, DC</a>\nYou got all the python codes to play with and a very detailed tutorial to understand the material. </p><p>如果是想为code interview做快速准备的筒子们,不妨尝试下Udacity的<a href=\"https://link.zhihu.com/?target=https%3A//www.udacity.com/course/technical-interview--ud513\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">技术面试练习</a>Algorithm and Data Structure in Python. 这门免费的课程会带着你快速的浏览一遍技术面试中所考察的基本知识.</p><p>&amp;lt;img src=\"<a href=\"https://link.zhihu.com/?target=https%3A//pic2.zhimg.com/v2-b30515bad8f725fca4fd7d68f089a299_b.png\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pic2.zhimg.com/v2-b3051</span><span class=\"invisible\">5bad8f725fca4fd7d68f089a299_b.png</span><span class=\"ellipsis\"></span></a>\" data-rawwidth=\"1657\" data-rawheight=\"1316\" class=\"content_image\" width=\"1657\" data-original=\"<a href=\"https://link.zhihu.com/?target=https%3A//pic2.zhimg.com/v2-b30515bad8f725fca4fd7d68f089a299_r.png\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pic2.zhimg.com/v2-b3051</span><span class=\"invisible\">5bad8f725fca4fd7d68f089a299_r.png</span><span class=\"ellipsis\"></span></a>\"&amp;gt;感觉这个课程比起LeetCode来指导性要强一些,比较适合入门者.希望对不同需求的筒子们有帮助. :)</p>", "有哪些网站用爬虫爬取能得到很有价值的数据？": "2015.11.14<br><br>更新神器：<br>1.下面提到的Quandl网站有一个他们自己的Python库，叫Quandl，可惜也是收费的。<br><blockquote>pip install Quandl<br></blockquote><br>2.<a href=\"https://link.zhihu.com/?target=http%3A//tushare.org/fundamental.html%23id4\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">TuShare -财经数据接口包</a>  国内好心人做的开源财经数据接口（觉得好的可以捐助一下）。这里几乎可以获取到A股的所有信息了，还包括一些经济数据。重点是他不仅免费，还提供了一个Python库tushare。<br><br><blockquote>pip install tushare<br><br>import tushare as ts</blockquote><br>这样一来你便可以通过这个库方便地获取大量A股信息了。<br><br><br>——————————————以下为原答案——————————————<br>一大波数据来袭！<br><br>题主问了有什么网站，能用来做什么。我给出几个API网站吧，做APP用的可能比较多，不过也可以用在日常生活中。<br><br><br><br><b>一、生活服务</b><br><br><br><br>1.手机话费充值。<a href=\"https://link.zhihu.com/?target=http%3A//www.apix.cn/services/show/110\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">手机话费充值数据服务</a><br>2.天气查询。<a href=\"https://link.zhihu.com/?target=http%3A//www.apix.cn/services/show/19\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">天气查询数据服务</a><br>3.快递查询。<a href=\"https://link.zhihu.com/?target=http%3A//www.apix.cn/services/show/133\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">快递查询服务数据服务</a><br>4.健康食谱。<a href=\"https://link.zhihu.com/?target=http%3A//www.apix.cn/services/show/54\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">健康食谱数据服务</a><br>5.查医院。<a href=\"https://link.zhihu.com/?target=http%3A//www.apix.cn/services/show/43\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">医院大全数据服务</a><br>6.水电煤缴费。<a href=\"https://link.zhihu.com/?target=http%3A//www.apix.cn/services/show/114\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">水电煤缴费数据服务</a><br>7.电影大全。<a href=\"https://link.zhihu.com/?target=http%3A//www.apix.cn/services/show/29\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">电影大全数据服务</a><br>8.谜语、歇后语、脑筋急转弯。<a href=\"https://link.zhihu.com/?target=http%3A//www.apix.cn/services/show/86\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">猜一猜数据服务</a><br>9.音乐搜索。<a href=\"https://link.zhihu.com/?target=http%3A//www.apix.cn/services/show/140\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">音乐搜索接口数据服务</a><br>10.健康知识。<a href=\"https://link.zhihu.com/?target=http%3A//www.apix.cn/services/show/44\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">健康知识数据服务</a><br>11.百度糯米、团购等信息。<a href=\"https://link.zhihu.com/?target=http%3A//www.apix.cn/services/show/68\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">糯米开放api数据服务</a><br>12.彩票开奖。<a href=\"https://link.zhihu.com/?target=http%3A//www.apix.cn/services/show/121\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">彩票开奖查询数据服务</a><br><br>以上接口都来自网站：<br><a href=\"https://link.zhihu.com/?target=http%3A//www.apix.cn/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">APIX_国内领先的云数据服务平台_API接口服务平台</a><br><br>细心 的人会发现，这些功能简直是遍地都是啊，支付宝、微信什么的一大堆，哪用那么麻烦！<br><br>是的，但我相信这些可能为一些不太了解相关信息的人提供了帮助。不过，虽然这些功能很多APP都有，如果自己有空闲时间又懂得编程，不喜欢别人的UI设计，自己做一做也是挺好玩的。比如：<br><br>生活枯燥了，把这些谜语歇后语等根据个人喜好定时推送到自己的手机，放松身心；<br>把一些健康小知识在空闲时间推送给自己，提醒自己；<br>……<br><br>国内类似的网站还有：<br><a href=\"https://link.zhihu.com/?target=https%3A//www.juhe.cn/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">API数据接口_开发者数据定制</a><br><a href=\"https://link.zhihu.com/?target=http%3A//apistore.baidu.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">API Store_为开发者提供最全面的API服务</a><br><a href=\"https://link.zhihu.com/?target=http%3A//www.91cha.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">API数据接口_免费数据调用-91查|91cha.com</a><br><br>除此之外还有一些门户网站提供了一些API接口，比如豆瓣、新浪、百度等等。<br><br><br><br><b>二、金融数据</b><br><br><br><b><br>1</b>.股票<br>①新浪财经<br>最多人用的就是新浪财经了，因为它是免费的，并且使用起来也不难。以下是网上找的教程：<br><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/seacryfly/articles/stock.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">获取历史和实时股票数据接口</a><br><br>②东方财富网<br>网站提供了大量信息，也是基本面投资者的好去处。可以查看财务指标或者根据财务指标选股（如净资产收益率）：<a href=\"https://link.zhihu.com/?target=http%3A//data.eastmoney.com/xuangu/%23Yz1beWxubDAxKDF8MC4wNSldfHM9eWxubDAxKDF8MC4wNSl8c3Q9LTE%3D\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">选股器 _ 数据中心</a>。这些都是很好的投资参考，当然还有其它功能有对应的API，可以自己分析一下。<br><br>③中财网<br><a href=\"https://link.zhihu.com/?target=http%3A//data.cfi.cn/cfidata.aspx\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">data.cfi.cn/cfidata.asp</span><span class=\"invisible\">x</span><span class=\"ellipsis\"></span></a>提供各种产品的数据<br><br><br>（国内很多功能类似网站，如和讯、网易财经、雪球等等，具体的我没有一一试验就不放上来了，各位可以自己去试试，下同。）<br><br><br><b>2</b>.大宗商品<br>①<a href=\"https://link.zhihu.com/?target=http%3A//www.goldtoutiao.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">黄金头条——用资讯帮你赚钱！炒黄金，看黄金头条！黄金价格</a><br>这里提供了各种大宗商品的行情，也可以分析获取。包括技术分析方面。<br><br>②当然还有外国网站：<a href=\"https://link.zhihu.com/?target=http%3A//www.investing.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Investing.com</a><br><br><br><b>3</b>.美股等综合类（其实新浪财经和东方财富等也算是国内综合的了，就不一一列举了）<br>①Wind资讯。很多机构用的都是这里的数据，当然普通个人是拿不到的，不过如果你是财经院校的学生，他们会提供免费的数据。详见官网。<br><br>②<a href=\"https://link.zhihu.com/?target=http%3A//www.xignite.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Market Data Feed and API</a><br>外国网站，提供了大量数据，付费。有试用期。<br><br>③<a href=\"https://link.zhihu.com/?target=https%3A//www.quandl.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Quandl Financial and Economic Data</a><br>同上。部分免费。<br><br>④<a href=\"https://link.zhihu.com/?target=http%3A//www.programmableweb.com/news/96-stocks-apis-bloomberg-nasdaq-and-etrade/2013/05/22\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">96 Stocks APIs: Bloomberg, NASDAQ and E*TRADE</a><br>外国网站整合的96个股票API合集，可以看看。<br><br>⑤雅虎财经<br><a href=\"https://link.zhihu.com/?target=http%3A//www.finance.yahoo.com/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">finance.yahoo.com/</span><span class=\"invisible\"></span></a><br><a href=\"https://link.zhihu.com/?target=https%3A//hk.finance.yahoo.com/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">hk.finance.yahoo.com/</span><span class=\"invisible\"></span></a><br>香港版<br><br><br><br><b>三、其它</b><br><br><br>撇去上面的API不说，如果单单爬取网页上的内容下来，那就太多可以爬的了。如：<br><br><b>1</b>.爬取网站上的图片。包括贴吧、知乎、Tumblr、轮子哥、XXX（你懂的）。<br><br><b>2</b>.爬取影评、电影资讯、图书等等。比如豆瓣电影。轻轻松松掌握好书好电影。<br><br><b>3</b>.爬取社交网络。比如新浪微博，Twitter。（Twitter提供了API，可以提交关键字等信息爬取搜索结果中的每一条内容。）爬完可以对整个社交网络群体做个分析，情绪、作息、区域……<br><br><b>4</b>.一些网站有你喜欢的文章或者帖子，但是他们没有APP或者是APP做得不友好，你可以直接爬取页面信息推送到手机上。<br><br><b>5</b>.做一个微信公众号。有了上面那么多数据，还怕公众号没东西？生活服务、选股器、行情分析、文章推送等等等。<br><br>……<br><br>其它想到再更。", "作为非计算机专业的学生，觉得 C 语言远比其他语言易于上手，正常吗？": "<p>不错，是个程序员料子。</p><p><br></p><p>没错，C的确比诸如C++、Java、python之类语言简单。</p><p>因为它什么都没有：32个关键字9种控制语句，然后是加减乘除与或非之类直接从数学里借来的若干运算符。没了。</p><p><br></p><p>简洁明了，自解释性强，正交度高，一个个概念搞清楚了，那真是做什么都简单。</p><p><br></p><p>相比之下，其他语言往往会引入更多的概念；这些概念往往还做不到“正交”，关系复杂，规则层出不穷；经常还极不直观……</p><p><br></p><p><b>对于跟着课本/教材亦步亦趋的初学者来说</b>，当然是概念简单清晰、逻辑关系直白、在达成基本数据结构/算法这个目标上不带任何逻辑包袱的C更简单，更容易入门。</p><hr><p>请注意我加粗的“<b>跟着课本/教材亦步亦趋的初学者</b>”这个限定。</p><p><br></p><p>一旦脱离了这个限定，第一段的讨论就成了无的放矢了。</p><p>这是因为，一旦你真的需要写点什么<b>实用</b>的东西出来，你就不得不面对“现实的复杂性”。</p><p><br></p><p>比如说吧，最简单的，见过电脑的bios界面吗？如果让你用C写个类似的东西呢？</p><p>类似的，如果让你写个视频解码器音频播放器呢？</p><p><br></p><p>你立刻就会发现，你必须面对如下问题：</p><p>1、你必须懂硬件原理（显示器原理、显存/屏幕空间的映射关系、硬盘存储寻道原理、音频采样/插值原理等等；以及CPU寄存器、流水线、cache、总线、锁等等等等）。</p><p>2、你不得不使用第三方库——比如，为了写一个bios式的界面，最省事的办法是用ncurses库。</p><p>3、其他语言直接提供给你的东西，你将不得不全部重新实现一遍——更加的笨拙，更加的不正交——粗糙的完全无法使用。</p><p><br></p><p>C要求，这1、2、3三点你必须全能。</p><p>它的库往往更原始，缺乏抽象，经常需要你根据自己的实际情况随手补全；</p><p>它要求你对硬件了如指掌：每条指令下去，从CPU标志位到内存到总线到显卡声卡，所造成的一切直接间接后果，你必须如数家珍、并把程序执行时每个实体的每个瞬间都安排的明明白白——哪怕状态变化的时序出现问题，那都是无法接受的严重bug；</p><p>最后，你需要自己就能够为python之类语言实现/改良它的字典，这才可能在C里面造一个不能被编辑器/编译器直接支持的类似物、然后还要把它用到自己的项目里。</p><p><br></p><p>相比之下，其他语言不需要你了解1，它甚至禁止你过于了解硬件，从而避免你被硬件的复杂性所影响；</p><p>它们有丰富完善好用的2，它们的库从一开始就是针对傻瓜用户设计的，用错了它甚至能给你提示；</p><p>你只需学会它们的3的用法、并不需要自己懂这些“神秘语言元素”的实现：你压根不需要像用C时一样，自己绞尽脑汁用最少的指令实现这类语言提供的基本设施——越是基本的设施越是值得字斟句酌：用python你可以直接用“字典”；但如果玩C，你得知道“字典”就是C里面你要自己实现的“哈希表”；而且并不是课本上的“玩具代码”，而是实实在在工业强度的、最优化的、支持一切key-value类型的、高度泛化的哈希表。</p><p><br></p><p>可见，哪怕你对C对数据结构有那么一丁点最粗浅的了解，你都绝不会用“python有字典”来证明它的难、证明C的易用——恰恰相反，学C的目标之一，正是为python实现字典、实现“无需区分变量类型的变量”、帮助初学者“不知道指针照样能用内存，因为我在后台偷偷替他们做了嘿嘿哈哈……”</p><p><br></p><p>换句话说，题主完全不知道想用好C需要什么。</p><p>你所罗列的、其他语言“难”的那些方面，恰恰证明了你对用好C需要哪些基础知识一无所知。</p><p><br></p><p>照着书拿把扳手拧俩螺丝便以为“儿得矣”，弄辆车让你拧方向盘挂个档你都摇头怕怕……可是，你要知道，C的设计目标，可是用来设计、制造汽车的哦。</p><p>做不到随时随地手撸一个变速箱出来，怎么能叫“懂C”呢。</p>", "编程零基础应当如何开始学习 Python？": "<blockquote><i>直到前一阵子出版社的人联系我，问我愿不愿意出书</i><br><i>我才意识到自己写这个专栏已经这么久了</i><br><i>最近也老人问我，怎么入门编程，要不要报班等等</i><br><i>我是从<b>零基础</b>开始学习的，这里分享一下我的学习过程</i></blockquote><h2><b>关于自学和培训班</b></h2><p>其实我没有什么资格来和大家讨论这个问题，<br>因为我也是刚刚入门而已，并不能指导性的告诉大家应该怎么样<br>我只是说一下自己的看法：<br><b>自学，不用上培训班！！！</b><br>首先我自己是完全没有报培训班的，所以觉得也没这个必要<br>其次，如果你想将写代码作为自己的职业，那么<b>自学</b>是必不可少的能力<br>如果什么都得让别人拉着你，那么是不是太被动了？</p><p><br></p><h2><b>兴趣</b></h2><p>我没事喜欢逛知乎，有一段时间看到了这个问题：<br><b>利用爬虫技术能做到哪些很酷很有趣很有用的事情</b>: <a href=\"https://link.zhihu.com/?target=http%3A//t.cn/RptGOPx\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">t.cn/RptGOPx</span><span class=\"invisible\"></span></a><br>觉得回答的一个个炒鸡酷炫<br>就对爬虫产生了浓厚的兴趣，<br>于是就开始了我的一路摸爬滚打</p><h2><b>文本资料</b></h2><p>想学写爬虫，Python的基础知识肯定得补起来<br>这里我推荐几本我觉得很棒的<b>入门书籍</b><br>最好按照<b>顺序</b>阅读，难度是<b>由浅入深</b>的</p><ul><li><b>父与子的编程之旅</b>： <a href=\"https://link.zhihu.com/?target=http%3A//t.cn/R7s2ME8\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">t.cn/R7s2ME8</span><span class=\"invisible\"></span></a><br>这本书说的都是一些基本的概念，告诉我们编程到底是怎么一回事，初步了解Python的世界。</li><li><b>笨方法学Python</b>： <a href=\"https://link.zhihu.com/?target=http%3A//t.cn/Rie7W7L\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">t.cn/Rie7W7L</span><span class=\"invisible\"></span></a><br>这本书在知乎上都被推荐烂了，但是的确是一本不可多得的好书。但最后的部分对于零基础的人来说，跨越程度有点大，如果看不懂，可以暂时跳过</li><li><b>菜鸟教程 Python3教程</b> ：<a href=\"https://link.zhihu.com/?target=http%3A//t.cn/RqM5aF8\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">t.cn/RqM5aF8</span><span class=\"invisible\"></span></a><br>从这里，就可以完整的掌握Python这门语言的基础语法、类型、函数、面向对象...<br>这里的内容都是最基本的解释，只能告诉你一个大概。但这就是目前的我们所需要的，因为太难的，真的看不懂（比如 线程锁 迭代器 生成器...）</li><li><b>简明教程</b>： <a href=\"https://link.zhihu.com/?target=http%3A//t.cn/RMP60Nw\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">t.cn/RMP60Nw</span><span class=\"invisible\"></span></a><br>这相对于菜鸟教程，更加的精炼和简介，也是非常的棒！</li><li>廖雪峰的Python3教程： <a href=\"https://link.zhihu.com/?target=http%3A//t.cn/RK0qGu7\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">t.cn/RK0qGu7</span><span class=\"invisible\"></span></a><br>相对于前面的教程来说，廖大的更加深入，我当初是直接看的廖大，看到后面云里雾里，所以完全零基础的小伙伴，还是先尝试其他比较简单的好一点。</li></ul><p>上面就是我推荐的一些入门的文本资料，<br>最后三个，可以按照自己的水平阅读学习<br>也不一非要按照我推荐的顺序，<br>当然，光看是没用的，上面的例子也要<b>跟着做</b>才能有收获</p><h2><b>视频慕课</b></h2><p>有的小伙伴可能一看书就犯困，<br>更喜欢直接一点的视频，<br>我当初是书和视频一起结合着看的<br>下面推荐我上的几门慕课：</p><ul><li><b>哈佛大学公开课：计算机科学cs50</b>： <a href=\"https://link.zhihu.com/?target=http%3A//t.cn/RwvcReG\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">t.cn/RwvcReG</span><span class=\"invisible\"></span></a><br>这门课对于我这种文科生来说，简直是福音！！！通过这门课，你可以了解到计算机世界的基础，为你以后的学习打下良好的基础！没看过的同学一定要去看！</li><li><b>中国大学慕课：Python语言程序设计</b> <a href=\"https://link.zhihu.com/?target=http%3A//t.cn/R6ELBBH\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">t.cn/R6ELBBH</span><span class=\"invisible\"></span></a><br>这门课录制的水平很高，还有对应的在线习题，学到最后还能有证书拿，每周同步进行的话也不会有太大的压力<br>我还把每周的习题上传到Github了： <a href=\"https://link.zhihu.com/?target=https%3A//github.com/Ehco1996/PythonPractice\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/Ehco1996/Pyt</span><span class=\"invisible\">honPractice</span><span class=\"ellipsis\"></span></a></li><li><b>中国大学慕课： Python网络爬虫与信息提取：</b> <a href=\"https://link.zhihu.com/?target=http%3A//t.cn/R6phGd9\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">t.cn/R6phGd9</span><span class=\"invisible\"></span></a><br>上面那门慕课老师开设的爬虫课程，很棒很详细，我学习爬虫就是跟着这里入门的！</li><li><b>中国大学慕课：用Python玩转数据：</b> <a href=\"https://link.zhihu.com/?target=http%3A//t.cn/RSN2yYR\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">t.cn/RSN2yYR</span><span class=\"invisible\"></span></a><br>讲了一些用Python做数据分析的基本方法，老师很有意思，不过前面的章节还涉及到一些基础的部分，可以当做再复习一遍啦</li><li><b>嵩天老师的其他Python课程</b> ： <a href=\"https://link.zhihu.com/?target=http%3A//t.cn/RptquK8\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">t.cn/RptquK8</span><span class=\"invisible\"></span></a><br>这名老师开设了很多Python课程，各种方向的都有，<br>其实学到这里，可以多多尝试一下，发现自己喜欢的方向<br>看看嵩老师开设的课程：</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-0ca2abc9045157b1da8cbefaec19c249_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"985\" data-rawheight=\"757\" class=\"origin_image zh-lightbox-thumb\" width=\"985\" data-original=\"https://pic1.zhimg.com/v2-0ca2abc9045157b1da8cbefaec19c249_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='985'%20height='757'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"985\" data-rawheight=\"757\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"985\" data-original=\"https://pic1.zhimg.com/v2-0ca2abc9045157b1da8cbefaec19c249_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0ca2abc9045157b1da8cbefaec19c249_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><b>基础掌握之后？</b></h2><p>当你觉得你已经掌握了Python的基本用法，<br>这个时候就该尝试去『写』一些小项目了，<br>不一定要自己去创造，可以去github上看看有什么适合自己的项目，<br>fork一份到本地，看看别人的代码是怎么样的<br>别人为什么这样写...<br>自己模仿着能写出差不多的东西么？<br>具体可以参考这个知乎问题：<br><b>Python 的练手项目有哪些值得推荐</b>？<a href=\"https://www.zhihu.com/question/29372574\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/question/2937</span><span class=\"invisible\">2574</span><span class=\"ellipsis\"></span></a></p><h2>系统的学习爬虫？</h2><p>这里我就推荐三份资料</p><ul><li>路人甲整理的：<b>一份Python爬虫电子书</b>: <a href=\"https://zhuanlan.zhihu.com/p/28865834\" class=\"internal\"><span class=\"invisible\">https://</span><span class=\"visible\">zhuanlan.zhihu.com/p/28</span><span class=\"invisible\">865834</span><span class=\"ellipsis\"></span></a><br><br>甲哥人炒鸡nice啊！但是可能最近工作比较忙~这份资料是他辛苦整理出来的，内容很丰富！</li><li><b>崔庆才的爬虫教程</b> <a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/1052.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">cuiqingcai.com/1052.htm</span><span class=\"invisible\">l</span><span class=\"ellipsis\"></span></a><br>这个博主也很nice，当初我学着入门的时候也在这里参考了很多资料！</li><li>我的 <b>从零开始写Python爬虫</b> 专栏 <a href=\"https://zhuanlan.zhihu.com/Ehco-python\" class=\"internal\"><span class=\"invisible\">https://</span><span class=\"visible\">zhuanlan.zhihu.com/Ehco</span><span class=\"invisible\">-python</span><span class=\"ellipsis\"></span></a><br>容我自卖自夸一下，专栏里从基础到实战都有<br>最近也把所<b>有的文章链接</b>都汇总到导言里了：<br>可以看这里： <a href=\"https://zhuanlan.zhihu.com/p/26673214?refer=Ehco-python\" class=\"internal\"><span class=\"invisible\">https://</span><span class=\"visible\">zhuanlan.zhihu.com/p/26</span><span class=\"invisible\">673214?refer=Ehco-python</span><span class=\"ellipsis\"></span></a></li></ul><h2><b>系统的学习Web？</b></h2><p>这里我推荐一个超级棒的Django教程：</p><ul><li><b>追梦人物的blog：</b> <a href=\"https://link.zhihu.com/?target=http%3A//zmrenwu.com/post/2/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">zmrenwu.com/post/2/</span><span class=\"invisible\"></span></a><br>我的blog就是跟着这个教程不断的完善，才有了现在的效果</li></ul><p>还有一份Python Web开发的知识清单：</p><ul><li><b>python web 入坑指南：</b> <a href=\"https://link.zhihu.com/?target=http%3A//python-web-guide.readthedocs.io/zh/latest/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">python-web-guide.readthedocs.io</span><span class=\"invisible\">/zh/latest/</span><span class=\"ellipsis\"></span></a><br>这我还没看完，我准备利用最后这一年上学的时间来学习一下</li></ul><h2>剩下的？</h2><p>全得靠你自己啦<br>一起努力吧！</p><p><br></p><p>每天的学习记录都会 同步更新到：<br>微信公众号： findyourownway<br><br>知乎专栏：</p><a href=\"https://zhuanlan.zhihu.com/Ehco-python\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-7c17035a6b4a758fd7ad73cf5c6ce41f_l.jpg?source=54b3c3a5\" data-image-width=\"200\" data-image-height=\"200\" class=\"internal\">从零开始写Python爬虫</a><p><br><br>Github： </p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Ehco1996/Python-crawler\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/Ehco1996/Pyt</span><span class=\"invisible\">hon-crawler</span><span class=\"ellipsis\"></span></a>"}{"哪里能找到 Python 视频教程地址？": "<h3>1、一小时Python 基础和编码规范</h3><p>鹅厂员工学习Python总结的教程，可用于快速了解Python，适合有其它语言编程基础的同学看，一个小时带你玩转Python</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-aa8ee0186106b39fcc5e679179b73926_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1680\" data-rawheight=\"764\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0ab125006eb8c6417e75c730a380f7c3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1680\" data-original=\"https://pic1.zhimg.com/v2-aa8ee0186106b39fcc5e679179b73926_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1680'%20height='764'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1680\" data-rawheight=\"764\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0ab125006eb8c6417e75c730a380f7c3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1680\" data-original=\"https://pic1.zhimg.com/v2-aa8ee0186106b39fcc5e679179b73926_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-aa8ee0186106b39fcc5e679179b73926_720w.jpg?source=54b3c3a5\"></figure><p>地址：<a href=\"https://link.zhihu.com/?target=https%3A//cloud.tencent.com/developer/edu/course-1109\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">cloud.tencent.com/devel</span><span class=\"invisible\">oper/edu/course-1109</span><span class=\"ellipsis\"></span></a></p><h3>2、400全集Python全套视频教程</h3><p>此套视频信息量非常大，我画了个思维导图，除了上面的知识点，还有大量的练习和实践项目。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-42d0ab1d11552aa725faee6213674f8c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"799\" data-rawheight=\"530\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-01208e70e5fbff25f3870bdc2ca2b5bc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"799\" data-original=\"https://pic1.zhimg.com/v2-42d0ab1d11552aa725faee6213674f8c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='799'%20height='530'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"799\" data-rawheight=\"530\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-01208e70e5fbff25f3870bdc2ca2b5bc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"799\" data-original=\"https://pic1.zhimg.com/v2-42d0ab1d11552aa725faee6213674f8c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-42d0ab1d11552aa725faee6213674f8c_720w.jpg?source=54b3c3a5\"></figure><p>地址：<a href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av19956343/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">bilibili.com/video/av19</span><span class=\"invisible\">956343/</span><span class=\"ellipsis\"></span></a></p><h3>3、20G黑马Python入门教程</h3><p>想短期快速入门，但是看书又看不下去的话，这个视频教程帮你15天入门，包括学前环境搭建，基于Ubuntu的开发环境，1-3天内容为Linux基础命令，4-13天内容为Python基础教程。14-15 天内容为飞机大战项目演练。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-8ae22931b950a0803f365fe1d259a859_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1836\" data-rawheight=\"541\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f31db8c9c536e5761551e678d7437f8c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1836\" data-original=\"https://pic4.zhimg.com/v2-8ae22931b950a0803f365fe1d259a859_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1836'%20height='541'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1836\" data-rawheight=\"541\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f31db8c9c536e5761551e678d7437f8c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1836\" data-original=\"https://pic4.zhimg.com/v2-8ae22931b950a0803f365fe1d259a859_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-8ae22931b950a0803f365fe1d259a859_720w.jpg?source=54b3c3a5\"></figure><p>下载地址：链接: <a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/18jKjkVchwbsRN_g8A8ghsg\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">pan.baidu.com/s/18jKjkV</span><span class=\"invisible\">chwbsRN_g8A8ghsg</span><span class=\"ellipsis\"></span></a> 提取码: vxpd</p><h3>4、零基础入门学习Python</h3><p>网易云课堂小甲鱼的Python入门教程，完全零基础入门，不需要任何前置知识。前半部分主要讲Python3的语法特性，后半部分主要是项目实战，包括 Python3在爬虫、Tkinter、Pygame游戏开发等实例上的应用。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-f5c3908e1f3e21dc52bd1c1e634cd3a9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1714\" data-rawheight=\"1072\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-f1fcf15889cb97b4237de2f7059548dc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1714\" data-original=\"https://pic1.zhimg.com/v2-f5c3908e1f3e21dc52bd1c1e634cd3a9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1714'%20height='1072'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1714\" data-rawheight=\"1072\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-f1fcf15889cb97b4237de2f7059548dc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1714\" data-original=\"https://pic1.zhimg.com/v2-f5c3908e1f3e21dc52bd1c1e634cd3a9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-f5c3908e1f3e21dc52bd1c1e634cd3a9_720w.jpg?source=54b3c3a5\"></figure><p>地址：<a href=\"https://link.zhihu.com/?target=https%3A//study.163.com/course/introduction.htm%3FcourseId%3D378003\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">零基础入门学习Python - 网易云课堂</a></p><h3>5、莫烦 Python 数据处理教程</h3><p>莫烦的数据处理教程汇集了在 Python 中最重要的数据处理, 科学计算模块: Numpy 和 Pandas. 而且还有数据可视化的利器: Matplotlib. 使用它们能够更有效的处理你的数据。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-876cf2fe70cb29096e51cdf18d5b7511_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1588\" data-rawheight=\"886\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-bcef4f1eecf450ca17d60323be091ecf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1588\" data-original=\"https://pic4.zhimg.com/v2-876cf2fe70cb29096e51cdf18d5b7511_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1588'%20height='886'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1588\" data-rawheight=\"886\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-bcef4f1eecf450ca17d60323be091ecf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1588\" data-original=\"https://pic4.zhimg.com/v2-876cf2fe70cb29096e51cdf18d5b7511_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-876cf2fe70cb29096e51cdf18d5b7511_720w.jpg?source=54b3c3a5\"></figure><p>地址：<a href=\"https://link.zhihu.com/?target=https%3A//morvanzhou.github.io/tutorials/data-manipulation/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">morvanzhou.github.io/tu</span><span class=\"invisible\">torials/data-manipulation/</span><span class=\"ellipsis\"></span></a></p><p>莫烦除了提供数据处理教程外，还有机器学习的课程。亦可在他的官方网站上查看。</p><h3>6、哈佛大学公开课：计算机科学cs50</h3><p>如果想认认真真学好计算机科学，那么建议学习下最基础的计算机教程，这是国际顶尖大学的计算机科学课程，老师：David J. Malan 的授课非常幽默。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-d6d4ded07c7e24d64c63db0329378806_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1896\" data-rawheight=\"646\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-711061f6ac1aed9ef51bfef7f04711bb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1896\" data-original=\"https://pic1.zhimg.com/v2-d6d4ded07c7e24d64c63db0329378806_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1896'%20height='646'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1896\" data-rawheight=\"646\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-711061f6ac1aed9ef51bfef7f04711bb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1896\" data-original=\"https://pic1.zhimg.com/v2-d6d4ded07c7e24d64c63db0329378806_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-d6d4ded07c7e24d64c63db0329378806_720w.jpg?source=54b3c3a5\"></figure><p>地址：<a href=\"https://link.zhihu.com/?target=http%3A//open.163.com/special/opencourse/cs50.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">open.163.com/special/op</span><span class=\"invisible\">encourse/cs50.html</span><span class=\"ellipsis\"></span></a></p><h3>7、麻省理工学院公开课：算法导论</h3><p>不知道有多少人刷过《算法导论》这本书，反正我是一遍都没完整的看过，据说能完整看完这本书的人可以手撕算法，如果结合这个视频看的话，估计没那么吃力，因为授课的老师就是书的作者</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-d3ce294686db81997e3b5e8d6fce859a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1910\" data-rawheight=\"634\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-5c48c1e6a78339b58ee76aa52d14fef0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1910\" data-original=\"https://pic2.zhimg.com/v2-d3ce294686db81997e3b5e8d6fce859a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1910'%20height='634'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1910\" data-rawheight=\"634\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-5c48c1e6a78339b58ee76aa52d14fef0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1910\" data-original=\"https://pic2.zhimg.com/v2-d3ce294686db81997e3b5e8d6fce859a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-d3ce294686db81997e3b5e8d6fce859a_720w.jpg?source=54b3c3a5\"></figure><p>地址：<a href=\"https://link.zhihu.com/?target=http%3A//open.163.com/special/opencourse/algorithms.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">open.163.com/special/op</span><span class=\"invisible\">encourse/algorithms.html</span><span class=\"ellipsis\"></span></a></p><p>点收藏的时候借用您的贵手点个赞</p><p>关注公众号『Python之禅』可以获得更多Python资源</p>", "有编程基础学python怎么赚点小钱？": "<p>800左右算是要求很低了，光一项爬虫，做好开发抓一些新闻证券的信息基本上月入就3-5k了。渠道自己可以去淘宝上找，或者让是猪八戒找一些兼职。具体的下文说，这是之前回答过的一个问题：<a href=\"https://www.zhihu.com/question/328048431/answer/706887557\" class=\"internal\">python精通后能赚多少？平均情况。普通智商，刚毕业朝九晚五工作，每天4到5小时学多久精通？</a></p><h2>Python自由职业可以做什么：</h2><p><b>1.爬虫</b></p><ul><li>很多人入门Python的必修课之一就是web开发和爬虫。但是这两项想要赚钱的话，就必须知道开发什么爬什么数据才能赚钱。如果你都不知道的话问题也不大的，可以开个网店，或者猪八戒做服务外包。</li><li>这里呢，还是需要找到好的项目，举个舒服的例子就是：帮一些证券大佬抓取一些财经新闻或者是舆情相关的数据，开发玩了之后每个月要保证爬虫不挂的话基本上可以收入3-5k。自己买个云主机的话，一个月要两三百的成本，自己还能做别的事情。</li></ul><p><b>2.量化交易</b></p><ul><li>用python来完成量化交易是很方便的，方然不涉及到高频交易，对于新手来说，这边比较推荐的JionQuant，新手教程和在线Python策略开发环境我个人认为都是比较优化的，做Quant其实就是一个做数据挖掘的过程。不同的策略就是你手中能用的模型，选股，择时，资金管理就是你所要做的特征工程。不需要纠结是用均线策略或者是BOLL，找到策略适应的股和择时才是关键。</li><li>要追求稳定的收益的话，可以去考虑各种虚拟币交易市场搬砖，编程能力较弱的朋友可以考虑一下bots，统计逃离虽然也能稳定盈利但显然不合适个人了，一般需要HFT支持。</li></ul><p><b>3.代写程序或者是外包</b></p><ul><li>某宝上有不少的代写程序的，物美价廉，几百块就能搞定一套基于LAMP的xx管理系统，看看买家评论就会知道，绝大部分都是学生的大作业或者是毕设。</li><li>这些能转多少钱呢？首先是不要帮别人写论文，这是吃力不讨好的事情，基本上后期你就会处于一直改稿的阶段。一般本科毕设都是偏工程研发的，这类门槛低，通用的代码很多，基本上找到开源的改一改就能完成任务。硕士毕业的有很多偏机器学习的，实现一个overfitting的算法实现，基本上也就是1-2天的功夫，前者1-2K，后者2-3k。</li></ul><p><b>4.白帽</b></p><ul><li>python是黑客的第一语言，还用多说吗？这边灰产不说了。只要爬虫公里足够强的话，刷个阅读排名点赞都是可以的。毕竟说透了都是模拟请求，只不过是有些简单HTTP Get请求。有些是通过Ajax提交的Post请求，还有就是写Socket请求，然后顺一下时间中不同请求的时间和依赖关系。</li></ul><h2>Python相关学习的资源</h2><p><b>文章相关：</b></p><ul><li><a href=\"https://www.zhihu.com/question/316967015/answer/632665427\" class=\"internal\">为什么要学习Python编程语言？哪些人适合学习Python？</a></li><li><a href=\"https://www.zhihu.com/question/319968526/answer/659335793\" class=\"internal\">非计算机专业想学一门编程语言，选什么好？</a></li><li><a href=\"https://www.zhihu.com/question/323460473/answer/681740736\" class=\"internal\">python和java自学哪个好？</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/61719800\" class=\"internal\">2019年最新web前端开发入门知识点</a></li></ul><p><b>Python自学课程视频：</b></p><ul><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/273.html%3Fgz\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门教程完整版（懂中文就能学会）</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/542.html%3Fgz\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python入门必备指南</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/401.html%3Fgz\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python6天摇身一变成大神</a></b></li></ul><p><b>上述是课程学习均有网盘的资源，就是含有课件、课程笔记以及源码的资源。但是放网盘的话就会被和谐。有需要的留言或者私信我吧。</b></p>", "为什么现在部分985高校还是给大一上C语言课？": "<p><b>对于科班出身的程序员而言，Python，Java之类的编程语言不是需要上课学的项目，是你通过各种途径自学的项目，这就是科班出身的要求。</b>可以直接告诉你，如果你需要专门上课、全日制地坐下来去学一门编程语言怎么用，你根本不配做CS专业的学生，你只配上北大青鸟培训班。</p><p><b>大学里教C语言并不是为了教你C语言怎么用，而是因为C语言用来表达数据结构、计算机网络、编译原理、操作系统等核心知识最为直接和直观。</b>至于C语言本身的语法和基础概念，你应该是几天之内就掌握的。就比如学代数没人会花一个学期去学abcd，+-x/什么意思怎么写。符号本身不是学习的目标，符号表达的意思才是学习的内容。同样的，C语言的语法不是学习的目标，它表达的内容才是学习的目标。至于为什么要用C而不是Java，是因为Java抽象封装了太多的概念，从而影响了表意。</p><p>比如*符号，其本质代表了内存地址，C语言课讲的各种花哨指针操作目的并不是编程技巧炫技，而是在解释各种数据结构是如何对应到内存分布和如何操作。其实用C++也行，或者伪代码，但C++作为入门太复杂，伪代码又不能跑，所以C是最简单最直接的选择。</p><p>再比如链表这个数据结构，其性质在于用线性的检索复杂度为代价利用非连续的内存空间，这个概念必须用手动控制内存的编程语言才能表达，显然C最为简洁。如果你换了Java，内存模型是被抽象掉的，你无法实际了解一个数据结构的内存分配，从而也就无法学习到数据结构的基础。</p><p>大学里也不是不教Java，像面向对象程序设计这种课就经常会教Java。但以上观点依然成立，大学里教Java不是教你怎么做外包码农，而是Java的OO比较纯粹，更容易表达教学目的，拿C++讲的话免不了又要涉及到一堆语言专用细节。</p><p>而其他的一些课则是语言无关的，比如计算机图形学要操起OpenGL，你爱用哪种语言就用哪种；这个时候你就应该去自学Python，以达到高效快速完成作业的目的。</p><p>作为985高校的CS专业学生，Python不应该是你的大学课程，这种脚本语言就算你完全没有见过，一旦上班你应该可以在一个月内自学完毕并且开始在分支上贡献工业级水准的代码，并且通过资深工程师的代码评审，用人单位找985的就默认了你有这样的科班基础，否则北大青鸟每月三千块的便宜货那么多为什么不找他们。如果你跟我说你花了一个学期学了一门课叫Python，那么对不起，你的简历就直接进垃圾堆，一个学期就学了这么简单的东西，说明你接受信息密度太低速度太慢。</p><p><b>总之，对于专业程序员而言，“坐下学习让人教”是一件非常罕见的事情。</b>针对资深工程师的专业课程（不是割韭菜教学机构的那种课）一般都是3天到一个礼拜的全日制突击培训，你回来就应该是该项目的专家了。而在工作中学习，翻Google翻文档写代码才是常态。现在你跟我讲你花了整整一个学期让人给你讲课你学了一门脚本语言叫Python，这是什么蜗牛速度，放职场上项目都已经迭代十多次了，谁TM会雇你，哇哈哈哈</p>"}{"你有哪些想要分享的 PyCharm 使用技巧？": "<p>你们都是魔鬼么？4000 多收藏 ，才 1000 多个赞。我要哭惹~~~</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-3707212f8e81e1e7011da1036b452038_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"230\" data-rawheight=\"219\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-cb832e0b33f8a6db286c9173b757fb28_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"230\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='230'%20height='219'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"230\" data-rawheight=\"219\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-cb832e0b33f8a6db286c9173b757fb28_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"230\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-3707212f8e81e1e7011da1036b452038_720w.jpg?source=54b3c3a5\"></figure><p>这个回答是在 Mac OS 的环境下写的，如果你是 Windows 用户，也不要紧，按照我为数不多的使用经验，你只要把 command（也就是 ⌘ ）换成 ctrl 键就 ok了。</p><p>如果上面的经验不灵的话。。。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e11540a3c8ead83ca7bd0d7b0a6aeb92_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"225\" data-rawheight=\"225\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-eccff3b8f6348cb8c76a3b044296e1f0_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"225\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='225'%20height='225'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"225\" data-rawheight=\"225\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-eccff3b8f6348cb8c76a3b044296e1f0_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"225\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e11540a3c8ead83ca7bd0d7b0a6aeb92_720w.jpg?source=54b3c3a5\"></figure><p>那我只能放大招了，下面是两张 jetbrains 官方提供的快捷键一览图（高清的 PDF），你可以在上面找找看。</p><a href=\"https://link.zhihu.com/?target=https%3A//resources.jetbrains.com/storage/products/pycharm/docs/PyCharm_ReferenceCard_mac.pdf\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PyCharm 快捷键 Mac 版</a><a href=\"https://link.zhihu.com/?target=https%3A//resources.jetbrains.com/storage/products/pycharm/docs/PyCharm_ReferenceCard.pdf\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PyCharm 快捷键 Win 版</a><p><br></p><p>========== 以下是原文 =========</p><p><br></p><p>我想给你推荐我自己写的一本书，我推荐它，不光是因为它是我写的，更多是因为我觉得有不少会非常需要它 ~</p><p>它的名字就叫 《PyCharm 中文指南》，下面这个是 Github 的项目主页</p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/iswbm/pycharm-guide\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/iswbm/pychar</span><span class=\"invisible\">m-guide</span><span class=\"ellipsis\"></span></a><p>里面有更加友好的在线阅读地址</p><a href=\"https://link.zhihu.com/?target=http%3A//pycharm.iswbm.com\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PyCharm 中文指南 2.0 文档</a><p>（随便截取一个章节）：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-1ab6838eb55f36ed281cb4b1fcb7854b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2186\" data-rawheight=\"1714\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-e83e9a6eaf69f6fb835a7bb5c053ff49_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2186\" data-original=\"https://pic2.zhimg.com/v2-1ab6838eb55f36ed281cb4b1fcb7854b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2186'%20height='1714'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2186\" data-rawheight=\"1714\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-e83e9a6eaf69f6fb835a7bb5c053ff49_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2186\" data-original=\"https://pic2.zhimg.com/v2-1ab6838eb55f36ed281cb4b1fcb7854b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-1ab6838eb55f36ed281cb4b1fcb7854b_720w.jpg?source=54b3c3a5\"></figure><p>这本书记录了我多年来的 PyCharm 使用心得。</p><p>经过了两个月的素材整理、编写、打磨，终于在前两天顺利完成。</p><p>完成的那一晚，我很兴奋，<b>它将是第一本系统介绍 PyCharm 使用的中文教程。</b></p><p><b>接下来，不BB，直接来介绍一下这本书能带给你什么？</b></p><p>全书分为九个章节，其中章节的安排符合纯新手的学习路径，对于新手和老手都很有用。</p><p>这是大纲目录：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7824fe6539e0289c0b0144e397d83861_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"774\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7646d6d7ec378db0eb4c1d090662ad4f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-7824fe6539e0289c0b0144e397d83861_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='774'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"774\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7646d6d7ec378db0eb4c1d090662ad4f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-7824fe6539e0289c0b0144e397d83861_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7824fe6539e0289c0b0144e397d83861_720w.jpg?source=54b3c3a5\"></figure><p>图文并茂，全书一共 5 万字，内含 300 多张图片。</p><p>为了让 PyCharmer 更好理解并上手，我花了相当多的时间与心血，将这 100 个使用技巧 以 GIF 动态图的形式呈现在你面前。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f3b6ea8d1cd43d29b5f94fa18c9591ad_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"927\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-333c076976d31d8dfcc0fea09e428b0a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-f3b6ea8d1cd43d29b5f94fa18c9591ad_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='927'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"927\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-333c076976d31d8dfcc0fea09e428b0a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-f3b6ea8d1cd43d29b5f94fa18c9591ad_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f3b6ea8d1cd43d29b5f94fa18c9591ad_720w.jpg?source=54b3c3a5\"><figcaption>该书整理而成的 PDF 电子版</figcaption></figure><p><br></p><p>如果你是一名新手，那我建议你利用我这个在线文档，从头到尾跟着操作一遍，一天就能达到高手的水平。</p><p>而如果你是一个老鸟,已经熟练的掌握了 PyCharm 的各种技巧，也不要紧，文档的大纲非常的直白清晰，方便你根据自身水平择需阅读。</p><p>本问题下，已经出现了不少优秀的回答，我这里就不把本书的所有内容全部搬过来了。因为真的非常多，影响体验，我就挑其中 40 个左右我认为非常值得分享的技巧。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-1d47197f7b437aa1c96dcb6a8afaf878_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1154\" data-rawheight=\"264\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-1f010be9285ec74bae612dc91d5487dc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1154\" data-original=\"https://pic1.zhimg.com/v2-1d47197f7b437aa1c96dcb6a8afaf878_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1154'%20height='264'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1154\" data-rawheight=\"264\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-1f010be9285ec74bae612dc91d5487dc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1154\" data-original=\"https://pic1.zhimg.com/v2-1d47197f7b437aa1c96dcb6a8afaf878_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-1d47197f7b437aa1c96dcb6a8afaf878_720w.jpg?source=54b3c3a5\"></figure><h2>1. 通过指定参数，执行程序</h2><p>你在 Pycharm 运行你的项目，通常是怎么执行的？我的做法是，右键，然后点击 <code>Run</code>，或者使用快捷键 <code>Shift + F10</code> 。</p><p>有时候，在运行/调试脚本的时候，我们需要指定一些参数，这在命令行中，直接指定即可。</p><p>假设在命令行中，运行脚本的命令是这样</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>python main.py init --local\n</code></pre></div><p>对于刚使用 Pycharm 的同学，可能并不知道 Pycharm 也是可以指定参数的。点击下图位置</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-13b4d54665ccfbace76615a802852e55_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"515\" data-rawheight=\"143\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-269addf3af7ebc8246d6e4675e707137_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"515\" data-original=\"https://pic1.zhimg.com/v2-13b4d54665ccfbace76615a802852e55_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='515'%20height='143'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"515\" data-rawheight=\"143\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-269addf3af7ebc8246d6e4675e707137_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"515\" data-original=\"https://pic1.zhimg.com/v2-13b4d54665ccfbace76615a802852e55_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-13b4d54665ccfbace76615a802852e55_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>进入设置面板，在 <code>Script parameters</code> 中填入参数即可。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-b0452bdfff889bba9ca81ac2c59e88ad_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"838\" data-rawheight=\"270\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c6679e9548c33500d7254f6215781417_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"838\" data-original=\"https://pic3.zhimg.com/v2-b0452bdfff889bba9ca81ac2c59e88ad_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='838'%20height='270'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"838\" data-rawheight=\"270\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c6679e9548c33500d7254f6215781417_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"838\" data-original=\"https://pic3.zhimg.com/v2-b0452bdfff889bba9ca81ac2c59e88ad_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-b0452bdfff889bba9ca81ac2c59e88ad_720w.jpg?source=54b3c3a5\"></figure><p>同时在上图的底部，你可以看到，这里可以很方便的切换 解释器，比你跑到这边来要容易得多吧</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-3e58f8472b8a70634679998b3070efe3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"813\" data-rawheight=\"315\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-de5e29fad09b3a18a8a1ae4b92a1205b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"813\" data-original=\"https://pic1.zhimg.com/v2-3e58f8472b8a70634679998b3070efe3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='813'%20height='315'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"813\" data-rawheight=\"315\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-de5e29fad09b3a18a8a1ae4b92a1205b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"813\" data-original=\"https://pic1.zhimg.com/v2-3e58f8472b8a70634679998b3070efe3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-3e58f8472b8a70634679998b3070efe3_720w.jpg?source=54b3c3a5\"></figure><h2>2. 程序结束了，照样可以调试</h2><p>假如我们在一个爬虫的项目中，会使用到 正则表达式 来匹配我们想要抓取的内容。正则这种东西，有几个人能够一步到位的呢，通常都需要经过很多次的调试才能按预期匹配。在我们改了一次正则后，运行了下，需要重新向网站抓取请求，才能发现没有匹配上，然后又改了一版，再次运行同样需要发起请求，结果还是发现还是没有匹配上，往往复复，正则不好的同学可能要进行几十次的尝试。</p><p>（上面这个例子可能不太贴切，毕竟是有很多种方法实现不用重新发请求，只是列举了一种很笨拙且低效的调试过程，你看看就好了）</p><p>而我们在这几十次的调试中，向同一网站发起请求都是没有意义的重复工作。如果在 Pycharm 中可以像  IPython Shell  和 Jupyter Notebook 那样，可以记住运行后所有的变量信息，可以在不需要重新运行项目或脚本，就可以通过执行命令表达式，来调整我们的代码，进行我们的正则调试。</p><p>答案当然是有。</p><p>假如我在调试如下几行简单的代码。在第 3 行处打了个断点。然后点击图示位置 <code>Show Python Prompt</code> 按钮。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-85705acf729567ff16f5e58de4c130db_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"766\" data-rawheight=\"470\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-acca7c10132c037d86a673ae55f2dba9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"766\" data-original=\"https://pic2.zhimg.com/v2-85705acf729567ff16f5e58de4c130db_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='766'%20height='470'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"766\" data-rawheight=\"470\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-acca7c10132c037d86a673ae55f2dba9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"766\" data-original=\"https://pic2.zhimg.com/v2-85705acf729567ff16f5e58de4c130db_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-85705acf729567ff16f5e58de4c130db_720w.jpg?source=54b3c3a5\"></figure><p>就进入了 <code>Python Shell</code> 的界面，这个Shell 环境和我们当前运行的程序环境是打通的，变量之间可以互相访问，这下你可以轻松地进行调试了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-032014b59dd96bc36f1adb82afd9322a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"606\" data-rawheight=\"498\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-87bf8056ead0e8d777753b4addc26875_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"606\" data-original=\"https://pic1.zhimg.com/v2-032014b59dd96bc36f1adb82afd9322a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='606'%20height='498'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"606\" data-rawheight=\"498\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-87bf8056ead0e8d777753b4addc26875_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"606\" data-original=\"https://pic1.zhimg.com/v2-032014b59dd96bc36f1adb82afd9322a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-032014b59dd96bc36f1adb82afd9322a_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>上面我们打了个断点，是为了方便说明这个效果。并不是说一定要打断点。如果不打断点，在脚本执行完成后，也仍然可以在这个界面查看并操作所有变量。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-d864f17228e97502df5d556054fc758d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"316\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3ef618ff30c5853777cd0832878e0681_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic3.zhimg.com/v2-d864f17228e97502df5d556054fc758d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='800'%20height='316'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"316\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3ef618ff30c5853777cd0832878e0681_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"800\" data-original=\"https://pic3.zhimg.com/v2-d864f17228e97502df5d556054fc758d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-d864f17228e97502df5d556054fc758d_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>现在我们已经可以满足我们的调试的需求，但是每次运行脚本，都要手动点击 <code>Show Python Prompt</code> ，有点麻烦。嗯？其实这个有地方可以设置默认打开的。这个开关还比较隐秘，一般人还真发现不了。</p><p>你需要点击图示位置 <code>Edit Configurations</code> 处。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-13b4d54665ccfbace76615a802852e55_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"515\" data-rawheight=\"143\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-269addf3af7ebc8246d6e4675e707137_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"515\" data-original=\"https://pic1.zhimg.com/v2-13b4d54665ccfbace76615a802852e55_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='515'%20height='143'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"515\" data-rawheight=\"143\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-269addf3af7ebc8246d6e4675e707137_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"515\" data-original=\"https://pic1.zhimg.com/v2-13b4d54665ccfbace76615a802852e55_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-13b4d54665ccfbace76615a802852e55_720w.jpg?source=54b3c3a5\"></figure><p>然后在这里打勾选中。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-90f74130e236a6779d731c547fed4733_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"168\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f0689eb458fc5c248fcd81b5fe5a01ce_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"553\" data-original=\"https://pic1.zhimg.com/v2-90f74130e236a6779d731c547fed4733_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='553'%20height='168'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"168\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f0689eb458fc5c248fcd81b5fe5a01ce_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"553\" data-original=\"https://pic1.zhimg.com/v2-90f74130e236a6779d731c547fed4733_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-90f74130e236a6779d731c547fed4733_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>设置上之后，之后你每次运行后脚本后，都会默认为你存储所有变量的值，并为你打开 console 命令行调试界面。</p><p>除了上面这种方法，其实还有一种方法可以在调试过程中，执行命令表达式，而这种大家可能比较熟悉了，这边也提一下，就当是汇总一下。但是从功能上来说，是没有上面这种方法来得方便易用的。因为这种方法，必须要求你使用 debug 模式运行项目，并打断点。</p><p>使用方法就是，在你打了断点后，在图示位置处，点击右键使用 <code>Evaluate Expression</code></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ca9b1dffc14e9f386d586feda5e31fb8_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"591\" data-rawheight=\"370\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-cd95caf4a51797d7e0aea9602a33f03f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"591\" data-original=\"https://pic2.zhimg.com/v2-ca9b1dffc14e9f386d586feda5e31fb8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='591'%20height='370'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"591\" data-rawheight=\"370\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-cd95caf4a51797d7e0aea9602a33f03f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"591\" data-original=\"https://pic2.zhimg.com/v2-ca9b1dffc14e9f386d586feda5e31fb8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ca9b1dffc14e9f386d586feda5e31fb8_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>就弹出了一个 <code>Evaluate Expression</code> 窗口，这里 可以运行命令表达式，直接操作变量。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a8b64c210d6e3c925926adb802b0618c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"759\" data-rawheight=\"248\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a5d39536cb6d89f29c589ca4eb651b00_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"759\" data-original=\"https://pic1.zhimg.com/v2-a8b64c210d6e3c925926adb802b0618c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='759'%20height='248'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"759\" data-rawheight=\"248\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a5d39536cb6d89f29c589ca4eb651b00_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"759\" data-original=\"https://pic1.zhimg.com/v2-a8b64c210d6e3c925926adb802b0618c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a8b64c210d6e3c925926adb802b0618c_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>3. 实现远程代码调试</h2><p>一般情况下，我们开发调试都是在个人PC上完成，遇到问题，开一下 <code>Pycharm</code> 的调试器，很快就能找到问题所在。</p><p>可有些时候，项目代码的运行会对运行环境有依赖，必须在部署了相关依赖组件的服务器上才可以运行，这就直接导致了我们不能在本地进行调试。</p><p>对于这种特殊的场景，就我所知，有如下两种解决方案：</p><ul><li>pdb</li><li>远程调试</li></ul><p>关于 pdb，之前也写过专门的文章介绍使用方法，你可以点此查看：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/tDufSUBrBBNfMEr5_dxM0g\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">无图形界面的代码调试方法 - pdb</a></p><p>而远程调试呢，是让我们可以在我们在 PC 上用 PyCharm 的图形化界面来进行调试远方服务器上代码，它和本地调试没有太大的区别，原来怎么调试的现在还是怎么调试。</p><p>区别就在于，本地调试不需要事前配置，只要你的代码准备好了，随时可以开始 Debug ，而远程调试呢，需要不少前置步骤，这也正是本篇文章的内容，教你如何配置远程调试环境。</p><h3>1.  新建一个项目</h3><p>首先，要在Pycharm中新建一个空的项目，后面我们拉服务器上的项目代码就会放置在这个项目目录下。我这边的名字是 NOVA，你可以自己定义。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-39079470eed922409ff915777c683fdd_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1348\" data-rawheight=\"844\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-b53738957fe427021578b82032ed7efc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1348\" data-original=\"https://pic1.zhimg.com/v2-39079470eed922409ff915777c683fdd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1348'%20height='844'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1348\" data-rawheight=\"844\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-b53738957fe427021578b82032ed7efc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1348\" data-original=\"https://pic1.zhimg.com/v2-39079470eed922409ff915777c683fdd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-39079470eed922409ff915777c683fdd_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>2. 配置连接服务器</h3><p>Tools -&gt; Deployment -&gt; configuration</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-21a71dd2ed1688772d73ab4f8656b5f2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"906\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e28d252153392d722e144056c4cffc41_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1336\" data-original=\"https://pic4.zhimg.com/v2-21a71dd2ed1688772d73ab4f8656b5f2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1336'%20height='906'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1336\" data-rawheight=\"906\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e28d252153392d722e144056c4cffc41_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1336\" data-original=\"https://pic4.zhimg.com/v2-21a71dd2ed1688772d73ab4f8656b5f2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-21a71dd2ed1688772d73ab4f8656b5f2_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>添加一个<code>Server</code></p><ul><li> Name：填你的服务器的IP<br> </li><li> Type：设定为SFTP<br> </li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-0f8eab7b40d34805f20463cfd25fbca2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1296\" data-rawheight=\"1110\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-39644dfdb7d892f90b8ead9b84eca260_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1296\" data-original=\"https://pic1.zhimg.com/v2-0f8eab7b40d34805f20463cfd25fbca2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1296'%20height='1110'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1296\" data-rawheight=\"1110\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-39644dfdb7d892f90b8ead9b84eca260_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1296\" data-original=\"https://pic1.zhimg.com/v2-0f8eab7b40d34805f20463cfd25fbca2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0f8eab7b40d34805f20463cfd25fbca2_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>点击<code>OK</code>后，进入如下界面，你可以按我的备注，填写信息：</p><ul><li>SFTP host：公网ip</li><li>Port：服务器开放的ssh端口</li><li>Root path：你要调试的项目代码目录</li><li>Username：你登陆服务器所用的用户</li><li>Auth type：登陆类型，若用密码登陆的就是Password</li><li>Password：选密码登陆后，这边输入你的登陆密码，可以选择保存密码。</li></ul><p>这里请注意，要确保你的电脑可以ssh连接到你的服务器，不管是密钥登陆还是密码登陆，如果开启了白名单限制要先解除。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f5d203e51e19529408eac7bbb5512b7b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1294\" data-rawheight=\"1102\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-34b99d70cf24ea9915e9f1f1dd6f6978_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1294\" data-original=\"https://pic2.zhimg.com/v2-f5d203e51e19529408eac7bbb5512b7b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1294'%20height='1102'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1294\" data-rawheight=\"1102\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-34b99d70cf24ea9915e9f1f1dd6f6978_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1294\" data-original=\"https://pic2.zhimg.com/v2-f5d203e51e19529408eac7bbb5512b7b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f5d203e51e19529408eac7bbb5512b7b_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>填写完成后，切换到<code>Mappings</code>选项卡，在箭头位置，填写<code>\\</code></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a7d021e7cc82d6d462d83c975b6277f2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1312\" data-rawheight=\"1106\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-46c62a95b6d945cf3d3ce90f14dedff9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1312\" data-original=\"https://pic4.zhimg.com/v2-a7d021e7cc82d6d462d83c975b6277f2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1312'%20height='1106'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1312\" data-rawheight=\"1106\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-46c62a95b6d945cf3d3ce90f14dedff9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1312\" data-original=\"https://pic4.zhimg.com/v2-a7d021e7cc82d6d462d83c975b6277f2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a7d021e7cc82d6d462d83c975b6277f2_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>以上服务器信息配置，全部正确填写完成后，点击<code>OK</code></p><p>接下来，我们要连接远程服务器了。 Tools -&gt; Deployment -&gt; Browse Remote Host</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-6b63fafe54f5edfd9b02c8cc027baace_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1312\" data-rawheight=\"1226\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-e95a3f81f376c1c0025b6861cb979a7d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1312\" data-original=\"https://pic4.zhimg.com/v2-6b63fafe54f5edfd9b02c8cc027baace_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1312'%20height='1226'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1312\" data-rawheight=\"1226\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-e95a3f81f376c1c0025b6861cb979a7d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1312\" data-original=\"https://pic4.zhimg.com/v2-6b63fafe54f5edfd9b02c8cc027baace_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-6b63fafe54f5edfd9b02c8cc027baace_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>3. 下载项目代码</h3><p>如果之前填写的服务器登陆信息准确无误的话，现在就可以看到远程的项目代码。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-12b05c121ecfcc2a76ebb705e8488991_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"990\" data-rawheight=\"822\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7a5edae749459a750cd0becaf4e5d1ab_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"990\" data-original=\"https://pic4.zhimg.com/v2-12b05c121ecfcc2a76ebb705e8488991_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='990'%20height='822'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"990\" data-rawheight=\"822\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7a5edae749459a750cd0becaf4e5d1ab_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"990\" data-original=\"https://pic4.zhimg.com/v2-12b05c121ecfcc2a76ebb705e8488991_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-12b05c121ecfcc2a76ebb705e8488991_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>选择下载远程代码要本地。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-742cbc8927adbb78c2db7445b7b95614_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1012\" data-rawheight=\"714\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-dd1373e171192df524c34cc01f5500a4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1012\" data-original=\"https://pic4.zhimg.com/v2-742cbc8927adbb78c2db7445b7b95614_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1012'%20height='714'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1012\" data-rawheight=\"714\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-dd1373e171192df524c34cc01f5500a4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1012\" data-original=\"https://pic4.zhimg.com/v2-742cbc8927adbb78c2db7445b7b95614_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-742cbc8927adbb78c2db7445b7b95614_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>下载完成提示。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-97282a991479a1ed2f23fcdcd664066c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1300\" data-rawheight=\"514\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-830e9d157daf04fce83a6d0fdd61443d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1300\" data-original=\"https://pic1.zhimg.com/v2-97282a991479a1ed2f23fcdcd664066c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1300'%20height='514'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1300\" data-rawheight=\"514\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-830e9d157daf04fce83a6d0fdd61443d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1300\" data-original=\"https://pic1.zhimg.com/v2-97282a991479a1ed2f23fcdcd664066c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-97282a991479a1ed2f23fcdcd664066c_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>现在的IDE界面应该是这样子的。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-96773907e0a6e21b58213d8c1e54102a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1316\" data-rawheight=\"586\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3c729bba92ea3911b140b579329c8531_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1316\" data-original=\"https://pic4.zhimg.com/v2-96773907e0a6e21b58213d8c1e54102a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1316'%20height='586'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1316\" data-rawheight=\"586\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3c729bba92ea3911b140b579329c8531_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1316\" data-original=\"https://pic4.zhimg.com/v2-96773907e0a6e21b58213d8c1e54102a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-96773907e0a6e21b58213d8c1e54102a_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>4. 下载远程解释器</h3><p>为什么需要这步呢？</p><p>远程调试是在远端的服务器上运行的，它除了依赖其他组件之外，还会有一些很多Python依赖包我们本地并没有。</p><p>进入 File -&gt; Settings 按图示，添加远程解释器。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-2096810512fb701903d45bedf8532f5c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1316\" data-rawheight=\"828\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-10bb793db7a976a5ebebfbbd0f96d8a5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1316\" data-original=\"https://pic1.zhimg.com/v2-2096810512fb701903d45bedf8532f5c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1316'%20height='828'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1316\" data-rawheight=\"828\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-10bb793db7a976a5ebebfbbd0f96d8a5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1316\" data-original=\"https://pic1.zhimg.com/v2-2096810512fb701903d45bedf8532f5c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-2096810512fb701903d45bedf8532f5c_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>填写远程服务器信息，跟之前的一样，不再赘述。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-3bbf7f9a0d310b503d4a18424d27bd64_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1308\" data-rawheight=\"546\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-e18c875662ad6c336b46b71348db8c5b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1308\" data-original=\"https://pic4.zhimg.com/v2-3bbf7f9a0d310b503d4a18424d27bd64_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1308'%20height='546'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1308\" data-rawheight=\"546\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-e18c875662ad6c336b46b71348db8c5b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1308\" data-original=\"https://pic4.zhimg.com/v2-3bbf7f9a0d310b503d4a18424d27bd64_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-3bbf7f9a0d310b503d4a18424d27bd64_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>点击<code>OK</code>后，会自动下载远程解释器。如果你的项目比较大，这个时间可能会比较久，请耐心等待。</p><h3>5. 添加程序入口</h3><p>因为我们要在本地DEBUG，所以你一定要知道你的项目的入口程序。如果这个入口程序已经包含在你的项目代码中，那么请略过这一步。</p><p>如果没有，就请自己生成入口程序。</p><p>比如，我这边的项目，在服务器上是以一个服务运行的。而我们都知道服务的入口是<code>Service文件</code>。 <code>cat /usr/lib/systemd/system/openstack-nova-compute.service</code></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>[Unit]\nDescription=OpenStack Nova Compute Server\nAfter=syslog.target network.target libvirtd.service\n\n[Service]\nEnvironment=LIBGUESTFS_ATTACH_METHOD=appliance\nType=notify\nNotifyAccess=all\nTimeoutStartSec=0\nRestart=always\nUser=nova\nExecStart=/usr/bin/nova-compute\n\n[Install]\nWantedBy=multi-user.target\n</code></pre></div><p>看到那个<code>ExecStart</code>没有？那个就是我们程序的入口。 我们只要将其拷贝至我们的Pycharm中，并向远程同步该文件。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-3532ca770cbda4a36ef87fa1c8f406bb_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1284\" data-rawheight=\"594\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-0e6a11f2af407a32f67628978df818a0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1284\" data-original=\"https://pic1.zhimg.com/v2-3532ca770cbda4a36ef87fa1c8f406bb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1284'%20height='594'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1284\" data-rawheight=\"594\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-0e6a11f2af407a32f67628978df818a0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1284\" data-original=\"https://pic1.zhimg.com/v2-3532ca770cbda4a36ef87fa1c8f406bb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-3532ca770cbda4a36ef87fa1c8f406bb_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>6. 调试前设置</h3><p>开启代码自动同步，这样，我们对代码的修改Pycharm都能识别，并且为我们提交到远程服务器。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-b3a6c43c936d15b4f88998f18a5cfdb9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1292\" data-rawheight=\"824\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-edd26bd883bb83081afd224f0d40f34c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1292\" data-original=\"https://pic3.zhimg.com/v2-b3a6c43c936d15b4f88998f18a5cfdb9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1292'%20height='824'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1292\" data-rawheight=\"824\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-edd26bd883bb83081afd224f0d40f34c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1292\" data-original=\"https://pic3.zhimg.com/v2-b3a6c43c936d15b4f88998f18a5cfdb9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-b3a6c43c936d15b4f88998f18a5cfdb9_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>开启 <code>Gevent compatible</code>，如果不开启，在调试过程中，很可能出现无法调试，或者无法追踪/查看变量等问题。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e008e39ab34e537e954fcf730a857930_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1688\" data-rawheight=\"1134\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-cd3b8ccd0cc0d66a6981a36cf2716716_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1688\" data-original=\"https://pic1.zhimg.com/v2-e008e39ab34e537e954fcf730a857930_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1688'%20height='1134'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1688\" data-rawheight=\"1134\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-cd3b8ccd0cc0d66a6981a36cf2716716_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1688\" data-original=\"https://pic1.zhimg.com/v2-e008e39ab34e537e954fcf730a857930_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e008e39ab34e537e954fcf730a857930_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>7. 开始调试代码</h3><p>在你的程序入口文件处，点击右键，选择Debug即可。</p><p>如果你的程序入口，需要引入参数，这是经常有的事，可以的这里配置。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-b4bb9883d86ec86917cba95406da93d0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1076\" data-rawheight=\"386\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-258eb70764efe8ced0fb76df529e9d1e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1076\" data-original=\"https://pic2.zhimg.com/v2-b4bb9883d86ec86917cba95406da93d0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1076'%20height='386'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1076\" data-rawheight=\"386\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-258eb70764efe8ced0fb76df529e9d1e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1076\" data-original=\"https://pic2.zhimg.com/v2-b4bb9883d86ec86917cba95406da93d0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-b4bb9883d86ec86917cba95406da93d0_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>配置完点击保存即可。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d9bab20c2bb915d869a3ca5befdc7e5a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1298\" data-rawheight=\"832\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-df16ed991b676cf223d443ceffd65565_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1298\" data-original=\"https://pic2.zhimg.com/v2-d9bab20c2bb915d869a3ca5befdc7e5a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1298'%20height='832'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1298\" data-rawheight=\"832\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-df16ed991b676cf223d443ceffd65565_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1298\" data-original=\"https://pic2.zhimg.com/v2-d9bab20c2bb915d869a3ca5befdc7e5a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d9bab20c2bb915d869a3ca5befdc7e5a_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-568857a0b4a6737bf607c28687d4f64a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1130\" data-rawheight=\"228\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-27b039f2f80062a6cff4c09d05ca1769_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1130\" data-original=\"https://pic4.zhimg.com/v2-568857a0b4a6737bf607c28687d4f64a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1130'%20height='228'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1130\" data-rawheight=\"228\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-27b039f2f80062a6cff4c09d05ca1769_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1130\" data-original=\"https://pic4.zhimg.com/v2-568857a0b4a6737bf607c28687d4f64a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-568857a0b4a6737bf607c28687d4f64a_720w.jpg?source=54b3c3a5\"></figure><h2>1. 开启超爽大屏幕编码模式</h2><p>如果你是使用笔记本来写代码的，那你一定知道，小屏幕写代码的体验可真是太糟糕了。</p><p>在这里给你介绍两个小技巧，让你在小屏幕下也能轻松编码。</p><h3>第一个技巧</h3><p>使用快捷键：⌃ + ⌘ + F， 就可以开启全屏模式。</p><p>再按一次快捷键，又可以切换回普通 模式（总之就是可以来回切换）。</p><h3>第二个技巧</h3><p>如果你的 PyCharm 开启了太多的工具栏，左边，右边，下边，大部分的空间都被工具栏占用了。（如下图）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-42278970f24f2cc26030fba2de9d080f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2798\" data-rawheight=\"1838\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-863957df27981bea5b24032e85501d2a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2798\" data-original=\"https://pic4.zhimg.com/v2-42278970f24f2cc26030fba2de9d080f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2798'%20height='1838'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2798\" data-rawheight=\"1838\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-863957df27981bea5b24032e85501d2a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2798\" data-original=\"https://pic4.zhimg.com/v2-42278970f24f2cc26030fba2de9d080f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-42278970f24f2cc26030fba2de9d080f_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>此时你可以使用快捷键：⌘ + ⇧ + F12，将这些工具栏全部隐藏掉，隐藏掉后再按一次，原来的界面就又回来了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a74125d29e600f37d600aa7c7436ae85_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"781\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"781\" data-original=\"https://pic4.zhimg.com/v2-a74125d29e600f37d600aa7c7436ae85_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='781'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"781\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"781\" data-original=\"https://pic4.zhimg.com/v2-a74125d29e600f37d600aa7c7436ae85_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a74125d29e600f37d600aa7c7436ae85_720w.jpg?source=54b3c3a5\"></figure><h2>2. 大屏幕必看：分屏查看代码</h2><p>如果需要在一个文件中编写两处代码，而这两处代码又相隔比较远。那么你可以使用对该文件开启分屏模式。</p><p>分屏分为两种：</p><ul><li>竖屏</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-11b8674335af303487b60c345ebb2078_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2556\" data-rawheight=\"1244\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-5b64860454ce1ea001f674e8a88877cf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2556\" data-original=\"https://pic2.zhimg.com/v2-11b8674335af303487b60c345ebb2078_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2556'%20height='1244'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2556\" data-rawheight=\"1244\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-5b64860454ce1ea001f674e8a88877cf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2556\" data-original=\"https://pic2.zhimg.com/v2-11b8674335af303487b60c345ebb2078_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-11b8674335af303487b60c345ebb2078_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ul><li>横屏</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e4f2f34fb38d29a87345983208c01e22_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2558\" data-rawheight=\"1572\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-221ef17c30ed5ede334bd62260631e98_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2558\" data-original=\"https://pic1.zhimg.com/v2-e4f2f34fb38d29a87345983208c01e22_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2558'%20height='1572'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2558\" data-rawheight=\"1572\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-221ef17c30ed5ede334bd62260631e98_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2558\" data-original=\"https://pic1.zhimg.com/v2-e4f2f34fb38d29a87345983208c01e22_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e4f2f34fb38d29a87345983208c01e22_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>那怎么开启呢？右击标签页，会有如下两个选项，点击即可。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e533ff6596dd02c76fd3410ceeabe053_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1652\" data-rawheight=\"868\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7be76443c07728dbd30f75061a830ca0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1652\" data-original=\"https://pic1.zhimg.com/v2-e533ff6596dd02c76fd3410ceeabe053_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1652'%20height='868'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1652\" data-rawheight=\"868\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7be76443c07728dbd30f75061a830ca0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1652\" data-original=\"https://pic1.zhimg.com/v2-e533ff6596dd02c76fd3410ceeabe053_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e533ff6596dd02c76fd3410ceeabe053_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-347237266d6f4ff4ee4330ea4369223e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1118\" data-rawheight=\"246\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-eefa1e39b3cf487c04a71bc02fb8866f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1118\" data-original=\"https://pic2.zhimg.com/v2-347237266d6f4ff4ee4330ea4369223e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1118'%20height='246'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1118\" data-rawheight=\"246\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-eefa1e39b3cf487c04a71bc02fb8866f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1118\" data-original=\"https://pic2.zhimg.com/v2-347237266d6f4ff4ee4330ea4369223e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-347237266d6f4ff4ee4330ea4369223e_720w.jpg?source=54b3c3a5\"></figure><h2>1. 重写父类方法的正确姿势</h2><p>当你想要在子类里，复写父类的一个方法时。</p><p>通常都是人工定义一个函数，然后再写 super 表达式。</p><p>如果你使用了 PyCharm 还要如此笨拙的方式，那真是埋没了这么好的软件了。</p><p>在 PyCharm 中正确复写父类方法的姿势 是使用快捷键：⌘ + O （注意是字母 O，不是数字 0）。</p><p>效果如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-cf697b4bca9fd6bfc009c3c83f67a7f1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"806\" data-original=\"https://pic2.zhimg.com/v2-cf697b4bca9fd6bfc009c3c83f67a7f1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='806'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"806\" data-original=\"https://pic2.zhimg.com/v2-cf697b4bca9fd6bfc009c3c83f67a7f1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-cf697b4bca9fd6bfc009c3c83f67a7f1_720w.jpg?source=54b3c3a5\"></figure><h2>2. 实现接口方法的正确姿势</h2><p>当你想要在类里，实现基类的一个方法时。</p><p>通常都是人工定义一个函数，然后写具体的逻辑。</p><p>如果你使用了 PyCharm 还要如此笨拙的方式，那真是埋没了这么好的软件了。</p><p>在 PyCharm 中正确复写父类方法的姿势 是使用快捷键：⌘ + I （注意是字母 I，不是数字 1）。</p><p>效果如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-e6254d7ebf97e74a8f2014c4cb2b3685_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"771\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"771\" data-original=\"https://pic4.zhimg.com/v2-e6254d7ebf97e74a8f2014c4cb2b3685_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='771'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"771\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"771\" data-original=\"https://pic4.zhimg.com/v2-e6254d7ebf97e74a8f2014c4cb2b3685_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e6254d7ebf97e74a8f2014c4cb2b3685_720w.jpg?source=54b3c3a5\"></figure><h2>3. 快速开启新的一行</h2><p>当你的光标不是处在一行代码的结尾，此时你想换行，一般都是先切换到行尾，再按回车。</p><p>其实这两个操作，都可以合并成一个快捷键来完成</p><p>那就是：⇧ + Enter，无论你的光标在哪里，都会另起一行，效果如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f3142c73cebf9c495cccf369d1948da3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"791\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"791\" data-original=\"https://pic2.zhimg.com/v2-f3142c73cebf9c495cccf369d1948da3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='791'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"791\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"791\" data-original=\"https://pic2.zhimg.com/v2-f3142c73cebf9c495cccf369d1948da3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f3142c73cebf9c495cccf369d1948da3_720w.jpg?source=54b3c3a5\"></figure><h2>4. 变量名一键实现大小写的转换</h2><p>常量通常都是以大写的形式存在的，若你不小心写成了小写，也可以用 ⇧ + ⌘ + U 这组快捷键进行转换。</p><p>效果如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ca20adb596cb2a0b33582704cc763bde_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"849\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"849\" data-original=\"https://pic2.zhimg.com/v2-ca20adb596cb2a0b33582704cc763bde_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='849'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"849\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"849\" data-original=\"https://pic2.zhimg.com/v2-ca20adb596cb2a0b33582704cc763bde_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ca20adb596cb2a0b33582704cc763bde_720w.jpg?source=54b3c3a5\"></figure><h2>5. 代码块实现随处折叠</h2><p>阅读一个新项目的源码，应该先理解代码的整体逻辑，这时候对那些比较细节的通常我们会将其折叠。</p><p>但是 PyCharm 中，默认只有整体的代码块，比如一个类，一个函数，一个 if 代码块，一个 for 循环代码块，才会有折叠的按钮。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-7896a61f6cca6f45fde74ffce967c5ca_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1480\" data-rawheight=\"714\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-e8dd82487868e030635facb33538595b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1480\" data-original=\"https://pic1.zhimg.com/v2-7896a61f6cca6f45fde74ffce967c5ca_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1480'%20height='714'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1480\" data-rawheight=\"714\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-e8dd82487868e030635facb33538595b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1480\" data-original=\"https://pic1.zhimg.com/v2-7896a61f6cca6f45fde74ffce967c5ca_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-7896a61f6cca6f45fde74ffce967c5ca_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>对于这种原本就有折叠/反折叠按钮的，可以使用下面两组快捷键：</p><ul><li>折叠：⌘ -</li><li>反折叠：⌘ +</li></ul><p>但有时候，我们并不希望整块代码进行折叠，而只想对其他一大段暂时对我们无用的代码进行折叠。那能做到吗？</p><p>答案是可以的。</p><p>只要你先选中你想折叠的代码，再按住 ⌘  紧接着按住 <code>.</code> 就可以了。</p><p>效果如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f638c9eb6f7ed03da854762fd4767b40_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"857\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"857\" data-original=\"https://pic2.zhimg.com/v2-f638c9eb6f7ed03da854762fd4767b40_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='857'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"857\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"857\" data-original=\"https://pic2.zhimg.com/v2-f638c9eb6f7ed03da854762fd4767b40_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f638c9eb6f7ed03da854762fd4767b40_720w.jpg?source=54b3c3a5\"></figure><p>另外，还有一组快捷键也要说下</p><ul><li>⌘ ⇧ +： 展开所以代码块</li><li>⌘ ⇧  -：折叠所有代码块</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-4475ca580996b42fbec259e73b1f2b10_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"857\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"857\" data-original=\"https://pic3.zhimg.com/v2-4475ca580996b42fbec259e73b1f2b10_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='857'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"857\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"857\" data-original=\"https://pic3.zhimg.com/v2-4475ca580996b42fbec259e73b1f2b10_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-4475ca580996b42fbec259e73b1f2b10_720w.jpg?source=54b3c3a5\"></figure><h2>6. 历史剪切板的使用：Paste  from History</h2><p>在 Windows 上有一个剪切板神器 - <code>Ditto</code> ，它可以将你间经复制粘贴过的内容都保存下来，以便你重复使用。</p><p>在 Mac 上有一个神器 ，叫 Alfred ，它也有类似的功能。</p><p>如果你没有使用过 Ditto 和 Alfred ，不要紧，其实 PyCharm 也有这样的功能。</p><p>只要你按住 <code>Command + Shift + V</code> （Windows 上是 <code>Ctrl + Shift + V</code> ）就可以调出像下面这样的剪切板。</p><p>这里我提前准备了几种编程语言的 Hello World ，效果如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a7fb5615345c506e1695e279d20083cd_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"799\" data-rawheight=\"515\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-a47e293b0aba58e1213c093b72dab1a6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"799\" data-original=\"https://pic4.zhimg.com/v2-a7fb5615345c506e1695e279d20083cd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='799'%20height='515'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"799\" data-rawheight=\"515\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-a47e293b0aba58e1213c093b72dab1a6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"799\" data-original=\"https://pic4.zhimg.com/v2-a7fb5615345c506e1695e279d20083cd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a7fb5615345c506e1695e279d20083cd_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>你可以通过右键调出此窗口</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-968f91f7140d52e87b8a557759f5a143_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1640\" data-rawheight=\"1304\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c9c13a6b535703e06b473ae436465879_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1640\" data-original=\"https://pic4.zhimg.com/v2-968f91f7140d52e87b8a557759f5a143_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1640'%20height='1304'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1640\" data-rawheight=\"1304\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c9c13a6b535703e06b473ae436465879_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1640\" data-original=\"https://pic4.zhimg.com/v2-968f91f7140d52e87b8a557759f5a143_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-968f91f7140d52e87b8a557759f5a143_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>7. 使用函数时，快速查看该函数有哪些参数</h2><p>快捷键：⌘ + P</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-6e92a5ed20fa66f16c7ef5b617d418d1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1754\" data-rawheight=\"808\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-1b064e943f26ea5f32d02ec1321790c0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1754\" data-original=\"https://pic1.zhimg.com/v2-6e92a5ed20fa66f16c7ef5b617d418d1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1754'%20height='808'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1754\" data-rawheight=\"808\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-1b064e943f26ea5f32d02ec1321790c0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1754\" data-original=\"https://pic1.zhimg.com/v2-6e92a5ed20fa66f16c7ef5b617d418d1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-6e92a5ed20fa66f16c7ef5b617d418d1_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>自动纠正与自动补全</h2><p>快捷键：⌘ + ⇧ + ↩，自动结束代码，行末自动添加分号</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-249c16ea8513ec08acee6ddb0350f834_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"830\" data-original=\"https://pic2.zhimg.com/v2-249c16ea8513ec08acee6ddb0350f834_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='830'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"830\" data-original=\"https://pic2.zhimg.com/v2-249c16ea8513ec08acee6ddb0350f834_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-249c16ea8513ec08acee6ddb0350f834_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>快捷键：⌥ + ↩，也称万能键，显示意向动作和快速修复代码</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-3bf44fa4a411be507d7a6108ef2e4200_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1404\" data-rawheight=\"846\" class=\"origin_image zh-lightbox-thumb\" width=\"1404\" data-original=\"https://pic4.zhimg.com/v2-3bf44fa4a411be507d7a6108ef2e4200_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1404'%20height='846'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1404\" data-rawheight=\"846\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1404\" data-original=\"https://pic4.zhimg.com/v2-3bf44fa4a411be507d7a6108ef2e4200_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-3bf44fa4a411be507d7a6108ef2e4200_720w.jpg?source=54b3c3a5\"></figure><p>快捷键：⌃ + ⇧ + J， 智能的将代码拼接成一行</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e3845cd8a3681156e8be2631646be6af_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"830\" data-original=\"https://pic4.zhimg.com/v2-e3845cd8a3681156e8be2631646be6af_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='830'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"830\" data-original=\"https://pic4.zhimg.com/v2-e3845cd8a3681156e8be2631646be6af_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e3845cd8a3681156e8be2631646be6af_720w.jpg?source=54b3c3a5\"></figure><h2>8. 一键显示上下文信息</h2><p>如果一个类的定义写得非常的长，就像下面这样子。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-c9aef437d26d554dee44ebe4d00aa39f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1872\" data-rawheight=\"1202\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-95889876437b49a0f131d05a903ea19d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1872\" data-original=\"https://pic4.zhimg.com/v2-c9aef437d26d554dee44ebe4d00aa39f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1872'%20height='1202'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1872\" data-rawheight=\"1202\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-95889876437b49a0f131d05a903ea19d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1872\" data-original=\"https://pic4.zhimg.com/v2-c9aef437d26d554dee44ebe4d00aa39f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-c9aef437d26d554dee44ebe4d00aa39f_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>你处在这样一个位置，对框架代码不熟悉的人，根本不知道自己目前处在哪个类中。</p><p>PyCharm 提供了一个快捷键：^ + ⇧ + Q，用来显示上下文信息。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-3284ed70c783e661514694568a5b0e30_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1904\" data-rawheight=\"1216\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-3dba1a53d0b762a4d9e38b6acd2733b5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1904\" data-original=\"https://pic4.zhimg.com/v2-3284ed70c783e661514694568a5b0e30_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1904'%20height='1216'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1904\" data-rawheight=\"1216\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-3dba1a53d0b762a4d9e38b6acd2733b5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1904\" data-original=\"https://pic4.zhimg.com/v2-3284ed70c783e661514694568a5b0e30_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-3284ed70c783e661514694568a5b0e30_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>如果视野再往下来一点，你连在哪个函数都不知道呢？</p><p>按下这组快捷键：^ + ⇧ + Q，就会显示当前处在哪个函数里。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f280a193b94b1f628c759b11640b7908_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1792\" data-rawheight=\"1086\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-ec1b9337633df6e1174824fc187c6f54_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1792\" data-original=\"https://pic4.zhimg.com/v2-f280a193b94b1f628c759b11640b7908_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1792'%20height='1086'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1792\" data-rawheight=\"1086\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-ec1b9337633df6e1174824fc187c6f54_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1792\" data-original=\"https://pic4.zhimg.com/v2-f280a193b94b1f628c759b11640b7908_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f280a193b94b1f628c759b11640b7908_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>9. 一键预览模块的文档</h2><p>Ctrl + 鼠标左键 （Mac 上是：⌘  + 鼠标左键），可以实现函数跳转查看源码， 这几乎是每一个 PyCharmer 都会的一个惯用技巧。</p><p>这里再另外介绍两个类似的小技巧，快速 <code>查看函数文档</code> 和 <code>预览源代码</code> 。</p><p>在函数的开头处，使用三个引号 <code>\"</code> 包含的内容，叫做函数文档 （DocString）。</p><p>在编写代码时，顺便写好函数的接口文档，是一个很好的编码习惯。它介绍了该函数的参数类型及说明，返回值类型及范例，写得好一点的还会写出 几个简单的 Example Usage 有助于理解使用。在这一点上，Flask 可以说做得相当好。这边随便截一个 Werkzeug 的例子。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8e268c9ecb43373899ccd735341c0500_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"533\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-4dd0b34c9b080dca73a3833ce5e96444_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"822\" data-original=\"https://pic1.zhimg.com/v2-8e268c9ecb43373899ccd735341c0500_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='822'%20height='533'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"533\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-4dd0b34c9b080dca73a3833ce5e96444_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"822\" data-original=\"https://pic1.zhimg.com/v2-8e268c9ecb43373899ccd735341c0500_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8e268c9ecb43373899ccd735341c0500_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>假如我们在使用这个类的时候，忘记了这个用法，可以按住 Ctrl + q（Mac暂时未找到对应快捷键），在当前页面就可以快速预览 LocalStack 的接口文档。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-04e51a88db1c792c3d2368e4b7e192ec_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1058\" data-rawheight=\"564\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-f1949265c0e37705add4ba6663f868c7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1058\" data-original=\"https://pic4.zhimg.com/v2-04e51a88db1c792c3d2368e4b7e192ec_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1058'%20height='564'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1058\" data-rawheight=\"564\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-f1949265c0e37705add4ba6663f868c7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1058\" data-original=\"https://pic4.zhimg.com/v2-04e51a88db1c792c3d2368e4b7e192ec_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-04e51a88db1c792c3d2368e4b7e192ec_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>同样的，如果你对这个类或者函数的代码逻辑感兴趣，也可以使用快速预览的方式在当前页面展示源代码。快捷键是：Ctrl + shift + i （Mac：⌘+⇧  + i）。效果如下</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-5ffce8e31c76261c093539fa800a8078_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"963\" data-rawheight=\"572\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-2619536f5d68fc84eac20442e60ea330_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"963\" data-original=\"https://pic4.zhimg.com/v2-5ffce8e31c76261c093539fa800a8078_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='963'%20height='572'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"963\" data-rawheight=\"572\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-2619536f5d68fc84eac20442e60ea330_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"963\" data-original=\"https://pic4.zhimg.com/v2-5ffce8e31c76261c093539fa800a8078_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-5ffce8e31c76261c093539fa800a8078_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>如果 PyCharm 检测到的同名函数有多个，可以点这里进行选择查看</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-8986cda0ad3276a27beba003547263c6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"949\" data-rawheight=\"560\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-825c47574034715c0b7fb903a0bafa1c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"949\" data-original=\"https://pic1.zhimg.com/v2-8986cda0ad3276a27beba003547263c6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='949'%20height='560'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"949\" data-rawheight=\"560\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-825c47574034715c0b7fb903a0bafa1c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"949\" data-original=\"https://pic1.zhimg.com/v2-8986cda0ad3276a27beba003547263c6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-8986cda0ad3276a27beba003547263c6_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>这两个快捷键比起使用 Ctrl + 鼠标左键 跳进源代码来说，更加方便，，就像微信小程序一样，用完即焚，不会新产生一个标签页，也不需要来回跳转页面。</p><p><br></p><h2>10. 复杂操作，录制成宏</h2><p>如果你在使用PyCharm 的时候，遇到有一些操作是比较复杂（步骤多），且使用频率特别高。</p><p>那可以考虑一下，使用其自带的宏录制工具。</p><p>它会将你的一连串操作，录制下来。等你想用的时候，直接调用就行了。</p><p>这边，我以录制一个 <code>删除函数</code> 的宏为例：先按上面的方法折叠函数，再按 Command+y 删除该行，就删除了该函数。</p><p>做录制方法如下：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-84d175d1de29c76c429f27bc298f3a03_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"892\" class=\"origin_image zh-lightbox-thumb\" width=\"1242\" data-original=\"https://pic1.zhimg.com/v2-84d175d1de29c76c429f27bc298f3a03_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1242'%20height='892'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"892\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1242\" data-original=\"https://pic1.zhimg.com/v2-84d175d1de29c76c429f27bc298f3a03_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-84d175d1de29c76c429f27bc298f3a03_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>录制好后，你可以先定位到你要删除的函数处，点菜单栏 Edit - Macro 然后选择我们刚刚录制的宏，就可以播放宏了。</p><p>这样播放宏显得有点繁琐，个人建议你为这个宏定义一个快捷键，这样会更方便播放宏。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-7e6e1708deaf5d5b630a08e5ce951070_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1452\" data-rawheight=\"788\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-edd87f59111ec5c6226f252f6e332094_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1452\" data-original=\"https://pic4.zhimg.com/v2-7e6e1708deaf5d5b630a08e5ce951070_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1452'%20height='788'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1452\" data-rawheight=\"788\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-edd87f59111ec5c6226f252f6e332094_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1452\" data-original=\"https://pic4.zhimg.com/v2-7e6e1708deaf5d5b630a08e5ce951070_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-7e6e1708deaf5d5b630a08e5ce951070_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>设置快捷键时，注意不要和已有的快捷键冲突。</p><p>设置好后，查看 Macro，发现PyCharm已经将这个快捷键绑定给这个宏。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-3d251e85c5e984b1c08a2ec2acf7b239_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"472\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-f6e1b792c142de706f1662c2cfa07ba2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1280\" data-original=\"https://pic1.zhimg.com/v2-3d251e85c5e984b1c08a2ec2acf7b239_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1280'%20height='472'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"472\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-f6e1b792c142de706f1662c2cfa07ba2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1280\" data-original=\"https://pic1.zhimg.com/v2-3d251e85c5e984b1c08a2ec2acf7b239_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-3d251e85c5e984b1c08a2ec2acf7b239_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>之后你就可以使用这个快捷键删除一个函数（其实这只是删除一个代码块，但是这里只讨论设置方法）。</p><p><br></p><h2>11. 使用模板，快速捕获异常</h2><p>当你想要对一个代码块进行异常捕获时，你是怎么做的呢？</p><p>先在上面写个 try，然后对代码块缩进，然后写 excep ..</p><p>这种方法，比较生硬，而且效率极差。</p><p>这里推荐一种方法，可以使用 <code>try...except...</code> 快速包围代码。</p><p>效果如下</p><ol><li>先选中代码块</li><li>按住 ⌘ + ⌥ + T</li><li>选择 <code>try/except</code>  模板</li></ol><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-6e866b23ceabbbda8632665356616eba_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"753\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-9ec90946c0f01f76c064fb2e15a83b8e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"753\" data-original=\"https://pic1.zhimg.com/v2-6e866b23ceabbbda8632665356616eba_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='753'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"753\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-9ec90946c0f01f76c064fb2e15a83b8e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"753\" data-original=\"https://pic1.zhimg.com/v2-6e866b23ceabbbda8632665356616eba_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-6e866b23ceabbbda8632665356616eba_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>从下拉的选项来看，除了 try/except 和 try/finally 外，还有：</p><ul><li>if</li><li>while</li><li>Comments</li></ul><p>但是这些，相对于使用原始的方法，个人感觉并没有更简便，因为该项功能，我更多的是使用捕获异常。</p><h2>12. 快速输入自定义代码片段</h2><p>在 PyCharm 中有一个功能叫 Live Template，它可以用来自定义一些常用的代码片段。</p><p>比如下面这段，几乎是写 Python 脚本必备的</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n</code></pre></div><p>当你在PyCharm 中编码 python 代码时，只要输入 main ，PyCharm 就会在 Live Template 里找到定义过的代码片段，然后只要直接键入回车，就可以生成这段代码。</p><p>再比如说，我通常会定义简单的装饰器代码</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-87b7acc505bdac2a4a3505f2b91a1e93_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1214\" data-rawheight=\"876\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d3306327411f88243039c93adef6c9be_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1214\" data-original=\"https://pic4.zhimg.com/v2-87b7acc505bdac2a4a3505f2b91a1e93_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1214'%20height='876'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1214\" data-rawheight=\"876\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d3306327411f88243039c93adef6c9be_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1214\" data-original=\"https://pic4.zhimg.com/v2-87b7acc505bdac2a4a3505f2b91a1e93_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-87b7acc505bdac2a4a3505f2b91a1e93_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>这样当我要定义一个最简单的装饰器时，只要输入 <code>deco</code> 再直接敲入回车就行啦。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ecddafc12d333e3c078fa89658f5628e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"690\" data-rawheight=\"150\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-77c45e17b427795930e35413e5cdae07_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"690\" data-original=\"https://pic4.zhimg.com/v2-ecddafc12d333e3c078fa89658f5628e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='690'%20height='150'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"690\" data-rawheight=\"150\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-77c45e17b427795930e35413e5cdae07_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"690\" data-original=\"https://pic4.zhimg.com/v2-ecddafc12d333e3c078fa89658f5628e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ecddafc12d333e3c078fa89658f5628e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>13. 代码模板，效率编码</h2><p>Pycharm 提供的这个代码模板，可以说是相当实用的一个功能了。它可以在你新建一个文件时，按照你预设的模板给你生成一段内容，比如解释器路径，编码方法，作者详细信息等</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f505238d2f9ec637dded973c49b5dc19_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1582\" data-rawheight=\"742\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-1370b4e13f64c73200938eeda96d6120_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1582\" data-original=\"https://pic1.zhimg.com/v2-f505238d2f9ec637dded973c49b5dc19_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1582'%20height='742'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1582\" data-rawheight=\"742\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-1370b4e13f64c73200938eeda96d6120_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1582\" data-original=\"https://pic1.zhimg.com/v2-f505238d2f9ec637dded973c49b5dc19_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f505238d2f9ec637dded973c49b5dc19_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>按照上图模板，生成的效果如下。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-fee9cc84f3b5ff3ed05296f399260abe_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"858\" data-rawheight=\"410\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-f45f65021abc96770caaad2064f868ee_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"858\" data-original=\"https://pic1.zhimg.com/v2-fee9cc84f3b5ff3ed05296f399260abe_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='858'%20height='410'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"858\" data-rawheight=\"410\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-f45f65021abc96770caaad2064f868ee_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"858\" data-original=\"https://pic1.zhimg.com/v2-fee9cc84f3b5ff3ed05296f399260abe_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-fee9cc84f3b5ff3ed05296f399260abe_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>除了新建文件时可以初始化文件，在开发编写代码时，也同样使用 Pycharm 中自带的实用的代码模板，提高你的编码效率。</p><p>当你在键盘中敲入 <code>Command</code> + <code>J</code> 时，就可以调出一个面板，从下图可以看出里面有许多预设的模板。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-dd50c147414fe4830c325934c11c12e5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"854\" data-rawheight=\"434\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-4a9b0b3a63f901b6fe3020f36000bf4a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"854\" data-original=\"https://pic1.zhimg.com/v2-dd50c147414fe4830c325934c11c12e5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='854'%20height='434'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"854\" data-rawheight=\"434\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-4a9b0b3a63f901b6fe3020f36000bf4a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"854\" data-original=\"https://pic1.zhimg.com/v2-dd50c147414fe4830c325934c11c12e5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-dd50c147414fe4830c325934c11c12e5_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>如果我们想选择最后一个 main ，可以继续键入 main，然后就可以直接生成如下这段平时都要手动敲入的代码。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-e852d1900f27755c8e96ad7c6ebdc1d6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"798\" data-rawheight=\"454\" class=\"origin_image zh-lightbox-thumb\" width=\"798\" data-original=\"https://pic4.zhimg.com/v2-e852d1900f27755c8e96ad7c6ebdc1d6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='798'%20height='454'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"798\" data-rawheight=\"454\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"798\" data-original=\"https://pic4.zhimg.com/v2-e852d1900f27755c8e96ad7c6ebdc1d6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e852d1900f27755c8e96ad7c6ebdc1d6_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>这里再举个例子，for 循环 可以这样写。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-22bb83b7432e951c0ddb6cb8070bf38e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"386\" class=\"origin_image zh-lightbox-thumb\" width=\"734\" data-original=\"https://pic4.zhimg.com/v2-22bb83b7432e951c0ddb6cb8070bf38e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='734'%20height='386'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"386\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"734\" data-original=\"https://pic4.zhimg.com/v2-22bb83b7432e951c0ddb6cb8070bf38e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-22bb83b7432e951c0ddb6cb8070bf38e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>14. 代码封装，一步到位</h2><p>当一个主函数的代码行数越来越多时，代码的可读性会变得越来越差。通常的做法，是按照功能将代码进行封装成多个函数。</p><p>这个过程无非是</p><ol><li>在合适的位置定义一个新的函数</li><li>将原有的代码拷贝至该函数中</li><li>并将原的代码替换成该函数的调用</li></ol><p>倘若你的重构的工作量不是很大，完全可以手工来完成这些事。</p><p>但当你是在重构一个项目代码时，你可能需要一个更高效的封装技巧。</p><p>在 PyCharm 中，提供了多种形式的代码重构快捷方法，大家比较常见的可能是重构变量名：shift+F6，而今天要给大家介绍的是方法的重构，也即代码快速封装的技巧。</p><p>假如，我现在有如下一段代码，红框标出的代码放在主函数中，有些不太合适，况且这段代码不能让人一眼就看出它是在做什么事情。如何将其进行封装，对我们理清整个主程序的逻辑会有帮助。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-512eafa13557e490781e7070c6e3b04b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"494\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-47ac378df2029387d4e2c9f6fb84dc92_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"734\" data-original=\"https://pic2.zhimg.com/v2-512eafa13557e490781e7070c6e3b04b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='734'%20height='494'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"494\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-47ac378df2029387d4e2c9f6fb84dc92_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"734\" data-original=\"https://pic2.zhimg.com/v2-512eafa13557e490781e7070c6e3b04b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-512eafa13557e490781e7070c6e3b04b_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>选中你要封装的代码，然后按住 <code>Ctrl</code>+<code>Alt</code>+<code>M</code> 后，会跳出如下界面，根据自己的需要，修改函数名，选择参数和返回值</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-966bb7b967660c3633c77b982d839669_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"739\" data-rawheight=\"493\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-7d07e87169dd9d2846c04db243313f82_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"739\" data-original=\"https://pic1.zhimg.com/v2-966bb7b967660c3633c77b982d839669_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='739'%20height='493'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"739\" data-rawheight=\"493\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-7d07e87169dd9d2846c04db243313f82_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"739\" data-original=\"https://pic1.zhimg.com/v2-966bb7b967660c3633c77b982d839669_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-966bb7b967660c3633c77b982d839669_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>一切就绪点击 <code>OK</code>，PyCharm 会自动在合适的位置为你定义一个函数名，并将你选中的代码放到里面，其中参数名和返回值也都是按照你的要求，效果如下：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e0b9666c5f8c9404398b3bb8fd3749be_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"869\" data-rawheight=\"554\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-93e026eb1995a6b7151d48f74efda05b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"869\" data-original=\"https://pic4.zhimg.com/v2-e0b9666c5f8c9404398b3bb8fd3749be_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='869'%20height='554'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"869\" data-rawheight=\"554\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-93e026eb1995a6b7151d48f74efda05b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"869\" data-original=\"https://pic4.zhimg.com/v2-e0b9666c5f8c9404398b3bb8fd3749be_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e0b9666c5f8c9404398b3bb8fd3749be_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-af791fab81d4cc655a7311d511599f7b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1118\" data-rawheight=\"234\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b9939be791971a3eeeec204dea1ec9f1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1118\" data-original=\"https://pic4.zhimg.com/v2-af791fab81d4cc655a7311d511599f7b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1118'%20height='234'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1118\" data-rawheight=\"234\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b9939be791971a3eeeec204dea1ec9f1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1118\" data-original=\"https://pic4.zhimg.com/v2-af791fab81d4cc655a7311d511599f7b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-af791fab81d4cc655a7311d511599f7b_720w.jpg?source=54b3c3a5\"></figure><h2>1. 精准搜索函数在哪些地方被调用</h2><h3>在项目中搜索用该方法的地方(Find Usage)</h3><p>当你使用 Double + ⇧ 想搜索一个函数在整个项目中被谁调用了，会发现会有太多的干扰信息。</p><p>比如：</p><p>1、某些函数只是包含了该函数名，也会被搜索出来</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-c5d3ee61c82e680e1b1ce44c02f5bcb0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2158\" data-rawheight=\"1194\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-026a113ad4de6e96187226f0bd3afbac_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2158\" data-original=\"https://pic4.zhimg.com/v2-c5d3ee61c82e680e1b1ce44c02f5bcb0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2158'%20height='1194'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2158\" data-rawheight=\"1194\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-026a113ad4de6e96187226f0bd3afbac_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2158\" data-original=\"https://pic4.zhimg.com/v2-c5d3ee61c82e680e1b1ce44c02f5bcb0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-c5d3ee61c82e680e1b1ce44c02f5bcb0_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>2、不相关的文件名，符号名也会被搜索出来。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-c580076024d74cccfdb1c759794b4b0e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2100\" data-rawheight=\"1516\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3e09f94b614fb289543d3d4502779cce_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2100\" data-original=\"https://pic4.zhimg.com/v2-c580076024d74cccfdb1c759794b4b0e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2100'%20height='1516'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2100\" data-rawheight=\"1516\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3e09f94b614fb289543d3d4502779cce_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2100\" data-original=\"https://pic4.zhimg.com/v2-c580076024d74cccfdb1c759794b4b0e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-c580076024d74cccfdb1c759794b4b0e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>这种多的干扰信息，人工过滤掉无用的信息会消耗太多的精力。</p><p>因为对于搜索函数在所有文件中的用法会更精准的方式。</p><p>快捷键是：⌥ + F7 </p><p>效果如下：</p><ol><li>函数名完全匹配才会显示</li><li>只会搜索被调用的地方，定义的地方不会显示</li></ol><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-b043220b5a39972c1859381d699690bc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2652\" data-rawheight=\"1888\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-ab9cad2aaec764cc5967b8862eb19c48_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2652\" data-original=\"https://pic1.zhimg.com/v2-b043220b5a39972c1859381d699690bc_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2652'%20height='1888'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2652\" data-rawheight=\"1888\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-ab9cad2aaec764cc5967b8862eb19c48_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2652\" data-original=\"https://pic1.zhimg.com/v2-b043220b5a39972c1859381d699690bc_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-b043220b5a39972c1859381d699690bc_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>在项目中搜索用该方法的地方(Show Usage)</h3><p>搜索的内容与上面第一种并无区别，但是这种显示效果会更直观一点：</p><ul><li>上一种：以目标树展示，强调了层级关系</li><li>这一种：以文件列表展示，更加清晰易读</li></ul><p>快捷键是：⌘ + ⌥  + F7</p><p>除了用快捷键外，还有更简便的方法，那就是直接按下 <code>鼠标中键</code> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1966e80a6b64790d4faf9588fc94f5be_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2374\" data-rawheight=\"1240\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-3a701b8f626dfaa3e5288024788c8817_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2374\" data-original=\"https://pic4.zhimg.com/v2-1966e80a6b64790d4faf9588fc94f5be_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2374'%20height='1240'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2374\" data-rawheight=\"1240\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-3a701b8f626dfaa3e5288024788c8817_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2374\" data-original=\"https://pic4.zhimg.com/v2-1966e80a6b64790d4faf9588fc94f5be_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1966e80a6b64790d4faf9588fc94f5be_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>在当前文件中搜索用该方法的地方(Find Usage in File)</h3><p>当你把光标放在一个函数上时，所有使用了该函数的地方都会被高亮。但是只要你把光标移走，高亮就会失效。如果一个类非常的长，你无法确保你的翻动代码时，鼠标不会点到别的地方，这时这种高亮的方法就会变得不太好用。</p><p>这里有一个更好的办法，那就是将某个函数/变量锁定在高亮状态，快捷键是 ⌘ + F7，而取消高亮状态的快捷键是 ⌘ + ⇧ + F7</p><p>演示如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-3cc8599ea1bbb1e2011dad275a422270_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"753\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-b9073f5f9583f17aaadab40ca4d819c5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"753\" data-original=\"https://pic4.zhimg.com/v2-3cc8599ea1bbb1e2011dad275a422270_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='753'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"753\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-b9073f5f9583f17aaadab40ca4d819c5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"753\" data-original=\"https://pic4.zhimg.com/v2-3cc8599ea1bbb1e2011dad275a422270_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-3cc8599ea1bbb1e2011dad275a422270_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>2. 在项目中使用书签，快速定位</h2><p>我在看框架的源代码时，最常使用的是 ⌘  + B （也就是 ⌘  + 鼠标左键 ）一层一层地往里深入，但是当源代码比较多，可能一整个事件过程涉及十几文件，函数调用错综复杂，对于一个庞大的项目来说，有用的可能就几个关键函数，每次要找到这几个函数，都要重头从源函数再一层一层的找下去，这样实在太麻烦了，我常常因此把自己给看晕了。</p><p>直到后来我发现了 Pycharm 这个书签功能。</p><p>使用书签功能，我可以在在关键的位置打上书签，想看的时候，调用书签，快速定位即可。</p><p>使用它，你需要记住下面下两个快捷键</p><ul><li>F11：打上或清除普通书签</li><li>⌘ + F11：打上或清除书签（带数字，兼容普通标签）</li><li>⇧ + F11：展示所有书签</li></ul><p>在你要打书签的位置，按下 ⌘  + F11 ，你可以给这个位置加个序号，可以是数字也可以是字母，假如在下面这个位置 加了 <code>1</code> 这个序号，下次你就可以使用 <code>Control</code> + <code>1</code> 直接跳转到这个位置。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-517ee279d3bce5c3d4a81be47bdccdb8_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1582\" data-rawheight=\"798\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-976f74c2ffdced45828ce4ec3a1f0784_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1582\" data-original=\"https://pic1.zhimg.com/v2-517ee279d3bce5c3d4a81be47bdccdb8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1582'%20height='798'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1582\" data-rawheight=\"798\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-976f74c2ffdced45828ce4ec3a1f0784_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1582\" data-original=\"https://pic1.zhimg.com/v2-517ee279d3bce5c3d4a81be47bdccdb8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-517ee279d3bce5c3d4a81be47bdccdb8_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>当然你也可以不加，不加的话就是匿名书签了。你可以使用 <code>Shift</code> + <code>F11</code> 展示所有的书签，再进行跳转。</p><p>同时，你可以为书签加一段描述文字，表明这块代码是什么的</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e8e9514e6c698c6178b947b0734a6aa9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1724\" data-rawheight=\"746\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d8121c8ae0fa809fd5d14b05e2848f9c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1724\" data-original=\"https://pic1.zhimg.com/v2-e8e9514e6c698c6178b947b0734a6aa9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1724'%20height='746'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1724\" data-rawheight=\"746\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d8121c8ae0fa809fd5d14b05e2848f9c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1724\" data-original=\"https://pic1.zhimg.com/v2-e8e9514e6c698c6178b947b0734a6aa9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e8e9514e6c698c6178b947b0734a6aa9_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>我写入如下信息</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-174b0730eaa80eea1978aa8fdf00402a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1074\" data-rawheight=\"308\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c337fcede0e0ecc122038e8a6dee3800_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1074\" data-original=\"https://pic1.zhimg.com/v2-174b0730eaa80eea1978aa8fdf00402a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1074'%20height='308'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1074\" data-rawheight=\"308\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c337fcede0e0ecc122038e8a6dee3800_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1074\" data-original=\"https://pic1.zhimg.com/v2-174b0730eaa80eea1978aa8fdf00402a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-174b0730eaa80eea1978aa8fdf00402a_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>然后再使用快捷键：⇧ + F11，就可以列出所有的书签了</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-a73b2ab43d873bb5328c45c4ebd29657_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2028\" data-rawheight=\"866\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2004504a863ecf56a0a153d730fb038d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2028\" data-original=\"https://pic3.zhimg.com/v2-a73b2ab43d873bb5328c45c4ebd29657_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2028'%20height='866'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2028\" data-rawheight=\"866\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2004504a863ecf56a0a153d730fb038d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2028\" data-original=\"https://pic3.zhimg.com/v2-a73b2ab43d873bb5328c45c4ebd29657_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-a73b2ab43d873bb5328c45c4ebd29657_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>3. 使用收藏夹，收藏关键代码位</h2><p>在一个项目中，会有许多的比较关键的代码逻辑入口，比如我使用的 OpenStack 框架：</p><ul><li>创建虚拟机的入口</li><li>删除虚拟机的入口</li><li>虚拟机迁移的入口</li><li>等等...</li></ul><p>像这种比较关键且打开比较高频的代码，平时就可以收藏起来，等到要用的时候就不需要从项目树中一层一层的点开，再打开文件，再寻找对应的函数。</p><p>加入收藏夹的快捷键是：⌥ + ⇧ + F ，敲下之后，会让你选择是要加入哪个收藏夹，你也可以选择新建一个收藏夹。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-7104c763af049108392faccc1faf399a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1408\" data-rawheight=\"494\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0f0b81b3eeaed1c7f0a237d3447453cb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1408\" data-original=\"https://pic4.zhimg.com/v2-7104c763af049108392faccc1faf399a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1408'%20height='494'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1408\" data-rawheight=\"494\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0f0b81b3eeaed1c7f0a237d3447453cb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1408\" data-original=\"https://pic4.zhimg.com/v2-7104c763af049108392faccc1faf399a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-7104c763af049108392faccc1faf399a_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>加入收藏夹后，可以再使用快捷键：⌘ + 2，打开收藏夹工具栏，点击相应的位置进行跳转。</p><p>如果你想对收藏夹的名字进行修改，可以右键，有一个 Rename Favorites List 的按钮。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-9b9ca31a4e202fea9ce599827aff7194_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1442\" data-rawheight=\"970\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-aa97f05cd7a7fbd15716d19f1bc0b8b2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1442\" data-original=\"https://pic1.zhimg.com/v2-9b9ca31a4e202fea9ce599827aff7194_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1442'%20height='970'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1442\" data-rawheight=\"970\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-aa97f05cd7a7fbd15716d19f1bc0b8b2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1442\" data-original=\"https://pic1.zhimg.com/v2-9b9ca31a4e202fea9ce599827aff7194_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-9b9ca31a4e202fea9ce599827aff7194_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>个人感觉这个功能会书签弱好多，书签可以对位置进行重重名，而收藏夹不能对收藏的位置进行命名。</p><p>想了解 书签 的使用方法的，可以点击这里：<a href=\"https://link.zhihu.com/?target=http%3A//pycharm.iswbm.com/en/latest/c06/c06_02.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">在项目中使用书签，快速定位</a></p><h2>4. 一套快捷键，精准打开工具栏</h2><p>在 PyCharm 的功能强大，每一处的空间都不值得浪费。</p><p>在它的四周，我们可以看到一堆的按钮，点开这些按钮，会出来相应的功能窗口。</p><p>如果使用鼠标去一个一个点击，诺大的屏幕上找准一个位置点击这就是对精神的极大消耗，那有没有办法可以可以用快捷键来控制呢？</p><p>点击 View -&gt; Tool Windows 可以看到当前打开了哪些窗口（对于未打开的窗口并不会展示在这里），同时也可以看到它们的快捷键。</p><p>仔细观察，不难发现，其实在按钮上的最前面已经提示了快捷键的序号。所以即使你忘记了也没关系，只要用眼睛瞟一下看一下序号，再在序号前面按个 Command 就行了。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-ea22802549ac40cafbca3dfd51382c57_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2444\" data-rawheight=\"1440\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-031f653a9af6db5e2fa9a671b96fa7c4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2444\" data-original=\"https://pic1.zhimg.com/v2-ea22802549ac40cafbca3dfd51382c57_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2444'%20height='1440'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2444\" data-rawheight=\"1440\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-031f653a9af6db5e2fa9a671b96fa7c4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2444\" data-original=\"https://pic1.zhimg.com/v2-ea22802549ac40cafbca3dfd51382c57_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-ea22802549ac40cafbca3dfd51382c57_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>如果你想设置或修改他们的快捷键，可以在 Keymap -&gt; Tool Windows 中设置</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-2b63e073877913727269e2b3cd3cf6dc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2250\" data-rawheight=\"1794\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-64859863fdf441e9f860311885b77480_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2250\" data-original=\"https://pic1.zhimg.com/v2-2b63e073877913727269e2b3cd3cf6dc_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2250'%20height='1794'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2250\" data-rawheight=\"1794\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-64859863fdf441e9f860311885b77480_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2250\" data-original=\"https://pic1.zhimg.com/v2-2b63e073877913727269e2b3cd3cf6dc_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-2b63e073877913727269e2b3cd3cf6dc_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>5. 无死角搜索：搜索的八种姿势</h2><p>在源代码中搜索，是一个非常高频的操作。</p><p>根据搜索的范围，可以分为：</p><ol><li>当前文件中搜索</li><li>全局项目中搜索</li></ol><h3>当前文件中搜索</h3><p>当前文件中搜索，可以使用两组快捷键，它们的功能是等同的</p><ul><li>⌘ + F</li><li>⌥ + F3</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-ddc72899d51df7a70e823bb841242aa4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1672\" data-rawheight=\"998\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0885d7c33e305cb62f21c824855c386e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1672\" data-original=\"https://pic4.zhimg.com/v2-ddc72899d51df7a70e823bb841242aa4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1672'%20height='998'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1672\" data-rawheight=\"998\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0885d7c33e305cb62f21c824855c386e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1672\" data-original=\"https://pic4.zhimg.com/v2-ddc72899d51df7a70e823bb841242aa4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-ddc72899d51df7a70e823bb841242aa4_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>除此之外呢，根据搜索对象的不同，还可以划分为：</p><ul><li>普通文本</li><li>方法/函数名</li><li>类名</li></ul><p>方法名和类名都是符号，可以使用 ⌘ + F12 ，调出结构树进行搜索。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-ea253b364d48defbd1046b0a0cd9ad0b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2014\" data-rawheight=\"1028\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-686c5890429d62b376091f49348fe5a1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2014\" data-original=\"https://pic2.zhimg.com/v2-ea253b364d48defbd1046b0a0cd9ad0b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2014'%20height='1028'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2014\" data-rawheight=\"1028\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-686c5890429d62b376091f49348fe5a1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2014\" data-original=\"https://pic2.zhimg.com/v2-ea253b364d48defbd1046b0a0cd9ad0b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-ea253b364d48defbd1046b0a0cd9ad0b_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>全局项目中搜索</h3><p>根据搜索的对象，可以分为：</p><ol><li>文件名</li><li>类名</li><li>方法名</li><li>Action 名</li></ol><p>普通人都是使用 Double + ⇧ ，来搜索所有的东西(Search everywhere)，包括</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-56d23d822f4dc9497efcf41584b2915e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2084\" data-rawheight=\"1182\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-655a127e9059daeb2122dc4cda7c1ba3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2084\" data-original=\"https://pic1.zhimg.com/v2-56d23d822f4dc9497efcf41584b2915e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2084'%20height='1182'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2084\" data-rawheight=\"1182\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-655a127e9059daeb2122dc4cda7c1ba3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2084\" data-original=\"https://pic1.zhimg.com/v2-56d23d822f4dc9497efcf41584b2915e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-56d23d822f4dc9497efcf41584b2915e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>搜索的东西多了，就意味着搜索无法精准。</p><p>其实对于上面的几类，PyCharm 有提供专门的入口，下面开始介绍：</p><ul><li>精准定位到文件：Windows（Ctrl+Shift+N），Mac（Command+ shift +N）</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-729e1e5c01a5d90aa1c328dcae65a9dc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2016\" data-rawheight=\"1048\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-6698ec2ea84819d6f0b00e5db224fe67_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2016\" data-original=\"https://pic4.zhimg.com/v2-729e1e5c01a5d90aa1c328dcae65a9dc_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2016'%20height='1048'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2016\" data-rawheight=\"1048\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-6698ec2ea84819d6f0b00e5db224fe67_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2016\" data-original=\"https://pic4.zhimg.com/v2-729e1e5c01a5d90aa1c328dcae65a9dc_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-729e1e5c01a5d90aa1c328dcae65a9dc_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ul><li>精准定位到类：Windows（Ctrl+N），Mac（Command+N）</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-73cbefcad27da081dc2d6d5b25d7767d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1978\" data-rawheight=\"1112\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d60bf1af9266f8f888fde9b0afff3109_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1978\" data-original=\"https://pic2.zhimg.com/v2-73cbefcad27da081dc2d6d5b25d7767d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1978'%20height='1112'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1978\" data-rawheight=\"1112\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d60bf1af9266f8f888fde9b0afff3109_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1978\" data-original=\"https://pic2.zhimg.com/v2-73cbefcad27da081dc2d6d5b25d7767d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-73cbefcad27da081dc2d6d5b25d7767d_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ul><li>精准定位到符号：类的所有成员（函数、变量等）都可以称之为符号，Windows（Ctrl+Alt+Shift+N），Mac（Option+Shift+Command+N）</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-02844f4504cde185fd6ad00ef873b90d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2198\" data-rawheight=\"1228\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-686aa1e6018fe1a38a72d0a4954a28f1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2198\" data-original=\"https://pic1.zhimg.com/v2-02844f4504cde185fd6ad00ef873b90d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2198'%20height='1228'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2198\" data-rawheight=\"1228\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-686aa1e6018fe1a38a72d0a4954a28f1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2198\" data-original=\"https://pic1.zhimg.com/v2-02844f4504cde185fd6ad00ef873b90d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-02844f4504cde185fd6ad00ef873b90d_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ul><li>精准搜索 Action ：⇧ + ⌘ + A，比如下面我搜索书签的所有 Action，可以看到把相应的快捷键都给出来了。</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-6a9c86b53a80a955745f485bed6c87d1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2094\" data-rawheight=\"1142\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d81216fb490971b2622e607c6b6a660e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2094\" data-original=\"https://pic2.zhimg.com/v2-6a9c86b53a80a955745f485bed6c87d1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2094'%20height='1142'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2094\" data-rawheight=\"1142\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d81216fb490971b2622e607c6b6a660e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2094\" data-original=\"https://pic2.zhimg.com/v2-6a9c86b53a80a955745f485bed6c87d1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-6a9c86b53a80a955745f485bed6c87d1_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ul><li>精准定位到文件结构：文件结构包括类、函数、变量，这说明上面定位到类和定位到符号的方法，你都可以用这个来代替。</li></ul><p>Windows：Ctrl+F12，Mac：Command+F12，如果和我一样是Mac是带touchbar的，键盘上是没有F12的，那你应该先按住 Command + fn，这时 touchbar 上会出现 F12，再按F12即可。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-42036eb116e7d9661459179fceee5bbb_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1638\" data-rawheight=\"1022\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-f7fb6290479d5b02ac4771c4f9ab37a1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1638\" data-original=\"https://pic1.zhimg.com/v2-42036eb116e7d9661459179fceee5bbb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1638'%20height='1022'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1638\" data-rawheight=\"1022\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-f7fb6290479d5b02ac4771c4f9ab37a1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1638\" data-original=\"https://pic1.zhimg.com/v2-42036eb116e7d9661459179fceee5bbb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-42036eb116e7d9661459179fceee5bbb_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ul><li>指定文件夹下搜索文件：直接在项目树中输入你要搜索的文件名，若要清空以往输入，可以按 esc 清空。</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-1224b29c322e8048118f02983790b07a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1896\" data-rawheight=\"1538\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-9b2cc6c3350e78e577c3b683073e9bdc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1896\" data-original=\"https://pic4.zhimg.com/v2-1224b29c322e8048118f02983790b07a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1896'%20height='1538'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1896\" data-rawheight=\"1538\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-9b2cc6c3350e78e577c3b683073e9bdc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1896\" data-original=\"https://pic4.zhimg.com/v2-1224b29c322e8048118f02983790b07a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-1224b29c322e8048118f02983790b07a_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ul><li>指定文件中搜索项目结构：直接在项目结构中输入你要搜索的结构名（可以是类、函数、变量等），若要清空以往输入，可以按 esc 清空。</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-30287985f18c98959ac9cbc00700ab47_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2012\" data-rawheight=\"1322\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-4f8cf838c5aa12f67023b23ff658b8e8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2012\" data-original=\"https://pic2.zhimg.com/v2-30287985f18c98959ac9cbc00700ab47_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2012'%20height='1322'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2012\" data-rawheight=\"1322\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-4f8cf838c5aa12f67023b23ff658b8e8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2012\" data-original=\"https://pic2.zhimg.com/v2-30287985f18c98959ac9cbc00700ab47_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-30287985f18c98959ac9cbc00700ab47_720w.jpg?source=54b3c3a5\"></figure><p><br></p><ul><li>精准定位到某行：Windows（Ctrl+G），Mac（Command+G），如下图定位到第510行第9个字符处。</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-5bbe9e29540f4475580c7c9cd7db2736_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"684\" data-rawheight=\"236\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-96ac510f342757d8da551d17322c636f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"684\" data-original=\"https://pic4.zhimg.com/v2-5bbe9e29540f4475580c7c9cd7db2736_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='684'%20height='236'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"684\" data-rawheight=\"236\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-96ac510f342757d8da551d17322c636f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"684\" data-original=\"https://pic4.zhimg.com/v2-5bbe9e29540f4475580c7c9cd7db2736_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-5bbe9e29540f4475580c7c9cd7db2736_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>6. 搜索时过滤测试文件</h2><p>接下来，介绍一个，我看框架源码的时的一个小技巧，可能只适用一小部分人吧。</p><p>我平时会看的框架是 OpenStack ，我不知道其他框架是怎样的，但在 OpenStack 里面带有大量（真的很多）的单元测试文件。这给我在使用 <code>Find in Path</code>  时带来了不小的困扰，你可以从下图的搜索结果中感受一下，搜索一个函数，test 文件里的结果比 正常文件要多很多。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-e1c9d66f9c8bdc5160e75627ebca77bb_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"841\" data-rawheight=\"657\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-72cd078429013a5a8c73abc3fa41d818_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"841\" data-original=\"https://pic4.zhimg.com/v2-e1c9d66f9c8bdc5160e75627ebca77bb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='841'%20height='657'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"841\" data-rawheight=\"657\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-72cd078429013a5a8c73abc3fa41d818_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"841\" data-original=\"https://pic4.zhimg.com/v2-e1c9d66f9c8bdc5160e75627ebca77bb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e1c9d66f9c8bdc5160e75627ebca77bb_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>这些测试文件的搜索结果，对于我们看源代码不仅没有任何帮助的，更重要的是还干扰视线。于是我就研究了一下，从文件名入手，只要在 <code>File mask</code> 里填写 <code>!test*</code> 可以将这些test文件过滤掉。搜索结果一下子清晰很多。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-5f6ebbed8bcf1ab8b270dcdc084572f2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"845\" data-rawheight=\"408\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-3b51c1dc8846b66a410119209ba9e428_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"845\" data-original=\"https://pic2.zhimg.com/v2-5f6ebbed8bcf1ab8b270dcdc084572f2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='845'%20height='408'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"845\" data-rawheight=\"408\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-3b51c1dc8846b66a410119209ba9e428_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"845\" data-original=\"https://pic2.zhimg.com/v2-5f6ebbed8bcf1ab8b270dcdc084572f2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-5f6ebbed8bcf1ab8b270dcdc084572f2_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>7. 显示当前类的继承树：Type Hierarchy</h2><h3>第一种方法</h3><p>使用快捷键 <code>Ctrl + H</code> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-3a78a8380dc4b2dd2019db78982b911d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2410\" data-rawheight=\"1410\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-25c3e536b95560af5326937b83d0c883_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2410\" data-original=\"https://pic2.zhimg.com/v2-3a78a8380dc4b2dd2019db78982b911d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2410'%20height='1410'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2410\" data-rawheight=\"1410\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-25c3e536b95560af5326937b83d0c883_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2410\" data-original=\"https://pic2.zhimg.com/v2-3a78a8380dc4b2dd2019db78982b911d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-3a78a8380dc4b2dd2019db78982b911d_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>第二种方法</h3><p>使用快捷键 ⌘ + O</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-1f7e42b09ba06fe1227922a422e7e4cf_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1576\" data-rawheight=\"1368\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-07070dbc4b7847fcc1a68833e48bbccd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1576\" data-original=\"https://pic4.zhimg.com/v2-1f7e42b09ba06fe1227922a422e7e4cf_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1576'%20height='1368'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1576\" data-rawheight=\"1368\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-07070dbc4b7847fcc1a68833e48bbccd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1576\" data-original=\"https://pic4.zhimg.com/v2-1f7e42b09ba06fe1227922a422e7e4cf_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-1f7e42b09ba06fe1227922a422e7e4cf_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>显示当前方法的调用树：Method Hierarchy</h2><p>按住快捷键  Ctrl + ⌥  + H </p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-247fef1e0c781137f997fc1a79e4de0b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2410\" data-rawheight=\"1410\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-ee8cb1e144b18d26f52debc547e99b11_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2410\" data-original=\"https://pic2.zhimg.com/v2-247fef1e0c781137f997fc1a79e4de0b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2410'%20height='1410'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2410\" data-rawheight=\"1410\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-ee8cb1e144b18d26f52debc547e99b11_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2410\" data-original=\"https://pic2.zhimg.com/v2-247fef1e0c781137f997fc1a79e4de0b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-247fef1e0c781137f997fc1a79e4de0b_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>8. 跳转到最后编辑的地方</h2><p>根据开源框架定制功能，是我每天都要做的事情。</p><p>每次我在某处编写代码时，都有可能会卡住，要去其他地方看下代码的实现，才能继续写下去。</p><p>有可能是该文件下的其他代码，看完后还要回来继续写原来的代码，但是在一个数千行的文件下，我要跳回到刚刚写代码的位置，事实上还是比较麻烦的。</p><ul><li>可以用查找功能，搜索你刚刚的代码，进行跳转，前提你得记得你的代码。</li><li>也可以在原来的代码上加个固定的注释，到时直接搜索就行。</li></ul><p>以上都比较死板，这里介绍一个更好的办法。</p><p>你只要按下快捷键：⌘ + ⇧ + delete，不管你在哪里，是同文件下，还是不同文件下，都可以回到你最后编辑的位置，下面我来演示下</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-f42503b69fbc47f9d228a2b25b495309_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f636a21ef3ca753a7fde2c4ded727567_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"806\" data-original=\"https://pic2.zhimg.com/v2-f42503b69fbc47f9d228a2b25b495309_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='806'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f636a21ef3ca753a7fde2c4ded727567_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"806\" data-original=\"https://pic2.zhimg.com/v2-f42503b69fbc47f9d228a2b25b495309_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-f42503b69fbc47f9d228a2b25b495309_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>9. 在子类方法中快速进入父类方法</h2><p>如下图所示</p><ol><li>当前光标处于子类的 reset 方法</li><li>按下快捷键 ⌘ + U ，就会进入父类的 reset 方法</li></ol><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-9a15fad4a53d52c8cc8583b574e33af9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"739\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d858e2644231fdf4697ac716be7ec9f8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"739\" data-original=\"https://pic1.zhimg.com/v2-9a15fad4a53d52c8cc8583b574e33af9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='739'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"739\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d858e2644231fdf4697ac716be7ec9f8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"739\" data-original=\"https://pic1.zhimg.com/v2-9a15fad4a53d52c8cc8583b574e33af9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-9a15fad4a53d52c8cc8583b574e33af9_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>10. 前进/后退 到上次\"点击\"的地方</h2><p>本节写的前进/后退，是指光标点击的位置。</p><p>有三种方法</p><h3>第一种：使用工具栏</h3><p>首先要让 PyCharm 显示这两个按钮</p><p>因为你的界面上可能没有这两个按钮</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f1721bae8639da4f712bb427e2e4849b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1752\" data-rawheight=\"550\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-66253910d10951d69f11a52e7151345f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1752\" data-original=\"https://pic2.zhimg.com/v2-f1721bae8639da4f712bb427e2e4849b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1752'%20height='550'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1752\" data-rawheight=\"550\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-66253910d10951d69f11a52e7151345f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1752\" data-original=\"https://pic2.zhimg.com/v2-f1721bae8639da4f712bb427e2e4849b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f1721bae8639da4f712bb427e2e4849b_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>怎么打开这个工具栏呢，看下图</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-c256c9a862014095eea685c48e2ae0bb_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1810\" data-rawheight=\"676\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-bc58610c20b037d47a3df38cf9d20e6c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1810\" data-original=\"https://pic1.zhimg.com/v2-c256c9a862014095eea685c48e2ae0bb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1810'%20height='676'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1810\" data-rawheight=\"676\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-bc58610c20b037d47a3df38cf9d20e6c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1810\" data-original=\"https://pic1.zhimg.com/v2-c256c9a862014095eea685c48e2ae0bb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-c256c9a862014095eea685c48e2ae0bb_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>设置显示工具栏后，在界面上就会有如下两个按钮</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-e29ea5ca7834cf59abf63aecbc251fca_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1490\" data-rawheight=\"612\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-5b5c5b581394748914faba7e9148aece_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1490\" data-original=\"https://pic3.zhimg.com/v2-e29ea5ca7834cf59abf63aecbc251fca_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1490'%20height='612'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1490\" data-rawheight=\"612\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-5b5c5b581394748914faba7e9148aece_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1490\" data-original=\"https://pic3.zhimg.com/v2-e29ea5ca7834cf59abf63aecbc251fca_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-e29ea5ca7834cf59abf63aecbc251fca_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>第二种：使用菜单栏</h3><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-d2dc8bb4ba516fd8049708aa16cb8bf9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1560\" data-rawheight=\"496\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7206bf1a77b0e99a62ccc230ffc8369e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1560\" data-original=\"https://pic1.zhimg.com/v2-d2dc8bb4ba516fd8049708aa16cb8bf9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1560'%20height='496'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1560\" data-rawheight=\"496\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7206bf1a77b0e99a62ccc230ffc8369e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1560\" data-original=\"https://pic1.zhimg.com/v2-d2dc8bb4ba516fd8049708aa16cb8bf9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-d2dc8bb4ba516fd8049708aa16cb8bf9_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>第三种：使用快捷键</h3><p><b>后退</b>：回到上一次光标的位置，⌥  + ⌘ + ←</p><p><b>前进</b>：回到后一次光标的位置，⌥  + ⌘ + →</p><h2>11. 显示最近打开过的文件</h2><p>如果你关掉了一个文件标签页，而后面还想打开。再去项目树中一个一个查找打开是比较麻烦的。</p><p>不防试试快捷键： ⌘ + E ，可以直接调出你曾经打开过的文件，甚至可以点击如下按钮选择有修改过的文件。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-c574cf5ef6b902f783ad52df7283c312_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1454\" data-rawheight=\"1000\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-6f669918caff454c6ce31e90174c44ee_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1454\" data-original=\"https://pic1.zhimg.com/v2-c574cf5ef6b902f783ad52df7283c312_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1454'%20height='1000'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1454\" data-rawheight=\"1000\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-6f669918caff454c6ce31e90174c44ee_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1454\" data-original=\"https://pic1.zhimg.com/v2-c574cf5ef6b902f783ad52df7283c312_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-c574cf5ef6b902f783ad52df7283c312_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>12. 不使用鼠标，操作目录打开文件</h2><p>在隐藏目录树的情况下，如果你想切换到一个还未打开的文件，你可以试一下快捷键： ⌥ + Home</p><ul><li>← ：进入父级目录</li><li>→：进入子级目录</li><li>↑：打开目录，展示目录下的所有文件</li><li>Enter：进入选中的目录，或者打开选中的文件</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-479db5a607e41f553482d319fd7ae89f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"645\" data-rawheight=\"400\" class=\"origin_image zh-lightbox-thumb\" width=\"645\" data-original=\"https://pic1.zhimg.com/v2-479db5a607e41f553482d319fd7ae89f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='645'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"645\" data-rawheight=\"400\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"645\" data-original=\"https://pic1.zhimg.com/v2-479db5a607e41f553482d319fd7ae89f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-479db5a607e41f553482d319fd7ae89f_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>13. 快速跳转到有 ERROR 的行</h2><p>前几天打开 PyCharm，发现在导航栏这里出现了很多波浪线，有过 PyCharm 使用经验的同学，就会知道，这是代码中出现了错误。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-1400dfb0113fc8a4e6bf44f9046de097_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"704\" data-rawheight=\"294\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-5ff1e02b1dda5a686159e2cf197a0f1b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"704\" data-original=\"https://pic4.zhimg.com/v2-1400dfb0113fc8a4e6bf44f9046de097_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='704'%20height='294'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"704\" data-rawheight=\"294\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-5ff1e02b1dda5a686159e2cf197a0f1b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"704\" data-original=\"https://pic4.zhimg.com/v2-1400dfb0113fc8a4e6bf44f9046de097_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-1400dfb0113fc8a4e6bf44f9046de097_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>顺着波浪线，我一层一层地展开目录树，终于找到了那个包含错误的文件。由于是手误，我也不知道我改动了哪一行，看了下这个文件，有将近8000行的代码，难道一行一行地去找？</p><p>遇到问题，就应该尝试去寻找快捷方法，有没有办法，可以一下子定位到错误代码呢？</p><p>这时候，我想起了PyCharm 有提供给我们一个 Keymap 的面板，可以很方便的设置、查询快捷键。说不定我在那里可以找到我想要的答案</p><p>我在搜索框输入 Error，就找到了快速定位到错误位置的快捷键 <code>F2</code> 和 <code>Shift+F2</code> 可以快速的定位到错误行。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-cbd3acb02d3a2919d4a302e51a543a72_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"753\" data-rawheight=\"284\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-71c52a09a964fab98ca1eafa90a32ae7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"753\" data-original=\"https://pic1.zhimg.com/v2-cbd3acb02d3a2919d4a302e51a543a72_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='753'%20height='284'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"753\" data-rawheight=\"284\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-71c52a09a964fab98ca1eafa90a32ae7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"753\" data-original=\"https://pic1.zhimg.com/v2-cbd3acb02d3a2919d4a302e51a543a72_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-cbd3acb02d3a2919d4a302e51a543a72_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>使用快捷键 F2 查看了下原来是这里缩进有问题。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ac8926e16e5bab2b63cd2421d622c8eb_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"872\" data-rawheight=\"240\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7bb9c3746faa89e01d5b8f88bbe95ea4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"872\" data-original=\"https://pic4.zhimg.com/v2-ac8926e16e5bab2b63cd2421d622c8eb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='872'%20height='240'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"872\" data-rawheight=\"240\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7bb9c3746faa89e01d5b8f88bbe95ea4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"872\" data-original=\"https://pic4.zhimg.com/v2-ac8926e16e5bab2b63cd2421d622c8eb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ac8926e16e5bab2b63cd2421d622c8eb_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>对应的快捷键还有一个：⇧ + F2</p><p>F2：跳转到下一个有错误的行</p><p>⇧ + F2：跳转到上一个有错误的行</p><h2>14. 跳转到上/下一个方法</h2><p>PyCharm 原生跳转到上/下一个方法的快捷键是</p><ul><li>^ + ↑ ：跳转到上一个方法</li><li>^ + ↓  ：跳转到下一个方法</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-55a34f9664d116105420da886e107c7f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1838\" data-rawheight=\"948\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-af9c253bec4023ecd98529a0c617447d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1838\" data-original=\"https://pic4.zhimg.com/v2-55a34f9664d116105420da886e107c7f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1838'%20height='948'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1838\" data-rawheight=\"948\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-af9c253bec4023ecd98529a0c617447d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1838\" data-original=\"https://pic4.zhimg.com/v2-55a34f9664d116105420da886e107c7f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-55a34f9664d116105420da886e107c7f_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>但是这组快捷键在 Mac 上跟系统快捷键冲突了。</p><p>因此 我将其改成</p><ul><li>^ + ⇧ + ↑ ：跳转到上一个方法</li><li>^ + ⇧  + ↓  ：跳转到下一个方法</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e34f7c02fb3ec2ddec372121b947a1a3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"806\" data-original=\"https://pic2.zhimg.com/v2-e34f7c02fb3ec2ddec372121b947a1a3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='806'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"806\" data-original=\"https://pic2.zhimg.com/v2-e34f7c02fb3ec2ddec372121b947a1a3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e34f7c02fb3ec2ddec372121b947a1a3_720w.jpg?source=54b3c3a5\"></figure><h2>15. 向左/向右切换标签页</h2><p>PyCharm 原生切换到左/右标签页的快捷键是</p><ul><li>^ + ← ：切换到左边标签页</li><li>^ + → ：切换到右边标签页</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-fda59664f56f265e9b1cc592c0bd3c1c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1848\" data-rawheight=\"726\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c5a3a0b34eee17b17741ba8bac802151_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1848\" data-original=\"https://pic1.zhimg.com/v2-fda59664f56f265e9b1cc592c0bd3c1c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1848'%20height='726'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1848\" data-rawheight=\"726\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-c5a3a0b34eee17b17741ba8bac802151_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1848\" data-original=\"https://pic1.zhimg.com/v2-fda59664f56f265e9b1cc592c0bd3c1c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-fda59664f56f265e9b1cc592c0bd3c1c_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>但是这组快捷键在 Mac 上跟系统快捷键冲突了。</p><p>因此 我将其改成</p><ul><li>^ + ⇧ + ← ：切换到左边标签页</li><li>^ + ⇧  + →  ：切换到右边标签页</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-6593239cb65c60db948d0ad63981eef7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-32e07a621109e9c53ab099e6c3c7d188_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"806\" data-original=\"https://pic4.zhimg.com/v2-6593239cb65c60db948d0ad63981eef7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='806'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-32e07a621109e9c53ab099e6c3c7d188_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"806\" data-original=\"https://pic4.zhimg.com/v2-6593239cb65c60db948d0ad63981eef7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-6593239cb65c60db948d0ad63981eef7_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>16. 快速打开文件可用的工具栏</h2><p>使用快捷键：⌥ + F1</p><p>会弹出一个窗口，窗口会显示该文件可用的工具窗口有哪一些，使用方向键进行选择。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a7c10de75d8bf2872e7ab09034c9e8b0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1670\" data-rawheight=\"886\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-07ccfbaa79fdc1ba99997342ddd78c97_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1670\" data-original=\"https://pic4.zhimg.com/v2-a7c10de75d8bf2872e7ab09034c9e8b0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1670'%20height='886'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1670\" data-rawheight=\"886\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-07ccfbaa79fdc1ba99997342ddd78c97_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1670\" data-original=\"https://pic4.zhimg.com/v2-a7c10de75d8bf2872e7ab09034c9e8b0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a7c10de75d8bf2872e7ab09034c9e8b0_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>17. 学会跨级别跳转代码块</h2><p>根据代码块的在模块中的位置，可以将代码块分为：</p><ol><li>行代码块：</li><li>流程控制代码块</li><li>函数内函数代码块</li><li>函数代码块</li><li>类代码块</li></ol><p>在 PyCharm 中如何实现跨级别代码块（从下一级跳到上一级，不可逆向）的跳转呢？</p><p>只要记住这一组快捷键就可以：</p><ul><li>⌘ + [：跳到上一级代码块开始的地方</li><li>⌘ + ]：跳到上一级代码块结束的地方</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-cb9bcc662b6cb212b646989d96005efe_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"771\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"771\" data-original=\"https://pic3.zhimg.com/v2-cb9bcc662b6cb212b646989d96005efe_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='771'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"771\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"771\" data-original=\"https://pic3.zhimg.com/v2-cb9bcc662b6cb212b646989d96005efe_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-cb9bcc662b6cb212b646989d96005efe_720w.jpg?source=54b3c3a5\"></figure><h2>18. 善用 TODO 记录待办事项</h2><p>一个程序员，如果能够一天都只和代码打交道，是一件多么难得的事情。</p><p>可能外行人不知道，做为同样是程序员的你，是不是和我有一样的烦恼。</p><p>代码写着写着，测试突然就喊道：小明，你的代码有bug，ug，g（回声）。。</p><p>代码写着写着，运维突然一个弹窗：小明，这个线上问题赶紧排查一下。。</p><p>代码写着写着，产品突然就跳出来：小明，能做一个根据手机壳颜色自动改变app主题的app不？？</p><p>这样的噩梦每天都在重复不间断地上演着，或许我知道了为什么程序员要在深夜里码代码了，因为那是白日里得不到的宁静。</p><p>所以 王建硕 在&lt;&lt; <a href=\"https://link.zhihu.com/?target=http%3A//blog.jobbole.com/24682/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">入静和入世</a> &gt;&gt;一文中写道：</p><blockquote> “当看到一个程序员冥思苦想的时候，不要过去打扰，甚至在极端的情况下，一句友好的问候都是多余的。 ”  <br> </blockquote><p>为了避免这个情况，我通常在别人打断我的时候，请对方给我一分钟的时间，使用PyCharn 的 TODO 功能快速记录下当前的思绪状态，以及下一步要做的事情。</p><p>使用方法跟注释差不多，只要固定要以 TODO 开头。然后，你要查看全局项目中的所有 TODO 事项的时候，可以使用快捷键调出 TODO 面板。如果你是 Mac， 快捷键 是 ⌘  + 6，而 Windows 是 Alt+6。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-73a571ec74d6a281b121fe57500d5a03_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1700\" data-rawheight=\"1114\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-36d6e3f8279d80cf859d706635d3c9b3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1700\" data-original=\"https://pic4.zhimg.com/v2-73a571ec74d6a281b121fe57500d5a03_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1700'%20height='1114'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1700\" data-rawheight=\"1114\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-36d6e3f8279d80cf859d706635d3c9b3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1700\" data-original=\"https://pic4.zhimg.com/v2-73a571ec74d6a281b121fe57500d5a03_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-73a571ec74d6a281b121fe57500d5a03_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>另外，我还使用这个来记录下个版本要优化的代码逻辑，要添加的功能。</p><p>如果是比较紧急的 BUG，可以使用类似 TODO 的标记 — <code>FIXME</code> 来区分紧急程度。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-189d99670b961b262c40e5a5782240f6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1590\" data-rawheight=\"1174\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f65322ed30980780da4cbbaf0918da9f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1590\" data-original=\"https://pic1.zhimg.com/v2-189d99670b961b262c40e5a5782240f6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1590'%20height='1174'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1590\" data-rawheight=\"1174\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f65322ed30980780da4cbbaf0918da9f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1590\" data-original=\"https://pic1.zhimg.com/v2-189d99670b961b262c40e5a5782240f6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-189d99670b961b262c40e5a5782240f6_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-23dabf0a3a4fe341532aa88e0f3fd453_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1130\" data-rawheight=\"238\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a86089bf82824f2e4c67af5514ad148c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1130\" data-original=\"https://pic4.zhimg.com/v2-23dabf0a3a4fe341532aa88e0f3fd453_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1130'%20height='238'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1130\" data-rawheight=\"238\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a86089bf82824f2e4c67af5514ad148c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1130\" data-original=\"https://pic4.zhimg.com/v2-23dabf0a3a4fe341532aa88e0f3fd453_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-23dabf0a3a4fe341532aa88e0f3fd453_720w.jpg?source=54b3c3a5\"></figure><h2>1. 三种查看文件的修改</h2><p>如果你的项目在 git 的管理之下，在你修改了文件后，你会有很多种方法来查看自己到底修改了什么？</p><p>第一种当然是使用 git diff</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-3912265aeb513bbc32e9f2b13e441693_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"495\" data-rawheight=\"168\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-02d0c4fc8b56f78183a503352fba2272_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"495\" data-original=\"https://pic1.zhimg.com/v2-3912265aeb513bbc32e9f2b13e441693_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='495'%20height='168'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"495\" data-rawheight=\"168\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-02d0c4fc8b56f78183a503352fba2272_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"495\" data-original=\"https://pic1.zhimg.com/v2-3912265aeb513bbc32e9f2b13e441693_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-3912265aeb513bbc32e9f2b13e441693_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>第二种是使用之前写的 show history</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-2df92354bc189281c443d89666e343e6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1159\" data-rawheight=\"323\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c5689ae55a125794f6dc273bd2d0148d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1159\" data-original=\"https://pic4.zhimg.com/v2-2df92354bc189281c443d89666e343e6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1159'%20height='323'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1159\" data-rawheight=\"323\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c5689ae55a125794f6dc273bd2d0148d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1159\" data-original=\"https://pic4.zhimg.com/v2-2df92354bc189281c443d89666e343e6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-2df92354bc189281c443d89666e343e6_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>第三种，也是今天要介绍的，是最简便，也是直接的方法。</p><p>在有文本变动的位置，PyCharm 会有提示，如下红色箭头标识处，点击它就可以直接查看，还可以快速回滚。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-31d422ff7e0b15bcf78953d27c987f60_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"601\" data-rawheight=\"221\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-63987337e3f53269b0095eb384123411_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"601\" data-original=\"https://pic2.zhimg.com/v2-31d422ff7e0b15bcf78953d27c987f60_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='601'%20height='221'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"601\" data-rawheight=\"221\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-63987337e3f53269b0095eb384123411_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"601\" data-original=\"https://pic2.zhimg.com/v2-31d422ff7e0b15bcf78953d27c987f60_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-31d422ff7e0b15bcf78953d27c987f60_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>2. 媲美beyond compare 的差异对比功能</h2><p>程序开发必备神器中，beyond compare 绝对可以排一号。</p><p>虽说好用，但这东西，是收费的。</p><p>如果是简单的单个文件的比对，其实可以使用PyCharm里自带的。</p><p>点击源文件，再点击<code>View</code> -&gt; <code>Compare With …</code>  -&gt; 选择目标文件</p><p>对比示例，可以查看下面这张图，UI做的还是挺好看的。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-12f9c52210534fe297bd3ba62ec3c60c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1846\" data-rawheight=\"596\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b46fa240f970067907166763f0946ebd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1846\" data-original=\"https://pic1.zhimg.com/v2-12f9c52210534fe297bd3ba62ec3c60c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1846'%20height='596'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1846\" data-rawheight=\"596\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b46fa240f970067907166763f0946ebd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1846\" data-original=\"https://pic1.zhimg.com/v2-12f9c52210534fe297bd3ba62ec3c60c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-12f9c52210534fe297bd3ba62ec3c60c_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>3. 查看文件修改记录：Annotate</h2><p>当你的项目处于受控状态（开启了版本控制），你对项目里的文件的修改都会留下记录。</p><p>那怎么查看这些记录呢？在编辑框的左边右键，然后选择 <code>Annotate</code></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-6e9d72ac0d3183ba1ce4ada13633a628_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1804\" data-rawheight=\"862\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-14eab08016e5da688c36feb4981c8077_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1804\" data-original=\"https://pic2.zhimg.com/v2-6e9d72ac0d3183ba1ce4ada13633a628_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1804'%20height='862'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1804\" data-rawheight=\"862\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-14eab08016e5da688c36feb4981c8077_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1804\" data-original=\"https://pic2.zhimg.com/v2-6e9d72ac0d3183ba1ce4ada13633a628_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-6e9d72ac0d3183ba1ce4ada13633a628_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>就会出来如下图所示的界面。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-438153ddff6cbfb8a189780c23363bab_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1660\" data-rawheight=\"1542\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-eb167836614dc6d0ea44537227a00da9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1660\" data-original=\"https://pic2.zhimg.com/v2-438153ddff6cbfb8a189780c23363bab_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1660'%20height='1542'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1660\" data-rawheight=\"1542\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-eb167836614dc6d0ea44537227a00da9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1660\" data-original=\"https://pic2.zhimg.com/v2-438153ddff6cbfb8a189780c23363bab_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-438153ddff6cbfb8a189780c23363bab_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>在这里界面里记录着，哪个人在哪一天修改了该文件的哪一行，commit 号是多少？</p><p>非常方便我们对代码进行追溯。</p><h2>4. 查看文件的所有操作记录</h2><p>之前为了恢复因为手误造成的语法错误，我使用了快捷键来定位错误行，虽然解决了问题，但总感觉姿势不对，如果没有造成语法错误呢？如何追溯到是哪里的改动影响到了呢？</p><p>假如有种方法，可以项目查看最近的修改记录的话（没有git做版本控制的情况下），那就太好了。</p><p>太巧的是，今天我打开 PyCharm ，就给我推了这条 tip，（在Mac上）使用 ⌥ + ⇧ +C 可以快速查看最近修改的内容（windows 上是 alt+shift+c）</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-bc34164c5bd94e3be06b02fc24926d36_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1284\" data-rawheight=\"670\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-32420ace39ae62904bca92b5bbd78abc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1284\" data-original=\"https://pic1.zhimg.com/v2-bc34164c5bd94e3be06b02fc24926d36_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1284'%20height='670'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1284\" data-rawheight=\"670\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-32420ace39ae62904bca92b5bbd78abc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1284\" data-original=\"https://pic1.zhimg.com/v2-bc34164c5bd94e3be06b02fc24926d36_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-bc34164c5bd94e3be06b02fc24926d36_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-4c62fa7fa10736776c971f30d54e2dca_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1174\" data-rawheight=\"248\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-5c57caf4493909e7864a5a989fd61758_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1174\" data-original=\"https://pic1.zhimg.com/v2-4c62fa7fa10736776c971f30d54e2dca_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1174'%20height='248'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1174\" data-rawheight=\"248\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-5c57caf4493909e7864a5a989fd61758_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1174\" data-original=\"https://pic1.zhimg.com/v2-4c62fa7fa10736776c971f30d54e2dca_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-4c62fa7fa10736776c971f30d54e2dca_720w.jpg?source=54b3c3a5\"></figure><h2>1. 在 PyCharm 中使用 vim</h2><p>在大多数场景之下，使用鼠标的效率和精准度，是远不如键盘快捷键的（前提是你已经相当熟练的掌握了快捷键），这个你得承认吧。</p><p>Vi 可以满足你对文本操作的所有需求，比可视化界面更加效率，更加 geek。如果你和我一样，是忠实的 vim 粉。在安装完 Pycharm 完后，肯定会第一时间将 <code>ideaVim</code> 这个插件也装上，它可以让我们在 Pycharm 中 使用 vim 来编辑代码。</p><p>安装方法如下，安装完后需要重启 Pycharm 生效。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-d7a9b4424933cefdc04314101cae284b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1886\" data-rawheight=\"1022\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e422970c8375ba700695f9a551d8f45f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1886\" data-original=\"https://pic1.zhimg.com/v2-d7a9b4424933cefdc04314101cae284b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1886'%20height='1022'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1886\" data-rawheight=\"1022\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e422970c8375ba700695f9a551d8f45f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1886\" data-original=\"https://pic1.zhimg.com/v2-d7a9b4424933cefdc04314101cae284b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-d7a9b4424933cefdc04314101cae284b_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>2. JetBrains 官方推出了汉化插件</h2><p>经常听到很多初学者抱怨说，PyCharm 怎么是全英文的？学起来好难啊。</p><p>在以前，我会跟他们说，学习编程语言，英文是一项非常重要的能力，千万不能惧怕它，逃避它，而要是去学习它，适应它，如果连个 IDE 都适应不了，那就别学编程了。</p><p>而现在，JetBrains 官方自己出了汉化插件，名字就叫： chinese，在插件市场里一搜，排名第一便是它，下载量已经 40 万，对比排名第二的民间汉化插件，简直不是量级的。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-b8fe80d9dae0c03e851f4735377ed5cd_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1986\" data-rawheight=\"1247\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7f8a85e993c9f28879c2c5880225a199_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1986\" data-original=\"https://pic3.zhimg.com/v2-b8fe80d9dae0c03e851f4735377ed5cd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1986'%20height='1247'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1986\" data-rawheight=\"1247\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7f8a85e993c9f28879c2c5880225a199_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1986\" data-original=\"https://pic3.zhimg.com/v2-b8fe80d9dae0c03e851f4735377ed5cd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-b8fe80d9dae0c03e851f4735377ed5cd_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>点击  <code>INSTALL</code> 安装后，会提示你进行重启，才能生效。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-bcaff1ae660211a19296c19600b3d599_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1192\" data-rawheight=\"712\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-cd5a6ad50f641a615e568a385f5c5d92_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1192\" data-original=\"https://pic2.zhimg.com/v2-bcaff1ae660211a19296c19600b3d599_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1192'%20height='712'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1192\" data-rawheight=\"712\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-cd5a6ad50f641a615e568a385f5c5d92_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1192\" data-original=\"https://pic2.zhimg.com/v2-bcaff1ae660211a19296c19600b3d599_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-bcaff1ae660211a19296c19600b3d599_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>重启完成后，展现在我们面前的是一个既熟悉又陌生的界面，所有的菜单栏全部变成了中文。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-368d32f5335a76de4ab03273146ea1c2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1616\" data-rawheight=\"1252\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-129c651caebb829ef8146c50da5290a6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1616\" data-original=\"https://pic4.zhimg.com/v2-368d32f5335a76de4ab03273146ea1c2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1616'%20height='1252'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1616\" data-rawheight=\"1252\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-129c651caebb829ef8146c50da5290a6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1616\" data-original=\"https://pic4.zhimg.com/v2-368d32f5335a76de4ab03273146ea1c2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-368d32f5335a76de4ab03273146ea1c2_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>点进设置一看，可以说基本实现了汉化，只剩下一小撮的英文（难道是因为这些词保留英文会比翻译后更容易理解吗？就像 socket 和套接字一样。），不过个人感觉完全不影响使用了。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-be994236b8ce249ea9a2059d8961a79c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1987\" data-rawheight=\"1246\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-9a05c501679bbff6ad89ed958c4443c2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1987\" data-original=\"https://pic1.zhimg.com/v2-be994236b8ce249ea9a2059d8961a79c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1987'%20height='1246'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1987\" data-rawheight=\"1246\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-9a05c501679bbff6ad89ed958c4443c2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1987\" data-original=\"https://pic1.zhimg.com/v2-be994236b8ce249ea9a2059d8961a79c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-be994236b8ce249ea9a2059d8961a79c_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>3. 在 PyCharm 中写 Markdown</h2><p>富文本排版文档是一件非常痛苦的事情 ，对于程序员写文档，最佳的推荐是使用 Markdown ，我所有的博客日记都是使用 Markdown 写出来的。</p><p>从 Github下载的代码一般也都会带有README.md文件，该文件是一个Markdown格式的文件。</p><p>PyCharm是默认没有安装Markdown插件的，所以不能按照Markdown格式显示文本，显示的是原始文本。</p><p>因此，如果要在 PyCharm 中阅读 Markdown 文档，可以装一下 Markdown support 这个插件。</p><p>安装的方法有两种：</p><p>1、第一种，最方便的，就是你打开一个 MD 的文档，PyCharm 就会提示你安装它。</p><p>2、从插件商店中搜索安装。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-7c5b31084026f7a0203ddd4b8bf6e6bb_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2462\" data-rawheight=\"1794\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c47db46230bb0ba1e21ff3a712ae7a0f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2462\" data-original=\"https://pic4.zhimg.com/v2-7c5b31084026f7a0203ddd4b8bf6e6bb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2462'%20height='1794'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2462\" data-rawheight=\"1794\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c47db46230bb0ba1e21ff3a712ae7a0f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2462\" data-original=\"https://pic4.zhimg.com/v2-7c5b31084026f7a0203ddd4b8bf6e6bb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-7c5b31084026f7a0203ddd4b8bf6e6bb_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>效果如下</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-5ce367ac4a8960b460d8e0fd87638e61_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3752\" data-rawheight=\"2426\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-2f116ea1565704bd744f146acaf709d5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"3752\" data-original=\"https://pic1.zhimg.com/v2-5ce367ac4a8960b460d8e0fd87638e61_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='3752'%20height='2426'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3752\" data-rawheight=\"2426\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-2f116ea1565704bd744f146acaf709d5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"3752\" data-original=\"https://pic1.zhimg.com/v2-5ce367ac4a8960b460d8e0fd87638e61_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-5ce367ac4a8960b460d8e0fd87638e61_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>4. 正则表达式测试：Regex Tester</h2><p>Regex Tester是PyCharm的第三方插件，可以测试正则表达式。</p><p>按照下图入口，安装 Regex Tester 插件：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e227b40ebbbb65ac4c5d6392dbe6a62a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2360\" data-rawheight=\"1794\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a449ba765812ce8c70cc49b48708aa31_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2360\" data-original=\"https://pic2.zhimg.com/v2-e227b40ebbbb65ac4c5d6392dbe6a62a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2360'%20height='1794'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2360\" data-rawheight=\"1794\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a449ba765812ce8c70cc49b48708aa31_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2360\" data-original=\"https://pic2.zhimg.com/v2-e227b40ebbbb65ac4c5d6392dbe6a62a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e227b40ebbbb65ac4c5d6392dbe6a62a_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>安装完成后，无需重启 PyCharm ，点击  PyCharm  界面左下方的小矩形按钮，就能找到 Regex Tester 选项。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f4c4e2306d98aa3841f9f6749b183882_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1792\" data-rawheight=\"766\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-b72b25ca1f00f184ec755808d568cda2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1792\" data-original=\"https://pic4.zhimg.com/v2-f4c4e2306d98aa3841f9f6749b183882_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1792'%20height='766'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1792\" data-rawheight=\"766\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-b72b25ca1f00f184ec755808d568cda2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1792\" data-original=\"https://pic4.zhimg.com/v2-f4c4e2306d98aa3841f9f6749b183882_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f4c4e2306d98aa3841f9f6749b183882_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>点击进入后，就出现了如下界面。我随手写了个匹配手机号码的正则（不一定准确），匹配到的字符串背景会被高亮。右上方还有一些选项如大小写敏感，多行模式等，可根据需要进行选择。Regex Tester 还提供了Split，Replace功能等。</p><p>使用效果如下：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e0774127ed1e03f9eb80e1f4c0a47cd5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1820\" data-rawheight=\"678\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-867bb8c68956d93bf15dccac4dfd3f90_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1820\" data-original=\"https://pic1.zhimg.com/v2-e0774127ed1e03f9eb80e1f4c0a47cd5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1820'%20height='678'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1820\" data-rawheight=\"678\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-867bb8c68956d93bf15dccac4dfd3f90_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1820\" data-original=\"https://pic1.zhimg.com/v2-e0774127ed1e03f9eb80e1f4c0a47cd5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e0774127ed1e03f9eb80e1f4c0a47cd5_720w.jpg?source=54b3c3a5\"></figure><h2>5. 在Windows上使用 Bash 命令</h2><p>在 Windows 上的 cmd 命令和 Linux 命令有不少的差异，比如要列出当前目录下的所有文件，Windows 上是用 <code>dir</code> ，而 Linux 上则是用 <code>ls -l</code> 。</p><p>对于像我这样熟悉 Linux 的开发者来说，Windows 的 那些 CMD 命令带来的糟糕体验是无法忍受的。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-2dc6c0d3839cc31b531ac0403dd8b7ea_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"583\" data-rawheight=\"381\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7631452c350f71a92178567c356a7bb3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"583\" data-original=\"https://pic1.zhimg.com/v2-2dc6c0d3839cc31b531ac0403dd8b7ea_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='583'%20height='381'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"583\" data-rawheight=\"381\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7631452c350f71a92178567c356a7bb3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"583\" data-original=\"https://pic1.zhimg.com/v2-2dc6c0d3839cc31b531ac0403dd8b7ea_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-2dc6c0d3839cc31b531ac0403dd8b7ea_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>在弹出的 Bash 窗口，你可以敲入你想使用的 Linux 命令，是不是舒服多了。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-74a6a64185b8ee705f0b5990dd712e13_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"808\" data-rawheight=\"590\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e567e463bc23c779175442289c1d5242_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"808\" data-original=\"https://pic1.zhimg.com/v2-74a6a64185b8ee705f0b5990dd712e13_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='808'%20height='590'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"808\" data-rawheight=\"590\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e567e463bc23c779175442289c1d5242_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"808\" data-original=\"https://pic1.zhimg.com/v2-74a6a64185b8ee705f0b5990dd712e13_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-74a6a64185b8ee705f0b5990dd712e13_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>6. 代码不规范？试试自动化 PEP8</h2><p><code>pep8</code> 是Python 语言的一个代码编写规范。如若你是新手，目前只想快速掌握基础，而不想过多去注重代码的的编写风格（虽然这很重要），那你可以尝试一下这个工具 - <code>autopep8</code></p><p>首先在全局环境中（不要在虚拟环境中安装），安装一下这个工具。</p><div class=\"highlight\"><pre><code class=\"language-bash\"><span></span>$ sudo pip install autopep8\n</code></pre></div><p>然后在 PyCharm 导入这个工具，具体设置如下图</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>Name: AutoPep8\nDescription: autopep8 your code\nProgram: autopep8\nArguments: --in-place --aggressive --aggressive $FilePath$\nWorking directory: $ProjectFileDir$\nOutput filters: $FILE_PATH$\\:$LINE$\\:$COLUMN$\\:.*\n</code></pre></div><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-56a55ede7d805bcfe1c006b332c7c6c1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1696\" data-rawheight=\"1164\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-568aeb7b0a7ee4bf648133b5546dbccf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1696\" data-original=\"https://pic1.zhimg.com/v2-56a55ede7d805bcfe1c006b332c7c6c1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1696'%20height='1164'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1696\" data-rawheight=\"1164\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-568aeb7b0a7ee4bf648133b5546dbccf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1696\" data-original=\"https://pic1.zhimg.com/v2-56a55ede7d805bcfe1c006b332c7c6c1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-56a55ede7d805bcfe1c006b332c7c6c1_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>我随意写了一段不符合 pep8 规范的代码。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-13d11d023c88a5489e6ff2b986db5292_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1316\" data-rawheight=\"286\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-bde5a590960868a3b285726fb96924e8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1316\" data-original=\"https://pic4.zhimg.com/v2-13d11d023c88a5489e6ff2b986db5292_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1316'%20height='286'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1316\" data-rawheight=\"286\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-bde5a590960868a3b285726fb96924e8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1316\" data-original=\"https://pic4.zhimg.com/v2-13d11d023c88a5489e6ff2b986db5292_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-13d11d023c88a5489e6ff2b986db5292_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>点击右键，选择 <code>External Tools</code> -&gt; <code>AutoPep8</code></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-822af334fbd4519328fdfcb96924af3d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1084\" data-rawheight=\"314\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-2a9b8c30661d27d7d01fbce08d885b65_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1084\" data-original=\"https://pic4.zhimg.com/v2-822af334fbd4519328fdfcb96924af3d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1084'%20height='314'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1084\" data-rawheight=\"314\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-2a9b8c30661d27d7d01fbce08d885b65_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1084\" data-original=\"https://pic4.zhimg.com/v2-822af334fbd4519328fdfcb96924af3d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-822af334fbd4519328fdfcb96924af3d_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>看一下效果，还是挺明显的。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f83f41efa3ae486798961bd7162d089f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1584\" data-rawheight=\"796\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7f164291ca6845b96410a77c6e5d282e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1584\" data-original=\"https://pic4.zhimg.com/v2-f83f41efa3ae486798961bd7162d089f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1584'%20height='796'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1584\" data-rawheight=\"796\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7f164291ca6845b96410a77c6e5d282e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1584\" data-original=\"https://pic4.zhimg.com/v2-f83f41efa3ae486798961bd7162d089f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f83f41efa3ae486798961bd7162d089f_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>你可能会说，Pycharm 本身就自带这个功能了呀，快捷键 <code>Command</code>+<code>Option</code>+<code>L</code> ，就可以实现一键pep8了。你可以对比一下，Pycharm 自带的代码 pep8 化功能 并没有像这个<code>autopep8</code> 来得彻底。 我相信你最终的选择肯定是后者。</p><h2>7. HTTP接口调试：Test RESTful Web Service</h2><p>PyCharm 的 Test RESTful Web Service工具提供了RESTful接口测试界面，如下图所示，提供了get、post，put等http方法，其中的Request子界面headers，Parameters，Body等功能，Response子界面用于显示返回值，Response Headers用于显示返回的消息头。</p><p>为了演示，我先使用 Flask 写一个 HTTP 接口</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span><span class=\"p\">,</span> <span class=\"n\">request</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@app.route</span><span class=\"p\">(</span><span class=\"s1\">'/hello'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">():</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'你好，'</span> <span class=\"o\">+</span> <span class=\"n\">name</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</code></pre></div><p>并运行它开启服务，访问地址是：<a href=\"https://link.zhihu.com/?target=http%3A//127.0.0.1%3A5000/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">127.0.0.1:5000/</span><span class=\"invisible\"></span></a></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-52ecd19073fd7bcd88ecefe377708a8c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1456\" data-rawheight=\"490\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-401c0ec18e8fd688bed772007aa19cc5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1456\" data-original=\"https://pic1.zhimg.com/v2-52ecd19073fd7bcd88ecefe377708a8c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1456'%20height='490'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1456\" data-rawheight=\"490\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-401c0ec18e8fd688bed772007aa19cc5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1456\" data-original=\"https://pic1.zhimg.com/v2-52ecd19073fd7bcd88ecefe377708a8c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-52ecd19073fd7bcd88ecefe377708a8c_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>通过下图方式打开 <code>Test RESTful Web Service</code></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-b8906e382fab9ee33bc0e7efe943810c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1530\" data-rawheight=\"1002\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-afd9eaa59d39b101349fd061f484b84c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1530\" data-original=\"https://pic3.zhimg.com/v2-b8906e382fab9ee33bc0e7efe943810c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1530'%20height='1002'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1530\" data-rawheight=\"1002\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-afd9eaa59d39b101349fd061f484b84c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1530\" data-original=\"https://pic3.zhimg.com/v2-b8906e382fab9ee33bc0e7efe943810c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-b8906e382fab9ee33bc0e7efe943810c_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>会出现如下界面，在红框处填写如下信息</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-b53a53f60afa3d770e0443db7dfd361c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2522\" data-rawheight=\"848\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-5fa80c5da55ca8e2c67100e1fb609f33_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2522\" data-original=\"https://pic4.zhimg.com/v2-b53a53f60afa3d770e0443db7dfd361c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2522'%20height='848'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2522\" data-rawheight=\"848\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-5fa80c5da55ca8e2c67100e1fb609f33_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2522\" data-original=\"https://pic4.zhimg.com/v2-b53a53f60afa3d770e0443db7dfd361c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-b53a53f60afa3d770e0443db7dfd361c_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>然后点击最左边的运行按钮，即可向服务器发送 http 请求。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-09a8260b3ee56be85076e9c0679c6c41_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2534\" data-rawheight=\"764\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-ff14d55606fb7ecd8fab323b376acdea_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2534\" data-original=\"https://pic4.zhimg.com/v2-09a8260b3ee56be85076e9c0679c6c41_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2534'%20height='764'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2534\" data-rawheight=\"764\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-ff14d55606fb7ecd8fab323b376acdea_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2534\" data-original=\"https://pic4.zhimg.com/v2-09a8260b3ee56be85076e9c0679c6c41_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-09a8260b3ee56be85076e9c0679c6c41_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>8. 选择执行：Execute Selection in Console</h2><p>当你想写一段简单的测试代码时，或许你会这样子</p><ol><li>使用 Python Shell 直接写。缺点是没有自动补全。</li><li>在 PyCharm 中新开一个文件。缺点是要新创建一个文件，完了后还要删除。</li></ol><p>今天再给大家介绍一种新的方法，可以完全避开上面两种方式的缺点。</p><p>那就是 <code>Execute Selection in Console</code>，可以说是 <code>Run in Anywhere</code>.</p><p>只要在当前文件中，写好代码，然后光标选择后，右键点击 <code>Execute Selection in Python Console</code> 或者 使用快捷键 option + shift + E (windows 上是 alt + shift + E)。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-fd1e341f6820ba52c8b2fafd99ec2445_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1630\" data-rawheight=\"1596\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-67606f9b0992e362ad14c393b7e97c49_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1630\" data-original=\"https://pic3.zhimg.com/v2-fd1e341f6820ba52c8b2fafd99ec2445_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1630'%20height='1596'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1630\" data-rawheight=\"1596\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-67606f9b0992e362ad14c393b7e97c49_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1630\" data-original=\"https://pic3.zhimg.com/v2-fd1e341f6820ba52c8b2fafd99ec2445_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-fd1e341f6820ba52c8b2fafd99ec2445_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>接着 PyCharm 就会弹出一个 Python Console 窗口，然后运行你所选择的代码。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-bb260e5e0d503a5c14d89aefeb0e9529_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2478\" data-rawheight=\"772\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c6cbe9ccccd978baec85282824d8810c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2478\" data-original=\"https://pic1.zhimg.com/v2-bb260e5e0d503a5c14d89aefeb0e9529_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2478'%20height='772'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2478\" data-rawheight=\"772\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c6cbe9ccccd978baec85282824d8810c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2478\" data-original=\"https://pic1.zhimg.com/v2-bb260e5e0d503a5c14d89aefeb0e9529_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-bb260e5e0d503a5c14d89aefeb0e9529_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>可以发现其中的一个亮点，就是使用这种方法，PyCharm 会自动帮我们处理好缩进（我们选择时，前面有缩进，可是在执行时，会自动去掉前面多余的缩进）</p><h2>9. 一键进行代码性能分析</h2><p>在 Python 中有许多模块可以帮助你分析并找出你的项目中哪里出现了性能问题。</p><p>比如，常用的模块有 cProfile，在某些框架中，也内置了中间件帮助你进行性能分析，比如 Django ，WSGI。</p><p>做为Python 的第一 IDE， PyCharm 本身就支持了这项功能。而且使用非常方便，小白。</p><p>假设现在要分析如下这段代码的性能损耗情况，找出到底哪个函数耗时最多</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">fun1</span><span class=\"p\">():</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">fun2</span><span class=\"p\">():</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">fun3</span><span class=\"p\">():</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">fun4</span><span class=\"p\">():</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">fun5</span><span class=\"p\">():</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">fun4</span><span class=\"p\">()</span>\n\n<span class=\"n\">fun1</span><span class=\"p\">()</span>\n<span class=\"n\">fun2</span><span class=\"p\">()</span>\n<span class=\"n\">fun3</span><span class=\"p\">()</span>\n<span class=\"n\">fun5</span><span class=\"p\">()</span>\n</code></pre></div><p>点击 Run -&gt; Profile '程序' ，即可进行性能分析。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d2ba685da3fcc8f5645f4069f2671539_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"474\" data-rawheight=\"208\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-569c412940699109eb3dbd7ba1f5c938_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"474\" data-original=\"https://pic4.zhimg.com/v2-d2ba685da3fcc8f5645f4069f2671539_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='474'%20height='208'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"474\" data-rawheight=\"208\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-569c412940699109eb3dbd7ba1f5c938_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"474\" data-original=\"https://pic4.zhimg.com/v2-d2ba685da3fcc8f5645f4069f2671539_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d2ba685da3fcc8f5645f4069f2671539_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>运行完毕后，会自动跳出一个性能统计界面。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-0fd864e4f81c18f60cb1857219c6e4d2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1178\" data-rawheight=\"315\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-209a36cba914a60466748c368d0e7047_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1178\" data-original=\"https://pic1.zhimg.com/v2-0fd864e4f81c18f60cb1857219c6e4d2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1178'%20height='315'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1178\" data-rawheight=\"315\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-209a36cba914a60466748c368d0e7047_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1178\" data-original=\"https://pic1.zhimg.com/v2-0fd864e4f81c18f60cb1857219c6e4d2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0fd864e4f81c18f60cb1857219c6e4d2_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>性能统计界面由Name、Call Count、Time(ms)、Own Time(ms) ，4列组成一个表格，见下图。</p><ol><li>表头Name显示被调用的模块或者函数；Call Count显示被调用的次数；Time(ms)显示运行时间和时间百分比，时间单位为毫秒（ms）。</li><li>点击表头上的小三角可以升序或降序排列表格。</li><li>在Name这一个列中双击某一行可以跳转到对应的代码。</li><li>以fun4这一行举例：fun4被调用了一次，运行时间为1000ms，占整个运行时间的16.7%</li></ol><p>点击 Call Graph（调用关系图）界面直观展示了各函数直接的调用关系、运行时间和时间百分比，见下图。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-3ff301e694da3d9c1be82ce28ec04aff_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"866\" data-rawheight=\"573\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-54cdc37b5d7820862678ef8a60639689_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"866\" data-original=\"https://pic3.zhimg.com/v2-3ff301e694da3d9c1be82ce28ec04aff_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='866'%20height='573'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"866\" data-rawheight=\"573\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-54cdc37b5d7820862678ef8a60639689_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"866\" data-original=\"https://pic3.zhimg.com/v2-3ff301e694da3d9c1be82ce28ec04aff_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-3ff301e694da3d9c1be82ce28ec04aff_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>右上角的4个按钮表示放大、缩小、真实大小、合适大小；</p><ol><li>箭头表示调用关系，由调用者指向被调用者；</li><li>矩形的左上角显示模块或者函数的名称，右上角显示被调用的次数；</li><li>矩形中间显示运行时间和时间百分比；</li><li>矩形的颜色表示运行时间或者时间百分比大小的趋势：红色 &gt; 黄绿色 &gt; 绿色，由图可以看出fun3的矩形为黄绿色，fun1为绿色，所有fun3运行时间比fun1长。</li><li>从图中可以看出Test.py直接调用了fun3、fun1、fun2和fun5函数；fun5函数直接调用了fun4函数；fun1、fun2、fun3、fun4和fun5都直接调用了print以及sleep函数；整个测试代码运行的总时间为6006ms，其中fun3的运行时间为1999ms，所占的时间百分比为33.3%，也就是 1999ms /  6006ms = 33.3%。</li></ol><h2>10. 开启静态代码分析检查</h2><p>对于编译型的语言，如 Java，需要将代码编译成机器可识别的语言才可运行，在编译过程中，就可以通过分析或检查源程序的语法、结构、过程、接口等来检查程序的正确性，找出代码隐藏的错误和缺陷。这个过程叫做静态代码分析检查。</p><p>那对于 Python 这种解释型的语言来说，代码是边运行边翻译的，不需要经过编译这个过程。很多肉眼无法一下子看出的错误，通常都是跑一下（反正跑一下这么方便）才能发现。</p><p>由于Python 运行是如此的方便，以至于我们都不太需要关注静态分析工具。 </p><p>但也不是说，静态分析工具完全没有用武之地，我认为还是有。</p><p>如果你的编码能力还没有很成熟，代码中可以有许许多多的隐藏bug，由于 Python 是运行到的时候才解释，导致一次运行只能发现一个错误，要发现100个bug，要运行100次，数字有点夸大，其实就是想说，如果这么多的错误都能通过一次静态检查发现就立马修改，开发调试的效率就可以有所提升。当然啦，并不是说所有的错误静态分析都能提前发现，这点希望你不要误解。</p><p>做为 Python 最强 IDE，PyCharm本身内置了这个功能，不需要你安装任何插件。</p><p>你只需要像下面这样点击项目文件夹，然后右键，选择 <code>Inspect Code</code>，就可以开启静态检查。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-34c6d2453f47096232ebd15ec063f4fe_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1028\" data-rawheight=\"930\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-de5f45505cff89cf66caa1ef4ce19116_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1028\" data-original=\"https://pic1.zhimg.com/v2-34c6d2453f47096232ebd15ec063f4fe_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1028'%20height='930'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1028\" data-rawheight=\"930\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-de5f45505cff89cf66caa1ef4ce19116_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1028\" data-original=\"https://pic1.zhimg.com/v2-34c6d2453f47096232ebd15ec063f4fe_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-34c6d2453f47096232ebd15ec063f4fe_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>我对开源组件 nova 的静态检查发现，其有不规范的地方有数千处。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-43f6776ffa336f0157d8912199eeea53_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1822\" data-rawheight=\"848\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8c927a6d477b345ae71e56722280c2c0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1822\" data-original=\"https://pic2.zhimg.com/v2-43f6776ffa336f0157d8912199eeea53_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1822'%20height='848'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1822\" data-rawheight=\"848\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8c927a6d477b345ae71e56722280c2c0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1822\" data-original=\"https://pic2.zhimg.com/v2-43f6776ffa336f0157d8912199eeea53_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-43f6776ffa336f0157d8912199eeea53_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>11. 在 PyCharm 运行 Jupyter Notebook</h2><p>使用 Jupyter 之前 ，先要安装它</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>$ pip install jupyter\n</code></pre></div><p>然后按照下图指示新建一个 Notebook ，就可以开始运作了。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1e3d8adbf815fa7437a788457d7e752f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2066\" data-rawheight=\"1198\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-bf3b32fab2b9c0f7434e56ea93fead81_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2066\" data-original=\"https://pic1.zhimg.com/v2-1e3d8adbf815fa7437a788457d7e752f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2066'%20height='1198'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2066\" data-rawheight=\"1198\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-bf3b32fab2b9c0f7434e56ea93fead81_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2066\" data-original=\"https://pic1.zhimg.com/v2-1e3d8adbf815fa7437a788457d7e752f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1e3d8adbf815fa7437a788457d7e752f_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>这个界面感觉和 Jupyter 的风格不太符</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-cd4d60ee8de4d7d127b452c093b3d41e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1972\" data-rawheight=\"448\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-acbee48dc76118f44d7606fdff9c5edf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1972\" data-original=\"https://pic4.zhimg.com/v2-cd4d60ee8de4d7d127b452c093b3d41e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1972'%20height='448'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1972\" data-rawheight=\"448\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-acbee48dc76118f44d7606fdff9c5edf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1972\" data-original=\"https://pic4.zhimg.com/v2-cd4d60ee8de4d7d127b452c093b3d41e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-cd4d60ee8de4d7d127b452c093b3d41e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>但是使用上是没有什么区别的，记住三个快捷键就好(下面指的是 Mac 上的，Windows 上的有所不同)</p><ul><li>Ctrl+Enter：运行该 cell</li><li>Option + shift + Enter：调试该 cell</li><li>Shift + Enter：插入一个新的 cell</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-6f721220574484dac55cb0dd015c174e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2114\" data-rawheight=\"652\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-42be9cb794404ed29cbad0383d34e823_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2114\" data-original=\"https://pic2.zhimg.com/v2-6f721220574484dac55cb0dd015c174e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2114'%20height='652'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2114\" data-rawheight=\"652\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-42be9cb794404ed29cbad0383d34e823_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2114\" data-original=\"https://pic2.zhimg.com/v2-6f721220574484dac55cb0dd015c174e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-6f721220574484dac55cb0dd015c174e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>只要你安装了 Jupyter 后，你使用 Python Console 也会自动变成 Jupyter 的模式</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-3294ce008820fe75abe3b3a8f7d97ae2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1940\" data-rawheight=\"826\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8a3eb479f4b4f9b11e1d0cb6a83454ee_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1940\" data-original=\"https://pic1.zhimg.com/v2-3294ce008820fe75abe3b3a8f7d97ae2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1940'%20height='826'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1940\" data-rawheight=\"826\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8a3eb479f4b4f9b11e1d0cb6a83454ee_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1940\" data-original=\"https://pic1.zhimg.com/v2-3294ce008820fe75abe3b3a8f7d97ae2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-3294ce008820fe75abe3b3a8f7d97ae2_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-283c9b7775c10f157a881347f3ebc0d9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1168\" data-rawheight=\"296\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-27cf474fa8487871a4a2644338f3904f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1168\" data-original=\"https://pic4.zhimg.com/v2-283c9b7775c10f157a881347f3ebc0d9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1168'%20height='296'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1168\" data-rawheight=\"296\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-27cf474fa8487871a4a2644338f3904f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1168\" data-original=\"https://pic4.zhimg.com/v2-283c9b7775c10f157a881347f3ebc0d9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-283c9b7775c10f157a881347f3ebc0d9_720w.jpg?source=54b3c3a5\"></figure><h2>1. 轻松实现 JSON格式化</h2><p>如下是一个未经美化的 json 文件，当一个 json 文件的内容很多时，若不经过工具重新美化，想要从中提取出有效的信息是一件很困难的事情。</p><div class=\"highlight\"><pre><code class=\"language-json\"><span></span><span class=\"p\">{</span><span class=\"nt\">\"profile\"</span><span class=\"p\">:{</span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"s2\">\"明哥\"</span><span class=\"p\">,</span> <span class=\"nt\">\"gender\"</span><span class=\"p\">:</span> <span class=\"s2\">\"male\"</span><span class=\"p\">,</span> <span class=\"nt\">\"age\"</span><span class=\"p\">:</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"nt\">\"公众号\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Python编程时光\"</span><span class=\"p\">,</span> <span class=\"nt\">\"msg\"</span><span class=\"p\">:</span> <span class=\"s2\">\"欢迎大家关注我的公众号！\"</span><span class=\"p\">}}</span>\n</code></pre></div><p>以前我经常使用一些在线的网站，比如：<a href=\"https://link.zhihu.com/?target=https%3A//tool.oschina.net/codeformat/json\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">tool.oschina.net/codefo</span><span class=\"invisible\">rmat/json</span><span class=\"ellipsis\"></span></a></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e607a3389d239f778285c6e5e6b8b885_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"765\" data-rawheight=\"423\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8afda2903e5178804c191e99693c3f6c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"765\" data-original=\"https://pic1.zhimg.com/v2-e607a3389d239f778285c6e5e6b8b885_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='765'%20height='423'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"765\" data-rawheight=\"423\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8afda2903e5178804c191e99693c3f6c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"765\" data-original=\"https://pic1.zhimg.com/v2-e607a3389d239f778285c6e5e6b8b885_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e607a3389d239f778285c6e5e6b8b885_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>如果你的电脑无法连网，或者不喜欢多记一个网址，完全可以使用 PyCharnm 来解决这一诉求</p><p>没有经过美化是这样的：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-128c3019645c7275b3f1300366e27382_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1119\" data-rawheight=\"156\" class=\"origin_image zh-lightbox-thumb\" width=\"1119\" data-original=\"https://pic2.zhimg.com/v2-128c3019645c7275b3f1300366e27382_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1119'%20height='156'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1119\" data-rawheight=\"156\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1119\" data-original=\"https://pic2.zhimg.com/v2-128c3019645c7275b3f1300366e27382_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-128c3019645c7275b3f1300366e27382_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>按住 <code>Ctrl+Alt+L</code>经过美化后是这样的</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1335902985eee4540b5a6c7f040c5bc7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"607\" data-rawheight=\"283\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3001e7a48857c83019d703793482f8a8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"607\" data-original=\"https://pic4.zhimg.com/v2-1335902985eee4540b5a6c7f040c5bc7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='607'%20height='283'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"607\" data-rawheight=\"283\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3001e7a48857c83019d703793482f8a8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"607\" data-original=\"https://pic4.zhimg.com/v2-1335902985eee4540b5a6c7f040c5bc7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1335902985eee4540b5a6c7f040c5bc7_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>2. 误删项目？一秒找回</h2><p>有一次由于自己的误操作，在没有任何备份的情况下，将一个自己写了两个星期的项目给删除了。待我回头神来的时候，我甚至都记不起是何时进行的删除操作。</p><p>做为一名老司机，当然是临危不惧地打开了回收站，进行一番搜寻，几个月没有清理过的回收站，真是一片狼藉，什么 jpg，avi 都有，不堪入目呀。</p><p>我用一分钟快速浏览了一下，没有发现我要找的那几个 py 文件，我心想，应该是文件太多了，看叉掉了。由于项目是最近写的，文件名我还清楚地记得，既然有文件名，那就利用windows 自带的搜索功能，结果还是没有，这下我才开始意识到事态的严重性，文件可能真的「没了」。</p><p>我已经很久没有清理过回收站了，为什么回收站里会没有我的文件呢？</p><p>我想这可能是一次非同寻常的 delete，会不会是在 Pycharm 里的 发起删除操作，不会往回收站里丢呢？经过一番测试，在回收站还真的找不着，但是这次尝试也无意中发现了 Pycharm 的隐藏的一个功能 <code>Local History</code>，它会保存你对文件的所有操作记录。</p><p>就拿我的刚刚测试的文件来举例，我先是新建了一个文件，然后对在这个文件里添加了几行代码。最后我将这个文件删除了。</p><p>此时你可以在你的项目目录里，点击右键，有个 <code>Local History</code> 的选项，再点击子选项 <code>Show History</code>，你可以看到这里有个记录板。如果你想恢复删除的文件，就在删除的记录项点击右键，选择 <code>Revert</code> 即可恢复。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-35f113574a0e1c251bfe90957e6d3068_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1070\" data-rawheight=\"386\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-515fee617d5508aeabbe6d3cbea94fd4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1070\" data-original=\"https://pic1.zhimg.com/v2-35f113574a0e1c251bfe90957e6d3068_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1070'%20height='386'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1070\" data-rawheight=\"386\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-515fee617d5508aeabbe6d3cbea94fd4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1070\" data-original=\"https://pic1.zhimg.com/v2-35f113574a0e1c251bfe90957e6d3068_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-35f113574a0e1c251bfe90957e6d3068_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>3. 智能补全，忽略大小写</h2><p>智能搜索补全，是IDE的最吸引人的功能之一。</p><p>当你的对象是以大写字母开头时，而你使用小写字母编写代码时，是不能查找到该函数的，你必须得先切换成大写再输入一遍。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-ac3288303d52d67eacd6201e3af77944_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1056\" data-rawheight=\"624\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-5a748f8051f9c6be3b37ca3e767a9037_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1056\" data-original=\"https://pic1.zhimg.com/v2-ac3288303d52d67eacd6201e3af77944_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1056'%20height='624'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1056\" data-rawheight=\"624\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-5a748f8051f9c6be3b37ca3e767a9037_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1056\" data-original=\"https://pic1.zhimg.com/v2-ac3288303d52d67eacd6201e3af77944_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-ac3288303d52d67eacd6201e3af77944_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>如何避免这种尴尬的情况？</p><p>只要在配置中关闭大小写匹配即可。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-b7ca4afb4e45176f2e87941f915fcefe_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"744\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-d74044a7b8ccbcc1cc76f356fc9f65a2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1536\" data-original=\"https://pic4.zhimg.com/v2-b7ca4afb4e45176f2e87941f915fcefe_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1536'%20height='744'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"744\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-d74044a7b8ccbcc1cc76f356fc9f65a2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1536\" data-original=\"https://pic4.zhimg.com/v2-b7ca4afb4e45176f2e87941f915fcefe_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-b7ca4afb4e45176f2e87941f915fcefe_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>效果如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d061078b2d3b34d86f4c962eb2c7ecc3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1148\" data-rawheight=\"614\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7d431e1a75805b5ef49354c326ae873e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1148\" data-original=\"https://pic4.zhimg.com/v2-d061078b2d3b34d86f4c962eb2c7ecc3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1148'%20height='614'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1148\" data-rawheight=\"614\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7d431e1a75805b5ef49354c326ae873e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1148\" data-original=\"https://pic4.zhimg.com/v2-d061078b2d3b34d86f4c962eb2c7ecc3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d061078b2d3b34d86f4c962eb2c7ecc3_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>4. 以列为单位的块编辑</h2><p>先给你出道小题，像下面这段代码，如果在不影响代码的情况下，快速删除后面代码后面的注释呢？</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a2331381bb7ce86571a4540983e03cbe_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1056\" data-rawheight=\"346\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9c03ee1367d34a5481862214293d8500_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1056\" data-original=\"https://pic1.zhimg.com/v2-a2331381bb7ce86571a4540983e03cbe_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1056'%20height='346'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1056\" data-rawheight=\"346\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9c03ee1367d34a5481862214293d8500_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1056\" data-original=\"https://pic1.zhimg.com/v2-a2331381bb7ce86571a4540983e03cbe_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a2331381bb7ce86571a4540983e03cbe_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>我能想到的有两种方法，如果像如上这种有规律的注释，可以使用 <code>正则匹配</code> + <code>替换</code> 来实现。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-ba5e8baa735b1a7a1dda0c97465394f1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1522\" data-rawheight=\"540\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7c770a2f897844d17de612d5a9fe77ca_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1522\" data-original=\"https://pic4.zhimg.com/v2-ba5e8baa735b1a7a1dda0c97465394f1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1522'%20height='540'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1522\" data-rawheight=\"540\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7c770a2f897844d17de612d5a9fe77ca_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1522\" data-original=\"https://pic4.zhimg.com/v2-ba5e8baa735b1a7a1dda0c97465394f1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-ba5e8baa735b1a7a1dda0c97465394f1_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>对于这个场景我想到了可以用 vim来轻松的解决，vim 支持块编辑，可以以列为单位选择区域然后进行操作，这在vim中是很常用的一个取消注释的操作。</p><p>同样回到 PyCharm 中来，你会发现它也支持块编辑。</p><p>如果你使用的是旧版本的 PyCharm ，当你按住 alt（windows）或者option（mac），然后使用鼠标进行选择，你会发现这样一件神奇的事情。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-840d4249fde615ac4b988c97b67f8157_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"938\" data-rawheight=\"442\" class=\"origin_image zh-lightbox-thumb\" width=\"938\" data-original=\"https://pic1.zhimg.com/v2-840d4249fde615ac4b988c97b67f8157_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='938'%20height='442'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"938\" data-rawheight=\"442\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"938\" data-original=\"https://pic1.zhimg.com/v2-840d4249fde615ac4b988c97b67f8157_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-840d4249fde615ac4b988c97b67f8157_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>如若上面的快捷键不生效，说明你的 PyCharm 是旧版本，在较版本中，有两种方法开启列选择模式</p><p>1、使用快捷键 ⌘  +⇧  + 8</p><p>2、点击右键，选择 『Column Selection Mode』</p><p>在新版本中，列选择的功能变成了一种模式，开启才能使用，使用完后还需要关闭。相比旧版本，个人认为这个改变不好，不能即用即走。</p><h2>5. 阅读源码的六种方法</h2><p>在你使用一个模块的函数时，如果想查看这个函数的源码，有两个思路</p><h3>第一个思路</h3><p>进入函数声明的位置，就可以看到源码了。</p><p>对应的快捷键有如下四组：</p><ol><li>⌘ + B：Go to Declaration or Usages</li><li>F4：Jump to Source</li><li>⌘ + ⌥ + B ：Go to Implementation(s)</li><li>⌘ + 鼠标左键</li><li>^ + ⇧ + B：跳转到类型声明处</li></ol><h3>第二个思路</h3><p>在当前页面弹出一个小窗口，直接显示 源代码，不用像上面一样跳转到另外一个页面。</p><p>快捷键是：⌘ + ⇧ + I</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-5ffce8e31c76261c093539fa800a8078_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"963\" data-rawheight=\"572\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-2619536f5d68fc84eac20442e60ea330_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"963\" data-original=\"https://pic2.zhimg.com/v2-5ffce8e31c76261c093539fa800a8078_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='963'%20height='572'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"963\" data-rawheight=\"572\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-2619536f5d68fc84eac20442e60ea330_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"963\" data-original=\"https://pic2.zhimg.com/v2-5ffce8e31c76261c093539fa800a8078_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-5ffce8e31c76261c093539fa800a8078_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>6. 快速重构，修改所有函数与变量</h2><p>在某同事离职交接代码时，有时候会在心里默默吐槽。</p><p>为了后期维护的方便，我通常会花个几天的时间对其代码进行了大量的重构。</p><h3>变量重命名</h3><p>重构代码，免不了要对变量进行重命名。</p><p>如果一个一个改，显然不太智能，要知道我们是在用IDE，你也许会说，用搜索全部替换不就行了？还真不行。</p><p>比如下面这段代码，我只想改myfun 里的的test_name，而对于全局下的同名变量是不应该修改的。如果你全局替换，就会有误伤。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-51b0fa5e64ccd3da92175d50a1b6d1f9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1058\" data-rawheight=\"438\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-6d7725025652b9ec33c43ea96d0d3218_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1058\" data-original=\"https://pic1.zhimg.com/v2-51b0fa5e64ccd3da92175d50a1b6d1f9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1058'%20height='438'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1058\" data-rawheight=\"438\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-6d7725025652b9ec33c43ea96d0d3218_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1058\" data-original=\"https://pic1.zhimg.com/v2-51b0fa5e64ccd3da92175d50a1b6d1f9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-51b0fa5e64ccd3da92175d50a1b6d1f9_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>这时候，我们如何做呢？</p><p>可以使用 PyCharm 的 Refactor 功能，它会自动匹配作用域，既做到批量更改，也做到不误伤。</p><p>操作方法很简单，先选中你的变量，然后使用快捷键 Shift+F6，就可以直接重命名了。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-6175c027ae245de6db92a22ffa0c7362_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1166\" data-rawheight=\"634\" class=\"origin_image zh-lightbox-thumb\" width=\"1166\" data-original=\"https://pic4.zhimg.com/v2-6175c027ae245de6db92a22ffa0c7362_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1166'%20height='634'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1166\" data-rawheight=\"634\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1166\" data-original=\"https://pic4.zhimg.com/v2-6175c027ae245de6db92a22ffa0c7362_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-6175c027ae245de6db92a22ffa0c7362_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>函数重命名</h3><p>如果是对函数重命名，使用 Shift + F6 也是可以的，只不过要点很多下。</p><p>更合适的方法是使用 Command + F6，演示过程如下</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-297dd8e34cb525bf7e3a5f8d00927398_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2066\" data-rawheight=\"1332\" class=\"origin_image zh-lightbox-thumb\" width=\"2066\" data-original=\"https://pic4.zhimg.com/v2-297dd8e34cb525bf7e3a5f8d00927398_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2066'%20height='1332'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2066\" data-rawheight=\"1332\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2066\" data-original=\"https://pic4.zhimg.com/v2-297dd8e34cb525bf7e3a5f8d00927398_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-297dd8e34cb525bf7e3a5f8d00927398_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>7. tab和空格混用自动转换</h2><p>在团队协作中，你难免会动到别人编辑的文件，有的人喜欢做tab做缩进，有的人喜欢用四个空格做缩进。</p><p>但是在同一个Python文件模块里，tab 和 四个空格缩进两种风格是不能共存的。这就需要你按照该文件原来的缩进风格来进行编码，在 Pycharm 里，可以设置自动检测原文件的缩进风格来决定当你使用tab键缩进的时候，是TAB还是四个空格。</p><p>在图示位置打勾即可开启自动检测。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ef8afd1d473b8721a02e6b95c363f7cb_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"838\" data-rawheight=\"494\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d51921dc317d59d4023767c57e75e2fb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"838\" data-original=\"https://pic1.zhimg.com/v2-ef8afd1d473b8721a02e6b95c363f7cb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='838'%20height='494'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"838\" data-rawheight=\"494\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d51921dc317d59d4023767c57e75e2fb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"838\" data-original=\"https://pic1.zhimg.com/v2-ef8afd1d473b8721a02e6b95c363f7cb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ef8afd1d473b8721a02e6b95c363f7cb_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>上面是对一个旧的 Python 模块进行修改时，如何决定当前编辑的缩进方式。</p><p>而对于新建模块，默认的缩进方式，是如何确定的？</p><p>如下图，若在 <code>Use tab character</code> 打上勾，则你新建一个 Python 后，就会使用 TAB 进行缩进，反之，则使用四个空格进行缩进。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-3ced0da8ea7b9c3ac2b024bdb22bf70f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"841\" data-rawheight=\"396\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-ce2ff930c485c4ad73c5d6a038d72e3b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"841\" data-original=\"https://pic4.zhimg.com/v2-3ced0da8ea7b9c3ac2b024bdb22bf70f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='841'%20height='396'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"841\" data-rawheight=\"396\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-ce2ff930c485c4ad73c5d6a038d72e3b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"841\" data-original=\"https://pic4.zhimg.com/v2-3ced0da8ea7b9c3ac2b024bdb22bf70f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-3ced0da8ea7b9c3ac2b024bdb22bf70f_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>8. 脱离鼠标的代码区域选择：Extend Selection</h2><p>根据选中的区域的大小，可以分为：</p><ol><li>选中单词</li><li>选中表达式</li><li>选中单行</li><li>选中代码块</li><li>选中函数</li><li>选中类</li></ol><p>对于代码区域，通常都要借助鼠标才能完成，这里给你推荐一组快捷键，可以让脱离鼠标进行区域的选择：</p><ul><li>⌘ + W：扩大选中的区域</li><li>⌘ + ⇧ + W：缩小选中的区域</li></ul><p>演示的效果如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7d9d2d2a9dba49d0cd9415e988b957e4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"739\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"739\" data-original=\"https://pic1.zhimg.com/v2-7d9d2d2a9dba49d0cd9415e988b957e4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='739'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"739\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"739\" data-original=\"https://pic1.zhimg.com/v2-7d9d2d2a9dba49d0cd9415e988b957e4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7d9d2d2a9dba49d0cd9415e988b957e4_720w.jpg?source=54b3c3a5\"></figure><p>这种用法，适用于：</p><ol><li>使用 mac 笔记本，不使用鼠标，只使用触控板的人群</li><li>想要选中一个上千行的类或函数，进行操作的人</li></ol><h2>10. 快速移动/拷贝文件：F6/F5</h2><p>当你要把一个文件拖动到另外一个目录的时候，正常人的操作有两种：</p><p>1、直接拖拽过去(个人感觉这种才是最方便的)</p><p>2、先剪切，再粘贴</p><p>PyCharm 对于这种重构操作，有更方便的入口。</p><p>只要按住 F6 就会弹出一个 Move Module 的窗口，直接选目标目录就可以。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7be9938dc81c2a4604b83d5b9b82818a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1962\" data-rawheight=\"1092\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-fc333084d543db24c04246695cf7cf69_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1962\" data-original=\"https://pic4.zhimg.com/v2-7be9938dc81c2a4604b83d5b9b82818a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1962'%20height='1092'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1962\" data-rawheight=\"1092\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-fc333084d543db24c04246695cf7cf69_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1962\" data-original=\"https://pic4.zhimg.com/v2-7be9938dc81c2a4604b83d5b9b82818a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7be9938dc81c2a4604b83d5b9b82818a_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>除了移动之外 ，拷贝也是可以的。快捷键变成了 F5</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a49d9fe04bf644effbc85b924b3d7f79_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1972\" data-rawheight=\"1108\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-abe257154a339c178a826a8153245f19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1972\" data-original=\"https://pic1.zhimg.com/v2-a49d9fe04bf644effbc85b924b3d7f79_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1972'%20height='1108'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1972\" data-rawheight=\"1108\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-abe257154a339c178a826a8153245f19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1972\" data-original=\"https://pic1.zhimg.com/v2-a49d9fe04bf644effbc85b924b3d7f79_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a49d9fe04bf644effbc85b924b3d7f79_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>11. 显示类继承关系图：Show Diagrams</h2><p>在阅读一些比较庞大的项目时，如果类的继承关系比较复杂，会给我们阅读源码带来不小的阻碍。</p><p>面对这种情况，本篇的这个技巧就能派上用场了。</p><p>在你想查看继承关系的 类 中，右键选择 <code>Diagrams</code> -&gt; <code>Show Diagram</code></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-02c4f0e73c163b66e2522e76b0234c5b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2100\" data-rawheight=\"1236\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c6ebf223dc79e960560c89a4a2ed7bef_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2100\" data-original=\"https://pic1.zhimg.com/v2-02c4f0e73c163b66e2522e76b0234c5b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2100'%20height='1236'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2100\" data-rawheight=\"1236\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c6ebf223dc79e960560c89a4a2ed7bef_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2100\" data-original=\"https://pic1.zhimg.com/v2-02c4f0e73c163b66e2522e76b0234c5b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-02c4f0e73c163b66e2522e76b0234c5b_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>就会新增一个窗口，使用 UML 为你展示该类的继承关系。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-1878f7aa251f0f079cd97f6eb9bb0383_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1502\" data-rawheight=\"808\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-12653a46c24a60e5643d29853d454f46_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1502\" data-original=\"https://pic1.zhimg.com/v2-1878f7aa251f0f079cd97f6eb9bb0383_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1502'%20height='808'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1502\" data-rawheight=\"808\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-12653a46c24a60e5643d29853d454f46_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1502\" data-original=\"https://pic1.zhimg.com/v2-1878f7aa251f0f079cd97f6eb9bb0383_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-1878f7aa251f0f079cd97f6eb9bb0383_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2>12. 快速隐藏项目树</h2><p>当你使用笔记本的小屏幕写代码时，左边的项目树就会显示特别的占空间。</p><p>通常人都会手动操起鼠标，去点击最左边的按钮或者点那个最小化的按钮。就像这样</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-23ddb679233df77496e90d32ec25cdd9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2066\" data-rawheight=\"1332\" class=\"origin_image zh-lightbox-thumb\" width=\"2066\" data-original=\"https://pic1.zhimg.com/v2-23ddb679233df77496e90d32ec25cdd9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2066'%20height='1332'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2066\" data-rawheight=\"1332\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2066\" data-original=\"https://pic1.zhimg.com/v2-23ddb679233df77496e90d32ec25cdd9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-23ddb679233df77496e90d32ec25cdd9_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>但是其实还有其他更好的方法，双击标签页，就可以把它隐藏起来。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-86d5aec802e0c1aaad021664176f18d5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2066\" data-rawheight=\"1332\" class=\"origin_image zh-lightbox-thumb\" width=\"2066\" data-original=\"https://pic3.zhimg.com/v2-86d5aec802e0c1aaad021664176f18d5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2066'%20height='1332'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2066\" data-rawheight=\"1332\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2066\" data-original=\"https://pic3.zhimg.com/v2-86d5aec802e0c1aaad021664176f18d5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-86d5aec802e0c1aaad021664176f18d5_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><br></p><h2>13. 自动导入解决依赖：Alt+Enter</h2><p>当你使用某个包的某个函数，一般都是需要先导入该包，才能使用的。</p><p>有了 PyCharm 后，有多省心呢，它能够根据你的函数，自动查找该函数可能属于的包，经过你的确认后，便能自动导入。</p><p>查找的快捷键是 Option + Enter （Windows 上是 Alt + Enter）。</p><p>最终的使用效果如下：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-7c793918159c4bffcb29ccd5789cc325_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1840\" data-rawheight=\"1168\" class=\"origin_image zh-lightbox-thumb\" width=\"1840\" data-original=\"https://pic2.zhimg.com/v2-7c793918159c4bffcb29ccd5789cc325_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1840'%20height='1168'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1840\" data-rawheight=\"1168\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1840\" data-original=\"https://pic2.zhimg.com/v2-7c793918159c4bffcb29ccd5789cc325_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-7c793918159c4bffcb29ccd5789cc325_720w.jpg?source=54b3c3a5\"></figure><h2>14. 在文件管理器/Finder 中打开文件夹的三种方法</h2><h3>第一种方法</h3><p>点击右键，选择 <code>Reveal in Finder</code> （Mac 下）或者 <code>Show in Explorer</code> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-46a15f8987a812e87854c95756770fa1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1054\" data-rawheight=\"800\" class=\"origin_image zh-lightbox-thumb\" width=\"1054\" data-original=\"https://pic4.zhimg.com/v2-46a15f8987a812e87854c95756770fa1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1054'%20height='800'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1054\" data-rawheight=\"800\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1054\" data-original=\"https://pic4.zhimg.com/v2-46a15f8987a812e87854c95756770fa1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-46a15f8987a812e87854c95756770fa1_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>第二种方法</h3><p>当你使用的是 ⌘ + ⇧ + N 打开的文件时，你会发现左边的项目树中，该文件的目录并没有被展开，这时候你想使用 <code>第一种方法</code> 去在资源管理器或者 Finder 中打开，就必须先打开项目树侧边栏，一层一层的点开该文件的目录，然后再 <code>Reveal in Finder</code>。</p><p>实际上，面对这种尴尬的场景，有更好的解决方法。</p><p>请看下图：在左侧边栏未打开情况下 先 ⌘ + ⇧ + N 查找文件并打开，然后按住 ⌘ 再用鼠标单击，就会出现该文件的所有父级目录，使用 ↑ 或 ↓ 进行选择，最后调击回车就能在 Finder 或 资源管理器中打开。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-293dc62927edafb3b1400054e1f64b89_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1210\" data-rawheight=\"800\" class=\"origin_image zh-lightbox-thumb\" width=\"1210\" data-original=\"https://pic4.zhimg.com/v2-293dc62927edafb3b1400054e1f64b89_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1210'%20height='800'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1210\" data-rawheight=\"800\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1210\" data-original=\"https://pic4.zhimg.com/v2-293dc62927edafb3b1400054e1f64b89_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-293dc62927edafb3b1400054e1f64b89_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>第三种方法</h3><p>是最快速，最简单，而且还是唯一一种不用鼠标参与的方法。</p><p>使用快捷键：⌥ + F1</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-d0f6826c0500ab1c7ab36e473954dbb3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"671\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"671\" data-original=\"https://pic2.zhimg.com/v2-d0f6826c0500ab1c7ab36e473954dbb3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='671'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"671\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"671\" data-original=\"https://pic2.zhimg.com/v2-d0f6826c0500ab1c7ab36e473954dbb3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-d0f6826c0500ab1c7ab36e473954dbb3_720w.jpg?source=54b3c3a5\"></figure><h2>15. 在Terminal 中打开文件夹</h2><p>当你想在 Terminal 中打开项目的文件夹时，也许你会这样操作</p><h3>第一种方法</h3><p>先拷贝绝对路径，再打开 terminal 粘贴 路径进入</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-12faa97afae604f2dab72710ecbfd0e6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1210\" data-rawheight=\"800\" class=\"origin_image zh-lightbox-thumb\" width=\"1210\" data-original=\"https://pic1.zhimg.com/v2-12faa97afae604f2dab72710ecbfd0e6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1210'%20height='800'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1210\" data-rawheight=\"800\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1210\" data-original=\"https://pic1.zhimg.com/v2-12faa97afae604f2dab72710ecbfd0e6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-12faa97afae604f2dab72710ecbfd0e6_720w.jpg?source=54b3c3a5\"></figure><h3>第二种方法</h3><p>PyCharm 直接为我们集成了 Terminal，我们可以直接点击进入</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-ff20b552e09b9f58636a64fb458bd6f1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1210\" data-rawheight=\"800\" class=\"origin_image zh-lightbox-thumb\" width=\"1210\" data-original=\"https://pic1.zhimg.com/v2-ff20b552e09b9f58636a64fb458bd6f1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1210'%20height='800'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1210\" data-rawheight=\"800\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1210\" data-original=\"https://pic1.zhimg.com/v2-ff20b552e09b9f58636a64fb458bd6f1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-ff20b552e09b9f58636a64fb458bd6f1_720w.jpg?source=54b3c3a5\"></figure><p><br></p><hr><p>文章到这里就结束了，我想说的是，以上仅仅是 《PyCharm 中文指南》 里的一部分</p><p>要查看全部的内容，还请前往：</p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/iswbm/pycharm-guide\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/iswbm/pychar</span><span class=\"invisible\">m-guide</span><span class=\"ellipsis\"></span></a><p>不知道能看到这里的有多少人？</p><p>也许你只是默默点了个收藏，但我仍希望有一天你能从收藏夹中将它翻出来，然后消化它，那我这两个月的心血也算有点价值。</p><p>如果这篇文章对你有用，不如施舍个赞，只要 <b>双击 </b>就行了，感谢 ~</p>", "有没有简单一点的 Python 小例子或小项目？": "<p>有一个女生，照片我在最后放哈。</p><p>她在我们实验楼上班，也是自学的Python。她还做过一次直播呢，这里就是她直播的视频：<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/live/243\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 利用 itchat 进行好友分析和生成好友点赞屏保</a></p><p><b>我提这个女孩子是什么意思呢？</b>自然是给你推荐超多有趣的Pyton小项目啦。因为这个女孩子就是通过这些小项目不断成长的。实干才是硬道理，学编程必须动手的。</p><p><br></p><p><b><i>为了阅读的趣味，我穿插一个小故事：</i></b></p><blockquote>宙斯云游，见一漂亮女孩走来，欣喜若狂。赶忙化作一头牛，横卧路中间。</blockquote><h2><b>Python入门项目</b></h2><p><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1330%3Fsources%3Dzhihuq\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">真·零基础 Python 新手入门课</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Linux 基础入门（新版）</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/9\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">MySQL 基础课程</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/9\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python版设计模式实践</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/596\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 简明教程</a></p><p><br></p><blockquote>女孩走来，牛便跟着，东西随行。女孩欢喜，骑牛走。</blockquote><h2>基础练手项目（Web）</h2><ol><li><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/29\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Flask Web框架</a></li></ol><p>2. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1127\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Django 基础教程</a></p><p>3. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1047\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Flask 框架搭建个人博客</a></p><p>4. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/81\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Flask 实现简单聊天室</a></p><p><br></p><blockquote>不知不觉，女孩骑牛走到森林深处，迷路了。女孩下牛，哭。</blockquote><h2>进阶与巩固</h2><ol><li><b><a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/364\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 破解验证码</a></b> </li></ol><p><b>2. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/370\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 图片转字符画</a></b></p><p><b>3. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/589\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 实现色情图片识别</a></b></p><p><b>4. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/651\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 图片隐写术</a></b></p><p><b>5. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/368\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">200 行 Python 代码实现 2048</a></b></p><p><b>6. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/70\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python文本解析器</a></b></p><p><b>7. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/561\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python实现3D建模工具</a></b></p><p><b>8. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/583\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python实现模板引擎</a></b></p><p><b>9. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/637\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 &amp; OpenCV 视频转字符动画</a></b></p><p><b>10. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/756\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用 Python 定制词云</a></b></p><p><b>11. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/688\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 实现简单滤镜</a></b></p><p><b>12. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/686\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">川普撞脸希拉里(基于 OpenCV 的面部特征交换)</a></b></p><p><b>13. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/655\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 智能裁切图片</a></b></p><p><b>14. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/674\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 实现简单画板</a></b></p><p><b>15.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/684\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">微信变为聊天机器人</a></b></p><p><b>16. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/729\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用 Python 解数学方程</a></b></p><p><b>17. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1041\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用 Python 创建照片马赛克</a></b></p><p><br></p><blockquote>见到女孩哭泣，宙斯化作人形，上前安抚。事成。这故事是什么意思呢？</blockquote><h2><b>数据与计算</b></h2><p><b>1. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/677\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 基于共现提取《釜山行》人物关系</a></b> </p><p><b>2. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/780\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 气象数据分析：《Python 数据分析实战》</a></b></p><p><b>3. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/782\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">NBA常规赛结果预测：利用Python进行比赛数据分析</a></b></p><p><b>4. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1071\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 的循环语句和隐含波动率的计算</a></b></p><p><b>5. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1078\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 实现数据科学中的无监督挖掘技术</a></b></p><p><b>6. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/777\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">K-近邻算法实现手写数字识别系统</a></b></p><p><b>7. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/728\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数独游戏的 Python 实现与破解</a></b> </p><p><b>8. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/633\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">基于 Flask 与 MySQL 实现番剧推荐系</a></b></p><p><b>9. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/741\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 实现英文新闻摘要自动提取</a></b></p><p><b>10. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/770\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 解决哲学家就餐问题</a></b></p><p><b>11. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/714\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Ebay 在线拍卖数据分析</a></b></p><p><b>12. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/707\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">神经网络实现人脸识别任务</a></b> </p><p><b>13. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/729\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用 Python 解数学方程</a></b></p><p><br></p><h2><b>网络编程</b></h2><p><b>1. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/623\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 实现火车票查询工具</a></b> </p><p><b>2. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/495\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 实现端口扫描器</a></b></p><p><b>3. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/594\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 实现可控制肉鸡的反向Shell</a></b></p><p><b>4. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/579\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 实现 FTP 弱口令扫描器</a></b></p><p><b>5. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/604\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">基于PyQt5 实现地图中定位相片拍摄位置</a></b> </p><p><b>6. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/640\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python实现网站模拟登陆</a></b> </p><p><b>7.<a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/672\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python实现简易局域网视频聊天工具</a></b></p><p><b>8. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/681\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">基于 TCP 的 python 聊天程序</a></b></p><p><b>9. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/683\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3基于Scapy实现DDos</a></b></p><p><br></p><blockquote>故事来自希腊神话，是欧洲的诞生。这里暗示，即便神通如宙斯，见到自己喜欢的人，也不会是直接上前，而是拐着弯靠近那个人。这种爱情心里，希腊人几千年前预示在故事里了。</blockquote><h2><b>综合高阶项目</b></h2><p><b>1. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/599\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">高德API + Python 解决租房问题</a></b> </p><p><b>2. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/359\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">基于 Flask 与 RethinkDB 实现TODO List</a></b> </p><p><b>3. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/552\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 实现简单的 Web 服务器</a></b></p><p><b>4. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/518\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 实现 Redis 异步客户端</a></b></p><p><b>5. <a href=\"https://link.zhihu.com/?target=https%3A//www.shiyanlou.com/courses/1068\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">仿 StackOverflow 开发在线问答系统</a></b> </p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-9047f7a7d331dde8e694b89a346da06f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"696\" data-rawheight=\"397\" class=\"origin_image zh-lightbox-thumb\" width=\"696\" data-original=\"https://pic1.zhimg.com/v2-9047f7a7d331dde8e694b89a346da06f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='696'%20height='397'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"696\" data-rawheight=\"397\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"696\" data-original=\"https://pic1.zhimg.com/v2-9047f7a7d331dde8e694b89a346da06f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-9047f7a7d331dde8e694b89a346da06f_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a6b06fcc018c4ca591869dd95828a4cc_720w.gif?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"240\" data-rawheight=\"240\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-a6b06fcc018c4ca591869dd95828a4cc_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"240\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='240'%20height='240'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"240\" data-rawheight=\"240\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-a6b06fcc018c4ca591869dd95828a4cc_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"240\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a6b06fcc018c4ca591869dd95828a4cc_720w.gif?source=54b3c3a5\"><figcaption>点个赞吧我都跪出花儿啦</figcaption></figure><p></p><p></p>", "可以用 Python 编程语言做哪些神奇好玩的事情？": "<p>用Python写的第一个程序，是爬取糗事百科上的图片、自动下载到本地、自动分成文件夹保存，当时就觉得，卧糟，太NB了~</p><p>第二个程序，当然还是图片爬虫，不过这次，嘿嘿，是妹纸图，你懂得~</p><p>然后还跟着别人的代码或教程或者自己写过：</p><p>12306火车票查询工具、携程机票查询；</p><p>爬取美团电影、豆瓣电影用户评论；</p><p>简单的美团餐厅爬虫及根据地理坐标制作简单热力图；</p><p>智联招聘爬虫，支持输入查询的职位关键词+城市。并将爬取到的数据分别用Exce和Python（matplotlib）做了数据分析及可视化；</p><p><b>经常用到在线翻译，于是利用Python Gui库（</b>Tkinter<b>）</b>做了简单的桌面翻译查询软件；</p><p>尝试爬取京东热卖、淘宝淘抢购（还是聚划算）的商品信息，没想到还挺简单的，主要是没做什么防爬虫措施。。。；</p><p>利用Python+Selenium+Phantomjs做了一个模拟搜索浏览淘宝商品的程序，可以记录你设定的关键词下，淘宝搜索到的前100页商品信息、信息存到本地mysql或mongoDB。</p><p>Python+Scrapy爬取知乎用户关系链~;</p><p>用Python玩微信跳一跳，跳了2500+;</p><p>过大年之际，用Python的itchat库集成了自己的几个查询系爬虫（查天气查火车查携程机票查快递）做到了微信自动回复的功能！亲朋好友发来的祝福可以自动回复了，避免了尴尬！O(∩_∩)O哈哈~还能查天气查火车查携程机票查快递，对，很好玩很实用~</p><p>还有很多想学的：爬虫Scrapy框架，机器学习Tensorflow、图像识别。。。。</p><hr><p>以下转载几个自己做的几个小程序，适合新人，<b>喜欢请点赞~ 谢谢:)</b></p><p><b>github：</b><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Flowingsun007/littleSpiders\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Flowingsun007/littleSpiders</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/35687577\" class=\"internal\">Lyon:Python图片文本识别—基于tesseract和百度实现</a> （更新于18.4.15）</p><p><a href=\"https://zhuanlan.zhihu.com/p/34304821\" class=\"internal\">Lyon: Python实现微信查天气+火车+飞机+快递</a>  （更新于18.3.7）</p><p><a href=\"https://zhuanlan.zhihu.com/p/34290391\" class=\"internal\">Lyon：Python—itchat下载拼接微信好友头像图</a> （更新于18.3.6）</p><p><a href=\"https://zhuanlan.zhihu.com/p/34238048\" class=\"internal\">Lyon：Python—itchat实现微信自动回复</a>（更新于18.3.5）</p><p><a href=\"https://zhuanlan.zhihu.com/p/34207133\" class=\"internal\">Lyon: Python命令行实现—查全国7天天气</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/33875291\" class=\"internal\">Lyon: python命令行查询12306火车票</a> (更新于18.2.19)</p><p><a href=\"https://zhuanlan.zhihu.com/p/33816013\" class=\"internal\">Lyon: Python—一行代码情人节画爱心表白</a> （更新于18.2.14）</p><p><a href=\"https://zhuanlan.zhihu.com/p/33521076\" class=\"internal\">Lyon: Python多线程threading—图片下载</a> (更新于18.2.5)</p><p><a href=\"https://zhuanlan.zhihu.com/p/33515378\" class=\"internal\">Lyon：Python—10行代码查快递</a> （更新于18.2.2）</p><p><a href=\"https://zhuanlan.zhihu.com/p/33192111\" class=\"internal\">Lyon：用Python发邮件</a>（更新于18.1.23）</p><p><a href=\"https://zhuanlan.zhihu.com/p/33154253\" class=\"internal\">Lyon：Python爬虫入门—图片下载</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/33148780\" class=\"internal\">Lyon：用Python实现—携程机票查询</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/32983898\" class=\"internal\">Lyon：智联Python相关职位的数据分析及可视化-Pandas&amp;Matplotlib篇</a></p><hr><p>以下两个小项目，都比较适合练手。</p><p>第一个是命令行携程机票查询，模仿的是12306火车票查询器做的；</p><p>第二个是一个智联招聘的爬虫，包括后面数据处理、分析以及用matplotlib进行了可视化。</p><p>代码都有，欢迎拿去~</p><hr><a href=\"https://zhuanlan.zhihu.com/p/33148780\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-b8fd8a32f0df439451053ab58b37e386_bh.jpg?source=54b3c3a5\" data-image-width=\"872\" data-image-height=\"604\" class=\"internal\">Lyon：用Python实现—携程机票查询</a><p>以前参考别人的代码，用Python做了一个12306命令行式的火车票查询工具，感觉还挺有意思的！于是自己又做了一个类似的——携程机票查询器。</p><p>携程官网查询的效果是这样的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-89f157c0a8b0129a297145d7d891fa44_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1190\" data-rawheight=\"874\" class=\"origin_image zh-lightbox-thumb\" width=\"1190\" data-original=\"https://pic4.zhimg.com/v2-89f157c0a8b0129a297145d7d891fa44_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1190'%20height='874'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1190\" data-rawheight=\"874\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1190\" data-original=\"https://pic4.zhimg.com/v2-89f157c0a8b0129a297145d7d891fa44_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-89f157c0a8b0129a297145d7d891fa44_720w.jpg?source=54b3c3a5\"></figure><p>Python命令行界面查询的效果是这样的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-b8fd8a32f0df439451053ab58b37e386_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"872\" data-rawheight=\"604\" class=\"origin_image zh-lightbox-thumb\" width=\"872\" data-original=\"https://pic2.zhimg.com/v2-b8fd8a32f0df439451053ab58b37e386_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='872'%20height='604'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"872\" data-rawheight=\"604\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"872\" data-original=\"https://pic2.zhimg.com/v2-b8fd8a32f0df439451053ab58b37e386_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-b8fd8a32f0df439451053ab58b37e386_720w.jpg?source=54b3c3a5\"></figure><p>输入出发地、目的地、乘机日期，即可看到可选的航班、机场、出发到达时间、票价等信息。</p><p>视频演示效果如下：</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/938441663832621056\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic2.zhimg.com/80/v2-029a73d6a55f5a1c9ed8d56c1c84f71d_b.jpg\" data-lens-id=\"938441663832621056\">              <img class=\"thumbnail\" src=\"https://pic2.zhimg.com/80/v2-029a73d6a55f5a1c9ed8d56c1c84f71d_b.jpg\">              <span class=\"content\">                <span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/938441663832621056</span>              </span>            </a>            <p>程序的源码如下：</p><p>1.air_stations.py</p><p>2.airline_ticket.py</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#1.air_stations.py\nimport re\nimport os\nimport json\nimport requests\nfrom pprint import pprint\n\nurl = 'http://webresource.c-ctrip.com/code/cquery/resource/address/flight/flight_new_poi_gb2312.js?CR_2017_07_18_00_00_00'\nresponse = requests.get(url,verify=False)\nstation = re.findall(u'([\\u4e00-\\u9fa5]+)\\(([A-Z]+)\\)', response.text)\nstations = dict(station)\npprint(stations,indent = 4)\n</code></pre></div><p><br></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>2.airline_ticket.py\n#此程序可定出发日期、出发城市、目的城市！（模仿了上一个12306火车订票查询程序）\nimport requests,json,os\nfrom docopt import docopt\nfrom prettytable import PrettyTable\nfrom colorama import init,Fore\nfrom air_stations import stations\n\nfromCity = input('Please input the city you want leave :')\ntoCity = input('Please input the city you will arrive :')\ntripDate = input('Please input the date(Example:2017-09-27) :')\n\ninit()\nclass TrainsCollection:\n    header = '航空公司 航班 机场 时间 机票价格 机场建设费'.split()\n    def __init__(self,airline_tickets):\n        self.airline_tickets = airline_tickets\n\n    @property\n    def plains(self):\n        #航空公司的总表没有找到，但是常见航空公司也不是很多就暂时用这个dict{air_company}来收集！\n        #如果strs没有查询成功，则会返回一个KeyError，表示此dict中未找到目标航空公司，则会用其英文代码显示！\n        air_company = {\"G5\":\"华夏航空\",\"9C\":\"春秋航空\",\"MU\":\"东方航空\",\"NS\":\"河北航空\",\"HU\":\"海南航空\",\"HO\":\"吉祥航空\",\"CZ\":\"南方航空\",\"FM\":\"上海航空\",\"ZH\":\"深圳航空\",\"MF\":\"厦门航空\",\"CA\":\"中国国航\",\"KN\":\"中国联航\"}\n        for item in self.airline_tickets:\n            try:\n                strs = air_company[item['alc']]\n            except KeyError:\n                strs = item['alc']\n            airline_data = [\n            Fore.BLUE + strs + Fore.RESET,\n            Fore.BLUE + item['fn'] + Fore.RESET,\n            '\\n'.join([Fore.YELLOW + item['dpbn'] + Fore.RESET,\n                       Fore.CYAN + item['apbn'] + Fore.RESET]),\n            '\\n'.join([Fore.YELLOW + item['dt'] + Fore.RESET,\n                       Fore.CYAN + item['at'] + Fore.RESET]),\n            item['lp'],\n            item['tax'],\n            ]\n            yield airline_data\n\n    def pretty_print(self):\n        #PrettyTable（）用于在屏幕上将查询到的航班信息表逐行打印到终端\n        pt = PrettyTable()\n        pt._set_field_names(self.header)\n        for airline_data in self.plains:\n            pt.add_row(airline_data)\n        print(pt)\n\ndef doit():\n    headers = {\n        \"Cookie\":\"自定义\",\n        \"User-Agent\": \"自定义\",\n        }\n    arguments = {\n    'from':fromCity,\n    'to':toCity,\n    'date':tripDate\n    }\n    DCity1 = stations[arguments['from']]\n    ACity1 = stations[arguments['to']]\n    DDate1 = arguments['date']\n    url = (\"http://flights.ctrip.com/domesticsearch/search/SearchFirstRouteFlights?DCity1={}&amp;ACity1={}&amp;SearchType=S&amp;DDate1={}\").format(DCity1,ACity1,DDate1)\n    try:\n        r = requests.get(url,headers = headers,verify=False)\n    except:\n        print(\"Some Error shows in requests.get(url)\")\n        exit(0)\n    print(url)\n    airline_tickets = r.json()['fis']\n    TrainsCollection(airline_tickets).pretty_print()\n\nif __name__ == '__main__':\n    doit()\n</code></pre></div><p>其实，此小程序还可以拓展，譬如将查询记录存到本地电脑（txt格式、或者存到数据库里）或者更厉害的还可以设置定时自动查询；还可以设置查询到自动发邮箱提醒；还可以用Python的GUI库将此程序做成桌面软件的形式。。。。</p><hr><a href=\"https://zhuanlan.zhihu.com/p/32983898\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-131b45428844465a26dd3593608095ec_bh.jpg?source=54b3c3a5\" data-image-width=\"1266\" data-image-height=\"737\" class=\"internal\">Lyon：智联Python相关职位的数据分析及可视化-Pandas&amp;amp;Matplotlib篇</a><p>2017-09-12,by—<a href=\"https://link.zhihu.com/?target=http%3A//localhost%3A8080/Lyon/foreviewSingleBlog%3FId%3D12%23\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">阳光流淌</a></p><h2>上一篇，我用了Excel对爬虫采集到的智联招聘数据进行了数据分析及可视化，用到软件是Excel， 这一篇，我们打算完全用Python来做同样的事。用到的库有Pandas、Matplotlib。np、pd、plt分别是numpy、pandas、matplotlib.pyplot的常用缩写。</h2><p>Numpy（Numerical Python的简称）是Python科学计算的基础包。它提供了以下功能：</p><ol><li>快速高效的多维数组对象ndarray。</li><li>用于对数组执行元素级计算以及直接对数组执行数学运算的函数。</li><li>用于读写硬盘上基于数组的数据集的工具。</li><li>线性代数运算、傅里叶变换，以及随机数生成。</li><li>用于将C、C++、Fortran代码集成到Python的工具。</li></ol><p>除了为Python提供快速的数组处理能力，Numpy在数据分析方面还有另外一个主要作用，即作为在算法之间传递数据的容器。对于数值型数据，Numpy数组在存储和处理数据时要比内置的Python数据结构高效的多。此外，由低级语言（比如C和Fortran）编写的库可以直接操作Numpy数组中的数据，无需进行任何数据复制工作。<br></p><p>Pandas这个名字本身源于panel data（面板数据，这是计量经济学中关于多维结构化数据集的一个术语）以及Python data analysis。pandas提供了使我们能够快速便捷地处理结构化数据的大量数据结构和函数。Pandas中用的最多的是DataFrame，它是一个面向列的二维表结构，且含有行标和列标。pandas兼具numpy高性能的数组计算功能以及电子表格和关系型数据库(如SQL)灵活的数据处理功能。它提供了复杂精细的索引功能，以便更为便捷地完成重塑、切片和切块、聚合以及选取数据子集等操作。</p><p>Matplotlib是Python中常用的可视化绘图库，可以通过简单的几行代码生成直方图，功率谱，条形图，错误图，散点图等。Seaborn、ggplot、等诸多Python可视化库均是在此基础上开发的，所以学会matplotlib的基础操作还是很有必要的！它和Ipython结合的很好，提供了一种非常好用的交互式数据绘图环境。绘制的图表也是交互式的，你可以利用绘图窗口中的工具栏放大图表中的某个区域或对整个图表进行平移浏览。</p><h2>数据来源：</h2><p>Python爬虫爬取了智联招聘关键词：【Python】、全国30个主要城市的搜索结果，总职位条数：18326条(行)，其中包括【职位月薪】、【公司链接】、【工作地点】、 【岗位职责描述】等14个字段列，和一个索引列【ZL_Job_id】共计15列。数据存储在本地MySql服务器上，从服务器上导出json格式的文件，再用Python进行数据读取分析和可视化。</p><h2>数据简单清洗：</h2><p>1.首先在终端中打开输入ipython --pylab。在Ipython的shell界面里导入常用的包numpy、pandas、matplotlib.pyplot。用pandas的read_json（）方法读取json文件，并转化为用df命名的DataFrame格式文件。（DataFrame格式是Pandas中非常常用且重要的一种数据存储格式、类似于Mysql和Excel中的表。）</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.read_json('/Users/zhaoluyang/Desktop/Python_全国JSON.json')\n#查看df的信息\ndf.info()\ndf.columns\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f679fb1c4acba7ebdfbd697a9fedcf10_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"884\" data-rawheight=\"789\" class=\"origin_image zh-lightbox-thumb\" width=\"884\" data-original=\"https://pic4.zhimg.com/v2-f679fb1c4acba7ebdfbd697a9fedcf10_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='884'%20height='789'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"884\" data-rawheight=\"789\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"884\" data-original=\"https://pic4.zhimg.com/v2-f679fb1c4acba7ebdfbd697a9fedcf10_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f679fb1c4acba7ebdfbd697a9fedcf10_720w.jpg?source=54b3c3a5\"></figure><p>可以看到读取的df格式文件共有15列，18326行，pandas默认分配了索引值从0~18325。还有一点值得注意的：全部的15列都有18326个非空值，因为当初写爬虫代码时设置了， 如果是空值，譬如：有一条招聘信息其中【福利标签】空着没写，那么就用字符串代替，如“found no element”。</p><p>2.读取JSON文件时pandas默认分配了从0开始的索引，由于文件'ZL_Job_id'列中自带索引，故将其替换!替换后，用sort_index()给索引重新排列。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>df.index = df['ZL_Job_id']#索引列用'ZL_Job_id'列替换。\ndel(df['ZL_Job_id'])#删除原文件中'ZL_Job_id'列。\ndf_sort = df.sort_index()#给索引列重新排序。\ndf = df_sort\ndf[['工作地点','职位月薪']].head(10)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-0b51bca44459f22250c2a25a476cc795_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"492\" data-rawheight=\"286\" class=\"origin_image zh-lightbox-thumb\" width=\"492\" data-original=\"https://pic1.zhimg.com/v2-0b51bca44459f22250c2a25a476cc795_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='492'%20height='286'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"492\" data-rawheight=\"286\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"492\" data-original=\"https://pic1.zhimg.com/v2-0b51bca44459f22250c2a25a476cc795_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-0b51bca44459f22250c2a25a476cc795_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>3.下面，将进行【职位月薪】列的分列操作，新增三列【bottom】、【top】、【average】分别存放最低月薪、最高月薪和平均月薪。 其中try语句执行的是绝大多数情况：职位月薪格式如：8000-10000元/月，为此需要对【职位月薪】列用正则表达式逐个处理，并存放至三个新列中。 处理后bottom = 8000,top = 10000,average = 9000. 其中不同语句用于处理不同的情况，譬如【职位月薪】=‘面议’、‘found no element’等。对于字符形式的‘面议’、‘found no element’ 处理后保持原字符不变，即bottom = top = average = 职位月薪。<br>q1,q2,q3,q4用来统计各个语句执行次数.其中q1统计职位月薪形如‘6000-8000元/月’的次数；q2统计形如月收入‘10000元/月以下’；q3代表其他情况如‘found no element’,‘面议’的次数；q4统计失败的特殊情况。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>import re\ndf['bottom'] = df['top'] = df['average'] = df['职位月薪']\npattern = re.compile('([0-9]+)')\nq1=q2=q3=q4=0\nfor i in range(len(df['职位月薪'])):\n    item = df['职位月薪'].iloc[i].strip()\n    result = re.findall(pattern,item)\n    try:\n        if result:\n            try:\n            #此语句执行成功则表示result[0],result[1]都存在，即职位月薪形如‘6000-8000元/月’\n                df['bottom'].iloc[i],df['top'].iloc[i] = result[0],result[1]\n                df['average'].iloc[i] = str((int(result[0])+int(result[1]))/2)\n                q1+=1\n            except:\n            #此语句执行成功则表示result[0]存在，result[1]不存在，职位月薪形如‘10000元/月以下’\n                df['bottom'].iloc[i] = df['top'].iloc[i] = result[0]\n                df['average'].iloc[i] = str((int(result[0])+int(result[0]))/2)\n                q2+=1\n        else:\n        #此语句执行成功则表示【职位月薪】中并无数字形式存在，可能是‘面议’、‘found no element’\n            df['bottom'].iloc[i] = df['top'].iloc[i] = df['average'].iloc[i] = item\n            q3+=1\n    except Exception as e:\n        q4+=1\n        print(q4,item,repr(e))\nfor i in range(100):#测试一下看看职位月薪和bottom、top是否对的上号\n    print(df.iloc[i][['职位月薪','bottom','top','average']])#或者df[['职位月薪','bottom','top','average']].iloc[i]也可\ndf[['职位月薪','bottom','top','average']].head(10)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-f17c93681d3dfae807893515a395e4f3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"595\" data-rawheight=\"516\" class=\"origin_image zh-lightbox-thumb\" width=\"595\" data-original=\"https://pic1.zhimg.com/v2-f17c93681d3dfae807893515a395e4f3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='595'%20height='516'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"595\" data-rawheight=\"516\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"595\" data-original=\"https://pic1.zhimg.com/v2-f17c93681d3dfae807893515a395e4f3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-f17c93681d3dfae807893515a395e4f3_720w.jpg?source=54b3c3a5\"></figure><p>经过检查，可以发现【职位月薪】和新增的bottom、top、average列是能对的上。其中形如‘6000-8000元/月’的有16905条、形如‘10000元以下’的 有61条、'found no element'和'面议'加起来有1360条，总数18326条，可见是正确的。</p><p>4.进行【工作地点】列的处理，新增【工作城市】列，将工作地点中如‘苏州-姑苏区’、‘苏州-工业园区’等统统转化为‘苏州’存放在【工作城市】列。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>df['工作城市'] = df['工作地点']\npattern2 = re.compile('(.*?)(\\-)')\ndf_city = df['工作地点'].copy()\nfor i in range(len(df_city)):\n    item = df_city.iloc[i].strip()\n    result = re.search(pattern2,item)\n    if result:\n        print(result.group(1).strip())\n        df_city.iloc[i] = result.group(1).strip()\n    else:\n        print(item.strip())\n        df_city.iloc[i] = item.strip()\ndf['工作城市'] = df_city\ndf[['工作地点','工作城市']].head(20)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-fbfd69ce7d8dd39ce8ecf23a2229e654_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"448\" data-rawheight=\"451\" class=\"origin_image zh-lightbox-thumb\" width=\"448\" data-original=\"https://pic1.zhimg.com/v2-fbfd69ce7d8dd39ce8ecf23a2229e654_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='448'%20height='451'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"448\" data-rawheight=\"451\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"448\" data-original=\"https://pic1.zhimg.com/v2-fbfd69ce7d8dd39ce8ecf23a2229e654_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-fbfd69ce7d8dd39ce8ecf23a2229e654_720w.jpg?source=54b3c3a5\"></figure><p>检查一下，没有错误，可以进行下一步的操作了！</p><h2>数据分析和可视化</h2><p>从可读性来看，应该是先进行数据清洗，然后进行分析及可视化，但是实际过程中，往往是交织在一起的， 所有下面让我们一步步来，完成所有的清洗、分析和可视化工作。除了具体的公司和职位名称以外，我们还比较关心几个关键词： 平均月薪、工作经验、工作城市、最低学历和岗位职责描述，这里岗位职责描述以后会用python分词做词云图，所以目前筛选出 【平均月薪】、【工作经验】、【工作城市】、【最低学历】这四个标签，这些标签可以两两组合产生各种数据。譬如我想知道各个城市的招聘数量分布情况， 会不会大部分的工作机会都集中在北上广深？是不是北上广深的平均工资也高于其他城市？我想知道Python这个关键词的18000多条招聘数据中 对学历的要求和对工作经验的要求，以及它们分别占比多少？我还想知道平均月薪和工作经验的关系？最低学历和平均月薪的关系？ 和上一篇（Execel篇）类似，不同的是，这次我们完全用Python实现同样的操作。</p><h2>1.各个城市职位数量及分布</h2><p>根据猜想，北上广深，一定占据了Python这个关键词下大部分的工作机会，会不会符合28定律？20%的城市占据了80%的岗位？ 有可能！我们先用df.工作城市.value_counts()看一下究竟有多少个城市，以及他们各自有多少条工作数据？</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>df.工作城市.value_counts()#等价于df['工作城市'].value_counts()\n#再用count()来看一下统计出来的城市数量\ndf.工作城市.value_counts().count()\ntype(df.工作城市.value_counts())#用type()查看下类型。\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-23cf8b0e216e0a9a96576b371f0a76b6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"448\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb\" width=\"448\" data-original=\"https://pic1.zhimg.com/v2-23cf8b0e216e0a9a96576b371f0a76b6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='448'%20height='578'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"448\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"448\" data-original=\"https://pic1.zhimg.com/v2-23cf8b0e216e0a9a96576b371f0a76b6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-23cf8b0e216e0a9a96576b371f0a76b6_720w.jpg?source=54b3c3a5\"></figure><p>可以看到，明明设置的是搜索30个城市，怎么变成了40？像延边、珲春、白山。。。。是什么鬼？想了一下，这些城市是搜索关键词城市‘吉林市’时，自动冒出来的；还有95个‘found no element’，是这些职位链接本身就没有填写工作城市，为了避免干扰，要把他们统统替换成空值。用df_工作城市 = df['工作城市'].replace（）</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#将原来df['工作城市']列中选定的字段替换成空值nan\ndf_工作城市 = df['工作城市'].replace(['found no element','松原','辽源','珲春','白山','公主岭','白城','延边','四平','通化'],np.nan)\n#查看替换后各个城市职位计数\ndf_工作城市.value_counts()\n#查看替换后城市所包含的职位总数；查看替换后的城市数量，是否等于30.\ndf_工作城市\n#将新的[df_工作城市]列添加到df表中，留作备用\ndf['df_工作城市'] = df_工作城市\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-aceb11ca737a14016048b3f953709d2b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"828\" data-rawheight=\"718\" class=\"origin_image zh-lightbox-thumb\" width=\"828\" data-original=\"https://pic1.zhimg.com/v2-aceb11ca737a14016048b3f953709d2b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='828'%20height='718'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"828\" data-rawheight=\"718\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"828\" data-original=\"https://pic1.zhimg.com/v2-aceb11ca737a14016048b3f953709d2b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-aceb11ca737a14016048b3f953709d2b_720w.jpg?source=54b3c3a5\"></figure><p>看了一下，没有问题，现在df_工作城市中筛选出了30个城市，合计18211条职位数据。 为了数据完整性，df表保持原样，我们用df_工作城市直接操作，进行下一步的可视化。先直接上代码和图，再一一解释下。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>fig1 = plt.figure(1,facecolor = 'black')#设置视图画布1\nax1 = fig1.add_subplot(2,1,1,facecolor='#4f4f4f',alpha=0.3)#在视图1中设置子图1,背景色灰色，透明度0.3(figure.add_subplot 和plt.suplot都行)\nplt.tick_params(colors='white')#设置轴的颜色为白色\ndf_工作城市.value_counts().plot(kind='bar',rot=0,color='#ef9d9a')#画直方图图\n#设置图标题，x和y轴标题\ntitle = plt.title('城市——职位数分布图',fontsize=18,color='yellow')#设置标题\nxlabel = plt.xlabel('城市',fontsize=14,color='yellow')#设置X轴轴标题\nylabel = plt.ylabel('职位数量',fontsize=14,color='yellow')#设置Y轴轴标题\n#设置说明，位置在图的右上角\ntext1 = ax1.text(25,4500,'城市总数:30(个)',fontsize=12, color='cyan')#设置说明，位置在图的右上角\ntext2 = ax1.text(25,4000,'职位总数:18326(条)',fontsize=12, color='cyan')\ntext3 = ax1.text(25,3500,'有效职位:18211(条)',fontsize=12, color='red')\n#添加每一个城市的坐标值\n\nfor i in range(len(list_1)):\n    ax1.text(i-0.3,list_1[i],str(list_1[i]),color='yellow')\n#可以用plt.grid(True)添加栅格线\n#可以用下面语句添加注释箭头。指向上海，xy为坐标值、xytext为注释坐标值，facecolor为箭头颜色。\n#arrow = plt.annotate('职位数:3107', xy=(1,3107), xytext=(3, 4000),color='blue',arrowprops=dict(facecolor='blue', shrink=0.05))\nax2 = fig1.add_subplot(2,1,2)#设置子图2，是位于子图1下面的饼状图\n#为了方便，显示前8个城市的城市名称和比例、其余的不显示，用空字符列表替代，为此需要构造列表label_list和一个空字符列表['']*23。\nx = df_工作城市.value_counts().values#x是数值列表，pie图的比例根据数值占整体的比例而划分\nlabel_list = []#label_list是构造的列表，装的是前8个城市的名称+职位占比。\nfor i in range(8):\n    t = df_工作城市.value_counts().values[i]/df_工作城市.value_counts().sum()*100\n    city = df_工作城市.value_counts().index[i]\n    percent = str('%.1f%%'%t)\n    label_list.append(city+percent)\n#labels参数原本是与数值对应的标签列表，此处30个城市过多，所以只取了前8个城市显示。\n#explode即饼图中分裂的效果explode=（0.1，1，1，。。）表示第一块图片显示为分裂效果\nlabels = label_list + ['']*22\nexplode = tuple([0.1]+[0]*29)\nplt.pie(x,explode=explode,labels=labels,textprops={'color':'yellow'})\n#可加参数autopct='%1.1f%%'来显示饼图中每一块的比例，但是此处30个城市，如果全显示的话会非常拥挤不美观，所以只能手动通过labels参数来构造。\n#若要显示标准圆形，可以添加：plt.axis('equal')\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-131b45428844465a26dd3593608095ec_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1266\" data-rawheight=\"737\" class=\"origin_image zh-lightbox-thumb\" width=\"1266\" data-original=\"https://pic2.zhimg.com/v2-131b45428844465a26dd3593608095ec_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1266'%20height='737'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1266\" data-rawheight=\"737\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1266\" data-original=\"https://pic2.zhimg.com/v2-131b45428844465a26dd3593608095ec_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-131b45428844465a26dd3593608095ec_720w.jpg?source=54b3c3a5\"></figure><p>可以看见，这个曲线下降的弧度还是挺美的，北上深杭广5个城市占据了超过60%以上的职位数。其中北京当之无愧的占据了四分之一的Python工作数量，不愧为帝都。 上海以3107条职位排名第二，可见上海虽然经济超越北京，在互联网环境和工作机遇方面还需努力！深圳作为中国的科技中心，排名第三我是没疑问的，杭州竟然超过广州排名第四！不过也可以想到，阿里巴巴、百草味等等电商产业带动了整个杭州的互联网文化！<br>【北上深杭广】+成都、南京、郑州，这8个城市占据了全国30座城市中，近80%的工作机会！剩下的22个城市合起来只占据了20%，果然，是基本符合28定律的。。。</p><h2>2.工作经验-职位数量及分布</h2><p>Python虽然是一名比较老的语言，但是在人们的印象中火起来也就最近几年，Python相关的工作对于【工作经验】是怎样要求的呢？让我们来看看！</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>df.工作经验.value_counts()#统计【工作经验】下各个字段的累计和\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-51556b31c72f7cd3ef51e5d6341a60dd_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"358\" data-rawheight=\"313\" class=\"content_image\" width=\"358\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='358'%20height='313'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"358\" data-rawheight=\"313\" class=\"content_image lazy\" width=\"358\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-51556b31c72f7cd3ef51e5d6341a60dd_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>可以看见出现了一些很数字少量的字段譬如“5年以上”，“2年以上”，“1-2年”，“1年以上”等，这些标签下职位的数量都在10以内，不太具备统计意义，所以我们作图的时候不想让他们出现，必须筛选掉。 下面我们还是通过同样的步骤来清除掉此类数据。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>= df['工作经验'].replace(['found no element','3年以上','1年以上','5年以上','2年以上','1-2年'],np.nan)\ndf_工作经验.value_counts()\ndf_工作经验.value_counts().sum()\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-d8289e941e3a9ddb13ff92e87081aed5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"814\" data-rawheight=\"353\" class=\"origin_image zh-lightbox-thumb\" width=\"814\" data-original=\"https://pic1.zhimg.com/v2-d8289e941e3a9ddb13ff92e87081aed5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='814'%20height='353'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"814\" data-rawheight=\"353\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"814\" data-original=\"https://pic1.zhimg.com/v2-d8289e941e3a9ddb13ff92e87081aed5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-d8289e941e3a9ddb13ff92e87081aed5_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>现在，可以进行下一步可视化了，还是做2张图：直方图和饼图。通过这两张图可以直观地看到这么多职位中对不同工作经验的要求占比，好做到心里有数！</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>fig2 = plt.figure(2,facecolor = 'black')\nax2_1 = fig2.add_subplot(2,1,1,facecolor='#4f4f4f',alpha=0.3)\nplt.tick_params(colors='white')\ndf_工作经验.value_counts().plot(kind = 'bar',rot = 0,color='#7fc8ff')\ntitle = plt.title('工作经验——职位数分布图',fontsize = 18,color = 'yellow')\nxlabel = plt.xlabel('工作经验',fontsize = 14,color = 'yellow')\nylabel = plt.ylabel('职位数量',fontsize = 14,color = 'yellow')\nplt.grid(True)\ntext1_ = ax2_1.text(5,5600,'城市总数:30(个)',fontsize=12, color='yellow')\ntext2 = ax2_1.text(5,4850,'职位总数:18326(条)',fontsize=12, color='yellow')\ntext3 = ax2_1.text(5,4100,'有效职位:18215(条)',fontsize=12, color='cyan')\n</code></pre></div><p><br></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#设置子图2，是位于子图1下面的饼状图\nax2_2 = fig2.add_subplot(2,1,2)\n#x是数值列表，pie图的比例根据数值占整体的比例而划分\nx2 = df_工作经验.value_counts().values\nlabels = list(df_工作经验.value_counts().index[:5])+ ['']*2\nexplode = tuple([0.1,0.1,0.1,0.1,0.1,0.1,0.1])\nplt.pie(x2,explode=explode,labels=labels,autopct='%1.1f%%',textprops={'color':'yellow'})\nplt.axis('equal')#显示为等比例圆形\n#设置图例，方位为右下角\nlegend = ax2_2.legend(loc='lower right',shadow=True,fontsize=12,edgecolor='cyan')\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-2c9de5eb33d1568467d4529a655cb85c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"740\" class=\"origin_image zh-lightbox-thumb\" width=\"1268\" data-original=\"https://pic1.zhimg.com/v2-2c9de5eb33d1568467d4529a655cb85c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1268'%20height='740'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"740\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1268\" data-original=\"https://pic1.zhimg.com/v2-2c9de5eb33d1568467d4529a655cb85c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-2c9de5eb33d1568467d4529a655cb85c_720w.jpg?source=54b3c3a5\"></figure><p>总共得到18215条职位。从直方图里可以明显看出工作机会集中在'不限'、'1-3年'、'3-5年', 其中工作经验要求3年以下的（【无经验】+【不限】+【1年以下】+【1-3年】）合计11501条职位，占比超过63%，看来即使是初入门者，大家的机会也还是有不少的！ (PS:最后,在df表中添加一列'df_工作经验'，以后筛选时就可以直接用了，df['df_工作经验']=df_工作经验)</p><p><br></p><h2>3.工作经验-平均月薪</h2><p>这个嘛，大家闭着眼都能想到！肯定是工作经验越久的拿钱越多了！再猜猜？无经验的和5-10年经验的收入差距有多大？这个，嘿嘿就不好猜了，让我们来看看吧！</p><p>1.第一步，要想统计工作经验和平均月薪的关系，那么我们先看看df中对应的列df.工作经验和df.average。之前我们构造了一列df_工作经验，把df.工作经验中几个样本容量小于10的值和‘found no element’全筛选掉了，故df_工作经验还能继续使用。现在，让我们看看df.average的信息。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>df.average.value_counts()\n</code></pre></div><p>可以看到，其中有1265个值是‘面议’，有95个值是‘found no element’,这些值需要替换成空值，不然会影响下一步工资的计算。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>df_平均月薪 = df['average'].replace(['面议','found no element'],np.nan)\n</code></pre></div><p>2.好了，第一步的简单数据清洗完成了，我们可以思考下一步了，现在我们想要得到的是不同工作经验字段下的平均月薪</p><p>A. 首先我需要把df_工作经验和df_平均月薪这两列元素放在一起，构造一个DataFrame用于存放df_工作经验和df_平均月薪这两列元素,且方便进一步的groupby操作。<br>B. 其次我需要把df_平均月薪列根据df_工作经验进行分组(用groupby),分组后我可以求得df_工作经验下各个字段的月薪的计数、最大值最小值、累加和、平均值等一系列数据。<br>C. 当然此处我只需要平均值。对分组后的grouped用mean()方法，就可以轻松统计分组内各项的平均值了。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>df3=pd.DataFrame(data={'工作经验':df['df_工作经验'],'平均月薪':df_平均月薪})\ndf3.info()\ngrouped3 = df3['平均月薪'].groupby(df3['工作经验'])\ngrouped3.mean()\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-b1fb6e906acb1b6c0105aea3cbfc01fa_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"566\" data-rawheight=\"349\" class=\"origin_image zh-lightbox-thumb\" width=\"566\" data-original=\"https://pic2.zhimg.com/v2-b1fb6e906acb1b6c0105aea3cbfc01fa_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='566'%20height='349'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"566\" data-rawheight=\"349\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"566\" data-original=\"https://pic2.zhimg.com/v2-b1fb6e906acb1b6c0105aea3cbfc01fa_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-b1fb6e906acb1b6c0105aea3cbfc01fa_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>在进行grouped3.mean()时，我们发现报错了：DataError: No numeric types to aggregate，看一下，原来df_平均月薪列里的值都是字符型str，并不是数值型的float，因为前面的步骤没有做好，留下了这个bug，无奈我们需要对值类型做个转换。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#构造一个listi存放转化后float型的‘平均月薪’\nimport re\npattern = re.compile('([0-9]+)')\nlisti = []\nfor i in range(len(df.average)):\n    item = df.average.iloc[i].strip()\n    result = re.findall(pattern,item)\n    try:\n        if result:\n            listi.append(float(result[0]))\n        elif (item.strip()=='found no element' or item.strip()=='面议'):\n            listi.append(np.nan)\n        else:\n            print(item)\n    except Exception as e:\n        print(item,type(item),repr(e))\n#将df3.平均月薪列替换掉,同时给df新增一列'df_平均月薪'做备用。\ndf3['平均月薪'] = listi\ndf['df_平均月薪'] = df3['平均月薪']\n\n#看看更新后的数据是否正确\ndf3['平均月薪'].value_counts()#统计每个月薪字段的个数\ndf3['平均月薪'][:10]#查看前10个值\ntype(df3['平均月薪'][1])#看看现在月薪的类型是不是浮点型\ndf3['平均月薪'].value_counts().sum()#看看月薪样本总数\ndf3['平均月薪'].mean()#看看这16966个月薪样本的平均值是多少？\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-46e8184cff27310f69820984166bd14c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"457\" data-rawheight=\"438\" class=\"origin_image zh-lightbox-thumb\" width=\"457\" data-original=\"https://pic2.zhimg.com/v2-46e8184cff27310f69820984166bd14c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='457'%20height='438'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"457\" data-rawheight=\"438\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"457\" data-original=\"https://pic2.zhimg.com/v2-46e8184cff27310f69820984166bd14c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-46e8184cff27310f69820984166bd14c_720w.jpg?source=54b3c3a5\"></figure><p>可以看到，替换后的df3['平均月薪']值从str变为了可以计算的float，月薪样本总数16966个，样本的平均月薪14197元。好，现在终于OK了,让我们再回到之前的步骤：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>grouped3 = df3['平均月薪'].groupby(df3['工作经验'])\ngrouped3.mean()\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-9dbc4d79937c68b84a056a42ba96d731_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"583\" data-rawheight=\"252\" class=\"origin_image zh-lightbox-thumb\" width=\"583\" data-original=\"https://pic1.zhimg.com/v2-9dbc4d79937c68b84a056a42ba96d731_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='583'%20height='252'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"583\" data-rawheight=\"252\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"583\" data-original=\"https://pic1.zhimg.com/v2-9dbc4d79937c68b84a056a42ba96d731_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-9dbc4d79937c68b84a056a42ba96d731_720w.jpg?source=54b3c3a5\"></figure><p>好了，完美，格式对了，数据有了，现在可以来画图了！但是再看看，还不是那么完美，数据大小排列很乱，而且小数点那么多。。。好吧，让我们再简单处理下</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#新增一个平均值，即所有非空df3['平均月薪']的平均值\ns3 = pd.Series(data = {'平均值':df3['平均月薪'].mean()})\nresult3 = grouped3.mean().append(s3)\n#sort_values()方法可以对值进行排序，默认按照升序，round（1）表示小数点后保留1位小数。\nresult3.sort_values(ascending=False).round(1)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-b11b6422bf721855ebd440a9589f1f61_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"610\" data-rawheight=\"306\" class=\"origin_image zh-lightbox-thumb\" width=\"610\" data-original=\"https://pic1.zhimg.com/v2-b11b6422bf721855ebd440a9589f1f61_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='610'%20height='306'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"610\" data-rawheight=\"306\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"610\" data-original=\"https://pic1.zhimg.com/v2-b11b6422bf721855ebd440a9589f1f61_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-b11b6422bf721855ebd440a9589f1f61_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>3.数据可视化</p><p>这次我们画一个躺倒的柱状图(barh)，用ggplot的风格来画。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>matplotlib.style.use('ggplot')\nfig3 = plt.figure(3,facecolor = 'black')\nax3 = fig3.add_subplot(1,1,1,facecolor='#4f4f4f',alpha=0.3)\nresult3.sort_values(ascending=False).round(1).plot(kind='barh',rot=0)\n#设置标题、x轴、y轴的标签文本\ntitle = plt.title('工作经验——平均月薪分布图',fontsize = 18,color = 'yellow')\nxlabel= plt.xlabel('平均月薪',fontsize = 14,color = 'yellow')\nylabel = plt.ylabel('工作经验',fontsize = 14,color = 'yellow')\n#添加值标签\nlist3 = result3.sort_values(ascending=False).values\nfor i in range(len(list3)):\n    ax3.text(list3[i],i,str(int(list3[i])),color='yellow')\n#设置标识箭头\narrow = plt.annotate('Python平均月薪:14197元/月', xy=(14197,3.25), xytext=(20000,4.05),color='yellow',fontsize=16,arrowprops=dict(facecolor='cyan', shrink=0.05))\n#设置图例注释（16966来源：df2['平均月薪'].value_counts().sum()）\ntext= ax3.text(27500,6.05,'月薪样本数:16966(个)',fontsize=16, color='cyan')\n#设置轴刻度文字颜色为白色\nplt.tick_params(colors='white')\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-76e10a13ebc5d3d43719e2d046a79940_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1311\" data-rawheight=\"797\" class=\"origin_image zh-lightbox-thumb\" width=\"1311\" data-original=\"https://pic2.zhimg.com/v2-76e10a13ebc5d3d43719e2d046a79940_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1311'%20height='797'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1311\" data-rawheight=\"797\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1311\" data-original=\"https://pic2.zhimg.com/v2-76e10a13ebc5d3d43719e2d046a79940_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-76e10a13ebc5d3d43719e2d046a79940_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>通过图表，我们可以直观地看到，Python关键词下的职位月薪是随着工作经验增长而递增的（这不是说了一句废话么？！囧） 其中【无经验】的平均月薪最低，只有5842，相比之下【10年以上】经验的，平均月薪达到了恐怖的34890，约达到了【无经验】月薪的6倍之多！！！ 【1年以下】的平均月薪7579，还勉强凑合，【1-3年】的已经破万了，达到了近12000元/月的水准。最后让我们看看平均值吧，由于‘被平均’的缘故，16966条月薪样本的均值是14197元，有没有让你满意呢？<br></p><h2>4.工作城市-平均月薪</h2><p>对了，刚才说到北上广深占据了全国大部分的工作机会，那么北上广深的平均月薪如何呢？会不会也碾压小城市？让我们来看看！ 和之前的套路一样，我们还是要构造一个DataFrame，包含两列，一列是【平均月薪】，一列是【工作城市】，然后对df4进行groupby操作，还是很简单的！不过，经过上次的教训，平均月薪一定要是数值型的，str型的计算不了。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#此处df['df_工作城市']是之前经过筛选后的30个城市数据\ndf4=pd.DataFrame(data={'工作城市':df['df_工作城市'],'平均月薪':df['df_平均月薪']})\ndf4.info()\ngrouped4 = df4['平均月薪'].groupby(df4['工作城市'])\ngrouped4.mean()#查看对30个城市分组后，各个城市月薪的平均值\ngrouped4.count().sum()#查看对30个城市分组后筛选出的平均月薪样本数\n\n#新增一个平均值，即所有非空df2['平均月薪']的平均值\ns4 = pd.Series(data = {'平均值':df['df_平均月薪'].mean()})\nresult4 = grouped4.mean().append(s4)\n#sort_values()方法可以对值进行排序，默认按照升序，round（1）表示小数点后保留1位小数。\nresult4.sort_values(ascending=False).round(1)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-3b408c0a6be3e22a1045f3143d5eb71a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"551\" data-rawheight=\"698\" class=\"origin_image zh-lightbox-thumb\" width=\"551\" data-original=\"https://pic1.zhimg.com/v2-3b408c0a6be3e22a1045f3143d5eb71a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='551'%20height='698'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"551\" data-rawheight=\"698\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"551\" data-original=\"https://pic1.zhimg.com/v2-3b408c0a6be3e22a1045f3143d5eb71a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-3b408c0a6be3e22a1045f3143d5eb71a_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-61276711426bda9499b2b3def5d979c4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"619\" data-rawheight=\"706\" class=\"origin_image zh-lightbox-thumb\" width=\"619\" data-original=\"https://pic1.zhimg.com/v2-61276711426bda9499b2b3def5d979c4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='619'%20height='706'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"619\" data-rawheight=\"706\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"619\" data-original=\"https://pic1.zhimg.com/v2-61276711426bda9499b2b3def5d979c4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-61276711426bda9499b2b3def5d979c4_720w.jpg?source=54b3c3a5\"></figure><p>数据构造好了，进行下一步，可视化。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#可以通过style.available查看可用的绘图风格，总有一款适合你\nmatplotlib.style.use('dark_background')\nfig4 = plt.figure(4)\nax4 = fig4.add_subplot(1,1,1)#可选facecolor='#4f4f4f',alpha=0.3，设置子图,背景色灰色，透明度0.3\nresult4.sort_values(ascending=False).round(1).plot(kind='bar',rot=30)#可选color='#ef9d9a'\n#设置图标题，x和y轴标题\ntitle = plt.title(u'城市——平均月薪分布图',fontsize=18,color='yellow')#设置标题\nxlabel = plt.xlabel(u'城市',fontsize=14,color='yellow')#设置X轴轴标题\nylabel = plt.ylabel(u'平均月薪',fontsize=14,color='yellow')#设置Y轴轴标题\n#设置说明，位置在图的右上角\ntext1 = ax4.text(25,16250,u'城市总数:30(个)',fontsize=12, color='#FF00FF')#设置说明，位置在图的右上角\ntext2 = ax4.text(25,15100,u'月薪样本数:16946(条)',fontsize=12, color='#FF00FF')\n#添加每一个城市的坐标值\nlist_4 = result4.sort_values(ascending=False).values\nfor i in range(len(list_4)):\n    ax4.text(i-0.5,list_4[i],int(list_4[i]),color='yellow')\n#设置箭头注释\narrow = plt.annotate(u'全国月薪平均值:14197元/月', xy=(4.5,14197), xytext=(7,15000),color='#9B30FF',fontsize=14,arrowprops=dict(facecolor='#FF00FF', shrink=0.05))\n#设置轴刻度文字颜色为粉色\nplt.tick_params(colors='pink')\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-9027b052c2445b97b12128fea0cdb97f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1310\" data-rawheight=\"820\" class=\"origin_image zh-lightbox-thumb\" width=\"1310\" data-original=\"https://pic2.zhimg.com/v2-9027b052c2445b97b12128fea0cdb97f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1310'%20height='820'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1310\" data-rawheight=\"820\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1310\" data-original=\"https://pic2.zhimg.com/v2-9027b052c2445b97b12128fea0cdb97f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-9027b052c2445b97b12128fea0cdb97f_720w.jpg?source=54b3c3a5\"></figure><p>可以看见，Python这个关键词下，全国16946条样本的月薪平均值为14197元/月，平均月薪排名前5的城市分别是：北京、上海、深圳、杭州、广州。哎，记得之前城市—职位数分布图么？全国30个城市中，职位数排名前5 的也是这5座城市！看来北上广深杭不仅集中了全国大部分的职位数量、连平均工资也是领跑全国的！不禁让人觉得越大越强！但是在超级大城市奋斗，买房总是遥遥无期，房子在中国人的概念里，有着特殊的情节，意味着家，老小妻儿生活的地方，给人一种安全感！我们可以看到还有不少城市的平均月薪也破万了，在这些相对小点的城市中挑一个，工作安家，买房还是有希望的，哈哈！譬如南京、武汉、苏州、大连、厦门都挺好的！</p><p><br></p><h2>5.学历-职位数量</h2><p>直觉来看Python这类工作职位，应该是本科及以上经验要求居多吧？那么工作经验【不限】和【大专】的机会占比多少呢？让我们来看看！ 首先，还是用df['最低学历'].value_counts()来看一下有哪些字段，以及各个字段的统计值。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>df['最低学历'].value_counts()\ndf_最低学历=df['最低学历'].replace(['中技','其他','高中','found no element'],np.nan)\ndf_最低学历.value_counts()\ndf_最低学历.value_counts().sum()\ndf['df_最低学历'] = df_最低学历 #留作备用\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-5a74b7944ec1986f91700a80f0f15bad_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"737\" data-rawheight=\"571\" class=\"origin_image zh-lightbox-thumb\" width=\"737\" data-original=\"https://pic2.zhimg.com/v2-5a74b7944ec1986f91700a80f0f15bad_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='737'%20height='571'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"737\" data-rawheight=\"571\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"737\" data-original=\"https://pic2.zhimg.com/v2-5a74b7944ec1986f91700a80f0f15bad_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-5a74b7944ec1986f91700a80f0f15bad_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>可以看到对于学历要求，最多的集中在大专、本科、硕士、不限还有较少量的博士和中专学历，至于中技、其他、高中则连10个都不到， 对于这些10个都不到的字段，我们还是照旧用replace语句将其排除（并没有歧视低学历的意思啊囧！）<br>可以看到排除后还剩余6个字段，共计18119个职位，下一步，还是来经典的条形分布图和饼图！</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>fig5 = plt.figure(5)\nax5_1 = fig5.add_subplot(2,1,1) #可选facecolor='#4f4f4f',alpha=0.3\ndf_最低学历.value_counts().plot(kind = 'bar',rot=0)   #color='#7fc8ff'\n#设置标题、x轴和y轴标题、图例文字\ntitle = plt.title(u'最低学历——职位数分布图',fontsize = 18,color = 'yellow')\nxlabel = plt.xlabel(u'最低学历',fontsize = 14,color = 'yellow')\nylabel = plt.ylabel(u'职位数量',fontsize = 14,color = 'yellow')\ntext1 = ax5_1.text(4.4,8200,u'职位总数:18119(条)',fontsize=14, color='#B452CD')\n#设置坐标轴的的颜色和文字大小\nplt.tick_params(colors='#9F79EE',labelsize=13)\n#设置坐标值文字\nlist5 = df_最低学历.value_counts().values\nfor i in range(len(list5)):\n    ax5_1.text(i-0.1,list5[i],int(list5[i]),color='yellow')\nax5_2=fig5.add_subplot(2,1,2)\nxl = df_最低学历.value_counts().values\nlabels = list(df_最低学历.value_counts().index)\nexplode = tuple([0.1,0,0,0,0,0])\nplt.pie(xl,explode=explode,labels=labels,autopct='%1.1f%%',textprops={'color':'#B452CD'})\nplt.axis('equal')\nlegend = ax5_2.legend(loc='lower right',shadow=True,fontsize=12,edgecolor='#B452CD')\nplt.tick_params(colors='#9F79EE',labelsize=13)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-0b944931c2d37c12346c89741014fb15_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1279\" data-rawheight=\"757\" class=\"origin_image zh-lightbox-thumb\" width=\"1279\" data-original=\"https://pic2.zhimg.com/v2-0b944931c2d37c12346c89741014fb15_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1279'%20height='757'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1279\" data-rawheight=\"757\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1279\" data-original=\"https://pic2.zhimg.com/v2-0b944931c2d37c12346c89741014fb15_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0b944931c2d37c12346c89741014fb15_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>可见【本科】独占鳌头，占据了超过50%的市场！【不限】和【大专】也合计占比38%不容小觑！看起来，只要技术过硬，学历从来都不是问题！！！作为对比【硕士】占比6%，【博士】更是少到只有1%，果然稀缺到百里挑一！</p><p><br></p><h2>6.最低学历-平均月薪</h2><p>按道理学历越高，平均月薪越高，类似工作经验一样都是正相关，到底是不是呢？来看一下！构造一个DataFrame(df6), 包含两列最低学历和平均月薪，我们直接用之前构造好的df中的【df_最低学历】和【df_平均月薪】即可，然后还是熟悉的groupby(df_最低学历)</p><p><br></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>df6=pd.DataFrame(data={'最低学历':df['df_最低学历'],'平均月薪':df['df_平均月薪']})\ndf6.info()\ngrouped6 = df6['平均月薪'].groupby(df6['最低学历'])\n#查看grouped6的信息\ngrouped6.mean()\ngrouped6.count()\ngrouped6.count().sum()\nmatplotlib.style.use('ggplot')\nfig6 = plt.figure(6,facecolor = 'black')\nax6 = fig6.add_subplot(1,1,1,facecolor='#4f4f4f',alpha=0.3)\ngrouped6.mean().round(1).sort_values().plot(color = 'cyan')#在条形图上叠加一个折线图\ngrouped6.mean().round(1).sort_values().plot(kind='bar',rot=0)\n#设置标题、x轴、y轴的标签文本\ntitle = plt.title(u'最低学历——平均月薪分布图',fontsize = 18,color = 'yellow')\nxlabel= plt.xlabel(u'最低学历',fontsize = 14,color = 'yellow')\nylabel = plt.ylabel(u'平均月薪',fontsize = 14,color = 'yellow')\n#添加值标签(坐标值文字)\nlist6 = grouped6.mean().round(1).sort_values().values\nfor i in range(len(list6)):\n    ax6.text(i-0.1,list6[i],int(list6[i]),color='yellow')\n#设置图例注释\ntext= ax6.text(0,27000,u'月薪样本数:16956(个)',fontsize=16, color='cyan')\n#设置轴刻度的文字颜色\nplt.tick_params(colors='#9F79EE')\n</code></pre></div><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a27a392b508bae3a7c237abc1d64d695_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1300\" data-rawheight=\"795\" class=\"origin_image zh-lightbox-thumb\" width=\"1300\" data-original=\"https://pic2.zhimg.com/v2-a27a392b508bae3a7c237abc1d64d695_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1300'%20height='795'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1300\" data-rawheight=\"795\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1300\" data-original=\"https://pic2.zhimg.com/v2-a27a392b508bae3a7c237abc1d64d695_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a27a392b508bae3a7c237abc1d64d695_720w.jpg?source=54b3c3a5\"></figure><p>平均月薪14139元，可以看到学历越高果然工资越高，博士级别的更是碾压，达到了29562元。只要学历在【大专】以上，那么平均月薪都已经过万了。 BUT，重点来了，学历并不是万能的，一个【中专】学历，有超过5年经验的，工资一定超过【本科】毕业无工作经验的。所以大家看看就好，不要当真，哈哈！</p><p><br></p><h2>7.最低学历-工作经验-平均月薪</h2><p>看了前面的图表，大家都知道了，学历越高平均月薪越高，工作经验越高平均月薪越高，但是我想要看看更细粒度的情形呢？ 譬如我想知道【大学+无经验】和【大学+1-3年】工资的差别，我想看看【大专+3-5年】和【硕士+无经验】工资的对比究竟谁高？ 现在，我不知道，但是接下来让我们把这些情况用图表呈现出来，大家就会一目了然！</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>df7 = pd.DataFrame(data = {'平均月薪':df['df_平均月薪'],'最低学历':df['df_最低学历'],'工作经验':df['df_工作经验']})\ndf7.info()\ngrouped7 = df7['平均月薪'].groupby([df7['最低学历'],df7['工作经验']])\n#查看grouped7的信息\ngrouped7.mean().round(1)\ngrouped7.count()\ngrouped7.count().sum()\n</code></pre></div><p><br></p><p>其实我们输入type(grouped7.mean())，会发现它是一个包含了层次化索引的Series结构。其中第一层索引是【最低学历】 第二层索引是【工作经验】，数值列【平均月薪】被这两层索引所分配！下面我们开始准备可视化，还是画一个bar柱状图，不过这次画的是多列一起呈现的形式，Y轴表示职位月薪、X轴表示最低学历，在每个学历字段下，又分别添加不同工作经验的列！</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>grouped7.mean().round(1)[:,'1-3年']\ngrouped7.mean().round(1)[:,'1-3年'].sort_values()\nxlist = list(grouped7.mean().round(1)[:,'1-3年'].sort_values().index)\ngrouped7.mean().round(1)[:,'1-3年'].reindex(xlist)\nprint(xlist)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-05ec4298f7db3288d314ac319c709f2f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"725\" data-rawheight=\"698\" class=\"origin_image zh-lightbox-thumb\" width=\"725\" data-original=\"https://pic2.zhimg.com/v2-05ec4298f7db3288d314ac319c709f2f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='725'%20height='698'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"725\" data-rawheight=\"698\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"725\" data-original=\"https://pic2.zhimg.com/v2-05ec4298f7db3288d314ac319c709f2f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-05ec4298f7db3288d314ac319c709f2f_720w.jpg?source=54b3c3a5\"></figure><p>grouped7.mean()将会显示各组的平均值，round（1）表示小数点保留1位。[:,'1-3年']是对层次化索引的一种操作，表示选取 grouped7.mean()中索引名字为'工作经验'下'1-3年字段'的所有值。此处构造了列表xlist，值是筛选后的'最低学历'索引， xlist将用于画条形图时X轴坐标的标签文本（表示最低学历），Y轴相对应的是平均月薪。工作经验则用条形图和图例展示。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#开始画图，设置基本参数\nmatplotlib.style.use('dark_background')\nfig7 = plt.figure(7,facecolor = 'black')\nax7 = fig7.add_subplot(1,1,1,facecolor='#4f4f4f',alpha=0.3)\ntitle = plt.title(u'最低学历-工作经验-平均月薪分布图',fontsize = 18,color = 'yellow')\nxlabel = plt.xlabel(u'最低学历',fontsize = 14,color = 'yellow')\nylabel = plt.ylabel(u'平均月薪',fontsize = 14,color = 'yellow')\nplt.tick_params(colors='cyan')\n\n#ylist1~7分别是7种条形图的Y值列表\nylist1 = grouped7.mean().round(1)[:,'无经验'].reindex(xlist).values\nylist2 = grouped7.mean().round(1)[:,'1年以下'].reindex(xlist).values\nylist3 = grouped7.mean().round(1)[:,'不限'].reindex(xlist).values\nylist4 = grouped7.mean().round(1)[:,'1-3年'].reindex(xlist).values\nylist5 = grouped7.mean().round(1)[:,'3-5年'].reindex(xlist).values\nylist6 = grouped7.mean().round(1)[:,'5-10年'].reindex(xlist).values\nylist7 = grouped7.mean().round(1)[:,'10年以上'].reindex(xlist).values\n\n#img1~img7分别表示7种条形图\nind = np.arange(6)#ind为x轴宽度，用numpy的array形式表示\nwidth = 0.1#条形图的宽度，要合理设置否则太宽会摆不下\nimg1 = ax7.bar(ind,ylist1,width)\nimg2 = ax7.bar(ind+width,ylist2,width)\nimg3 = ax7.bar(ind+width*2,ylist3,width)\nimg4 = ax7.bar(ind+width*3,ylist4,width)\nimg5 = ax7.bar(ind+width*4,ylist5,width)\nimg6 = ax7.bar(ind+width*5,ylist6,width)\nimg7 = ax7.bar(ind+width*6,ylist7,width)\n\n#设置X轴文本和位置调整\nax7.set_xticklabels(xlist)\nax7.set_xticks(ind + width / 2)\n#设置文字说明\ntext1 = ax7.text(4.05,52100,u'数据来源:智联招聘',fontsize=13, color='#9F79EE')\ntext2 = ax7.text(4.05,50200,u'职位关键词：Python',fontsize=13, color='#9F79EE')\ntext3 = ax7.text(4.05,48200,u'工作城市:全国30座城市',fontsize=13, color='#9F79EE')\ntext4 = ax7.text(4.05,46200,u'职位数量:共计16956(条)',fontsize=13, color='#9F79EE')\n#设置图例\nax7.legend((img1[0],img2[0],img3[0],img4[0],img5[0],img6[0],img7[0]), (u'无经验',u'1年以下',u'不限',u'1-3年',u'3-5年',u'5-10年',u'10年以上'),fontsize=13,facecolor='black')\n#设置栅格\nplt.grid(True)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f588699654518cc8de7c45e17d02a712_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"783\" class=\"origin_image zh-lightbox-thumb\" width=\"1269\" data-original=\"https://pic2.zhimg.com/v2-f588699654518cc8de7c45e17d02a712_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1269'%20height='783'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"783\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1269\" data-original=\"https://pic2.zhimg.com/v2-f588699654518cc8de7c45e17d02a712_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f588699654518cc8de7c45e17d02a712_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>最后，上一张简单词云图给大家看看，用的BDP傻瓜式制作，看看就好！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-e8e60c90a2bb211ea2ed026bda0e2a31_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1150\" data-rawheight=\"1032\" class=\"origin_image zh-lightbox-thumb\" width=\"1150\" data-original=\"https://pic2.zhimg.com/v2-e8e60c90a2bb211ea2ed026bda0e2a31_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1150'%20height='1032'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1150\" data-rawheight=\"1032\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1150\" data-original=\"https://pic2.zhimg.com/v2-e8e60c90a2bb211ea2ed026bda0e2a31_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e8e60c90a2bb211ea2ed026bda0e2a31_720w.jpg?source=54b3c3a5\"></figure><p>其实展开了还可以分析的东西有不少，譬如Pandas、Matplotlib的用法，譬如更多维度的分析和两两组合！ 好了，整体的先暂时分析到这，总结一下呢就是：Python+工作经验+学历+大城市 = 高薪！但是，工作经验、学历和城市其实并没那么重要， 关键要看自己的Python用的6不6，关键在于你知道自己想做什么，知道自己能做什么，知道自己做出了什么！哈哈，当你知道越来越接近这些问题的答案呢，那么我相信，薪水对你来说已经不那么重要了!（当然，高薪是必须有的！） 人生苦短，我用Python！</p><hr><p>最后，插播一条小广告：</p><p>创建了Python、Java的专栏：</p><a href=\"https://zhuanlan.zhihu.com/c_156565597\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-3fab0055722ffb5698267b972aaf16f7_l.jpg?source=54b3c3a5\" data-image-width=\"200\" data-image-height=\"200\" class=\"internal\">Java、Python和数据分析</a><a href=\"https://zhuanlan.zhihu.com/c_156948338\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-55598da8823ae59981c4e6260a5a1b8e_l.jpg?source=54b3c3a5\" data-image-width=\"191\" data-image-height=\"192\" class=\"internal\">Java从入门到实践</a><p><br></p><p>欢迎Python和Java爱好者、初学者关注，一起学习共同进步~</p>", "学习python中的pandas有没有好的教程推荐？": "<p><b>上来就丢教程和资料，其实是把路带偏了！找到学习Pandas的方法比找教程重要的多！</b>现在无论是学习Python还是Pandas，最大的问题不是没有资料，而恰恰是太多资料和教程，让人抓不住头绪。</p><p>很多凭着兴趣入坑的同学（当年的我），能够很快熟悉Python基础语法，然后不约而同的一头扎进《利用Python进行数据分析》这本经典之中，硬着头皮啃完之后，好像自己什么都会了一点，然而实际操作起来既不知从何操起，又漏洞百出。</p><p><b>理解不够，实践不够是两条老牌的拦路虎</b>，只能靠投入更多精力来克服，还有一个非常有意思且经常被忽视的因素——<b>陷入举三反一的懵逼状态</b>。</p><p>举个例子：假如我是个旱鸭子，想去学游泳，教练很认真的给我剖析了蛙泳的动作，扶着我的腰让我在水里划拉了5分钟，接着马上给我讲解了蝶泳，又是划拉了5分钟，然后又硬塞给我潜泳的姿势，依然是划拉5分钟。最后，教练一下子把我丢进踩不到底的泳池，给我呐喊助威。</p><p>作为一个还没入门的旱鸭子，教练倾囊授了我3种游泳技巧，让我分别实践了5分钟。这样做的结果就是我哪一种游泳技巧也没学会，只学会了喝水。<b>当一个初学者一开始就陷入针对单个问题的多种解决方法，而每一种方法的实践又浅尝辄止，在面对具体问题时往往会手忙脚乱。</b></p><p>拿Pandas来说，它的多种构造方式，多种索引方式以及类似效果的多种实现方法，很容易把初学者打入举三反一的懵逼状态，导致不少同学在实践中痛苦挣扎，甚至重新捡起Excel。</p><p>痛定思痛，我结合自己踩过的坑，写了一个<b>Pandas基础系列（4篇，由浅入深）</b>，通过梳理和精简知识点的方式，避掉初学所遇到的坑，同时，<b>还更新了3个实战案例，并会附上数据集和每一步操作代码，以最大限度的提供知行合一的实战场景。</b>让新入坑的同学，跟着撸完之后，彻底上手Pandas，同时还收获一些数据分析思维。</p><p><b>所有文章、数据集和代码</b>都首发于<b>公众号“数据不吹牛”</b>，下面是对教程的一个整理：</p><p><b>Python数据分析之Pandas——基础篇</b></p><p>    1. <u><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzU5Mjg2OTQ1MA%3D%3D%26mid%3D2247484097%26idx%3D1%26sn%3Dad8fabbd84bf67655996026fc0ac5688%26chksm%3Dfe1863e4c96feaf200e9398bb7c824e99d3fc01ec965666497ce584466dc93f83dd5d127a46d%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python数据分析实战 | 初识Pandas</a></u>   <a href=\"https://zhuanlan.zhihu.com/p/81355345\" class=\"internal\">备用链接</a></p><p>    2. <u><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzU5Mjg2OTQ1MA%3D%3D%26mid%3D2247484131%26idx%3D1%26sn%3D137286d36c707e10bbc761681a666654%26chksm%3Dfe1863c6c96fead0e7b2ab9af2db28f0c26df2b878eb66930e69f23bdc611b7f34cadb0b7d50%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python数据分析实战 | 灵活的Pandas索引</a></u>  <a href=\"https://zhuanlan.zhihu.com/p/85243063\" class=\"internal\">备用链接</a></p><p>    3. <u><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzU5Mjg2OTQ1MA%3D%3D%26mid%3D2247484160%26idx%3D1%26sn%3Dc1ed435f441c2b53751fec3558e7edee%26chksm%3Dfe186225c96feb330e129a47ff979301f6dcdc042ce24fa7b23f61e21d6c13a30e25d00f469d%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python数据分析实战 | 清洗常用4板斧</a></u>  <a href=\"https://zhuanlan.zhihu.com/p/85515689\" class=\"internal\">备用链接</a></p><p>    4. <u><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzU5Mjg2OTQ1MA%3D%3D%26mid%3D2247484179%26idx%3D1%26sn%3De84c5fead658438b7dde1d6e056db084%26chksm%3Dfe186236c96feb20c892d5b00c7b54333f098f62485b577c510033aab20009560ca073abdf39%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Pandas中第二好用的函数 | 优雅的apply</a></u>  <a href=\"https://zhuanlan.zhihu.com/p/85664908\" class=\"internal\">备用链接</a></p><p><br></p><p><b>Python数据分析之Pandas——实战篇</b></p><p>  1. <u><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzU5Mjg2OTQ1MA%3D%3D%26mid%3D2247484211%26idx%3D1%26sn%3D3635f3e3f45cc900a2c17558e78cf099%26chksm%3Dfe186216c96feb00adf96094ca2ba098733bd99d5aaef6ac5bae306ad825fd61e49503dac8af%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据分析必知必会 | TGI指数分析实战</a></u>  <a href=\"https://zhuanlan.zhihu.com/p/86190156\" class=\"internal\">备用链接</a></p><p>  2. <u><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzU5Mjg2OTQ1MA%3D%3D%26mid%3D2247484235%26idx%3D1%26sn%3D169889e9174d92c06320254554e6fb8b%26chksm%3Dfe18626ec96feb781f7b8d365271683b58d91bdd039af0b8729b0ce3191caf429f046496bcd5%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python处理分析128张Excel表格不到3秒？</a></u> <a href=\"https://zhuanlan.zhihu.com/p/87034138\" class=\"internal\">备用链接</a></p><p>  3. <u><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzU5Mjg2OTQ1MA%3D%3D%26mid%3D2247484281%26idx%3D1%26sn%3D03706ac68d4ec2464c5bd04965e27896%26chksm%3Dfe18625cc96feb4af2301b0b1afd0a5ff678a60d06176c9f6d17c6e9a802ad1206b3cb82e448%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">不到70行Python代码，玩转RFM用户分析模型</a></u>  <a href=\"https://zhuanlan.zhihu.com/p/88690870\" class=\"internal\">备用链接</a></p><p>  4.<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/PWvdBvuFCW1EfSArmU1GNQ\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python数据分析实战 | 经典的同期群分析</a>  </p><p>还有更多数分案例，仍在持续更新ing</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-38bb1a95e0d6c741a68edee7e431edd7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"306\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2df23a809c9ff6aa37ccf038e15c785b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-38bb1a95e0d6c741a68edee7e431edd7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='306'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"306\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2df23a809c9ff6aa37ccf038e15c785b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-38bb1a95e0d6c741a68edee7e431edd7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-38bb1a95e0d6c741a68edee7e431edd7_720w.jpg?source=54b3c3a5\"></figure><p></p>", "有哪些网站用爬虫爬取能得到很有价值的数据？": "这个问题蛮适合我这种老爬虫来回答。<br><br><b>0、IT桔子和36Kr</b><br>在专栏文章中（<a href=\"http://zhuanlan.zhihu.com/p/20714713\" class=\"internal\"><span class=\"invisible\">http://</span><span class=\"visible\">zhuanlan.zhihu.com/p/20</span><span class=\"invisible\">714713</span><span class=\"ellipsis\"></span></a>），抓取IT橘子和36Kr的各公司的投融资数据，试图分析中国各家基金之间的互动关系。<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/a9f1d74191bccdd7561361865edc4a94_720w.jpg?source=54b3c3a5\" class=\"content_image\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='0'%20height='0'&gt;&lt;/svg&gt;\" class=\"content_image lazy\" data-actualsrc=\"https://pic4.zhimg.com/50/a9f1d74191bccdd7561361865edc4a94_720w.jpg?source=54b3c3a5\"></figure><br><figure><noscript><img src=\"https://pic1.zhimg.com/50/a2deb2bcd1d9460fb5af12c7e30857ca_720w.png?source=54b3c3a5\" class=\"content_image\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='0'%20height='0'&gt;&lt;/svg&gt;\" class=\"content_image lazy\" data-actualsrc=\"https://pic1.zhimg.com/50/a2deb2bcd1d9460fb5af12c7e30857ca_720w.png?source=54b3c3a5\"></figure><br><b>1、知乎</b><br><a href=\"http://zhuanlan.zhihu.com/hemingke/20559922\" class=\"internal\">沧海横流，看行业起伏（2015年） - 数据冰山 - 知乎专栏</a>，抓取并汇总所有的答案，方便大家阅读，找出2015年最热门和最衰落的行业<br><figure><noscript><img src=\"https://pic3.zhimg.com/50/4cd39c827e666b84cbd24c79f7ace246_720w.png?source=54b3c3a5\" data-rawwidth=\"734\" data-rawheight=\"378\" class=\"origin_image zh-lightbox-thumb\" width=\"734\" data-original=\"https://pic2.zhimg.com/4cd39c827e666b84cbd24c79f7ace246_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='734'%20height='378'&gt;&lt;/svg&gt;\" data-rawwidth=\"734\" data-rawheight=\"378\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"734\" data-original=\"https://pic2.zhimg.com/4cd39c827e666b84cbd24c79f7ace246_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/4cd39c827e666b84cbd24c79f7ace246_720w.png?source=54b3c3a5\"></figure>有空的时候，准备写爬虫分析知乎的关系链。<br><br><b>2、汽车之家</b><br><a href=\"http://zhuanlan.zhihu.com/hemingke/20573253\" class=\"internal\">大数据画像：宝马车主究竟有多任性？ - 数据冰山 - 知乎专栏</a>，利用论坛发言的抓取以及NLP，对各种车型的车主做画像。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/1824a7d2a09c6f0de7e41e9b2c549450_720w.png?source=54b3c3a5\" data-rawwidth=\"786\" data-rawheight=\"295\" class=\"origin_image zh-lightbox-thumb\" width=\"786\" data-original=\"https://pic4.zhimg.com/1824a7d2a09c6f0de7e41e9b2c549450_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='786'%20height='295'&gt;&lt;/svg&gt;\" data-rawwidth=\"786\" data-rawheight=\"295\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"786\" data-original=\"https://pic4.zhimg.com/1824a7d2a09c6f0de7e41e9b2c549450_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/1824a7d2a09c6f0de7e41e9b2c549450_720w.png?source=54b3c3a5\"></figure><br><b>3、天猫、京东、淘宝等电商网站</b><br><a href=\"http://zhuanlan.zhihu.com/hemingke/20583037\" class=\"internal\">超越咨询顾问的算力，在用户理解和维护：大数据改变管理咨询（三） - 数据冰山 - 知乎专栏</a>，抓取各大电商的评论及销量数据，对各种商品（颗粒度可到款式）沿时间序列的销量以及用户的消费场景进行分析。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/795341959247dec67f28a5d23521acc2_720w.png?source=54b3c3a5\" data-rawwidth=\"907\" data-rawheight=\"227\" class=\"origin_image zh-lightbox-thumb\" width=\"907\" data-original=\"https://pic2.zhimg.com/795341959247dec67f28a5d23521acc2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='907'%20height='227'&gt;&lt;/svg&gt;\" data-rawwidth=\"907\" data-rawheight=\"227\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"907\" data-original=\"https://pic2.zhimg.com/795341959247dec67f28a5d23521acc2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/795341959247dec67f28a5d23521acc2_720w.png?source=54b3c3a5\"></figure><br>甚至还可以根据用户评价做情感分析，实时监控产品在消费者心目中的形象，对新发布的产品及时监控，以便调整策略。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/23ac5cfac6ec090332d21f034fa62b79_720w.png?source=54b3c3a5\" data-rawwidth=\"897\" data-rawheight=\"235\" class=\"origin_image zh-lightbox-thumb\" width=\"897\" data-original=\"https://pic1.zhimg.com/23ac5cfac6ec090332d21f034fa62b79_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='897'%20height='235'&gt;&lt;/svg&gt;\" data-rawwidth=\"897\" data-rawheight=\"235\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"897\" data-original=\"https://pic1.zhimg.com/23ac5cfac6ec090332d21f034fa62b79_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/23ac5cfac6ec090332d21f034fa62b79_720w.png?source=54b3c3a5\"></figure><br><b>4、58同城的房产、安居客、Q房网、搜房等房产网站</b><br><a href=\"http://zhuanlan.zhihu.com/hemingke/20135185\" class=\"internal\">下半年深圳房价将如何发展 - 数据冰山 - 知乎专栏</a>，抓取房产买卖及租售信息，对热热闹闹的房价问题进行分析。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/1bc654e9bb342d4eb641ffbbefd8ff5c_720w.png?source=54b3c3a5\" data-rawwidth=\"966\" data-rawheight=\"280\" class=\"origin_image zh-lightbox-thumb\" width=\"966\" data-original=\"https://pic3.zhimg.com/1bc654e9bb342d4eb641ffbbefd8ff5c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='966'%20height='280'&gt;&lt;/svg&gt;\" data-rawwidth=\"966\" data-rawheight=\"280\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"966\" data-original=\"https://pic3.zhimg.com/1bc654e9bb342d4eb641ffbbefd8ff5c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/1bc654e9bb342d4eb641ffbbefd8ff5c_720w.png?source=54b3c3a5\"></figure><br><b>5、大众点评、美团网等餐饮及消费类网站</b><br><a href=\"https://www.zhihu.com/question/24331936/answer/48616123\" class=\"internal\">黄焖鸡米饭是怎么火起来的？ - 何明科的回答</a>，抓取各种店面的开业情况以及用户消费和评价，了解周边变化的口味，所谓是“舌尖上的爬虫”。<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/f33c64adb95db5c74d333b6b3dd9d943_720w.png?source=54b3c3a5\" data-rawwidth=\"915\" data-rawheight=\"312\" class=\"origin_image zh-lightbox-thumb\" width=\"915\" data-original=\"https://pic1.zhimg.com/f33c64adb95db5c74d333b6b3dd9d943_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='915'%20height='312'&gt;&lt;/svg&gt;\" data-rawwidth=\"915\" data-rawheight=\"312\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"915\" data-original=\"https://pic1.zhimg.com/f33c64adb95db5c74d333b6b3dd9d943_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/f33c64adb95db5c74d333b6b3dd9d943_720w.png?source=54b3c3a5\"></figure><br>以及各种变化的口味，比如：啤酒在衰退，重庆小面在崛起。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/2537161e142a6653fb0e1a87e8b9b7c6_720w.png?source=54b3c3a5\" data-rawwidth=\"789\" data-rawheight=\"239\" class=\"origin_image zh-lightbox-thumb\" width=\"789\" data-original=\"https://pic2.zhimg.com/2537161e142a6653fb0e1a87e8b9b7c6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='789'%20height='239'&gt;&lt;/svg&gt;\" data-rawwidth=\"789\" data-rawheight=\"239\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"789\" data-original=\"https://pic2.zhimg.com/2537161e142a6653fb0e1a87e8b9b7c6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/2537161e142a6653fb0e1a87e8b9b7c6_720w.png?source=54b3c3a5\"></figure><br><b>6、58同城等分类信息网站</b><br><a href=\"https://www.zhihu.com/question/39843548/answer/83532516\" class=\"internal\">花10万买贡茶配方，贵不贵？ - 何明科的回答</a>，抓取招商加盟的数据，对定价进行分析，帮助网友解惑。<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/a27ef823e193757105f0ba15810a13ca_720w.png?source=54b3c3a5\" data-rawwidth=\"600\" data-rawheight=\"423\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/a27ef823e193757105f0ba15810a13ca_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='423'&gt;&lt;/svg&gt;\" data-rawwidth=\"600\" data-rawheight=\"423\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/a27ef823e193757105f0ba15810a13ca_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/a27ef823e193757105f0ba15810a13ca_720w.png?source=54b3c3a5\"></figure><br><b>7、拉勾网、中华英才网等招聘网站</b><br><a href=\"http://zhuanlan.zhihu.com/hemingke/20217862\" class=\"internal\">互联网行业哪个职位比较有前途？ - 数据冰山 - 知乎专栏</a>，抓取各类职位信息，分析最热门的职位以及薪水。<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/d0210ef45481a726f27c345b2ebeee7b_720w.png?source=54b3c3a5\" data-rawwidth=\"828\" data-rawheight=\"250\" class=\"origin_image zh-lightbox-thumb\" width=\"828\" data-original=\"https://pic1.zhimg.com/d0210ef45481a726f27c345b2ebeee7b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='828'%20height='250'&gt;&lt;/svg&gt;\" data-rawwidth=\"828\" data-rawheight=\"250\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"828\" data-original=\"https://pic1.zhimg.com/d0210ef45481a726f27c345b2ebeee7b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/d0210ef45481a726f27c345b2ebeee7b_720w.png?source=54b3c3a5\"></figure><br><b>8、挂号网等医疗信息网站</b><br><a href=\"https://www.zhihu.com/question/25564657/answer/44862007\" class=\"internal\">如何评价挂号网？ - 何明科的回答</a>，抓取医生信息并于宏观情况进行交叉对比。<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/c0f56f7a0b24ea0883a049a4937948fb_720w.png?source=54b3c3a5\" data-rawwidth=\"907\" data-rawheight=\"273\" class=\"origin_image zh-lightbox-thumb\" width=\"907\" data-original=\"https://pic4.zhimg.com/c0f56f7a0b24ea0883a049a4937948fb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='907'%20height='273'&gt;&lt;/svg&gt;\" data-rawwidth=\"907\" data-rawheight=\"273\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"907\" data-original=\"https://pic4.zhimg.com/c0f56f7a0b24ea0883a049a4937948fb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/c0f56f7a0b24ea0883a049a4937948fb_720w.png?source=54b3c3a5\"></figure><br><b>9、应用宝等App市场</b><br><a href=\"https://www.zhihu.com/question/28975391/answer/82797746\" class=\"internal\">你用 Python 做过什么有趣的数据挖掘/分析项目？ - 何明科的回答</a>，对各个App的发展情况进行跟踪及预测。（顺便吹一下牛，我们这个榜单很早就发现小红书App的快速增长趋势以及在年轻人中的极佳口碑）<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/8bd72ca1d34a859c8e373b028924a503_720w.png?source=54b3c3a5\" data-rawwidth=\"705\" data-rawheight=\"227\" class=\"origin_image zh-lightbox-thumb\" width=\"705\" data-original=\"https://pic1.zhimg.com/8bd72ca1d34a859c8e373b028924a503_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='705'%20height='227'&gt;&lt;/svg&gt;\" data-rawwidth=\"705\" data-rawheight=\"227\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"705\" data-original=\"https://pic1.zhimg.com/8bd72ca1d34a859c8e373b028924a503_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/8bd72ca1d34a859c8e373b028924a503_720w.png?source=54b3c3a5\"></figure><br><b>10、携程、去哪儿及12306等交通出行类网站</b><br><a href=\"https://www.zhihu.com/question/28975391/answer/82797746\" class=\"internal\">你用 Python 做过什么有趣的数据挖掘/分析项目？ - 何明科的回答</a>，对航班及高铁等信息进行抓取，能从一个侧面反映经济是否正在走入下行通道。<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/096b0c891066885a2476a3bbe71fe600_720w.png?source=54b3c3a5\" data-rawwidth=\"600\" data-rawheight=\"375\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/096b0c891066885a2476a3bbe71fe600_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='375'&gt;&lt;/svg&gt;\" data-rawwidth=\"600\" data-rawheight=\"375\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic4.zhimg.com/096b0c891066885a2476a3bbe71fe600_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/096b0c891066885a2476a3bbe71fe600_720w.png?source=54b3c3a5\"></figure><br><b>11、雪球等财经类网站</b><br>抓取雪球KOL或者高回报用户的行为，找出推荐股票<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/c56146509995cf4462f4c3a9c803c52d_720w.png?source=54b3c3a5\" data-rawwidth=\"847\" data-rawheight=\"629\" class=\"origin_image zh-lightbox-thumb\" width=\"847\" data-original=\"https://pic2.zhimg.com/c56146509995cf4462f4c3a9c803c52d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='847'%20height='629'&gt;&lt;/svg&gt;\" data-rawwidth=\"847\" data-rawheight=\"629\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"847\" data-original=\"https://pic2.zhimg.com/c56146509995cf4462f4c3a9c803c52d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/c56146509995cf4462f4c3a9c803c52d_720w.png?source=54b3c3a5\"></figure><br><b>12、58同城二手车、易车等汽车类网站</b><br><a href=\"https://www.zhihu.com/question/30086195/answer/47825568\" class=\"internal\">一年当中买车的最佳时间为何时？ - 何明科的回答</a>和<a href=\"https://www.zhihu.com/question/20931757\" class=\"internal\">什么品牌或者型号的二手车残值高？更保值？反之，什么类型的贬值较快？ - 二手车</a>，找出最佳的买车时间以及最保值的汽车。<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/62c0985c92b1ae96ee4c1a71b3cba7aa_720w.png?source=54b3c3a5\" data-rawwidth=\"767\" data-rawheight=\"280\" class=\"origin_image zh-lightbox-thumb\" width=\"767\" data-original=\"https://pic1.zhimg.com/62c0985c92b1ae96ee4c1a71b3cba7aa_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='767'%20height='280'&gt;&lt;/svg&gt;\" data-rawwidth=\"767\" data-rawheight=\"280\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"767\" data-original=\"https://pic1.zhimg.com/62c0985c92b1ae96ee4c1a71b3cba7aa_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/62c0985c92b1ae96ee4c1a71b3cba7aa_720w.png?source=54b3c3a5\"></figure><br><b>13、神州租车、一嗨租车等租车类网站</b><br>抓取它们列举出来的租车信息，长期跟踪租车价格及数量等信息<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/14e6016cc914c05d690455c7d8948a87_720w.png?source=54b3c3a5\" data-rawwidth=\"1257\" data-rawheight=\"371\" class=\"origin_image zh-lightbox-thumb\" width=\"1257\" data-original=\"https://pic3.zhimg.com/14e6016cc914c05d690455c7d8948a87_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1257'%20height='371'&gt;&lt;/svg&gt;\" data-rawwidth=\"1257\" data-rawheight=\"371\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1257\" data-original=\"https://pic3.zhimg.com/14e6016cc914c05d690455c7d8948a87_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/14e6016cc914c05d690455c7d8948a87_720w.png?source=54b3c3a5\"></figure><br><b>14、各类信托网站</b><br>通过抓取信托的数据，了解信托项目的类型及规模<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/c48f749a00a522c8490dac54fa92f5a2_720w.png?source=54b3c3a5\" data-rawwidth=\"1283\" data-rawheight=\"601\" class=\"origin_image zh-lightbox-thumb\" width=\"1283\" data-original=\"https://pic1.zhimg.com/c48f749a00a522c8490dac54fa92f5a2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1283'%20height='601'&gt;&lt;/svg&gt;\" data-rawwidth=\"1283\" data-rawheight=\"601\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1283\" data-original=\"https://pic1.zhimg.com/c48f749a00a522c8490dac54fa92f5a2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/c48f749a00a522c8490dac54fa92f5a2_720w.png?source=54b3c3a5\"></figure><br><br>其实还有很多数据，不一一列举了。只要有爱数据的心和能爬的虫子，一切且有可能。顺利安利一下，抓取数据只是很小一部分，我们更擅长的是数据分析挖掘、可视化以及个性化的推荐。<br>————————————————————<br>更多文章关注我的专栏：<a href=\"http://zhuanlan.zhihu.com/hemingke\" class=\"internal\">数据冰山 - 知乎专栏</a>"}{"GitHub 上有哪些，简单、易学的 Python 项目？": "<p>最顶级的项目还能让你看的非常爽！我帮你整理了一批堪称「镇站之宝」的优秀项目！<br><b>GitHub上有很多哪怕刚学编程都可以用的很开心的项目</b>，比如：让cxk来教你打篮球、对联之王、键盘钢琴家、斗图霸主项目、P站logo等等10来个！居然还拿了7万星！<br><br>我敢保证看完下面的几个项目，你收藏夹一定会多几个网址，越用越开心，用完之后高呼“GitHub大法好”、“女装才是正义！”~</p><p>毕竟我曾经每天都要和程序猿/媛打交道，GitHub那是每天必刷。这次我先给大家10个不懂编程、不是程序员也能用，并且越用越爽的项目~，后面20个学Python必用的项目，简单好实现，练手神器！</p><h2><br>一、镇站之宝：Dress。</h2><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-feed70040742910fceb48abc2bd349cf_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"579\" data-rawheight=\"532\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-57d44a91d57d9f5f75fc6ce1d57f616f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"579\" data-original=\"https://pic3.zhimg.com/v2-feed70040742910fceb48abc2bd349cf_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='579'%20height='532'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"579\" data-rawheight=\"532\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-57d44a91d57d9f5f75fc6ce1d57f616f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"579\" data-original=\"https://pic3.zhimg.com/v2-feed70040742910fceb48abc2bd349cf_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-feed70040742910fceb48abc2bd349cf_720w.jpg?source=54b3c3a5\"></figure><p>总所周知，GitHub是程序员分享技术、同性交友、女装的圣地。<br>毕竟自学编程太苦了，不如~</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-d24ee4876d14435659b40c37b2e299d3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"198\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic4.zhimg.com/v2-d24ee4876d14435659b40c37b2e299d3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='198'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"198\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic4.zhimg.com/v2-d24ee4876d14435659b40c37b2e299d3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-d24ee4876d14435659b40c37b2e299d3_720w.jpg?source=54b3c3a5\"></figure><p>我随便从这个项目中里面给大家截两张图，让你们感受一下女装大佬的威力~<br></p><figure data-size=\"small\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-15c98fa6aee7d1b6936fb6097bf7bec7_720w.jpg?source=54b3c3a5\" data-size=\"small\" data-rawwidth=\"2250\" data-rawheight=\"4295\" class=\"origin_image zh-lightbox-thumb\" width=\"2250\" data-original=\"https://pic1.zhimg.com/v2-15c98fa6aee7d1b6936fb6097bf7bec7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2250'%20height='4295'&gt;&lt;/svg&gt;\" data-size=\"small\" data-rawwidth=\"2250\" data-rawheight=\"4295\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2250\" data-original=\"https://pic1.zhimg.com/v2-15c98fa6aee7d1b6936fb6097bf7bec7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-15c98fa6aee7d1b6936fb6097bf7bec7_720w.jpg?source=54b3c3a5\"><figcaption>建议双手打字评论，以证清白</figcaption></figure><p>（老板要是发现我上班时间在看这张图片，一定会锤死我吧……）</p><p>言归真正，其实这个项目的本意是帮助不懂编程，非程序员的朋友学习使用GitHub。</p><p>为此其中一位女装（划掉）大佬专门在B站录制了教学视频，来帮助更多的同学学习GitHub的正确使用方式。</p><p>早日精通女装（划掉）GitHub的使用，打开新世界的大门，这也是我什么要把这个项目放在第一个的原因。</p><blockquote>B站链接：<a href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av34406290/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">bilibili.com/video/av34</span><span class=\"invisible\">406290/</span><span class=\"ellipsis\"></span></a><br>项目链接：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/komeiji-satori/Dress\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/komeiji-sato</span><span class=\"invisible\">ri/Dress</span><span class=\"ellipsis\"></span></a>  （温馨提示:自备营养快线）</blockquote><h2>二、人工智能对对联，自由自逍遥游</h2><p>这个项目基于深度学习技术来实现自动对对联，比如上面这个标题，就是AI对出的对联。直接输入上联点击就可以得到下联。如果对内在技术感兴趣，也可以在项目内查看。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-a4adf8f44512e3d573f3178a5a71cc88_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb\" width=\"900\" data-original=\"https://pic2.zhimg.com/v2-a4adf8f44512e3d573f3178a5a71cc88_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='900'%20height='325'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"325\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"900\" data-original=\"https://pic2.zhimg.com/v2-a4adf8f44512e3d573f3178a5a71cc88_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-a4adf8f44512e3d573f3178a5a71cc88_720w.jpg?source=54b3c3a5\"></figure><p> 有的时候中间打一个逗号结果就截然不同了。比如 ：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-d8b93964969f8cd471c3c1df062a2394_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"435\" data-rawheight=\"145\" class=\"origin_image zh-lightbox-thumb\" width=\"435\" data-original=\"https://pic2.zhimg.com/v2-d8b93964969f8cd471c3c1df062a2394_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='435'%20height='145'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"435\" data-rawheight=\"145\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"435\" data-original=\"https://pic2.zhimg.com/v2-d8b93964969f8cd471c3c1df062a2394_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-d8b93964969f8cd471c3c1df062a2394_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-7e6ee4cec4098cbef4d603d36b57d2f9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"905\" data-rawheight=\"328\" class=\"origin_image zh-lightbox-thumb\" width=\"905\" data-original=\"https://pic1.zhimg.com/v2-7e6ee4cec4098cbef4d603d36b57d2f9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='905'%20height='328'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"905\" data-rawheight=\"328\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"905\" data-original=\"https://pic1.zhimg.com/v2-7e6ee4cec4098cbef4d603d36b57d2f9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-7e6ee4cec4098cbef4d603d36b57d2f9_720w.jpg?source=54b3c3a5\"></figure><p>其实这个系统更擅长古风的对联比如：</p><p>“殷勤怕负三春意 ，潇洒难书一字愁。 ”<br>“如此清秋何吝酒，这般明月不须钱。 ”<br>“天朗气清风和畅，云蒸霞蔚日光辉。 ”</p><p>你能看出这是AI对出来的对联吗？还不收藏起来，以后你就是对联之王~</p><p>项目地址：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/wb14123/seq2seq-couplet\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/wb14123/seq2</span><span class=\"invisible\">seq-couplet</span><span class=\"ellipsis\"></span></a></p><h2>三、带薪水群神器</h2><p>在上班的时候，一直开着PC版微信跟网友吹水聊天很容易被老板发现吧~</p><p>把微信伪装一下，瞬间变成有道云笔记（应该特别适合网易的朋友们）在老板眼皮底下光明正大的摸鱼！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-a10bf9f13201752314842d3d85dc4ece_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1099\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-a10bf9f13201752314842d3d85dc4ece_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='1099'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1099\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-a10bf9f13201752314842d3d85dc4ece_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-a10bf9f13201752314842d3d85dc4ece_720w.jpg?source=54b3c3a5\"></figure><blockquote>项目地址：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/YGYOOO/WeChat-Shelter\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/YGYOOO/WeCha</span><span class=\"invisible\">t-Shelter</span><span class=\"ellipsis\"></span></a></blockquote><p><br></p><h2>四、新手也能用的GitHub传奇项目</h2><p>这个项目堪称传奇，在GitHub上拿到了整整数万星，被无数人称赞为新手必学项目，却偏偏又可以无需任何修改，就在任何平台、版本的IDE上运用，<b>堪称有史以来最伟大的工程没有之一</b>！</p><p>为了尊重原作者和保持神秘感，请大家去项目中查看。</p><p>我上面的话，可不是我自己评价的，都是网友们的留言：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-d9a4beb9ec9848697262900d8262f8a1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"894\" data-rawheight=\"309\" class=\"origin_image zh-lightbox-thumb\" width=\"894\" data-original=\"https://pic4.zhimg.com/v2-d9a4beb9ec9848697262900d8262f8a1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='894'%20height='309'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"894\" data-rawheight=\"309\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"894\" data-original=\"https://pic4.zhimg.com/v2-d9a4beb9ec9848697262900d8262f8a1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-d9a4beb9ec9848697262900d8262f8a1_720w.jpg?source=54b3c3a5\"></figure><blockquote>项目地址：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/kelseyhightower/nocode\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/kelseyhighto</span><span class=\"invisible\">wer/nocode</span><span class=\"ellipsis\"></span></a></blockquote><h2> 五、今天，你P站了吗？</h2><p>可以调节字体颜色，大小。但是为了保证图片是原汁原味的P站风，不能修改字体。</p><p>非常适合做一个专属于自己，充满视觉冲击力的logo。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-f5aaf1dcaf64a9ee7be4e70f8378d78a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1076\" data-rawheight=\"688\" class=\"origin_image zh-lightbox-thumb\" width=\"1076\" data-original=\"https://pic1.zhimg.com/v2-f5aaf1dcaf64a9ee7be4e70f8378d78a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1076'%20height='688'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1076\" data-rawheight=\"688\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1076\" data-original=\"https://pic1.zhimg.com/v2-f5aaf1dcaf64a9ee7be4e70f8378d78a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-f5aaf1dcaf64a9ee7be4e70f8378d78a_720w.jpg?source=54b3c3a5\"></figure><p>千万不要问我什么是p站哦，要知道无数程序员同学的梦想就是加入P站汉化组。一个营养快线管够的神奇网站。</p><blockquote>项目地址：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/bestony/logoly\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/bestony/logo</span><span class=\"invisible\">ly</span><span class=\"ellipsis\"></span></a></blockquote><h2>六、人人都是带钢琴家</h2><p>只要有电脑，只要你会打字，今天开始你就可以体验一次弹钢琴的感受了~</p><p>这是是作者用Vue + Tone.js做的一款web应用，快来和朋友们一起弹小星星吧</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-86316473348ca80f1d6b1373a439cc87_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"902\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-86316473348ca80f1d6b1373a439cc87_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='902'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"902\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-86316473348ca80f1d6b1373a439cc87_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-86316473348ca80f1d6b1373a439cc87_720w.jpg?source=54b3c3a5\"></figure><blockquote>项目地址：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/WarpPrism/AutoPiano\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/WarpPrism/Au</span><span class=\"invisible\">toPiano</span><span class=\"ellipsis\"></span></a></blockquote><h2>七、百度网盘神器</h2><p>不能说的太多，说多就被和谐了，下面这3个下载器会让你百度网盘的下载速度“提高”</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-29fe3c32aab903000920eec5ea1aca8f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"383\" class=\"origin_image zh-lightbox-thumb\" width=\"900\" data-original=\"https://pic1.zhimg.com/v2-29fe3c32aab903000920eec5ea1aca8f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='900'%20height='383'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"383\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"900\" data-original=\"https://pic1.zhimg.com/v2-29fe3c32aab903000920eec5ea1aca8f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-29fe3c32aab903000920eec5ea1aca8f_720w.jpg?source=54b3c3a5\"></figure><blockquote>项目1：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/b3log/baidu-netdisk-downloaderx\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/b3log/baidu-</span><span class=\"invisible\">netdisk-downloaderx</span><span class=\"ellipsis\"></span></a><br>项目2：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/peterq/pan-light\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/peterq/pan-l</span><span class=\"invisible\">ight</span><span class=\"ellipsis\"></span></a><br>项目3：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/iikira/BaiduPCS-Go\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/iikira/Baidu</span><span class=\"invisible\">PCS-Go</span><span class=\"ellipsis\"></span></a></blockquote><h2>八、程序员的高考——买房</h2><p>买房就和高考一样，决定着你的下半生，考验你多年打下的基础，不过不是人人都有资格参加……</p><p>高考前可以刷各式各样的辅导书，来帮助我们在“终局之战”拿到高分，但是买房前就非常缺乏既全面又理性，还不是广告的攻略。</p><p>这个项目是作者基于17年自己买房经历总结出来的攻略，因此由于时间关系不少数据大家参考一下就可以了，作者分析和罗列的思路非常有价值，值得我们学习，也有非常多实用小知识。</p><p>原文非常详细、全面，总计<b>2万字</b>左右！准备买房的大佬们可以去看看哦</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-653fac81aae4e36d3586c91b8177c8f5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"342\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-653fac81aae4e36d3586c91b8177c8f5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='342'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"342\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-653fac81aae4e36d3586c91b8177c8f5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-653fac81aae4e36d3586c91b8177c8f5_720w.jpg?source=54b3c3a5\"></figure><blockquote>项目地址：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/houshanren/hangzhou_house_knowledge\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://github.com/</a><a href=\"https://link.zhihu.com/?target=https%3A//github.com/houshanren/hangzhou_house_knowledge\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ho</a><a href=\"https://link.zhihu.com/?target=https%3A//github.com/houshanren/hangzhou_house_knowledge\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ushanre</a><a href=\"https://link.zhihu.com/?target=https%3A//github.com/houshanren/hangzhou_house_knowledge\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">n/hangz</a><a href=\"https://link.zhihu.com/?target=https%3A//github.com/houshanren/hangzhou_house_knowledge\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">h</a><a href=\"https://link.zhihu.com/?target=https%3A//github.com/houshanren/hangzhou_house_knowledge\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ou_house_kn</a><a href=\"https://link.zhihu.com/?target=https%3A//github.com/houshanren/hangzhou_house_knowledge\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">owledg</a><a href=\"https://link.zhihu.com/?target=https%3A//github.com/houshanren/hangzhou_house_knowledge\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">e</a></blockquote><h2>九、呼吸不止，码字不停  </h2><p>老实交代，你是不是经常准备写个笔记、文章，打开word后瞬间灵感便秘，没有意思，码不出字？<br>有什么办法能让自己短时间内，激情四射疯狂码字？</p><p>有一位程序员大佬给出了答案：<b>“不许停止码字，停下来就删稿！”</b></p><p>而且这位大佬还用了喝两杯葡萄酒的时间，把这个理念做成了一个程序！并且放在了GitHub上。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-42c1c2401b37f9422382dec25f0cef2f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" class=\"content_image\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='0'%20height='0'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" class=\"content_image lazy\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-42c1c2401b37f9422382dec25f0cef2f_720w.jpg?source=54b3c3a5\"></figure><p>感受一下大家的评价吧：</p><p><b>\"丧心病狂\"，\"写作者的噩梦源泉\"，\"这才是真正的生产力工具！\"</b></p><p>真的不来试试吗？这可相当刺激~</p><p>刚开始码字的时候我慌的不行，时刻都在担心到5秒了，被删稿子，可以到了后来，我居然非常习惯了，而且码字速度也快了~</p><p>毕竟如果你被删3次稿子，估计你也会很淡定的被删掉的内容重新打出来。感觉我的码字效率都提高即将10倍<br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-2b4369fd7bba83186e97976b5fbdc4b0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"150\" data-rawheight=\"150\" class=\"content_image\" width=\"150\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='150'%20height='150'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"150\" data-rawheight=\"150\" class=\"content_image lazy\" width=\"150\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-2b4369fd7bba83186e97976b5fbdc4b0_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-1ced0616769c56b1061f90e19a97fee1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"736\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-1ced0616769c56b1061f90e19a97fee1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='736'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"736\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-1ced0616769c56b1061f90e19a97fee1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-1ced0616769c56b1061f90e19a97fee1_720w.jpg?source=54b3c3a5\"></figure><blockquote>项目地址：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/maebert/themostdangerouswritingapp\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/maebert/them</span><span class=\"invisible\">ostdangerouswritingapp</span><span class=\"ellipsis\"></span></a></blockquote><h2>十、在线动图编辑</h2><p>话不多说，直接上图</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-0284dc54a25605918e12b9a06f36d5a9_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"281\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-0284dc54a25605918e12b9a06f36d5a9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic4.zhimg.com/v2-0284dc54a25605918e12b9a06f36d5a9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='500'%20height='281'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"281\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-0284dc54a25605918e12b9a06f36d5a9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"500\" data-original=\"https://pic4.zhimg.com/v2-0284dc54a25605918e12b9a06f36d5a9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-0284dc54a25605918e12b9a06f36d5a9_720w.gif?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-64bf376952aabda765a5fe55c0ae209c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"298\" data-rawheight=\"184\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-40c8ba3c2c215408f24bfb3155990bf3_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"298\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='298'%20height='184'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"298\" data-rawheight=\"184\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-40c8ba3c2c215408f24bfb3155990bf3_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"298\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-64bf376952aabda765a5fe55c0ae209c_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1d09f94f0124896328662ae3a91bcfd6_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"298\" data-rawheight=\"168\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-1d09f94f0124896328662ae3a91bcfd6_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"298\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='298'%20height='168'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"298\" data-rawheight=\"168\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-1d09f94f0124896328662ae3a91bcfd6_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"298\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1d09f94f0124896328662ae3a91bcfd6_720w.gif?source=54b3c3a5\"></figure><p>项目链接：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/xtyxtyx/sorry\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/xtyxtyx/sorr</span><span class=\"invisible\">y</span><span class=\"ellipsis\"></span></a> <br></p><hr><p>上面是偏娱乐的，下面就来正经的了！</p><p>下面这个项目列举了30+个用Python，就能简单、快速应用的小项目</p><p>1.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/batch_file_rename.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">batch_file_rename.py</a> - 批量重命名指定目录下面所有文件的后缀名。</p><p>2.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/create_dir_if_not_there.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">create_dir_if_not_there.py</a> - 检查用户主目录中是否存在目录，如果不存在则创建目录。</p><p>3.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/youtube-downloader%2520fast.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">快速Youtube下载器</a> - 使用aria2c多线程快速下载YouTube视频。</p><p>4.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/tree/master/Google%2520Image%2520Downloader\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Google Image Downloader</a> - 查询指定词语并从Google中下图。</p><p>5.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/dir_test.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">dir_test.py</a> - 测试目录是否testdir存在，如果不存在，它将为您创建目录。</p><p>6.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/env_check.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">env_check.py</a> - 将检查是否已设置所需的所有环境变量。</p><p>7.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/fileinfo.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">fileinfo.py</a> - 显示文件的信息。</p><p>8.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/folder_size.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">folder_size.py</a> - 统计文件夹大小。</p><p>9.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/logs.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">logs.py</a> - 将搜索*.log指定目录中的所有文件，对其进行压缩，然后按日期。</p><p>10.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/move_files_over_x_days.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">move_files_over_x_days.py</a> - 将指定年龄（以天为单位）的所有文件从源目录移动到目标目录。</p><p>11.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/nslookup_check.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">nslookup_check.py</a> - 这个简单的脚本打开文件server_list.txt，然后为每个文件执行nslookup检查DNS条目。</p><p>12.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/osinfo.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">osinfo.py</a> - 显示操作系统的一些信息。</p><p>13.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/ping_servers.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ping_servers.py</a> - 根据提供的参数，此脚本将ping与该应用程序组关联的服务器。</p><p>14.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/ping_subnet.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ping_subnet.py</a> - 在提供前3个八位字节后，此文件将扫描可用地址的最终范围。</p><p>15.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/powerdown_startup.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">powerdown_startup.py</a> - 此文件通过服务器列表并ping机器，如果它已启动，它将加载putty会话，如果不是，它将通知您。</p><p>16.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/puttylogs.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">puttylogs.py</a> - 此文件会压缩给定目录中的所有日志。</p><p>17.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/script_count.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">script_count.py</a> - 统计目录下不同脚本。</p><p>18.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/script_listing.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">script_listing.py</a> - 此文件将列出给定目录中的所有文件，并遍历所有子目录。</p><p>19.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/testlines.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">testlines.py</a> - 这个简单的脚本打开一个文件，打印出100行。</p><p>20.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/geekcomputers/Python/blob/master/tweeter.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">tweeter.py</a> - 用脚本发推特。</p><p>21.光收藏不点赞=耍流氓</p>", "打算读计科高考后的暑假怎么先自学?": "谢邀～我说个实在的吧。对于计算机专业的男生，这两个月非常重要！非常重要！什么公开课，编程练习，数学基础都是扯淡！利用这两个月，找个女朋友吧！不然你之后几年的路都会很难走！<br>从本科开始，到硕士阶段，到博士阶段，一直到工作阶段，都是狼多肉少！你会开始变宅！会变geek！会变nerd！会不洗澡！会天天穿冲锋衣！会觉得老子编程天下第一，没有女朋友又怎样！几年之后，等头发一掉，就真的没人要了！！！！！别问我怎么知道的！不说了，说多了都是泪！", "3Blue1Brown 的视频是怎么制作的？": "<p>相信很多人都知道3Blue1Brown，这是一个由斯坦福大学的数学系学生<b>Grant Sanderson</b> 创建的<b>YouTube </b>频道。该频道从独特的视觉角度解说<b>高等数学</b>，内容包括<b>线性代数</b>、<b>微积分</b>、<b>神经网络</b>、<b>黎曼猜想</b>、<b>傅里叶变换</b>以及<b>四元数</b>等等。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-4ec471b40714a7225e923506381bfc06_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"720\" class=\"origin_image zh-lightbox-thumb\" width=\"1280\" data-original=\"https://pic1.zhimg.com/v2-4ec471b40714a7225e923506381bfc06_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1280'%20height='720'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"720\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1280\" data-original=\"https://pic1.zhimg.com/v2-4ec471b40714a7225e923506381bfc06_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-4ec471b40714a7225e923506381bfc06_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>本人通过该视频频道获得了很多启发，同时也对其精良的视频制作技术产生了浓厚的兴趣。</p><p>偶然的机会，得知其在Github上有专门开设了一个动画制作引擎：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/3b1b/manim\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">manim</a>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-0df6e863c49b4e704a2899ffda07b140_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"868\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-0df6e863c49b4e704a2899ffda07b140_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='868'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"868\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-0df6e863c49b4e704a2899ffda07b140_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-0df6e863c49b4e704a2899ffda07b140_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>所以，突然想尝试用一下该基于Python的可视化引擎，如果可以实现功能，以后就可以根据自己的需要利用该引擎进行动画演示。</p><p>网上找了一些相关的文章，有的写得很好，但是因为该开源代码库更新频繁，所以以前的配置教程往往会有过时的情况。现在最新的版本是基于Python 3的，以前的基于Python 2.7的教程已经不再适用于当前代码。所以在安装过程中，遇到了不少新问题，在解决的过程中记录了这些新问题的解决方法。并形成此文。<b>(测试于2019年6月)</b></p><p>在配置前首先得安装Python 3，这个安装过程在此处不再赘述。建议通过Anaconda进行安装，而不是直接安装Python。这里的演示也是基于Windows 10 系统，在安装Anaconda的基础上完成的。Anaconda的下载地址为：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.anaconda.com/distribution/%23download-section\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">anaconda.com/distributi</span><span class=\"invisible\">on/#download-section</span><span class=\"ellipsis\"></span></a>    建议选择安装Python 3.7 version，具体安装步骤网上有很多。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-7c41d415b28f6d3c388beb684b83dfe4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1548\" data-rawheight=\"683\" class=\"origin_image zh-lightbox-thumb\" width=\"1548\" data-original=\"https://pic1.zhimg.com/v2-7c41d415b28f6d3c388beb684b83dfe4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1548'%20height='683'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1548\" data-rawheight=\"683\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1548\" data-original=\"https://pic1.zhimg.com/v2-7c41d415b28f6d3c388beb684b83dfe4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-7c41d415b28f6d3c388beb684b83dfe4_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>除此之外，还要下载：</p><ol><li><b>manim</b>：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/3b1b/manim\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/3b1b/manim</span><span class=\"invisible\"></span></a>，选择clone or download，然后Download ZIP，解压后到一个合适的位置（<b>路径中不要包含中文！</b>），即可使用（此为manim动画引擎所包含的全部文件）；</li><li><b>miktex</b>：<a href=\"https://link.zhihu.com/?target=https%3A//miktex.org/download\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">miktex.org/download</span><span class=\"invisible\"></span></a>，直接安装即可，（<b>安装路径中不要包含中文！</b>）（此为windows平台下的Tex套件，TeX 是一种排版语言，主要用于处理视频中包含的文字信息）；</li><li><b>ffmpeg</b>：<a href=\"https://link.zhihu.com/?target=https%3A//ffmpeg.zeranoe.com/builds/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Builds - Zeranoe FFmpeg</a>，下载好后，放到一个合适的路径下（<b>路径中不要包含中文！</b>），解压后将../bin/目录添加进用户环境变量（见后图）（此为音视频流处理软件)</li></ol><h2>添加进用户环境变量的方法：</h2><p>右击“我的电脑”图标-\"属性\"-左边的\"高级系统设置\"</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-43d4bae3c5e57839c2ea1112a38e15c2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1180\" data-rawheight=\"400\" class=\"origin_image zh-lightbox-thumb\" width=\"1180\" data-original=\"https://pic1.zhimg.com/v2-43d4bae3c5e57839c2ea1112a38e15c2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1180'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1180\" data-rawheight=\"400\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1180\" data-original=\"https://pic1.zhimg.com/v2-43d4bae3c5e57839c2ea1112a38e15c2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-43d4bae3c5e57839c2ea1112a38e15c2_720w.jpg?source=54b3c3a5\"></figure><p>选择\"环境变量\"-\"用户变量\"中的\"Path\"-\"编辑\"-\"新建\"。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-0a1b106710ac3247f517d9b869e42310_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1658\" data-rawheight=\"829\" class=\"origin_image zh-lightbox-thumb\" width=\"1658\" data-original=\"https://pic2.zhimg.com/v2-0a1b106710ac3247f517d9b869e42310_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1658'%20height='829'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1658\" data-rawheight=\"829\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1658\" data-original=\"https://pic2.zhimg.com/v2-0a1b106710ac3247f517d9b869e42310_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0a1b106710ac3247f517d9b869e42310_720w.jpg?source=54b3c3a5\"></figure><p>然后把解压后的FFmpeg的bin文件夹的路径添加进去，并选择确定。然后进行环境测试，看各个依赖环境是否都配置妥当（<b>注意：按照个人安装的实际路径进行添加，图中只是一个参考</b>）。</p><p><br></p><h2>在Anaconda Prompt 中通过命令行配置并测试</h2><p>具体方法是：右击\"Anaconda Prompt\"-\"更多\"-\"以管理员身份运行\"</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-7829bc5c6b5d7ed525c0ee121dd807f8_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"757\" data-rawheight=\"220\" class=\"origin_image zh-lightbox-thumb\" width=\"757\" data-original=\"https://pic4.zhimg.com/v2-7829bc5c6b5d7ed525c0ee121dd807f8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='757'%20height='220'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"757\" data-rawheight=\"220\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"757\" data-original=\"https://pic4.zhimg.com/v2-7829bc5c6b5d7ed525c0ee121dd807f8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-7829bc5c6b5d7ed525c0ee121dd807f8_720w.jpg?source=54b3c3a5\"></figure><p><b>这一步很重要，因为如果不以管理员身份运行很可能带来权限不够的情况，妨碍后期的各个程序包的安装。</b></p><p>在命令行中分别输入下列命令，并回车运行（注意并不需要版本号完全与下面图中所示的完全一致，因为随着时间推移会有版本的更新）：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>python --version\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a10abbb4c848ab433321c265ea6a6725_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"262\" class=\"origin_image zh-lightbox-thumb\" width=\"1468\" data-original=\"https://pic1.zhimg.com/v2-a10abbb4c848ab433321c265ea6a6725_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1468'%20height='262'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"262\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1468\" data-original=\"https://pic1.zhimg.com/v2-a10abbb4c848ab433321c265ea6a6725_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a10abbb4c848ab433321c265ea6a6725_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>latex --version\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-40305c05eea78692c9a167584eb6e8be_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"633\" class=\"origin_image zh-lightbox-thumb\" width=\"1468\" data-original=\"https://pic1.zhimg.com/v2-40305c05eea78692c9a167584eb6e8be_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1468'%20height='633'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"633\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1468\" data-original=\"https://pic1.zhimg.com/v2-40305c05eea78692c9a167584eb6e8be_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-40305c05eea78692c9a167584eb6e8be_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>xelatex --version\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-de9a1d9b929c1a4cdee8f9e39420921d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"692\" class=\"origin_image zh-lightbox-thumb\" width=\"1468\" data-original=\"https://pic2.zhimg.com/v2-de9a1d9b929c1a4cdee8f9e39420921d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1468'%20height='692'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"692\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1468\" data-original=\"https://pic2.zhimg.com/v2-de9a1d9b929c1a4cdee8f9e39420921d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-de9a1d9b929c1a4cdee8f9e39420921d_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>ffmpeg -version\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-67e76d4320abd8115f53de2a2f53fecf_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"692\" class=\"origin_image zh-lightbox-thumb\" width=\"1468\" data-original=\"https://pic2.zhimg.com/v2-67e76d4320abd8115f53de2a2f53fecf_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1468'%20height='692'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"692\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1468\" data-original=\"https://pic2.zhimg.com/v2-67e76d4320abd8115f53de2a2f53fecf_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-67e76d4320abd8115f53de2a2f53fecf_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>如果都有类似于上面的版本提示，则说明依赖的软件安装成功，否则，回去检查安装或用户路径的添加是否正确。</p><p><br></p><p>打开前面下载并解压后的 manim 文件夹，该文件夹的路径就称为 <b>manim的根目录</b>（注意，由于manim的更新，文件夹中的内容可能会和下图中所示的有些许不一致，但可以放心这些细微的差别一般不会影响后面使用），在该根目录中新建一个空白文件夹“<b>media</b>”，并在该根目录中新建一个名字为“MEDIA_DIR.txt”的.txt文件。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-12bc24c9accc7856910b4d1371c0b235_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1278\" data-rawheight=\"1020\" class=\"origin_image zh-lightbox-thumb\" width=\"1278\" data-original=\"https://pic4.zhimg.com/v2-12bc24c9accc7856910b4d1371c0b235_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1278'%20height='1020'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1278\" data-rawheight=\"1020\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1278\" data-original=\"https://pic4.zhimg.com/v2-12bc24c9accc7856910b4d1371c0b235_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-12bc24c9accc7856910b4d1371c0b235_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>打开\"MEDIA_DIR.txt\"，输入刚刚新建的\"media\"文件夹所在的路径并保存，注意最后的“\\”别漏了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-225bfc6d70c5e8d23eec8cffdbf78947_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"913\" data-rawheight=\"264\" class=\"origin_image zh-lightbox-thumb\" width=\"913\" data-original=\"https://pic4.zhimg.com/v2-225bfc6d70c5e8d23eec8cffdbf78947_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='913'%20height='264'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"913\" data-rawheight=\"264\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"913\" data-original=\"https://pic4.zhimg.com/v2-225bfc6d70c5e8d23eec8cffdbf78947_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-225bfc6d70c5e8d23eec8cffdbf78947_720w.jpg?source=54b3c3a5\"></figure><p>回到 Anaconda Prompt 中，输入：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>cd &lt;manim 的根目录&gt;\n</code></pre></div><p>该命令的意思是：跳转 (cd, Change Directory) 到 manim 的根目录中（<b>注意：按照个人安装的实际路径进行跳转，图中只是一个参考</b>）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8606767d43d3f69ad875a336a45faea9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"818\" data-rawheight=\"262\" class=\"origin_image zh-lightbox-thumb\" width=\"818\" data-original=\"https://pic2.zhimg.com/v2-8606767d43d3f69ad875a336a45faea9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='818'%20height='262'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"818\" data-rawheight=\"262\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"818\" data-original=\"https://pic2.zhimg.com/v2-8606767d43d3f69ad875a336a45faea9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8606767d43d3f69ad875a336a45faea9_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>然后输入（<b>手机上如果看不到此处的全部代码，请在代码处左右滑动或在电脑上打开该文章</b>）：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>python -m pip install -r requirements.txt\n</code></pre></div><p>这个安装过程中常见的问题是“pycairo”这个包安装异常。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a419693074ead3995ae06aacf5f5fdd1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1020\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-a419693074ead3995ae06aacf5f5fdd1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='1020'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1020\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-a419693074ead3995ae06aacf5f5fdd1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a419693074ead3995ae06aacf5f5fdd1_720w.jpg?source=54b3c3a5\"></figure><p>解决方法是先输入并运行：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>conda install vs2015_runtime\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-c0f5b619229769447d1e4fb87ea55ff2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"891\" class=\"origin_image zh-lightbox-thumb\" width=\"1468\" data-original=\"https://pic4.zhimg.com/v2-c0f5b619229769447d1e4fb87ea55ff2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1468'%20height='891'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"891\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1468\" data-original=\"https://pic4.zhimg.com/v2-c0f5b619229769447d1e4fb87ea55ff2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-c0f5b619229769447d1e4fb87ea55ff2_720w.jpg?source=54b3c3a5\"></figure><p>然后再单独安装“pycairo”这个包，输入并运行：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>conda install pycairo\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-df8c23948f75d62be299580aeb8aaf23_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"891\" class=\"origin_image zh-lightbox-thumb\" width=\"1468\" data-original=\"https://pic1.zhimg.com/v2-df8c23948f75d62be299580aeb8aaf23_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1468'%20height='891'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"891\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1468\" data-original=\"https://pic1.zhimg.com/v2-df8c23948f75d62be299580aeb8aaf23_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-df8c23948f75d62be299580aeb8aaf23_720w.jpg?source=54b3c3a5\"></figure><p>现在，基本的东西都安装好了。尝试着运行一下测试命令：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>python -m manim example_scenes.py SquareToCircle -pl\n</code></pre></div><p>在运行的时候可能会有形如：ModuleNotFoundError: No module named &lt;pack name&gt;的错误提示，这说明还缺少程序包。请运行命令（<b>注意：&lt;pack name&gt;改为对应缺失的程序包的名字，命令中不含括号或引号</b>）：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pip install &lt;pack name&gt;\n</code></pre></div><p><b>一个特例</b>是readline包，如果提示“ModuleNotFoundError: No module named 'readline'”，则需要输入的是：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pip install pyreadline\n</code></pre></div><p>安装好提示缺少的包后再输入并运行：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>python -m manim example_scenes.py SquareToCircle -pl\n</code></pre></div><p>缺什么程序包就按照上面的方法添加该程序包，直到命令可以通过：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f10c5cd6cfd34a605c8c789ec3ecf27b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1411\" data-rawheight=\"504\" class=\"origin_image zh-lightbox-thumb\" width=\"1411\" data-original=\"https://pic3.zhimg.com/v2-f10c5cd6cfd34a605c8c789ec3ecf27b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1411'%20height='504'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1411\" data-rawheight=\"504\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1411\" data-original=\"https://pic3.zhimg.com/v2-f10c5cd6cfd34a605c8c789ec3ecf27b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f10c5cd6cfd34a605c8c789ec3ecf27b_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>此时打开media文件夹将找到生成的视频，表示的是正方形变成圆形的动画演示：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-63d0ae9d8ced8fc6d8f3f9d396d3dfb2_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"337\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-63d0ae9d8ced8fc6d8f3f9d396d3dfb2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-63d0ae9d8ced8fc6d8f3f9d396d3dfb2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='337'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"337\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-63d0ae9d8ced8fc6d8f3f9d396d3dfb2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-63d0ae9d8ced8fc6d8f3f9d396d3dfb2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-63d0ae9d8ced8fc6d8f3f9d396d3dfb2_720w.gif?source=54b3c3a5\"></figure><p><br></p><p>同理，输入命令：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>python -m manim example_scenes.py WarpSquare -pl\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-4ede8722cfef45be88f99b3bdc243201_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"766\" class=\"origin_image zh-lightbox-thumb\" width=\"1468\" data-original=\"https://pic2.zhimg.com/v2-4ede8722cfef45be88f99b3bdc243201_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1468'%20height='766'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"766\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1468\" data-original=\"https://pic2.zhimg.com/v2-4ede8722cfef45be88f99b3bdc243201_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-4ede8722cfef45be88f99b3bdc243201_720w.jpg?source=54b3c3a5\"></figure><p>得到一个向复平面映射的动画：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-094cce96e48d16744962c34911bb92de_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"337\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-094cce96e48d16744962c34911bb92de_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-094cce96e48d16744962c34911bb92de_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='337'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"337\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-094cce96e48d16744962c34911bb92de_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-094cce96e48d16744962c34911bb92de_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-094cce96e48d16744962c34911bb92de_720w.gif?source=54b3c3a5\"></figure><p><br></p><p>输入命令：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>python -m manim example_scenes.py WriteStuff -pl\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-477d5fc8de06fd9f13a45d66eda22608_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"766\" class=\"origin_image zh-lightbox-thumb\" width=\"1468\" data-original=\"https://pic4.zhimg.com/v2-477d5fc8de06fd9f13a45d66eda22608_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1468'%20height='766'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"766\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1468\" data-original=\"https://pic4.zhimg.com/v2-477d5fc8de06fd9f13a45d66eda22608_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-477d5fc8de06fd9f13a45d66eda22608_720w.jpg?source=54b3c3a5\"></figure><p>此过程中会提示安装一些程序包，为了加快编译进度，可以点击去掉那个复选框的勾选，默认安装所有需要的程序包。得到的是具有3b1b经典风格的文字动画。</p><p><b>注释：</b>如果生成文字的过程当中出现 .svg 文件无法生成的情况，以管理员模式分别运行一下几条命令之后再运行上述命令（<b>如果没有出现错误则不必运行，主要原因是 Miktex 会自动安装最新版本的 dvisvgm 导致版本冲突，为了避免冲突，因此最好不要单独安装 dvisvgm</b>）：</p><ul><li>regsvr32 MiKTeX209-core-PS.dll</li><li>regsvr32 MiKTeX209-core.dll</li><li>regsvr32 MiKTeX209-packagemanager-PS.dll</li><li>regsvr32 MiKTeX209-packagemanager.dll</li></ul><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-cc250beb178ea39fcd3b052186c2eb1d_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"337\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-cc250beb178ea39fcd3b052186c2eb1d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-cc250beb178ea39fcd3b052186c2eb1d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='337'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"337\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-cc250beb178ea39fcd3b052186c2eb1d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-cc250beb178ea39fcd3b052186c2eb1d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-cc250beb178ea39fcd3b052186c2eb1d_720w.gif?source=54b3c3a5\"></figure><p><br></p><p>输入命令：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>python -m manim example_scenes.py UpdatersExample -pl\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-51616bd46b7e24f121f2f4583ddc1d80_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"766\" class=\"origin_image zh-lightbox-thumb\" width=\"1468\" data-original=\"https://pic1.zhimg.com/v2-51616bd46b7e24f121f2f4583ddc1d80_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1468'%20height='766'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1468\" data-rawheight=\"766\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1468\" data-original=\"https://pic1.zhimg.com/v2-51616bd46b7e24f121f2f4583ddc1d80_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-51616bd46b7e24f121f2f4583ddc1d80_720w.jpg?source=54b3c3a5\"></figure><p>将得到一个数据随图形位置变化的动画：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-b0c95b4a45bbc9b77b8f82cb057325bf_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"337\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-b0c95b4a45bbc9b77b8f82cb057325bf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-b0c95b4a45bbc9b77b8f82cb057325bf_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='337'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"337\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-b0c95b4a45bbc9b77b8f82cb057325bf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-b0c95b4a45bbc9b77b8f82cb057325bf_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-b0c95b4a45bbc9b77b8f82cb057325bf_720w.gif?source=54b3c3a5\"></figure><p><br></p><p>是不是手痒了？23333。</p><p>如果安装成功，感谢点赞支持，如果配置遇到什么问题，欢迎在评论区留言~</p><p>&lt;<b>本教程仅针对Windows 10 64位系统</b>&gt;</p><p><br></p><p>3B1B 动画制作教程持续更新中...</p><a href=\"https://zhuanlan.zhihu.com/p/108839666\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-a31d996db92738db7588b97480332525_bh.jpg?source=54b3c3a5\" data-image-width=\"920\" data-image-height=\"403\" class=\"internal\">3Blue1Brown 教程目录</a><p>更多内容请关注知乎专栏：</p><a href=\"https://zhuanlan.zhihu.com/c_1041689010053341184\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-9c87d956f28e27a418de774c1720e214_l.jpg?source=54b3c3a5\" data-image-width=\"699\" data-image-height=\"699\" class=\"internal\">直观の数学</a><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-570f9e61d817bbec739ae7568e9b1484_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"337\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-570f9e61d817bbec739ae7568e9b1484_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-570f9e61d817bbec739ae7568e9b1484_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='337'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"337\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-570f9e61d817bbec739ae7568e9b1484_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-570f9e61d817bbec739ae7568e9b1484_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-570f9e61d817bbec739ae7568e9b1484_720w.gif?source=54b3c3a5\"></figure><p><br> </p>", "如果代码按行付费，会有什么好玩的事情发生？": "<p>程序员联盟发布了一条消息:以后我们的代码要按行收费。客户们立即就炸了锅，按代码收费?那你程序员不是想怎么写就怎么写，我们让你们做个项目，你写个空行，写点注释什么的，谁来管?</p><p>      物竞天择。有人有需求就立即有人响应。正当这些客户无所适从的时候，一个职业产生了:代码缩行师。客户在审查项目交付的时候会先去缩行事务所请一位缩行师。缩行师的职责就是在保证不改变原有系统功能的前提下将程序最大程度的缩减行数，缩行师按照缩减行数的百分之10收费。</p><p>     缩行师是程序员最大的天敌。</p><p>      缩行师也是分等级的，最低级的缩行师只能只能缩缩空行，挪一挪括号，一般人都能做，大抵是被程序员看不起的，往上一级就要稍微懂一点编程知识了，知道怎么把定义的变量合到一行，怎么去掉可以去掉的括号，他们已经一脚踏入了领域和空间的境界了，他们许多是程序员做不下去为了生计讨口饭吃，倘若搞好客户关系，也能活的很滋润。</p><p>      再往上一级，这些人是缩行师界的精英，而且随时可以成为最优秀的程序员，他们把无聊的体力工作交给下边的人去做，自己则和程序员斗智斗勇，\"你这个变量没必要定义\"，\"你这两处的功能重复了，回去重构一下\"，\"你这个是自己造轮子，去找别人开源写好的\"。</p><p>      他们有的曾经是最好的程序员，有的是因为忍受不了缩行师的百般挑刺，无奈转行，有的是因为满足内心找茬的欲望。他们有的是从事多年的缩行师，从学徒起一步一步坐起，扎扎实实的走到现在的地位，这个级别的缩行师是各大缩行事务所争抢的对象。</p><p>每个客户都以邀请到他们为荣，预约的人多了，事务所开始准备\"缩号\"，客户只有摇到了缩号才能有幸邀请到这些人，有的客户更是为专家缩号大打出手，于是又催生了一种叫\"缩牛\"的职业，不再赘述。</p><p>      他们某种程度上已经达到了缩行师的顶峰，但还有一种传说中的存在，他们是打破规则的存在，如果你侥幸看到他们的杰作，你就会发现上面提到的都是浮云。一行，只需要一行就够了，什么工程，什么项目，只需要一行。jQuery.min.js就是他们的杰作。</p><p>有一个站在巅峰的男人曾经应拉里·佩奇的邀请将谷歌的所有代码写成了一行，并且能完整的实现了谷歌现有的所有功能，人们甚至发现谷歌搜索快了将近30%。后来有华尔街和硅谷的资深从业者看到这行代码后久久不能平静，对这行代码给出了5600亿美元的估值，当然这行代码一般人是看不完的，据说这行代码的长度可以从加州连接到M31星系。</p><p>      程序员的生活变得越来越艰难，程序员联盟本身的福祉变成了灾难，尽管随着代码的行数减少，单行的价格在不断的升高，程序员行业的整体质量也在不断的提高，但依旧艰难。程序员联盟又做了一个艰难的决定:最终的代码每行不得多于200字符。对于一般的程序，一行200字符足够了，即使一行内容长，也可以分行解决。</p><p>在程序员联盟认为一劳永逸的同时缩行师的行业发生了惊天动地的变化，对于底层的没有太大变化，但对于习惯把程序挤到一行的从业者来说无异于晴天霹雳。当原来的方法不适用的时候他们又何去何从？</p><p>     在进行了多次缩行师技术交流峰会之后他们找到了一个对策，那就是将计就计，把每行的代码都调整到200字符，在规则的范围内达到最大的收益。于是缩行师行会陆续制订了缩行师的规范，守则。</p><p>越来越多的人开始分享他们把代码调整成200字符的技巧，有的缩行师贴出代码提问“怎么把这段代码缩成标准的格式?\"，就会有很多热心的缩行师为其解答，也会有不少伪装成缩行师的程序员冷嘲热讽甚至谩骂。</p><p>      随着缩行技术的发展和普及，程序员和客户由一开始看到凹凸不平的代码变成一个个整齐的长方形的代码的一脸懵逼到渐渐习惯再到麻木。很多年过去以后，新的程序员甚至以为长方型的代码就应该是代码本来的样子。</p><p>      程序员的世界也发生了很大的变化，越来越多的客户为了节省一笔缩行师的费用，开始要求程序员去写每行200个字符的长方形代码，程序员经过了这么多年的耳濡目染也渐渐的接受了，这第一批写方块代码的程序员渐渐引领了代码的潮流《编程方块》《代码方块之道》《方块之美》《重构-方块化改善既有代码》。。这些书开始变得越来越畅销。</p><p>缩行师除了偶尔被叫去做做code review，需要的越来越少了，整个行业也开始没落。</p><p>      有人的地方就有江湖，有利益的地方就有冲突。</p>", "如何理解Python装饰器？": "<p>先来个形象比方</p><br><p>内裤可以用来遮羞，但是到了冬天它没法为我们防风御寒，聪明的人们发明了长裤，有了长裤后宝宝再也不冷了，装饰器就像我们这里说的长裤，在不影响内裤作用的前提下，给我们的身子提供了保暖的功效。</p><br><p>再回到我们的主题</p><br><p>装饰器本质上是一个Python函数，它可以让其他函数在不需要做任何代码变动的前提下增加额外功能，装饰器的返回值也是一个函数对象。它经常用于有切面需求的场景，比如：插入日志、性能测试、事务处理、缓存、权限校验等场景。装饰器是解决这类问题的绝佳设计，有了装饰器，我们就可以抽离出大量与函数功能本身无关的雷同代码并继续重用。概括的讲，装饰器的作用就是为已经存在的对象添加额外的功能。</p><br><p>先来看一个简单例子：</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'i am foo'</span><span class=\"p\">)</span>\n</code></pre></div><p>现在有一个新的需求，希望可以记录下函数的执行日志，于是在代码中添加日志代码：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>def foo():\n    print('i am foo')\n    logging.info(\"foo is running\")\n</code></pre></div><p>bar()、bar2()也有类似的需求，怎么做？再写一个logging在bar函数里？这样就造成大量雷同的代码，为了减少重复写代码，我们可以这样做，重新定义一个函数：专门处理日志 ，日志处理完之后再执行真正的业务代码</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"k\">def</span> <span class=\"nf\">use_logging</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\"> is running\"</span> <span class=\"o\">%</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n    <span class=\"n\">func</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'i am bar'</span><span class=\"p\">)</span>\n\n<span class=\"n\">use_logging</span><span class=\"p\">(</span><span class=\"n\">bar</span><span class=\"p\">)</span>\n</code></pre></div><p>逻辑上不难理解， 但是这样的话，我们每次都要将一个函数作为参数传递给use_logging函数。而且这种方式已经破坏了原有的代码逻辑结构，之前执行业务逻辑时，执行运行bar()，但是现在不得不改成use_logging(bar)。那么有没有更好的方式的呢？当然有，答案就是装饰器。</p><br><b>简单装饰器</b><br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"k\">def</span> <span class=\"nf\">use_logging</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">wrapper</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\"> is running\"</span> <span class=\"o\">%</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">wrapper</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'i am bar'</span><span class=\"p\">)</span>\n\n<span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">use_logging</span><span class=\"p\">(</span><span class=\"n\">bar</span><span class=\"p\">)</span>\n<span class=\"n\">bar</span><span class=\"p\">()</span>\n</code></pre></div><p>函数use_logging就是装饰器，它把执行真正业务方法的func包裹在函数里面，看起来像bar被use_logging装饰了。在这个例子中，函数进入和退出时 ，被称为一个横切面(Aspect)，这种编程方式被称为面向切面的编程(Aspect-Oriented Programming)。</p><p>@符号是装饰器的语法糖，在定义函数的时候使用，避免再一次赋值操作</p><br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"k\">def</span> <span class=\"nf\">use_logging</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">wrapper</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\"> is running\"</span> <span class=\"o\">%</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">wrapper</span>\n\n<span class=\"nd\">@use_logging</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"i am foo\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@use_logging</span>\n<span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"i am bar\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">bar</span><span class=\"p\">()</span>\n</code></pre></div><p>如上所示，这样我们就可以省去bar = use_logging(bar)这一句了，直接调用bar()即可得到想要的结果。如果我们有其他的类似函数，我们可以继续调用装饰器来修饰函数，而不用重复修改函数或者增加新的封装。这样，我们就提高了程序的可重复利用性，并增加了程序的可读性。</p><br><p>装饰器在Python使用如此方便都要归因于Python的函数能像普通的对象一样能作为参数传递给其他函数，可以被赋值给其他变量，可以作为返回值，可以被定义在另外一个函数内。</p><br><b>带参数的装饰器</b><p>装饰器还有更大的灵活性，例如带参数的装饰器：在上面的装饰器调用中，比如@use_logging，该装饰器唯一的参数就是执行业务的函数。装饰器的语法允许我们在调用时，提供其它参数，比如@decorator(a)。这样，就为装饰器的编写和使用提供了更大的灵活性。</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"k\">def</span> <span class=\"nf\">use_logging</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">decorator</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n        <span class=\"k\">def</span> <span class=\"nf\">wrapper</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">level</span> <span class=\"o\">==</span> <span class=\"s2\">\"warn\"</span><span class=\"p\">:</span>\n                <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\"> is running\"</span> <span class=\"o\">%</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">wrapper</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">decorator</span>\n\n<span class=\"nd\">@use_logging</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"s2\">\"warn\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"i am </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"n\">foo</span><span class=\"p\">()</span>\n</code></pre></div><p>上面的use_logging是允许带参数的装饰器。它实际上是对原有装饰器的一个函数封装，并返回一个装饰器。我们可以将它理解为一个含有参数的闭包。当我 们使用@use_logging(level=\"warn\")调用的时候，Python能够发现这一层的封装，并把参数传递到装饰器的环境中。</p><br><b>类装饰器</b><p>再来看看类装饰器，相比函数装饰器，类装饰器具有灵活度大、高内聚、封装性等优点。使用类装饰器还可以依靠类内部的\\_\\_call\\_\\_方法，当使用 @ 形式将装饰器附加到函数上时，就会调用此方法。</p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>class Foo(object):\n    def __init__(self, func):\n    self._func = func\n\ndef __call__(self):\n    print ('class decorator runing')\n    self._func()\n    print ('class decorator ending')\n\n@Foo\ndef bar():\n    print ('bar')\n\nbar()\n</code></pre></div><br><b>functools.wraps</b><p>使用装饰器极大地复用了代码，但是他有一个缺点就是原函数的元信息不见了，比如函数的docstring、__name__、参数列表，先看例子：</p><p>装饰器</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"k\">def</span> <span class=\"nf\">logged</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">with_logging</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"vm\">__name__</span> <span class=\"o\">+</span> <span class=\"s2\">\" was called\"</span>\n        <span class=\"k\">return</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">with_logging</span>\n</code></pre></div><p>函数</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"nd\">@logged</span>\n<span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n   <span class=\"sd\">\"\"\"does some math\"\"\"</span>\n   <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">x</span>\n</code></pre></div><p>该函数完成等价于：</p><br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"does some math\"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">x</span>\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">logged</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n</code></pre></div><p>不难发现，函数f被with_logging取代了，当然它的docstring，__name__就是变成了with_logging函数的信息了。</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"nb\">print</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>    <span class=\"c1\"># prints 'with_logging'</span>\n<span class=\"nb\">print</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"vm\">__doc__</span>     <span class=\"c1\"># prints None</span>\n</code></pre></div><p>这个问题就比较严重的，好在我们有functools.wraps，wraps本身也是一个装饰器，它能把原函数的元信息拷贝到装饰器函数中，这使得装饰器函数也有和原函数一样的元信息了。</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"k\">import</span> <span class=\"n\">wraps</span>\n<span class=\"k\">def</span> <span class=\"nf\">logged</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n    <span class=\"nd\">@wraps</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">with_logging</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"vm\">__name__</span> <span class=\"o\">+</span> <span class=\"s2\">\" was called\"</span>\n        <span class=\"k\">return</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">with_logging</span>\n\n<span class=\"nd\">@logged</span>\n<span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"does some math\"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">x</span>\n\n<span class=\"nb\">print</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>  <span class=\"c1\"># prints 'f'</span>\n<span class=\"nb\">print</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"vm\">__doc__</span>   <span class=\"c1\"># prints 'does some math'</span>\n</code></pre></div><br><b>内置装饰器</b><p>@staticmathod、@classmethod、@property</p>装饰器的顺序<br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"nd\">@a</span>\n<span class=\"nd\">@b</span>\n<span class=\"nd\">@c</span>\n<span class=\"k\">def</span> <span class=\"nf\">f</span> <span class=\"p\">():</span>\n</code></pre></div><p>等效于</p><br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)))</span>\n</code></pre></div>", "Python2和Python3哪个更适合初学者学习来爬虫呢？": "明确你学爬虫是为了什么。<br><br>为了好玩，那就Python3，妥妥的。<br>话说Python2.7到2020年就停止维护了，并且Python3现在有很多新特性，至于学爬虫需要的第三方库比如Requests、BeautifulSoup也都支持Python3了，这点不用担心。话说现在连Scrapy这个写爬虫的大杀器也支持Python3了吧。<br><br>为了工作，那还是Python2.7吧。<br>之前知乎上有位网易的工程师统计过身边各大互联网公司使用Python版本的情况，70%的人都用的是Python2.7。所以找工作的话，最好还是先学Python2。<br><br>至于咋学呢？<br><br>基础语法的话，<br><br>廖雪峰的教程就挺好（<a href=\"https://link.zhihu.com/?target=http%3A//www.liaoxuefeng.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Home - 廖雪峰的官方网站</a>），2.7和3都有。<br><br>实在想看书，那就<a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/6049132/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python学习手册（第4版） (豆瓣)</a>和<a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/4866934/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础教程 (豆瓣)</a>二选一。<br><br>你要是觉得这两本书太旧，并且都是讲python2的，那你就看这本，<a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/26829016/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python编程：从入门到实践 (豆瓣)</a>，最新的python3，很新很良心的一本书，16年出版，内容详实，布置合理，绝对是初学者入门的首选。<br><br><br><br>爬虫部分的学习，想看书的话，<br><br>Python2.7的话，看这本，<a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/26869992/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">用Python写网络爬虫 (豆瓣)</a>，16年8月出版的，不用担心过时，很良心的一本书。由浅入深，一步步地带你实现并完善一个爬虫。<br><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/v2-81f85922b3ddfb7e8fa57a1a0b70e48c_720w.jpg?source=54b3c3a5\" data-rawwidth=\"327\" data-rawheight=\"405\" class=\"content_image\" width=\"327\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='327'%20height='405'&gt;&lt;/svg&gt;\" data-rawwidth=\"327\" data-rawheight=\"405\" class=\"content_image lazy\" width=\"327\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-81f85922b3ddfb7e8fa57a1a0b70e48c_720w.jpg?source=54b3c3a5\"></figure><br><br>Python3的话，看这本，<a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/26740503/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python网络数据采集 (豆瓣)</a>，也是16年出版，同样也是介绍的很全面的一本书，urllib，正则，BeautifulSoup，Requests，正则，Scrapy，数据库等等你日后能用到的东西都讲到了，还有数据清洗和自然语言处理等比较高级的知识。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-260493d868b3794e695428236e6674a5_720w.jpg?source=54b3c3a5\" data-rawwidth=\"318\" data-rawheight=\"417\" class=\"content_image\" width=\"318\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='318'%20height='417'&gt;&lt;/svg&gt;\" data-rawwidth=\"318\" data-rawheight=\"417\" class=\"content_image lazy\" width=\"318\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-260493d868b3794e695428236e6674a5_720w.jpg?source=54b3c3a5\"></figure><br><br><br><br>不想看书，也可以直接看文档：<br><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/2/library/urllib.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">20.5. urllib - Open arbitrary resources by URL - Python 2.7.13 documentation</a><br><a href=\"https://link.zhihu.com/?target=http%3A//www.python-requests.org/en/master/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Requests: HTTP for Humans</a><br><a href=\"https://link.zhihu.com/?target=https%3A//www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Beautiful Soup 4.2.0 文档</a><br><a href=\"https://link.zhihu.com/?target=http%3A//scrapy-chs.readthedocs.io/zh_CN/0.24/intro/tutorial.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy入门教程 - Scrapy 0.24.6 文档</a><br>谷歌一搜一大堆，不会翻墙的话，百度搜也行。<br><br>额，收藏数是点赞数的三倍......<br><br>感觉写的好，对你有帮助，就点个赞呗，别光只收藏哈.~(￣▽￣)~", "TensorFlow 如何入门，如何快速学习？": "<p>大家好，我是 TensorFlow 中国研发负责人李双峰。感谢邀请。</p><p>TensorFlow 是端到端的开源机器学习平台。提供全面，灵活的专业工具，使个人开发者轻松创建机器学习应用，助力研究人员推动前沿技术发展，支持企业建立稳健的规模化应用。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-0054a001806503e777d815b2d1fcc368_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"512\" data-rawheight=\"286\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-47bc3de5c821cf058ca4185b4150aab0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"512\" data-original=\"https://pic4.zhimg.com/v2-0054a001806503e777d815b2d1fcc368_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='512'%20height='286'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"512\" data-rawheight=\"286\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-47bc3de5c821cf058ca4185b4150aab0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"512\" data-original=\"https://pic4.zhimg.com/v2-0054a001806503e777d815b2d1fcc368_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0054a001806503e777d815b2d1fcc368_720w.jpg?source=54b3c3a5\"></figure><p>从2015年发布以来，TensorFlow在全球已有4100万的下载。作为全球使用广泛的机器学习框架，TensorFlow 已经度过三周年，TensorFlow 逐渐成为了端到端的成熟平台，有着完整的生态体系。随着 TensorFlow 2.0 的发布，标志着 TensorFlow 全新时代到来，它更为简单易用，更为灵活强大，更为生产环境可用，希望 TensorFlow 可以成为适合所有用户的机器学习平台，可以帮助每一个人利用机器学习解决现实世界的难题。</p><p>在解答如何高效的入门TensorFlow之前，我们先了解一下机器学习的主要步骤，以及TensorFlow如何建立相应的生态进行支持。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-04f6baf99f1af39f7d086e277700f0fd_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1398\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0af468676e9ff989e1391f1ffc0aef4e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1440\" data-original=\"https://pic4.zhimg.com/v2-04f6baf99f1af39f7d086e277700f0fd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1440'%20height='1398'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1398\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0af468676e9ff989e1391f1ffc0aef4e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1440\" data-original=\"https://pic4.zhimg.com/v2-04f6baf99f1af39f7d086e277700f0fd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-04f6baf99f1af39f7d086e277700f0fd_720w.jpg?source=54b3c3a5\"></figure><p>机器学习主要分为训练和部署两个步骤。</p><p>在训练阶段，TensorFlow不仅支持Python，更提供对Swift语言和JS语言的支持，你可以选择你熟悉的语言来进行开发。</p><p>在部署阶段，TensorFlow模型可以跑在不同的平台，支持服务器端部署的TensorFlow Serving， 支持Android，iOS和嵌入式设备等端侧平台部署的TensorFlow Lite，支持浏览器和Node 服务器部署的TensorFlow.js，以及包括C语言，Java 语言，Go语言，C#语言，Rust和R等多种语言。</p><p>通过下面总体架构图，就能非常快速的理解整个TensorFlow 的关键组成部分。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-696bb6012ea27aa78b488ef1beb4eb67_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"316\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a0f5d8dc82a5a4c4bd8716bce0b18644_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-696bb6012ea27aa78b488ef1beb4eb67_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='554'%20height='316'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"316\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a0f5d8dc82a5a4c4bd8716bce0b18644_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-696bb6012ea27aa78b488ef1beb4eb67_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-696bb6012ea27aa78b488ef1beb4eb67_720w.jpg?source=54b3c3a5\"></figure><p>Teachable Machine 也是一个很好的入门方式，以轻松的交互体验帮助开发者理解机器学习的概念【<u><a href=\"https://link.zhihu.com/?target=https%3A//teachablemachine.withgoogle.com/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">teachablemachine.withgoogle.com</span><span class=\"invisible\">/</span><span class=\"ellipsis\"></span></a></u>】。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-01db1603014f9190fc442bf7f9a48ceb_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"281\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-01db1603014f9190fc442bf7f9a48ceb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic2.zhimg.com/v2-01db1603014f9190fc442bf7f9a48ceb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='500'%20height='281'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"281\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-01db1603014f9190fc442bf7f9a48ceb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"500\" data-original=\"https://pic2.zhimg.com/v2-01db1603014f9190fc442bf7f9a48ceb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-01db1603014f9190fc442bf7f9a48ceb_720w.jpg?source=54b3c3a5\"></figure><p>言归正传，我推荐现在开始想要学习TensorFlow的同学，从 TensorFlow 2.0 开始学习，它更简单易学，同时也是未来的趋势，越来越多的应用将基于 2.0。目前 TensorFlow 2.0 是 Beta 版本。【<i><u><a href=\"https://link.zhihu.com/?target=https%3A//tensorflow.google.cn/beta/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">tensorflow.google.cn/be</span><span class=\"invisible\">ta/</span><span class=\"ellipsis\"></span></a></u></i>】</p><p><br></p><p>TensorFlow的官方网站和线上课程是最好的学习起点。现在TensorFlow的中文官方网站已经上线【<u><a href=\"https://link.zhihu.com/?target=https%3A//tensorflow.google.cn/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">tensorflow.google.cn/</span><span class=\"invisible\"></span></a></u>】，开发者可以很顺畅的浏览网站内容。官方网站上有大量的基于TensorFlow的教程，覆盖了视觉、自然语言处理和语音等例子。【<u><a href=\"https://link.zhihu.com/?target=https%3A//tensorflow.google.cn/tutorials\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">tensorflow.google.cn/tu</span><span class=\"invisible\">torials</span><span class=\"ellipsis\"></span></a></u>】</p><p>由 TensorFlow 团队和优达学城共同打磨的TensorFlow 入门免费课程【<u><a href=\"https://link.zhihu.com/?target=https%3A//cn.udacity.com/course/intro-to-tensorflow-for-deep-learning--ud187\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">cn.udacity.com/course/i</span><span class=\"invisible\">ntro-to-tensorflow-for-deep-learning--ud187</span><span class=\"ellipsis\"></span></a></u>】中文版已经上线，通过该课程可以学习到如何应用TensorFlow构建神经网络、搭建模型、在不同环境部署模型等。从理论结合实践的角度讲解了深度学习知识。该课程也在持续更新当中。</p><p>那如何找到最适合自己的学习内容呢？</p><p>针对如何快速入门，起点不同、需求不同的开发者可以从以下几种方式开始 TensorFlow 机器学习探索之旅。</p><p>使用Keras高层API。Keras 是一个用于构建和训练深度学习模型的高阶 API，可用于快速设计原型、研究和生产环境使用。它具有易使用，模块化，可组合以及易于扩展等优点。Keras 是 TensorFlow 2.0 主要推荐的 API。你可以从学习 TensorFlow 官方网站上基于 Keras的教程开始【<i><u><a href=\"https://link.zhihu.com/?target=https%3A//tensorflow.google.cn/beta/tutorials/keras\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">tensorflow.google.cn/beta/tutorials/keras</a></u></i>】，并尝试解决一些简单的机器学习问题。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-2190e7280396f7d582d50ab8600dbeae_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"250\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-cb44704ce7c3932123b4eb1f76b98f8b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-2190e7280396f7d582d50ab8600dbeae_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='554'%20height='250'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"250\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-cb44704ce7c3932123b4eb1f76b98f8b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic4.zhimg.com/v2-2190e7280396f7d582d50ab8600dbeae_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-2190e7280396f7d582d50ab8600dbeae_720w.jpg?source=54b3c3a5\"></figure><p>如果你习惯使用JavaScript语言，可以试着使用 TensorFlow.js 在网页端创建小型的体验应用。TensorFlow 官网提供丰富的基于JavaScript 的 demo【<u><a href=\"https://link.zhihu.com/?target=https%3A//tensorflow.google.cn/js/demos\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">tensorflow.google.cn/js</span><span class=\"invisible\">/demos</span><span class=\"ellipsis\"></span></a></u>】，也准备了一系列可以开箱即用的模型，帮助你更快的在应用场景实现项目，快点体验TensorFlow.js 的强大功能吧【<u><a href=\"https://link.zhihu.com/?target=https%3A//tensorflow.google.cn/js/models\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">tensorflow.google.cn/js</span><span class=\"invisible\">/models</span><span class=\"ellipsis\"></span></a></u>】</p><p>微信小程序是JS开发者的重要阵地之一，针对JavaScript和小程序开发者 TensorFlow.js 提供了一个微信小程序的插件，它轻松将机器学习功能带入到小程序开发中，无需担忧背后的构建与开发。TensorFlow和微信小程序联合腾讯课堂NEXT学院共同发布的《TensorFlow.js遇上小程序》课程可以作为入门的学习教材来学习这个插件的应用【<u><a href=\"https://link.zhihu.com/?target=https%3A//ke.qq.com/course/428263\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">ke.qq.com/course/428263</span><span class=\"invisible\"></span></a></u>】。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d6039d5c89b388990a0052f3b3407eb8_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"246\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c0d0f71f4a9f37c6462697a67d04dc07_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-d6039d5c89b388990a0052f3b3407eb8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='554'%20height='246'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"246\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c0d0f71f4a9f37c6462697a67d04dc07_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"554\" data-original=\"https://pic2.zhimg.com/v2-d6039d5c89b388990a0052f3b3407eb8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d6039d5c89b388990a0052f3b3407eb8_720w.jpg?source=54b3c3a5\"></figure><p>TensorFlow Lite 提供了在移动端、嵌入式和物联网设备上运行 TensorFlow 模型所需的所有工具。如果你是移动应用开发者，可以尝试 TensorFlow Lite 的一系列模型和案例，【<u><a href=\"https://link.zhihu.com/?target=http%3A//tensorflow.google.cn/lite/models\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">tensorflow.google.cn/lite/models</a></u>】。可以先试试从图像分类的教程开始学习【<u><a href=\"https://link.zhihu.com/?target=https%3A//tensorflow.google.cn/lite/models/image_classification/overview\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">tensorflow.google.cn/li</span><span class=\"invisible\">te/models/image_classification/overview</span><span class=\"ellipsis\"></span></a></u>】</p><p>尝试使用 TensorFlow Hub 上预训练好的模型，参考【<u><a href=\"https://link.zhihu.com/?target=https%3A//tensorflow.google.cn/hub\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">tensorflow.google.cn/hub</a></u>】，也可以阅读现有的官方模型来学习如何设计模型【<u><a href=\"https://link.zhihu.com/?target=https%3A//github.com/tensorflow/models/tree/master/official\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/tensorflow/m</span><span class=\"invisible\">odels/tree/master/official</span><span class=\"ellipsis\"></span></a></u>】</p><p>这些汉化的官方资料离不开 TensorFlow 社区志愿者的努力，我们正不断对开发文档进行翻译【<a href=\"https://link.zhihu.com/?target=https%3A//tensorflow.google.cn/tutorials\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">tensorflow.google.cn/tu</span><span class=\"invisible\">torials</span><span class=\"ellipsis\"></span></a>】，希望可以给中文母语的开发者提供更便捷的教程。如果你也有兴趣加入志愿翻译的队伍请访问【<u><a href=\"https://link.zhihu.com/?target=https%3A//github.com/tensorflow/docs/tree/master/site/zh-cn\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/tensorflow/d</span><span class=\"invisible\">ocs/tree/master/site/zh-cn</span><span class=\"ellipsis\"></span></a></u>】。</p><p>加入社群也是获得快速成长的一种有效方式，TensorFlow User Group (TFUG) 现在已经在15个城市成立了TensorFlow开发者社区，如果其中有你所在的城市，记得去寻找组织哦！TFUG 城市清单：【<i><u><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/il2-2oGsIuzLWT8Rnpvkhg\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">mp.weixin.qq.com/s/il2-</span><span class=\"invisible\">2oGsIuzLWT8Rnpvkhg</span><span class=\"ellipsis\"></span></a></u></i>】</p><p>关于TensorFlow的最新技术指导会持续的更新在官方公众号，我们也不断邀请各类TensorFlow的应用企业分享他们的机器学习实现和体会，也是一个有效的学习途径。</p><p>最后，提醒各位关注TensorFlow的开发者们，2019 Google开发者大会将于9月10日正式开幕，大会现场将会涵盖TensorFlow的各方面议程，不论是TensorFlow的最新资讯还是未来发展方向，到场来宾都可以与Google的技术团队和行业翘楚们进行观点交流和深入探讨。大会还会为到场来宾提供Google技术的实际体验区，可以在这里亲身体验现代科学与艺术的惊艳融合，全方位探索Google的技术与平台。</p><p> 在本次活动日程页面（链接如下），选择你感兴趣的议程，即可生成专属于你的定制大会日程表。动起手来制作你的日程表，与朋友们一起分享吧！<u><a href=\"https://link.zhihu.com/?target=https%3A//events.google.cn/intl/zh-CN/developerdays2019/agenda/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">events.google.cn/intl/z</span><span class=\"invisible\">h-CN/developerdays2019/agenda/</span><span class=\"ellipsis\"></span></a></u></p><figure data-size=\"small\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-307dc5a8c4bcfe109c1fe8f72d857c47_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"670\" data-rawheight=\"896\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-acb0daa113199b9237a1c711c599be13_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"670\" data-original=\"https://pic1.zhimg.com/v2-307dc5a8c4bcfe109c1fe8f72d857c47_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='670'%20height='896'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"670\" data-rawheight=\"896\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-acb0daa113199b9237a1c711c599be13_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"670\" data-original=\"https://pic1.zhimg.com/v2-307dc5a8c4bcfe109c1fe8f72d857c47_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-307dc5a8c4bcfe109c1fe8f72d857c47_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>没法来现场的朋友们也别着急，你还可以通过大会现场直播获得第一手信息，具体直播渠道请关注谷歌开发者公众号，后续信息会在公众号中进行公布。</p><p></p>"}{"你有哪些想要分享的 PyCharm 使用技巧？": "<p>为 PyCharm 新手整理了最常用的10个小技巧，能帮你省下不少时间。</p><h2><b>0. 常用快捷键</b></h2><p>先上两张速查图，可以设为桌面或者打印出来放在手边，想不起来时瞄一眼，很快就能记住常用快捷键了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-cb058dde6f3580de6589eedc8193acee_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3308\" data-rawheight=\"1805\" class=\"origin_image zh-lightbox-thumb\" width=\"3308\" data-original=\"https://pic2.zhimg.com/v2-cb058dde6f3580de6589eedc8193acee_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='3308'%20height='1805'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3308\" data-rawheight=\"1805\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"3308\" data-original=\"https://pic2.zhimg.com/v2-cb058dde6f3580de6589eedc8193acee_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-cb058dde6f3580de6589eedc8193acee_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-6907ff91de0072a7b52bb38518b3f738_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3308\" data-rawheight=\"1805\" class=\"origin_image zh-lightbox-thumb\" width=\"3308\" data-original=\"https://pic1.zhimg.com/v2-6907ff91de0072a7b52bb38518b3f738_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='3308'%20height='1805'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3308\" data-rawheight=\"1805\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"3308\" data-original=\"https://pic1.zhimg.com/v2-6907ff91de0072a7b52bb38518b3f738_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-6907ff91de0072a7b52bb38518b3f738_720w.jpg?source=54b3c3a5\"></figure><p><br></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>这里压缩图片画质太厉害了，啥都看不清，好多同学跟我要原图。\n关注微信公众号「麻瓜编程」，回复「pycharm」可以获得快捷键速查图原图。\n</code></pre></div><h2><b>1. 查看使用库源码</b></h2><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-dadfbdb13d76925de2f64258281181c9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"636\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-dadfbdb13d76925de2f64258281181c9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='636'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"636\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-dadfbdb13d76925de2f64258281181c9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-dadfbdb13d76925de2f64258281181c9_720w.jpg?source=54b3c3a5\"></figure><p>经常听人说，多看源码。源码不仅能帮我们搞清楚运行机制，还能学习优秀的库或者框架的最佳实践。调用库时，你可以在你好奇的几乎任何地方点击 <i>Command+B</i>，就可以很方便的跳转到源码里的类，方法，函数，变量的定义。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/870276453617504256\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic2.zhimg.com/v2-36e18d0c9a7fcb7335ef7a631eb7f80d.jpg\" data-lens-id=\"870276453617504256\">              <img class=\"thumbnail\" src=\"https://pic2.zhimg.com/v2-36e18d0c9a7fcb7335ef7a631eb7f80d.jpg\">              <span class=\"content\">                <span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/870276453617504256</span>              </span>            </a>            <p><br></p><h2><b>2. 让你的代码 PEP8</b></h2><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-393e12efbbbbaf80f062d6f54ecf2445_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"585\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-393e12efbbbbaf80f062d6f54ecf2445_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='585'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"585\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-393e12efbbbbaf80f062d6f54ecf2445_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-393e12efbbbbaf80f062d6f54ecf2445_720w.jpg?source=54b3c3a5\"></figure><p>写 Python 代码时，你会严格遵守 pep8 规范么？还是要遵守的，不然代码传到 github 或者知乎上被人怼就不好了。但是如果靠肉眼去检查和注意的话，太累，靠 PyCharm 来做这事就好，<i>Command+Option+L</i>，一键 pep8 走起。</p><p><br></p><h2><b>3. 新手不再愁安装库</b></h2><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-b6655f27ce948f49a56fbc4778dcecff_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"612\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-b6655f27ce948f49a56fbc4778dcecff_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='612'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"612\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-b6655f27ce948f49a56fbc4778dcecff_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-b6655f27ce948f49a56fbc4778dcecff_720w.jpg?source=54b3c3a5\"></figure><p>如果你是新手，可能会为了安装库而感到烦恼，在 PyCharm 里面可以使用你熟悉的图形化界面来安装库，就不用陷在一堆命令行里了。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/870276553974620160\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic2.zhimg.com/v2-40ba73f69122072a695d001bf9da7b35.jpg\" data-lens-id=\"870276553974620160\">              <img class=\"thumbnail\" src=\"https://pic2.zhimg.com/v2-40ba73f69122072a695d001bf9da7b35.jpg\">              <span class=\"content\">                <span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/870276553974620160</span>              </span>            </a>            <p><br></p><h2><b>4. 查找文件，类， 方法</b></h2><p>当我们需要在项目中寻找一个文件名的时候，输入 <i>Command + Shift + O</i>，然后输入你想查找的文件名就可以了。如果你不记得全名了，只需要输入首字母，Pycharm 就会提示你。比如我想查找一个叫 <i>test_errors.py</i> 的文件，那么只需要输入<i> tee</i> 就可以找到。又或者查询 <i>test_errors_1.py</i> 那么只需要输入 <i>tee1</i> 就可以查找到。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/870276699542151168\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic3.zhimg.com/v2-846531569c89da834591a9f2df0900e6.jpg\" data-lens-id=\"870276699542151168\">              <img class=\"thumbnail\" src=\"https://pic3.zhimg.com/v2-846531569c89da834591a9f2df0900e6.jpg\">              <span class=\"content\">                <span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/870276699542151168</span>              </span>            </a>            <p><br></p><h2><b>5. 快速选择代码块</b></h2><p>你会怎么快速注释一段 Python 代码块？不会是一行一行的加#吧……</p><p>在需要选择某个函数的时候，只需要把光标放在最前面，然后点击 <i>Command + Option + Shift + [ </i>，就可以选择对当前代码块, 使用 <i>Command + / </i>注释。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/870276768051920896\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic1.zhimg.com/v2-69a7497781287f83b6d922d1687ac694.jpg\" data-lens-id=\"870276768051920896\">              <img class=\"thumbnail\" src=\"https://pic1.zhimg.com/v2-69a7497781287f83b6d922d1687ac694.jpg\">              <span class=\"content\">                <span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/870276768051920896</span>              </span>            </a>            <p><br></p><h2><b>6.快速插入常用代码</b></h2><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-107fec50a31a59e11e873f7924fcc51f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"728\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic4.zhimg.com/v2-107fec50a31a59e11e873f7924fcc51f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='728'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"728\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic4.zhimg.com/v2-107fec50a31a59e11e873f7924fcc51f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-107fec50a31a59e11e873f7924fcc51f_720w.jpg?source=54b3c3a5\"></figure><p>有时候需要输入很长的代码，比如 <i>if __name__ == '__main__':</i> ，这时候手动输入不如直接 <i>Command + J</i> ，就可以直接插入常用代码了。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/870276820145147904\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic3.zhimg.com/v2-11048151c9693c0dd2ccd196345f8e96.jpg\" data-lens-id=\"870276820145147904\">              <img class=\"thumbnail\" src=\"https://pic3.zhimg.com/v2-11048151c9693c0dd2ccd196345f8e96.jpg\">              <span class=\"content\">                <span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/870276820145147904</span>              </span>            </a>            <p><br></p><h2><b>7.运行/调试代码</b></h2><p>运行代码、调试代码应该是大多数人最常用的快捷键吧。具体操作见视频：</p><p><br></p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//v.qq.com/x/cover/n05165kwfy6/n05165kwfy6.html\" target=\"_blank\" data-video-id=\"870282200904527872\" data-video-playable=\"true\" data-name=\"7运行或调试_腾讯视频\" data-poster=\"https://pic1.zhimg.com/v2-f9f5dfd8d903782e5fe7fbdb06c92008.jpg\" data-lens-id=\"\">              <img class=\"thumbnail\" src=\"https://pic1.zhimg.com/v2-f9f5dfd8d903782e5fe7fbdb06c92008.jpg\">              <span class=\"content\">                <span class=\"title\">7运行或调试_腾讯视频<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://v.qq.com/x/cover/n05165kwfy6/n05165kwfy6.html</span>              </span>            </a>            <p><br></p><h2><b>8.缩进你的代码块</b></h2><p>在写前端页面的时候，经常要更改一大段代码的缩进，这时候可以先用 <i>Shift + 上下键</i> 来选择你要缩进的代码块，然后使用 <i>Tab</i> 就能缩进啦。</p><p><br></p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//v.qq.com/x/cover/k0516ol5f2q/k0516ol5f2q.html\" target=\"_blank\" data-video-id=\"870281820938330112\" data-video-playable=\"true\" data-name=\"8缩进代码块_腾讯视频\" data-poster=\"https://pic3.zhimg.com/v2-b1a06e396c555438ef587691be34cf8e.jpg\" data-lens-id=\"\">              <img class=\"thumbnail\" src=\"https://pic3.zhimg.com/v2-b1a06e396c555438ef587691be34cf8e.jpg\">              <span class=\"content\">                <span class=\"title\">8缩进代码块_腾讯视频<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://v.qq.com/x/cover/k0516ol5f2q/k0516ol5f2q.html</span>              </span>            </a>            <p><br></p><h2><b>9.展开/收缩代码</b></h2><p>当项目写到一定规模的时候，难免方法/函数会很多，这个时候我们可以使用</p><p><i>Command + Shift + -符号</i> 来收缩代码，这个主要是为了方便查看。</p><p><br></p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//v.qq.com/x/cover/i05165x5smx/i05165x5smx.html\" target=\"_blank\" data-video-id=\"870279673492418560\" data-video-playable=\"true\" data-name=\"9展开／收缩代码_腾讯视频\" data-poster=\"https://pic1.zhimg.com/v2-fa7594c586a9bb5d94b1e345f439a2ac.jpg\" data-lens-id=\"\">              <img class=\"thumbnail\" src=\"https://pic1.zhimg.com/v2-fa7594c586a9bb5d94b1e345f439a2ac.jpg\">              <span class=\"content\">                <span class=\"title\">9展开／收缩代码_腾讯视频<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://v.qq.com/x/cover/i05165x5smx/i05165x5smx.html</span>              </span>            </a>            <p><br></p><h2><b>10.展示多个页面</b></h2><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f21ad6fc87a18d7b608192d3c5a49307_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"312\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-f21ad6fc87a18d7b608192d3c5a49307_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='312'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"312\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-f21ad6fc87a18d7b608192d3c5a49307_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f21ad6fc87a18d7b608192d3c5a49307_720w.jpg?source=54b3c3a5\"></figure><p>当你的公司不愿意为你配置2个显示屏时，你依然可以使用 PyCharm 在一个屏幕里查看多个文件。鼠标放到当前导航处的文件名，然后右键 <i>Split Vertically</i> 或者 <i>Split Horizontally</i> 就可以啦。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//v.qq.com/x/cover/l0516z0yiqy/l0516z0yiqy.html\" target=\"_blank\" data-video-id=\"860180435290976256\" data-video-playable=\"true\" data-name=\"_腾讯视频\" data-poster=\"https://pic2.zhimg.com/v2-1d987a18499b37f4da680bee832022c5.jpg\" data-lens-id=\"\">              <img class=\"thumbnail\" src=\"https://pic2.zhimg.com/v2-1d987a18499b37f4da680bee832022c5.jpg\">              <span class=\"content\">                <span class=\"title\">_腾讯视频<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://v.qq.com/x/cover/l0516z0yiqy/l0516z0yiqy.html</span>              </span>            </a>            <p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p>——————————纠结的更新分割线——————————</p><p>看到大家这么喜欢很开心，想更新10个高阶一点的技巧，又有点担心太长了没人看，很纠结。不过本着对知识负责的态度，还是要更新高阶技巧的。看不完没关系，先收藏起来以后再看嘛。</p><h2><b>11.IdeaVim 插件回到 VIM</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-43951426b5aca15086d41aa64b774049_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"728\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-43951426b5aca15086d41aa64b774049_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='728'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"728\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-43951426b5aca15086d41aa64b774049_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-43951426b5aca15086d41aa64b774049_720w.jpg?source=54b3c3a5\"></figure><p>如果你是 VIM 的忠实粉丝，那么没关系，IdeaVim 插件让你能享受 PyCharm 的智能可视化功能时 还不失去 VIM 的快捷编辑 。Enjoy VIM in PyCharm!</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/870275239672696832\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic4.zhimg.com/v2-6c125045cd45bea4c0b7376a6a65cacb.jpg\" data-lens-id=\"870275239672696832\">              <img class=\"thumbnail\" src=\"https://pic4.zhimg.com/v2-6c125045cd45bea4c0b7376a6a65cacb.jpg\">              <span class=\"content\">                <span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/870275239672696832</span>              </span>            </a>            <p><br></p><h2><b>12. 设置代码模板</b></h2><p>设置代码模版是个非常实用的技巧，通过代码模版我们可以指定新建代码文件诸如解释器路径、文件编码方法、版权、作者等通用信息。</p><p><br></p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/870275357499080704\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic3.zhimg.com/v2-40cb12a89fd5b0477ecc0a4f5039b286.jpg\" data-lens-id=\"870275357499080704\">              <img class=\"thumbnail\" src=\"https://pic3.zhimg.com/v2-40cb12a89fd5b0477ecc0a4f5039b286.jpg\">              <span class=\"content\">                <span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/870275357499080704</span>              </span>            </a>            <p><br></p><h2><b>13. 函数调用层级可视化</b></h2><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f8e32f5cedd4252b99c8084f5f751d97_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"711\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic4.zhimg.com/v2-f8e32f5cedd4252b99c8084f5f751d97_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='711'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"711\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic4.zhimg.com/v2-f8e32f5cedd4252b99c8084f5f751d97_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f8e32f5cedd4252b99c8084f5f751d97_720w.jpg?source=54b3c3a5\"></figure><p>在大型项目中，函数调用关系及其复杂时，若我们要从整体上理清业务的逻辑关系，那么关键函数的调用层级信息则非常重要。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//v.qq.com/x/cover/u1319g8fad7/u1319g8fad7.html\" target=\"_blank\" data-video-id=\"860886501226074112\" data-video-playable=\"true\" data-name=\"Pycharm 操作03_腾讯视频\" data-poster=\"https://pic4.zhimg.com/v2-4e89946d182cbb19fd5d755b997b7cd7.jpg\" data-lens-id=\"\">              <img class=\"thumbnail\" src=\"https://pic4.zhimg.com/v2-4e89946d182cbb19fd5d755b997b7cd7.jpg\">              <span class=\"content\">                <span class=\"title\">Pycharm 操作03_腾讯视频<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://v.qq.com/x/cover/u1319g8fad7/u1319g8fad7.html</span>              </span>            </a>            <p><br></p><h2><b>14. 实时显示文档和函数参数</b></h2><p>当你在默默写着代码时，突然发现自己忘记了正使用的库函数定义和参数时，你会怎么办，切出到浏览器里搜索该函数吗？NO，PyCharm 提供了更好的方法，只需要一键即可显示出该函数的定义，并且可以实时显示出参数。在 PyCharm 中， 通过快捷键 <i>F1</i> 可以调出光标处函数文档，<i>Command+P</i> 可以显示出光标处函数参数。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//v.qq.com/x/cover/t0516rqntvo/t0516rqntvo.html\" target=\"_blank\" data-video-id=\"860907788057071616\" data-video-playable=\"true\" data-name=\"14. 实时显示文档和函数参数_腾讯视频\" data-poster=\"https://pic1.zhimg.com/v2-161cd053c3e93d37af5db00caf6c0e04.jpg\" data-lens-id=\"\">              <img class=\"thumbnail\" src=\"https://pic1.zhimg.com/v2-161cd053c3e93d37af5db00caf6c0e04.jpg\">              <span class=\"content\">                <span class=\"title\">14. 实时显示文档和函数参数_腾讯视频<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://v.qq.com/x/cover/t0516rqntvo/t0516rqntvo.html</span>              </span>            </a>            <p><br></p><h2><b>15. 超实用搜索 Search Everywhere</b></h2><p>提到搜索，不得不表扬下 PyCharm 的 <i>Search Everywhere</i> 功能，你可以搜索到整个项目中（包括库文件）所有类、文件、符号（变量、函数）等，非常方便。当然它也支持你单独搜索类、文件或符号。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//v.qq.com/x/cover/o131975dqnf/o131975dqnf.html\" target=\"_blank\" data-video-id=\"860886761042219008\" data-video-playable=\"true\" data-name=\"Pycharm 操作05_腾讯视频\" data-poster=\"https://pic2.zhimg.com/v2-65c8c051f21b87b28c0704a4fcc89271.jpg\" data-lens-id=\"\">              <img class=\"thumbnail\" src=\"https://pic2.zhimg.com/v2-65c8c051f21b87b28c0704a4fcc89271.jpg\">              <span class=\"content\">                <span class=\"title\">Pycharm 操作05_腾讯视频<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://v.qq.com/x/cover/o131975dqnf/o131975dqnf.html</span>              </span>            </a>            <p><br></p><h2><b>16. DEBUG</b></h2><p>试想下，Python 怎么进行调试呢？pdb，没错，这个和 gdb 类似的工具。那么一般如何使用， 一种常见的方式是在需要加入断点的地方插入 <i>import pdb; pdb.set_trace()</i>， 然后再正常运行脚本， 程序会自动在设置断点处停下来。 在 PyCharm 中，你可以像使用 VC++调试 C/C++代码那样来调试 Python，这种既视感可是很舒服的。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//v.qq.com/x/cover/e1319ffgcd4/e1319ffgcd4.html\" target=\"_blank\" data-video-id=\"860886866235392000\" data-video-playable=\"true\" data-name=\"Pycharm 操作06_腾讯视频\" data-poster=\"https://pic3.zhimg.com/v2-dc22300b5d455a740aa80862e2184d7a.jpg\" data-lens-id=\"\">              <img class=\"thumbnail\" src=\"https://pic3.zhimg.com/v2-dc22300b5d455a740aa80862e2184d7a.jpg\">              <span class=\"content\">                <span class=\"title\">Pycharm 操作06_腾讯视频<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://v.qq.com/x/cover/e1319ffgcd4/e1319ffgcd4.html</span>              </span>            </a>            <p><br></p><h2><b>17. 智能重构</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-c54e3d09d2ff7a8ce8fddf3d1e298fae_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"592\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-c54e3d09d2ff7a8ce8fddf3d1e298fae_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='592'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"592\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-c54e3d09d2ff7a8ce8fddf3d1e298fae_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-c54e3d09d2ff7a8ce8fddf3d1e298fae_720w.jpg?source=54b3c3a5\"></figure><p>某日产品经理丢来一个需求，要求一周搞定，然后你每晚加班到凌晨辛勤工作来搞定这个需求，时间刚好过去一半，产品经理又来找你了，“我们这个需求能否做点小调整”，当你听到这个消息时，你的心里应该隐隐感觉到不妙。是的，产品经理可不管你之前代码 import 依赖有多复杂，函数或者变量或者类的命名是否贴切，代码文件路径是否合适......So，幸好 PyCharm 有智能的 Refactor 功能， 让你轻松重构函数、类，变换路径，更改文件名等等操作。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=http%3A//v.youku.com/v_show/id_XMjgzOTQzMTE4OA%3D%3D.html\" target=\"_blank\" data-video-id=\"860907967564894208\" data-video-playable=\"true\" data-name=\"7智能重构\" data-poster=\"\" data-lens-id=\"\">              <img class=\"thumbnail\" src=\"\">              <span class=\"content\">                <span class=\"title\">7智能重构<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>http://v.youku.com/v_show/id_XMjgzOTQzMTE4OA==.html</span>              </span>            </a>            <p><br></p><h2><b>18. 快捷生成单元测试模板</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1dba6a3283db18776b19e88ebdd8ff58_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"610\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic4.zhimg.com/v2-1dba6a3283db18776b19e88ebdd8ff58_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='610'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"610\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic4.zhimg.com/v2-1dba6a3283db18776b19e88ebdd8ff58_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1dba6a3283db18776b19e88ebdd8ff58_720w.jpg?source=54b3c3a5\"></figure><p>单元测试是每个程序员都无法逾越的一道鸿沟，甚至单元测试覆盖率也会用来评估软件的健壮性。PyCharm 则提供了快速生成单元测试模版的方法。当然，PyCharm 只是帮你生成了单元测试的基础代码，测试的逻辑还是需要自己码的。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//v.qq.com/x/cover/v1319dj0r0g/v1319dj0r0g.html\" target=\"_blank\" data-video-id=\"860887511604559872\" data-video-playable=\"true\" data-name=\"PyCharm 08_腾讯视频\" data-poster=\"https://pic1.zhimg.com/v2-3a46692d6772b5389af0b784b7901484.jpg\" data-lens-id=\"\">              <img class=\"thumbnail\" src=\"https://pic1.zhimg.com/v2-3a46692d6772b5389af0b784b7901484.jpg\">              <span class=\"content\">                <span class=\"title\">PyCharm 08_腾讯视频<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://v.qq.com/x/cover/v1319dj0r0g/v1319dj0r0g.html</span>              </span>            </a>            <p><br></p><h2><b>19. 图形化 VSC 操作之 git</b></h2><p>git 作为程序员代码版本管理利器，广为程序员使用。但如果你对记忆 git 一堆堆命令比较头痛的话，那么 PyCharm 的图形化 VCS 将是你的拯救者。PyCharm 的 VCS 支持 git 和 svn，并通过图形界面方式提供了你所能想到的功能，而且界面简洁，易于操作。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//v.qq.com/x/cover/x0516clxk7p/x0516clxk7p.html\" target=\"_blank\" data-video-id=\"860907888867180544\" data-video-playable=\"true\" data-name=\"19. 图形化 VSC 操作之 git_腾讯视频\" data-poster=\"https://pic3.zhimg.com/v2-ca7fd7759e5b65d993a59d8309eeb3d2.jpg\" data-lens-id=\"\">              <img class=\"thumbnail\" src=\"https://pic3.zhimg.com/v2-ca7fd7759e5b65d993a59d8309eeb3d2.jpg\">              <span class=\"content\">                <span class=\"title\">19. 图形化 VSC 操作之 git_腾讯视频<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://v.qq.com/x/cover/x0516clxk7p/x0516clxk7p.html</span>              </span>            </a>            <p><br></p><h2><b>20. 利用 ssh 远程部署</b></h2><p>一般参与开发的大型项目时，个人负责的小组件都可能会依赖其它组建才能运行起来，而其它组建又比较复杂而不便于本地部署时，你会怎么办？是选择每次修改后，手动打包拷贝到远程服务器，在远程服务器上解压部署；还是希望在编辑器中修改之后，编辑器自动同步到远程服务器呢。不出意外，你会选择后者，而 PyCharm 则帮你实现了，你只需要配置一次，即可一劳永逸。</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//v.qq.com/x/cover/d1319z8t9zu/d1319z8t9zu.html\" target=\"_blank\" data-video-id=\"860887737379753984\" data-video-playable=\"true\" data-name=\"Pycharm 操作10_腾讯视频\" data-poster=\"https://pic2.zhimg.com/v2-ef2657aab432f54b4fd6cc647d406e2d.jpg\" data-lens-id=\"\">              <img class=\"thumbnail\" src=\"https://pic2.zhimg.com/v2-ef2657aab432f54b4fd6cc647d406e2d.jpg\">              <span class=\"content\">                <span class=\"title\">Pycharm 操作10_腾讯视频<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://v.qq.com/x/cover/d1319z8t9zu/d1319z8t9zu.html</span>              </span>            </a>            <p>好多同学跟我要原图。<br>关注微信公众号「麻瓜编程」，回复「<b>pycharm</b>」可以获得 PyCharm 快捷键速查图的高清原图。</p><hr><p>学 Python ≠ 100G 视频资料</p><p>学 Python ≠ 傻瓜式的在线填空题</p><p>只有多写实操项目，才能学的高效。只有建立自己的知识体系，才能学的踏实。</p><p>这是我们一直在强调的学习方法，试过的人都学成了，没听进去的人都吃亏了。于是这一次，我们把学习方法做进了课程体系里。</p><p>学习顺序按照「<b>学习-测评-实操</b>」进行，强制你多写代码多练习，让你学的高效。</p><p>课程按照「<b>建立知识模型-用法必知必会-上手项目案例-系统学习脑图</b>」的知识体系，逐个模块系统递进，既有完整实操项目从零到上线，又有系统脑图的体系化，让你学的踏实。</p><p>这是只在「Python 后端工程师培养计划」才有的学习体验。</p><p>查看课程目录、免费试听：</p><a href=\"https://link.zhihu.com/?target=https%3A//www.mugglecode.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-d60440d4a0bbebb2e390169393ae6ff8_bh.jpg?source=54b3c3a5\" data-image-width=\"986\" data-image-height=\"748\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 后端工程师培养计划</a><p></p>", "Python 打包成 exe，太大了该怎么解决？": "<p>这是一个很长的故事，嫌长的直接看最后的结论</p><h2><b>事情经过</b></h2><p>上周接了个需求，写了个小工具给客户，他要求打包成exe文件，这当然不是什么难事。因为除了写Python的，绝大多数人电脑里都没有Python编译器，所以打包成exe，让用户（windows）双击就可以打开，也算是必备技能了。</p><p>直接用Pyinstaller，打开cmder:</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pyinstaller -Fw E:\\test\\url_crawler.py\n</code></pre></div><p>（-F 是打包成一个文件，-w是不出现调试窗口，因为我的小工具里有GUI，所以不用默认的调试窗口）</p><p>等了好久，终于完成打包，一看文件，嚯，200M！怪不得打包了这么久...</p><p>上网查了下资料，有人说，Anaconda里内置了很多库，打包的时候打包了很多不必要的模块进去，要用纯净的Python来打包。</p><p>有点道理，想着装虚拟机时间更长，准备拿出闲置的笔记本，重新装个Python来打包。</p><p>可刚巧我最近在学flask的时候，用到pipenv，虽然还不懂pipenv的强大之处，但知道它是个管理虚拟环境和包的工具，于是想着能不能用pipenv来创建一个新的python编译器以运行pyinstaller进行打包。</p><p>于是赶紧上网查了一下，pipenv pyinstaller，没有搜到有用的信息，干脆自己试一试，反正pipenv操作不麻烦。</p><p>打开cmder:</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#建立虚拟环境\npipenv install\n#进入虚拟环境\npipenv shell\n#安装模块\npip install 小工具.py里面用到的模块\n#打包的模块也要安装\npip install pyinstaller\n#开始打包\npyinstaller -Fw E:\\test\\url_crawler.py\n</code></pre></div><p>打包完成，一看大小，11M！成功！</p><p>后来因为客户改了需求，我又改了一下源代码，然后换了个目录用pipenv重新打包，结果打包完又变回200M！尝试了无数次，怎么也回不到过去的20M！我都怀疑之前的20M是我的幻觉了。</p><p>不过无论如何要先交差，200M的“小“工具，用户体验肯定不行，所以我就用排除法，看看是哪个模块占的体积大，再想办法优化。最先怀疑的是GUI，我几乎毫不犹豫地认定是它，我用的是PySimpleGUI（强烈推荐，基于tkinter)，先把PySimpleGUI的内容注释掉，再进行打包，你们猜打包完有多大？</p><p>198M！</p><p>看来是我错怪他了，经过几次排除，发现了罪魁祸首就是：fake_useragent</p><p>这个库是用来伪装请求头的，主要是我懒得复制user-agent，所以问题不大，把fake_useragent注释掉，自己手动粘贴一个user-agent就行了</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#from fake_useragent import UserAgent\n\n#ua = UserAgent()\n#headers = {'user-agent':ua.random}\nheaders = {'user-agent':'Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.17 Safari/537.36'}\n</code></pre></div><p>不用fake_useragent，打包成exe是 14M，已经不错了，先交差再说</p><p>之后经过了多次探索，多次放弃的边缘（反复删除创建环境），终于找到了完美打包的方法</p><h2><b>结论</b></h2><p>关键点就一个：<b>要在虚拟环境里安装pyinstaller</b></p><p>如果你没有在虚拟环境中安装pyinstaller，你同样可以使用pyinstaller命令，但是调用的是你系统原本的那个python编译器，内含很多关联库，导致即使在虚拟环境中，你打包的exe文件仍然非常大。</p><p>另外一点要注意的是：要在虚拟环境里安装好你py文件中调用的库，不然打包出来也没法正常运行。</p><p>最后再复习一下正确流程 (前提是安装好pipenv）：</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"c1\">#建立虚拟环境</span>\n<span class=\"n\">pipenv</span> <span class=\"n\">install</span>\n<span class=\"c1\">#进入虚拟环境（上一步可省略,因为没有虚拟环境的话会自动建立一个）</span>\n<span class=\"n\">pipenv</span> <span class=\"n\">shell</span>\n<span class=\"c1\">#安装模块</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">requests</span> <span class=\"n\">pyquery</span> <span class=\"n\">pysimplegui</span> <span class=\"n\">fake_useragent</span>\n<span class=\"c1\">#打包的模块也要安装</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">pyinstaller</span>\n<span class=\"c1\">#开始打包</span>\n<span class=\"n\">pyinstaller</span> <span class=\"o\">-</span><span class=\"n\">Fw</span> <span class=\"n\">E</span><span class=\"p\">:</span>\\<span class=\"n\">test</span>\\<span class=\"n\">url_crawler</span><span class=\"o\">.</span><span class=\"n\">py</span>\n</code></pre></div><p><br></p><p>如果卡到某一个步骤的话，欢迎进群提问！</p><p>----------我建了个 Python 新手交流群供大家学习交流，要入群的请看我个人简介vx--------</p><p></p>", "有多少人按@萧井陌大神给出的Python+Flask路线找到工作了？": "<p><b>声明</b>：只是经验分享！！！当故事看看就好。不同的人，不同的环境，不具备可复制性。故事看完路还是要自己走的。</p><br><p>我照着萧大的指导找到了工作，已经入职有一个月了，过来将我的过程分享出来，希望能有点参考价值。</p><p>先介绍下我的基本情况：211本科土木工程，大学期间学过一丁点儿C语，算是零基础。毕业后在工地上做建筑施工工作五个月，然后转行到一个外包公司做功能测试八个月，9月中旬入职现在的公司，工作内容是用python做openstack的二次开发。</p><br><p>下面说下详细过程：\n最早接触python是在《黑客与画家》这本书中，在大学里看闲书读到的，其中有一篇作者特别推崇python，当时没有去了解更多，但对python有了深刻印象。</p><p>在工地工作期间有转行的想法时，因为深圳有腾讯，便想不如去做程序员吧。当年的C语考试将近满分，让我对学编程没有畏惧心理。于是便想起了python，在知乎搜索收集了一通信息，建了个收藏夹<a href=\"http://www.zhihu.com/collection/39258656\" class=\"internal\">那些幻想</a>，当时还只是幻想，没有开始行动。</p><p>后来下定决心转行了，就找到了《Python简明教程》（A Byte of Python）打印了跟着敲。</p><p>当时对于从什么岗位干起两眼一抹黑，机缘巧合，经一个朋友的介绍认识了一个干了十年嵌入式的程序员，他建议我可以<b>从测试岗位干起，工作门槛不高，而且工作相对轻松，有时间自学</b>。于是投测试岗位的简历，顺利找到一份功能测试工作，元旦后入职。公司的程序员用的是Java。</p><p>测试岗位确实比较闲，入职没几天，我就把《Python简明教程》剩下的部分学完了。然后直到过年回家的一个月时间，我陷入了迷茫。Foxmail订阅了国内的各种互联网媒体博客等，每天了解国内外IT界的新闻就花掉几个小时的工作时间，其他时间学一些测试的东西，没有人带，自己上网搜，东一榔头西一棒子的看，<b>觉得有用的记录到印象笔记上</b>。</p><p>过年期间，一声炮响，送来了萧大的<a href=\"http://zhuanlan.zhihu.com/xiao-jing-mo/19959253\" class=\"internal\">编程入门指南 </a>（现在是1.4版本，较之前的版本有改动）。顿觉前途明亮人生有望了有没有！！！</p><p>年后回到深圳，有了指路明灯，还不策马狂奔？花了一周时间去codecademy上敲完python部分，然后开始听<a href=\"https://link.zhihu.com/?target=http%3A//www.xuetangx.com/courses/MITx/6_00_1x/2014_T2/about\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">计算机科学和Python编程导论</a>，做课后的Problem Set，同时开始支线任务《<a href=\"https://link.zhihu.com/?target=http%3A//book.douban.com/subject/3112503/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python核心编程</a>》。还根据萧大的指南做了个流程图：（还是1.0版本的，上传了百度网盘，需要的自取）\nVisio版：链接：<a href=\"https://link.zhihu.com/?target=http%3A//pan.baidu.com/s/1qWpEFoS\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">百度云</a> 密码：kqtq\nPDF版：链接：<a href=\"https://link.zhihu.com/?target=http%3A//pan.baidu.com/s/1pJtK5DL\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">百度云</a> 密码：2zk1</p><figure><noscript><img src=\"https://pic4.zhimg.com/50/7db40a889e0c3c49479c30e550cf32e8_720w.png?source=54b3c3a5\" data-rawwidth=\"1181\" data-rawheight=\"834\" class=\"origin_image zh-lightbox-thumb\" width=\"1181\" data-original=\"https://pic1.zhimg.com/7db40a889e0c3c49479c30e550cf32e8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1181'%20height='834'&gt;&lt;/svg&gt;\" data-rawwidth=\"1181\" data-rawheight=\"834\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1181\" data-original=\"https://pic1.zhimg.com/7db40a889e0c3c49479c30e550cf32e8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/7db40a889e0c3c49479c30e550cf32e8_720w.png?source=54b3c3a5\"></figure><br><p>这样听课做题的简单日子只持续到4月上旬，有一个多月效率很低。直到6月才恢复了正常的学习节奏。同时看些闲书，《大话数据结构》《编码的奥秘》这种趣味入门书，不深究，了解个大概。这段时间还去了解了爬虫，没有写出像样的爬虫，但是了解了一些计算机网络通信的知识。另外微信订阅的Crossin的编程教室上出了一系列用web.py框架做小网站的教程，也跟着学了，不过好久没有更新了。</p><p>拖拖拉拉到6月底，才学完MIT的导论课，《Python核心编程》的书还没看完。但是那个时候对所在公司的各种制度不满，想尽快学到能干活的程度跳槽。于是正式开始了Flask的学习（《Flask Web开发》书老早就买了，之前零零碎碎看了点），每天下班在公司学到9点。期间有过很多蛋疼的时刻，但还是死磕过来了。到8月上旬，基本过完一遍书，将应用部署到Heroku上折腾了有一周时间。</p><p>8月中旬，在书上代码的基础上，自己做一些改动，并翻译成中文界面，再重新部署下，便提了辞职做份简历找工作去了。由于对python的基础掌握不牢不全面，面试期间很不顺利。面了几家后都希望渺茫，想着要不回家再学一个月再来找工作。所幸，在上家公司离职当天收到了现在公司的offer，尽管是以应届生的待遇。</p><p>总的来看，我的学习过程分三个阶段：\n第一阶段：python基础语法\n关键字：《A Byte of Python》跟着书敲，python 3.4，Windows 7，IDLE</p><p>第二阶段：复习python语法，了解其他基础知识\n关键字：Codecademy，MIT导论课，《Python核心编程》，看书做题\n<b># 补充：python 2.7</b></p><p>第三阶段：Flask框架\n关键字：《Flask Web开发》，Linux（推荐Ubuntu或CentOS），Git，QQ群请教\n<b># 补充：python 2.7</b></p><p>另外，学的过程中，最好慢慢养成下列习惯：\n1. 优先读官方英文文档，其次是别人的经验/理解（博客、百度知道、论坛帖子这些）；\n2. 善用Google，最近发现AOL也还不错（尽量不用百度，不靠谱耽误事）；\n3. 你遇到的问题很有可能其他人也遇到过并解决了，Stackoverflow是个好东西；\n4. 以上三步都不能解决的问题，再请教别人。\n5. 将过程记录下来，常做总结。觉得可能对他人有帮助的，分享出来。</p><p>先这样吧，有时间再补充。</p><p>----------------------------- 加班间隙，补充点资料 ------------------------------\n1. 关于QQ群，直接搜索关键字就可以找到很多，多加几个，择善保留\n2. 推荐几个微信订阅号：\n   PythonCoder（Python开发者）\n   crossincode（前面提到的Crossin的编程教室）\n   LinuxHub（Linux爱好者）\n3. Git推荐廖雪峰老师的教程：<a href=\"https://link.zhihu.com/?target=http%3A//www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Git教程 - 廖雪峰的官方网站</a>\n4. 数据库的学习，推荐《<a href=\"https://link.zhihu.com/?target=http%3A//book.douban.com/subject/24250054/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">SQL必知必会</a>》这本小册子\n5. 前端的学习，去<a href=\"https://link.zhihu.com/?target=http%3A//www.w3school.com.cn/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">w3school</a>，HTML、JS、CSS做到能看懂能改</p><p>技术的学习不是一蹴而就的，但只要你的知识<b>够用</b>就能找到工作。调整好心态，踏踏实实看书敲代码去吧。</p><p>#<a href=\"tel:2015-12-29\">2015-12-29</a>更\n觉得读英文文档有困难的童鞋，去装个微软的必应词典，打开取词。好用再来谢我～</p><p>#2016年1月8日更</p><p>好多同学在刚开始接触Flask的时候，会遇到一些小白问题，很正常，我一开始也这样。不过一个一个解答效率太低，所以来把我当时记录踩坑的博客贴出来：<a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/leadpython%3Fviewmode%3Dcontents\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">从0到1 日拱一卒</a></p>", "如何看待 Python 之父关于帮助中国程序员应对 996 工作制的讨论？": "<p>中国的劳苦工农大众有一些很奇特的现象。</p><p>1、他们被剥削的程度并不就比别人少，但是他们却时常自发地维护剥削者的利益，有时很凑巧的这利益与自身利益不冲突，但大部分情况，它是冲突的。</p><p>2、他们好像永远都不知道自己在这个国家实际上是有法律去维护他们自身的利益的，即便他们已经由于一个理由引发的一个热点而团结一致，即便他们的渠道压根不止一种。</p><p>3、他们好像永远吃苦耐劳，总是吃草挤奶，随时可以为一个按理说和他们的长期利益完全不搭嘎的企业/公司卖命。</p><p>4、由于儒学为主体的中华文化浸润，他们的聪明程度不低；由于CCP的扫盲运动与义务教育，他们的识字率和平均学历都不低，但他们却老是很容易地就被剥削者们蛊惑，从而心甘情愿的让这些吸血虫们吸干自己身上最后一丝养分。</p><p>5、当其他国家的同志们伸出援手时，他们竟然会出乎意料的产生极大的抗拒，自然，我们的那些”民族的“企业的“爱国的”企业家们这时就会纷纷站出来，把其他国家的同志的援助给妖魔化，捏造一个又一个子虚乌有的谎言，与此同时，他们之中的很大一部分心是向着外面的。</p><p>很令我惊奇的是，我们的很多很多明明可以发声的工人们甚至没有考虑向政府求助，向法律求助。</p><p>共和国的法律就在那儿，不能因为大多数公司都在违法而就此认为法律无效，中央近几年强调的是什么？全面依法治国！</p><p>我明白，真打起官司来往往是1v大多数公司以及由他们掌握的媒体。</p><p>我这几天看了不少回答，很多回答都是站在工人阶级们的立场上的，这很好。</p><p>但也有不少回答，站在了剥削者们的立场上，极尽溢美之辞，说到底呢？他们无非就是想论证剥削的有理，他们的中心思想就是：老子给你996是你的福分，你自己不能全天候运转还想问老子要更多钱？滚你丫的全是我的。</p><p>如果是一味的希望能达成某种妥协，那工人们永远都将无法达成他们的目的，且历史证明，这总是带来变本加厉的剥削与压迫。</p><p>做工人就要有工人的自觉，手里拿着的无论如何都是工薪，是剥削者们吃完你创造的价值之后剩下来的残羹冷炙，不是他们的施舍，而是你的应得报酬，还是缩了水的，没必要替剥削者们着想，因为你说的再多他们也听不进去（作为集体而言）， 所以，别当《亮剑》里李云龙负伤时抬他担架的那个看见医生是个日本人就不让他来治李云龙的小战士，那是狭隘的。</p><p>（匿名，因为用的是本名，我怕有些人咬得太凶，咬我层皮下来没事，我还有家人和朋友呢。）</p>", "Python 有什么不为人知的坑？": "<h2>这51项对于小白来说可能就是“天坑”了，掉进去还一直挠头纳闷的那种……</h2><p>下面的每一个都会出现一些出乎意料的输出结果，如果你是个老司机也许会了解部分，但是我相信这里面还是会出现你不知道的。</p><p><br></p><blockquote><b>提示：关注微信公众号 【七月在线实验室】，让自己变得更强！在公众号内发“ZH”。即可获得BAT面试题100道和课程代金劵等精美好礼哦！</b></blockquote><p><br></p><p>这个项目目前已经在GitHub上拿到了15000+星。</p><p><b>示例的结构</b></p><p>所有示例的结构都如下所示:</p><p><b>&gt; 一个精选的标题</b></p><blockquote># 准备代码. # 释放魔法...</blockquote><p><b>Output (Python version)：</b></p><blockquote>&gt;&gt;&gt; 触发语句 出乎意料的输出结果</blockquote><p>(可选): 对意外输出结果的简短描述。</p><p>说明:</p><p>简要说明发生了什么以及为什么会发生。</p><blockquote>如有必要，举例说明</blockquote><p>Output:</p><blockquote>&gt;&gt;&gt;触发语句#一些让魔法变得容易理解的例子 #一些正常的输入</blockquote><p>注意：所有的示例都在Python3.5.2版本的交互解释器上测试过，如果不特别说明应该适用于所有Python版本。</p><p><b>用法</b></p><p>我个人建议，最好依次阅读下面的示例，并仔细阅读设置例子最开始的代码。</p><p>阅读输出结果</p><ul><li>确认结果是否如你所料.</li><li>确认你是否知道这背后的原理<br></li></ul><p><br></p><h2><b>一、微妙的字符串</b></h2><p>1.</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; a = \"some_string\"\n&gt;&gt;&gt; id(a)\n140420665652016\n&gt;&gt;&gt; id(\"some\" + \"_\" + \"string\") # 注意两个的id值是相同的.\n140420665652016\n</code></pre></div><p>2.</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; a = \"wtf\"\n&gt;&gt;&gt; b = \"wtf\"\n&gt;&gt;&gt; a is b\nTrue\n\n&gt;&gt;&gt; a = \"wtf!\"\n&gt;&gt;&gt; b = \"wtf!\"\n&gt;&gt;&gt; a is b\nFalse\n\n&gt;&gt;&gt; a, b = \"wtf!\", \"wtf!\"\n&gt;&gt;&gt; a is b\nTrue\n</code></pre></div><p>3.</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; 'a' * 20 is 'aaaaaaaaaaaaaaaaaaaa'\nTrue\n&gt;&gt;&gt; 'a' * 21 is 'aaaaaaaaaaaaaaaaaaaaa'\nFalse\n</code></pre></div><p><b>说明：</b></p><p>这些行为是由于 Cpython 在编译优化时，某些情况下会尝试使用已经存在的不可变对象，而不是每次都创建一个新对象。(这种行为被称作字符串的驻留[string interning])</p><p>发生驻留之后，许多变量可能指向内存中的相同字符串对象。(从而节省内存)<br></p><p>在上面的代码中，字符串是隐式驻留的。何时发生隐式驻留则取决于具体的实现。这里有一些方法可以用来猜测字符串是否会被驻留：</p><ul><li>所有长度为 0 和长度为 1 的字符串都被驻留。</li><li>字符串在编译时被实现。('wtf' 将被驻留, 但是 ''.join(['w', 't', 'f'] 将不会被驻留)</li><li>字符串中只包含字母，数字或下划线时将会驻留。所以 'wtf!' 由于包含！而未被驻留。可以在这里找CPython对此规则的实现。</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-a8d1bdad5c320bad886fd7b8ae520e28_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"400\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-a8d1bdad5c320bad886fd7b8ae520e28_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"400\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-a8d1bdad5c320bad886fd7b8ae520e28_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-a8d1bdad5c320bad886fd7b8ae520e28_720w.jpg?source=54b3c3a5\"></figure><p>当在同一行将 a 和 b 的值设置为 \"wtf!\" 的时候, Python 解释器会创建一个新对象, 然后同时引用第二个变量。</p><p>如果你在不同的行上进行赋值操作, 它就不会“知道”已经有一个 wtf！ 对象 (因为 \"wtf!\" 不是按照上面提到的方式被隐式驻留的)。</p><p>它是一种编译器优化，特别适用于交互式环境。</p><p>常量折叠(constant folding) 是 Python 中的一种窥孔优化(peephole optimization) 技术。</p><p>这意味着在编译时表达式 'a'*20 会被替换为 'aaaaaaaaaaaaaaaaaaaa' 以减少运行时的时钟周期。</p><p>只有长度小于 20 的字符串才会发生常量折叠。(为啥? 想象一下由于表达式'a'*10**10 而生成的 .pyc 文件的大小)相关的源码：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/python/cpython/blob/3.6/Python/peephole.c%23L288\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/python/cpyth</span><span class=\"invisible\">on/blob/3.6/Python/peephole.c#L288</span><span class=\"ellipsis\"></span></a><br></p><h2><b>二、是时候来点蛋糕了!</b></h2><p>1.</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>some_dict = {}\nsome_dict[5.5] = \"Ruby\"\nsome_dict[5.0] = \"JavaScript\"\nsome_dict[5] = \"Python\"\n</code></pre></div><p>Output：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; some_dict[5.5]\n\"Ruby\"\n&gt;&gt;&gt; some_dict[5.0]\n\"Python\"\n&gt;&gt;&gt; some_dict[5]\n\"Python\"\n</code></pre></div><p>\"Python\" 消除了 \"JavaScript\" 的存在?<br></p><p><b>说明：</b></p><p>Python 字典通过检查键值是否相等和比较哈希值来确定两个键是否相同。</p><p>具有相同值的不可变对象在Python中始终具有相同的哈希值。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; 5 == 5.0\nTrue\n&gt;&gt;&gt; hash(5) == hash(5.0)\nTrue\n</code></pre></div><p><br></p><p><b>注意:</b> 具有不同值的对象也可能具有相同的哈希值（哈希冲突）。</p><p>当执行 some_dict[5] = \"Python\" 语句时, 因为Python将 5 和 5.0 识别为 some_dict 的同一个键, 所以已有值 \"JavaScript\" 就被 \"Python\" 覆盖了。<br></p><h2><b>三、到处返回！</b></h2><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>def some_func():\n   try:\n       return 'from_try'\n   finally:\n       return 'from_finally'\n</code></pre></div><p>Output：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; some_func()\n\n'from_finally'\n</code></pre></div><p><b>说明：</b></p><p>当在 \"try...finally\" 语句的 try 中执行 return, break 或 continue 后, finally 子句依然会执行。</p><p>函数的返回值由最后执行的 return 语句决定。</p><p>由于 finally 子句一定会执行, 所以 finally 子句中的 return 将始终是最后执行的语句。<br></p><h2><b>四、本质上,我们都一样</b></h2><p><b>所以兄弟们收藏后别忘记点赞哦。</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>class WTF:\n pass\n</code></pre></div><p>Output：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; WTF() == WTF() # 两个不同的对象应该不相等\n\nFalse\n\n&gt;&gt;&gt; WTF() is WTF() # 也不相同\n\nFalse\n\n&gt;&gt;&gt; hash(WTF()) == hash(WTF()) # 哈希值也应该不同\n\nTrue\n\n&gt;&gt;&gt; id(WTF()) == id(WTF())\n\nTrue\n</code></pre></div><p><b>说明：</b></p><p>当调用 id 函数时, Python 创建了一个 WTF 类的对象并传给 id 函数。</p><p>然后 id 函数获取其id值 (也就是内存地址), 然后丢弃该对象. 该对象就被销毁了。</p><p>当我们连续两次进行这个操作时, Python会将相同的内存地址分配给第二个对象。 因为 (在CPython中) id 函数使用对象的内存地址作为对象的id值, 所以两个对象的id值是相同的。</p><p>综上, 对象的id值仅仅在对象的生命周期内唯一。在对象被销毁之后, 或被创建之前, 其他对象可以具有相同的id值。</p><p>那为什么 is 操作的结果为 False 呢? 让我们看看这段代码：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>class WTF(object):\n def __init__(self): print(\"I\")\n def __del__(self): print(\"D\")\n</code></pre></div><p>Output：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; WTF() is WTF()\nI\nI\nD\nD\nFalse\n&gt;&gt;&gt; id(WTF()) == id(WTF())\nI\nD\nI\nD\nTrue\n</code></pre></div><p>正如你所看到的, 对象销毁的顺序是造成所有不同之处的原因。<br></p><h2><b>五、为什么?</b></h2><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>some_string = \"wtf\"\nsome_dict = {}\nfor i, some_dict[i] in enumerate(some_string):\n   pass\n</code></pre></div><p>Output：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; some_dict # 创建了索引字典.\n{0: 'w', 1: 't', 2: 'f'}\n</code></pre></div><p><br></p><p><b>说明：</b></p><p>Python 语法 中对 for 的定义是：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>for_stmt: 'for' exprlist 'in' testlist ':' suite ['else' ':' suite]\n</code></pre></div><p>其中 exprlist 指分配目标. 这意味着对可迭代对象中的每一项都会执行类似 {exprlist} = {next_value} 的操作。</p><p>一个有趣的例子说明了这一点：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>for i in range(4):\n   print(i)\n   i = 10\n</code></pre></div><p>Output:</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>0\n1\n2\n3\n</code></pre></div><p>你可曾觉得这个循环只会运行一次?</p><p><br></p><p><b>说明:</b></p><p>由于循环在Python中工作方式, 赋值语句 i = 10 并不会影响迭代循环, 在每次迭代开始之前, 迭代器(这里指 range(4)) 生成的下一个元素就被解包并赋值给目标列表的变量(这里指 i)了。</p><p>在每次迭代中, enumerate(some_string) 函数就生成一个新值 i (计数器增加) 并从 some_string 中获取一个字符。</p><p>然后将字典 some_dict 键 i (刚刚分配的) 的值设为该字符。本例中循环的展开可以简化为:</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; i, some_dict[i] = (0, 'w')\n&gt;&gt;&gt; i, some_dict[i] = (1, 't')\n&gt;&gt;&gt; i, some_dict[i] = (2, 'f')\n&gt;&gt;&gt; some_dict\n</code></pre></div><p><br></p><h2><b>六、执行时机差异</b></h2><p>1.</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>array = [1, 8, 15]\ng = (x for x in array if array.count(x) &gt; 0)\narray = [2, 8, 22]\n</code></pre></div><p>Output：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; print(list(g))\n[8]\n</code></pre></div><p>2.</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>array_1 = [1,2,3,4]\ng1 = (x for x in array_1)\narray_1 = [1,2,3,4,5]\n\narray_2 = [1,2,3,4]\ng2 = (x for x in array_2)\narray_2[:] = [1,2,3,4,5]\n</code></pre></div><p>Output：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; print(list(g1))\n[1,2,3,4]\n\n&gt;&gt;&gt; print(list(g2))\n[1,2,3,4,5]\n</code></pre></div><p><b>说明：</b></p><p>在生成器表达式中, in 子句在声明时执行, 而条件子句则是在运行时执行。</p><p>所以在运行前, array 已经被重新赋值为 [2, 8, 22], 因此对于之前的 1, 8 和 15, 只有 count(8) 的结果是大于 0 的, 所以生成器只会生成 8。</p><p><br></p><p>第二部分中 g1 和 g2 的输出差异则是由于变量 array_1 和 array_2 被重新赋值的方式导致的。</p><p>在第一种情况下, array_1 被绑定到新对象 [1,2,3,4,5], 因为 in 子句是在声明时被执行的，所以它仍然引用旧对象 [1,2,3,4](并没有被销毁)。</p><p>在第二种情况下, 对 array_2 的切片赋值将相同的旧对象 [1,2,3,4] 原地更新为 [1,2,3,4,5]。</p><p>因此 g2 和 array_2 仍然引用同一个对象(这个对象现在已经更新为 [1,2,3,4,5])。</p><p><br></p><h2>七、出人意料的<code>is</code>!</h2><p>下面是一个在互联网上非常有名的例子。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; a = 256\n&gt;&gt;&gt; b = 256\n&gt;&gt;&gt; a is b\nTrue\n\n&gt;&gt;&gt; a = 257\n&gt;&gt;&gt; b = 257\n&gt;&gt;&gt; a is b\nFalse\n\n&gt;&gt;&gt; a = 257; b = 257\n&gt;&gt;&gt; a is b\nTrue\n</code></pre></div><h3>说明:</h3><p><b><code>is</code> 和 <code>==</code> 的区别</b></p><ul><li><code>is</code> 运算符检查两个运算对象是否引用自同一对象 (即, 它检查两个预算对象是否相同).</li><li><code>==</code> 运算符比较两个运算对象的值是否相等.</li><li>因此 <code>is</code> 代表引用相同, <code>==</code> 代表值相等. 下面的例子可以很好的说明这点,&gt;&gt;&gt; [] == [] True &gt;&gt;&gt; [] is [] # 这两个空列表位于不同的内存地址. False</li></ul><p><b><code>256</code> 是一个已经存在的对象, 而 <code>257</code> 不是</b></p><p>当你启动Python 的时候, <code>-5</code> 到 <code>256</code> 的数值就已经被分配好了. 这些数字因为经常使用所以适合被提前准备好.</p><p>引用自 <a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/3/c-api/long.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">docs.python.org/3/c-api</span><span class=\"invisible\">/long.html</span><span class=\"ellipsis\"></span></a></p><blockquote>当前的实现为-5到256之间的所有整数保留一个整数对象数组, 当你创建了一个该范围内的整数时, 你只需要返回现有对象的引用. 所以改变1的值是有可能的. 我怀疑这种行为在Python中是未定义行为. :-)</blockquote><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; id(256)\n10922528\n&gt;&gt;&gt; a = 256\n&gt;&gt;&gt; b = 256\n&gt;&gt;&gt; id(a)\n10922528\n&gt;&gt;&gt; id(b)\n10922528\n&gt;&gt;&gt; id(257)\n140084850247312\n&gt;&gt;&gt; x = 257\n&gt;&gt;&gt; y = 257\n&gt;&gt;&gt; id(x)\n140084850247440\n&gt;&gt;&gt; id(y)\n140084850247344\n</code></pre></div><p>这里解释器并没有智能到能在执行 <code>y = 257</code> 时意识到我们已经创建了一个整数 <code>257</code>, 所以它在内存中又新建了另一个对象.</p><p><b>当</b> <b><code>a</code></b> <b>和</b> <b><code>b</code></b> <b>在同一行中使用相同的值初始化时，会指向同一个对象.</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; a, b = 257, 257\n&gt;&gt;&gt; id(a)\n140640774013296\n&gt;&gt;&gt; id(b)\n140640774013296\n&gt;&gt;&gt; a = 257\n&gt;&gt;&gt; b = 257\n&gt;&gt;&gt; id(a)\n140640774013392\n&gt;&gt;&gt; id(b)\n140640774013488\n</code></pre></div><ul><li>当 a 和 b 在同一行中被设置为 <code>257</code> 时, Python 解释器会创建一个新对象, 然后同时引用第二个变量. 如果你在不同的行上进行, 它就不会 \"知道\" 已经存在一个 <code>257</code> 对象了.</li><li>这是一种特别为交互式环境做的编译器优化. 当你在实时解释器中输入两行的时候, 他们会单独编译, 因此也会单独进行优化. 如果你在 <code>.py</code> 文件中尝试这个例子, 则不会看到相同的行为, 因为文件是一次性编译的.</li></ul><h2>八、一蹴即至!</h2><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># 我们先初始化一个变量row\nrow = [\"\"]*3 #row i['', '', '']\n# 并创建一个变量board\nboard = [row]*3\n</code></pre></div><p><b>Output:</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; board\n[['', '', ''], ['', '', ''], ['', '', '']]\n&gt;&gt;&gt; board[0]\n['', '', '']\n&gt;&gt;&gt; board[0][0]\n''\n&gt;&gt;&gt; board[0][0] = \"X\"\n&gt;&gt;&gt; board\n[['X', '', ''], ['X', '', ''], ['X', '', '']]\n</code></pre></div><p>我们有没有赋值过3个 \"X\" 呢？</p><h3>说明:</h3><p>当我们初始化 <code>row</code> 变量时, 下面这张图展示了内存中的情况。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-397019fd0fd2f6df0afdeb4f0fc1be35_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"357\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d695757c64bf64361b237c0cc10933fd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"888\" data-original=\"https://pic1.zhimg.com/v2-397019fd0fd2f6df0afdeb4f0fc1be35_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='888'%20height='357'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"357\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d695757c64bf64361b237c0cc10933fd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"888\" data-original=\"https://pic1.zhimg.com/v2-397019fd0fd2f6df0afdeb4f0fc1be35_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-397019fd0fd2f6df0afdeb4f0fc1be35_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>而当通过对 <code>row</code> 做乘法来初始化 <code>board</code> 时, 内存中的情况则如下图所示 (每个元素 <code>board[0]</code>, <code>board[1]</code> 和 <code>board[2]</code> 都和 <code>row</code> 一样引用了同一列表.)</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-8af2f43bd47a1c2bfca7114acbad781c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1082\" data-rawheight=\"420\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-b8a8b775ae27e1443da335aa76cb1d50_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1082\" data-original=\"https://pic4.zhimg.com/v2-8af2f43bd47a1c2bfca7114acbad781c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1082'%20height='420'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1082\" data-rawheight=\"420\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-b8a8b775ae27e1443da335aa76cb1d50_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1082\" data-original=\"https://pic4.zhimg.com/v2-8af2f43bd47a1c2bfca7114acbad781c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-8af2f43bd47a1c2bfca7114acbad781c_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>我们可以通过不使用变量 <code>row</code> 生成 <code>board</code> 来避免这种情况. (<a href=\"https://link.zhihu.com/?target=https%3A//github.com/satwikkansal/wtfpython/issues/68\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">这个</a>issue提出了这个需求.)</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; board = [['']*3 for _ in range(3)]\n&gt;&gt;&gt; board[0][0] = \"X\"\n&gt;&gt;&gt; board\n[['X', '', ''], ['', '', ''], ['', '', '']]\n</code></pre></div><ul><li>根据多位大佬的实践证明，在知乎双击屏幕会显著降低自己代码的BUG率。</li></ul><p><br></p><h2>九、麻烦的输出</h2><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>funcs = []\nresults = []\nfor x in range(7):\n    def some_func():\n        return x\n    funcs.append(some_func)\n    results.append(some_func()) # 注意这里函数被执行了\n\nfuncs_results = [func() for func in funcs]\n</code></pre></div><p><b>Output:</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; results\n[0, 1, 2, 3, 4, 5, 6]\n&gt;&gt;&gt; funcs_results\n[6, 6, 6, 6, 6, 6, 6]\n</code></pre></div><p>即使每次在迭代中将 <code>some_func</code> 加入 <code>funcs</code> 前的 <code>x</code> 值都不相同, 所有的函数还是都返回6.</p><p>// 再换个例子</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; powers_of_x = [lambda x: x**i for i in range(10)]\n&gt;&gt;&gt; [f(2) for f in powers_of_x]\n[512, 512, 512, 512, 512, 512, 512, 512, 512, 512]\n</code></pre></div><h3>说明:</h3><ul><li>当在循环内部定义一个函数时, 如果该函数在其主体中使用了循环变量, 则闭包函数将与循环变量绑定, 而不是它的值. 因此, 所有的函数都是使用最后分配给变量的值来进行计算的.</li><li>可以通过将循环变量作为命名变量传递给函数来获得预期的结果. <b>为什么这样可行?</b> 因为这会在函数内再次定义一个局部变量.<br>funcs = [] for x in range(7):     def some_func(x=x):         return x     funcs.append(some_func)<br><b>Output:</b><br>&gt;&gt;&gt; funcs_results = [func() for func in funcs] &gt;&gt;&gt; funcs_results [0, 1, 2, 3, 4, 5, 6]</li></ul><p><br></p><p><br></p><p><br></p><p>本文内容来自中文版项目，项目全文2万多字，以及海量代码。</p><p>因为篇幅原因，小七就先只为大家展示这6个案例，后续会逐步更新。</p><blockquote>项目作者：Satwik Kansal<br>英文版链接：<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/satwikkansal/wtfpython\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/satwikkansal</span><span class=\"invisible\">/wtfpython</span><span class=\"ellipsis\"></span></a><br>中文版作者：慕晨<br>链接：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/leisurelicht/wtfpython-cn\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/leisurelicht</span><span class=\"invisible\">/wtfpython-cn</span><span class=\"ellipsis\"></span></a> </blockquote><figure data-size=\"small\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-610c88b993153710b8b38a58869397ae_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"720\" data-rawheight=\"720\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-5cefd7cf056631afe64aeaa846dcc779_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-610c88b993153710b8b38a58869397ae_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='720'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"720\" data-rawheight=\"720\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-5cefd7cf056631afe64aeaa846dcc779_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-610c88b993153710b8b38a58869397ae_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-610c88b993153710b8b38a58869397ae_720w.jpg?source=54b3c3a5\"></figure><h2><b>转载自公众号“七月在线实验室”</b></h2><p><b>↓</b>↓↓</p><p><b>后台回复“666”。即可免费获得 七月在线【面试求职 第四期】课程+最新升级版《名企AI面试100题》电子书。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-6f13a2c6b4158fc14ee50e8299b62bde_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1192\" class=\"origin_image zh-lightbox-thumb\" width=\"1000\" data-original=\"https://pic1.zhimg.com/v2-6f13a2c6b4158fc14ee50e8299b62bde_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1000'%20height='1192'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1192\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1000\" data-original=\"https://pic1.zhimg.com/v2-6f13a2c6b4158fc14ee50e8299b62bde_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-6f13a2c6b4158fc14ee50e8299b62bde_720w.jpg?source=54b3c3a5\"></figure><p></p>", "初学 Python 需要安装哪些软件？": "<blockquote>Python这几年热度逐渐上升，在很多高校Python也被列为通识课程，之所以如此受欢迎正是由于它的高效、简洁、易用、强大的第三方库等优点。如今在web开发、人工智能、大数据等方便应用非常广泛。不管你是否喜欢，不管怎么吐槽，如果想要从事人工智能，依然很难绕过Python，虽然这两年julia、Go被炒得也很热，但是在人工智能方面依然无法撼动Python的地位。</blockquote><p><br></p><hr><blockquote>专注Python、AI、大数据 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/25cd73f8fd6c6fdaacd95ae1091b5edb\" data-hash=\"25cd73f8fd6c6fdaacd95ae1091b5edb\" data-hovercard=\"p$b$25cd73f8fd6c6fdaacd95ae1091b5edb\">@七步编程</a> </blockquote><h2><b>目录</b></h2><ul><li>Python解释器</li><li>IDE</li><li>pip代理</li><li>虚拟环境</li></ul><h2><b>Python解释器</b></h2><p>编程语言都会涉及编译器或者解释器，使用C/C++之类的编译性语言编写的程序，是需要从源文件转换成计算机使用的机器语言，经过链接器链接之后形成了二进制的可执行文件。运行该程序的时候，就可以把二进制程序从硬盘载入到内存中并运行。但是对于Python而言，python源码不需要编译成二进制代码，它可以直接从源代码运行程序。执行Python就需要用到Python解释器，按版本划分，Python解释系可以分为：</p><ul><li>2.x</li><li>3.x</li></ul><p>2.x版本目前已经不再进行维护，所以目前大多数项目都是使用3.x，我个人比较推荐用3.6.x版本，3.7.2是目前最新的版本，但是使用过程中会有这样那样的错误，会存在不兼容等问题，而3.5.x及以下的版本也存在一些问题：</p><ul><li>前缀f格式化字符串在3.6.x之后才开始支持</li><li>安装工具包时3.5.x安装相关依赖容易失败</li></ul><p><b>安装步骤：</b></p><ul><li>下载解释器</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-daa55cb7ccdc5d3d97a7aeea7df3ce9e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1421\" data-rawheight=\"397\" class=\"origin_image zh-lightbox-thumb\" width=\"1421\" data-original=\"https://pic2.zhimg.com/v2-daa55cb7ccdc5d3d97a7aeea7df3ce9e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1421'%20height='397'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1421\" data-rawheight=\"397\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1421\" data-original=\"https://pic2.zhimg.com/v2-daa55cb7ccdc5d3d97a7aeea7df3ce9e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-daa55cb7ccdc5d3d97a7aeea7df3ce9e_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.python.org/downloads/windows/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-ff06c339780f23112c1cbbbb284158ff_l.jpg?source=54b3c3a5\" data-image-width=\"200\" data-image-height=\"200\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Releases for Windows</a><ul><li>双击安装</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d88afdee8e25bd622a6ba71a4878e529_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"997\" data-rawheight=\"614\" class=\"origin_image zh-lightbox-thumb\" width=\"997\" data-original=\"https://pic2.zhimg.com/v2-d88afdee8e25bd622a6ba71a4878e529_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='997'%20height='614'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"997\" data-rawheight=\"614\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"997\" data-original=\"https://pic2.zhimg.com/v2-d88afdee8e25bd622a6ba71a4878e529_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d88afdee8e25bd622a6ba71a4878e529_720w.jpg?source=54b3c3a5\"></figure><blockquote>记得勾选pip，这是Python的包管理工具，会经常用到</blockquote><h2><b>IDE</b></h2><p>IDE(Integrated Development Environment, 集成开发环境)，目前Python的IDE有很多，vs code、eclipse、atom、anaconda、IDEA等等，我个人不太推荐使用上述这些IDE，当然如果十分喜欢这些IDE也可以。对于开发Python，我只推荐pycharm和jupyter notebook两款。毋庸置疑，这是Python最强大的IDE。跳转、关联第三方库、速度、集成度、debug等等，可以说pycharm在Python开发中大多数方面表现的都很优秀，而vs code、eclipse、anaconda、atom只是在某一个或几个方面表现还可以。首先vs code关联第三方库、函数提示等方面很慢、服务器下容易卡顿，eclipse需要额外配置Python插件，anaconda集成太多包，有很多是自己用不到的，太臃肿了，atom没用过，不过也不感兴趣，所以，我觉得使用这些IDE还不如配置一下vim。如果说不喜欢每种语言安装一个IDE，喜欢像eclipse这样支持不同语言的IDE，我支持使用IDEA，这和pycharm属于同一家的产品，很多特性有共通之处。</p><p>pycharm优点：</p><ul><li>功能丰富</li><li>提示速度快</li><li>强大的书签和跳转功能</li><li>高效的debug</li><li>学生可以注册免费使用专业版</li><li>...</li></ul><p><b>pycharm安装步骤：</b></p><ul><li>下载pycharm</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-cb8c9b21f72527fc37e51cbcc9b0a445_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1348\" data-rawheight=\"637\" class=\"origin_image zh-lightbox-thumb\" width=\"1348\" data-original=\"https://pic2.zhimg.com/v2-cb8c9b21f72527fc37e51cbcc9b0a445_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1348'%20height='637'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1348\" data-rawheight=\"637\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1348\" data-original=\"https://pic2.zhimg.com/v2-cb8c9b21f72527fc37e51cbcc9b0a445_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-cb8c9b21f72527fc37e51cbcc9b0a445_720w.jpg?source=54b3c3a5\"></figure><p>如果没有购买专业版，可以下载社区版免费使用：</p><a href=\"https://link.zhihu.com/?target=http%3A//www.jetbrains.com/pycharm/download/%23section%3Dwindows\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">jetbrains.com/pycharm/d</span><span class=\"invisible\">ownload/#section=windows</span><span class=\"ellipsis\"></span></a><p>如果有学校的邮箱，可以注册教育版，和专业版没什么区别：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-d7b78632feef471f7e064dd7e8391265_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"653\" data-rawheight=\"243\" class=\"origin_image zh-lightbox-thumb\" width=\"653\" data-original=\"https://pic4.zhimg.com/v2-d7b78632feef471f7e064dd7e8391265_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='653'%20height='243'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"653\" data-rawheight=\"243\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"653\" data-original=\"https://pic4.zhimg.com/v2-d7b78632feef471f7e064dd7e8391265_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-d7b78632feef471f7e064dd7e8391265_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.jetbrains.com/pycharm-edu/download/%23section%3Dwindows\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-b0fcf162850d831db68155f9611185ae_bh.jpg?source=54b3c3a5\" data-image-width=\"1280\" data-image-height=\"800\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Download PyCharm Edu: Python IDE to Learn Programming by JetBrains</a><ul><li>进行安装</li></ul><p>双击可执行文件、选择安装目录进行安装就行了。</p><ul><li>配置解释器</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-0e32614e7fb48c51c5ab67db1751475f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1510\" data-rawheight=\"934\" class=\"origin_image zh-lightbox-thumb\" width=\"1510\" data-original=\"https://pic1.zhimg.com/v2-0e32614e7fb48c51c5ab67db1751475f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1510'%20height='934'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1510\" data-rawheight=\"934\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1510\" data-original=\"https://pic1.zhimg.com/v2-0e32614e7fb48c51c5ab67db1751475f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-0e32614e7fb48c51c5ab67db1751475f_720w.jpg?source=54b3c3a5\"></figure><p>setting-&gt;Project-&gt;Project Interpreter</p><p>在红框位置选择上面安装的Python解释器</p><blockquote>要检查一下，因为Python默认是生成一个虚拟环境，使用虚拟环境中的解释器</blockquote><p>jupyter notebook优点：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-724afb2dc8afbafc58d4e685730fbf90_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1677\" data-rawheight=\"339\" class=\"origin_image zh-lightbox-thumb\" width=\"1677\" data-original=\"https://pic1.zhimg.com/v2-724afb2dc8afbafc58d4e685730fbf90_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1677'%20height='339'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1677\" data-rawheight=\"339\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1677\" data-original=\"https://pic1.zhimg.com/v2-724afb2dc8afbafc58d4e685730fbf90_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-724afb2dc8afbafc58d4e685730fbf90_720w.jpg?source=54b3c3a5\"></figure><ul><li>交互式调试</li><li>随时切换Markdown和code，边做笔记边写代码</li></ul><p><b>jupyter notebook安装步骤：</b></p><ul><li>打开cmd</li><li>用pip安装</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pip install jupyter notebook\n</code></pre></div><h2><b>pip代理</b></h2><p>pip是Python的包管理工具，无论是自己再cmd、终端下安装还是使用pycharm这些IDE安装包，都会调用pip。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-52a5236fdc457c4fff36372a767565cb_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1439\" data-rawheight=\"147\" class=\"origin_image zh-lightbox-thumb\" width=\"1439\" data-original=\"https://pic2.zhimg.com/v2-52a5236fdc457c4fff36372a767565cb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1439'%20height='147'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1439\" data-rawheight=\"147\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1439\" data-original=\"https://pic2.zhimg.com/v2-52a5236fdc457c4fff36372a767565cb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-52a5236fdc457c4fff36372a767565cb_720w.jpg?source=54b3c3a5\"></figure><p>默认的代理是从pypi上下载并安装包，速度会比较慢，所以需要配置一下pip的代理，这样速度会得到大大的提升，如图中所示，利用默认的下载速度之后几百k，配置代理后可达到2.1M/s。</p><p><b>pip代理配置步骤：</b></p><ul><li>创建pip文件夹</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-42af8b73373474a5ea2bafd991e72403_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"33\" class=\"origin_image zh-lightbox-thumb\" width=\"973\" data-original=\"https://pic2.zhimg.com/v2-42af8b73373474a5ea2bafd991e72403_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='973'%20height='33'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"33\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"973\" data-original=\"https://pic2.zhimg.com/v2-42af8b73373474a5ea2bafd991e72403_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-42af8b73373474a5ea2bafd991e72403_720w.jpg?source=54b3c3a5\"></figure><p>在个人目录下创建一个pip的目录，比如C:\\Users\\li，</p><ul><li>创建代理文件</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-406816c6eae5e0dc326581be28ef3866_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"33\" class=\"origin_image zh-lightbox-thumb\" width=\"973\" data-original=\"https://pic2.zhimg.com/v2-406816c6eae5e0dc326581be28ef3866_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='973'%20height='33'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"33\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"973\" data-original=\"https://pic2.zhimg.com/v2-406816c6eae5e0dc326581be28ef3866_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-406816c6eae5e0dc326581be28ef3866_720w.jpg?source=54b3c3a5\"></figure><p>进入C:\\Users\\li\\pip目录，创建名为[pip.ini]的文件，打开把下面这段文字复制进去并保存：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre></div><h2><b>虚拟环境</b></h2><p>Python和其它编程语言一样，面临一个移植问题，如果想把开发完成的一个项目一直到其他电脑、节点或者把项目打成docker镜像，都需要对开发环境重新配置，需要重新安装项目中使用到的第三方工具包，如果一个个比对着安装必然会很麻烦，而我们用系统环境时pip安装的包都被安装进了Python路径下site-packages里面，如果生成requirement.txt时也会把site-packages下的所有包都会包含进去，这就是为什么使用到虚拟环境的原因，能够针对不同项目创建一个独立的环境，这样便于后期的移植。</p><p>Python虚拟环境管理工具主要有以下两种：</p><ul><li>virtualenv</li><li>pipenv</li></ul><p>上述两个工具都可以使用pip进行安装：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pip install virtualenv\npip install pipenv\n</code></pre></div><p>virtualenv和pipenv该怎么选择？我觉得这根据个人喜好。</p><p><b>virtualenv更加悠久，老化一些，使用步骤如下：</b></p><ul><li>创建虚拟环境</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>virtualenv test_env\n</code></pre></div><ul><li>激活虚拟环境</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>test_env\\Scripts\\activate\n</code></pre></div><ul><li>生成requirement</li></ul><p>激活虚拟环境后就可以进入虚拟独立的环境进行开发，如果开发完成之后想一直到另外一个系统：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pip freeze &gt; requirement.txt\n</code></pre></div><p>这样就把虚拟环境里的包和版本读取到requirement.txt里，如果想在另一个系统配置安装这些包可以使用pip：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pip install -r requirement.txt\n</code></pre></div><p>pipenv更加强大一些，pipenv之于Python就相当于Php之于Composer、Nodejs之于npm、Golang之于dep，pipenv相当于virtualenv和pip的合体，用两点说明pipenv对比于virtualenv的优势：</p><ul><li>virtualenv每次开发完都要手动执行一个pip freeze &gt; requirement.txt 把项目最新的环境读取到requirement中，如果忘记了就不能获取最新的配置环境，而pipenv可以实时监测环境的改变，把最新的环境读取到Pipfile。</li><li>virtualenv需要先激活虚拟环境，然后用pip配置，而pipenv可以直接使用pipenv进行配置环境</li></ul><p><b>pipenv使用步骤：</b></p><ul><li>创建</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pipenv check\n</code></pre></div><blockquote>这是目录下会生成Pipfile。</blockquote><ul><li>启动虚拟环境</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pipenv shell\n</code></pre></div><ul><li>安装第三方包</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pipenv install **\n</code></pre></div><ul><li>退出虚拟环境</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>exit\n</code></pre></div><ul><li>查看所有安装包</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pip list\n</code></pre></div><ul><li>查看包依赖关系</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pipenv graph\n</code></pre></div><ul><li>查看虚拟环境路径</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pipenv --venv\n</code></pre></div><ul><li>卸载安装包</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pipenv uninstall\n</code></pre></div><p>以上就是两款常用的虚拟环境管理工具，相比而言pipenv更加强大，而我个人用virtualenv更久一些，所以也习惯用virtualenv，每个人可以根据自己的喜好进行选择。</p><p><br></p><hr><h2>更多我的作品</h2><p><a href=\"https://www.zhihu.com/answer/618191600\" class=\"internal\">Jackpop：有哪些堪称「神器」，却鲜为人知的APP？</a></p><p><a href=\"https://www.zhihu.com/answer/587817126\" class=\"internal\">Jackpop：Windows 下有什么用过之后就离不开的冷门软件？</a></p><p><a href=\"https://www.zhihu.com/answer/619422276\" class=\"internal\">Jackpop：你读过哪些令你有跪感的书？</a></p><p><a href=\"https://www.zhihu.com/answer/604801150\" class=\"internal\">Jackpop：你的研究生导师是什么样的？</a></p>"}{"2019年node.js、python、golang、java、c++，rust如何选择？": "<p>这个答案突然火了----------------------------5.8更新---------------------------</p><ul><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/273.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门教程完整版（懂中文就能学会）</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/71.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python网络爬虫第一天</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/72.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python网络爬虫第二天</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/240.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">6节课掌握Python爬虫视频</a></b></li><li><b><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/242.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">6节课机器学习入门</a></b></li></ul><p><b>Python学习文章参考：</b></p><ul><li><b><a href=\"https://www.zhihu.com/question/319037285/answer/644581796\" class=\"internal\">Python学习感觉没有效率，如何提升？</a></b></li><li><b><a href=\"https://www.zhihu.com/question/316967015/answer/632665427\" class=\"internal\">为什么要学习Python编程语言？哪些人适合学习Python？</a> </b></li></ul><p><b>------------以下为原答案，文中很多错误。大家见谅~</b></p><p>emm...感觉好多大神的回答戾气都很重。但是非计算机专业，不是很了解各个语言太正常不过了。大概的给楼主介绍一下这几门语言以及可以做的事情还有初学的学习曲线；</p><p><b>懒人目录：</b></p><ul><li><b>主要题主上面提到的四门语言的介绍，分别是难度、受欢迎度、创始时间、学成后的涉及的就业方向、优缺点以及学习线路图。最后附四门语言的入门视频和资料！</b></li></ul><p>首先，我认为编程语言是没有最好，只有最合适。但是未来预测这种事还是留给大神，这边就分享给楼主一些“干货”</p><h2>四门语言的简单介绍</h2><p><b>（1）Python</b></p><p>难度：★ 欢迎度：★★★★☆ 创始于：1991年</p><p><b>学完之后可以干什么：</b></p><p>web开发、应用开发、大数据、数据挖掘、科学计算、机器学习、人工智能、运维、自然语言处理等等等。</p><p><b>Python的优点：</b></p><ul><li>易于学习：就像是楼主说的，逛了下论坛发现做了几年Java或者是C++的，几天就可以写Python了。但是这个不是什么坏事，入门来说，从简入难，或者从难入简，都是很好的选择。</li><li>库：库都是免费的，并且有很多库和函数把编程变得相对容易很多。</li><li>物联网：Python也许是会成为物联网当中最受欢迎的语言，我们都知道树莓派这样的新平台都是基于Python开发的。</li></ul><p><b>Python的缺点：</b></p><ul><li>速度：开发速度是快，比如java100行代码python20行就搞定了。但是作为解释型的语言来说，比编译型语言的速度慢很多。</li><li>移动端：Python在移动计算方面是弱的，很少有智能机的应用是Python开发的</li><li>设计：python是动态型的语言，需要更多的测试以及错误仅仅是在运行的时候展示的。</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2161\" data-rawheight=\"2143\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e3b31af19a8e6d9cff5f30cfdd79007e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2161\" data-original=\"https://pic2.zhimg.com/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2161'%20height='2143'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2161\" data-rawheight=\"2143\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e3b31af19a8e6d9cff5f30cfdd79007e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2161\" data-original=\"https://pic2.zhimg.com/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\"></figure><p><b>（2）GO语言</b></p><p>难度：★ 欢迎度：★★★★☆ 创始于：2007年</p><p>go语言的难度，相对来说，GO语言不难的。可是GO语言的学习资料相对其他的语言来说很少，所以学习起来没有其他的语言那么便利；</p><p>很多人说GO语言在国内更火，按照数据来说，是的。因为中国人多，基数大。其实GO在国外更火。对于现在来说，GO实际上也已经站稳脚跟了。不管是Google自带光环也好，实际应用也好。go算是找到了属于自己的空间。</p><p><b>GO语言的优点：</b></p><ul><li>编译时间快：GO语言编写最大的微服务的时间大概需要6秒，相对Java和C++呆滞的编译速度来说，GO语言快速编译是主要的效率优势。</li><li>并发性和通道：GO语言的logo大家可以了解一下，它就是致力于事情简单化，也就是快。其实并没有引入很多的新的概念。就是打造一门简单的语言，使用起来很快。在goroutine上运行一个函数最小的样板代码，我们只需要使用关键词go添加函数调用：</li><li>生态系统也是很强大的：面向Redis、RabbitMQ、Template等等很多稳定的库。有很强大的工具支持。</li></ul><p><b>GO语言的缺点：</b></p><ul><li>缺少框架：GO是没有一个主要的框架。但是很多人认为不应该从框架的使用开始。也可以从社区的讨论了解一下这个问题。</li><li>错误处理：在错误处理方式，很容易丢失错误发生范围，所以在编程过程中很难向用户提供出有意义的错误信息。</li><li>软件包管理：在默认的情况下，没有办法制定特定版本的依赖库。、也没有办法创建可以复写的builds。</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f47fcf7a94106465d0bae5c51fbbe9b4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2342\" data-rawheight=\"1543\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-80378f130c13321107db267e9a32f818_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2342\" data-original=\"https://pic3.zhimg.com/v2-f47fcf7a94106465d0bae5c51fbbe9b4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2342'%20height='1543'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2342\" data-rawheight=\"1543\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-80378f130c13321107db267e9a32f818_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2342\" data-original=\"https://pic3.zhimg.com/v2-f47fcf7a94106465d0bae5c51fbbe9b4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f47fcf7a94106465d0bae5c51fbbe9b4_720w.jpg?source=54b3c3a5\"></figure><p><b>（3）Java</b></p><p>难度：★ ★ ★ 欢迎度：★ ★ ★ ★ ★ 创始于：1995年</p><p><b>Java可以做什么：</b></p><p>安卓应用开发、视频游戏开发、桌面GUI、软件开发等等；</p><p><b>Java的优点：</b></p><ul><li>Java开发人员需求量大：这个是根据统计得出的。JAVA在很多语言当中，是需求量最大的；</li><li>进化语言：首先C++是基于C语言优化的，Java是被优化过来的。而且在这人平台是增加了很多的功能，lambda等功能</li><li>安卓应用开发：谷歌的安卓移动平台是世界第一的移动平台，编写安卓应用开发者使用的主要语言是Java；</li></ul><p><b>Java的缺点：</b></p><ul><li>使用大量的内存：Java和C++相比使用更多的内存所以占用的内存就更大</li><li>学习曲线：这边指的是Java虽然不是最简单的入门语言，但是也不是最难- -||</li><li>启动时间慢：用java写过安卓的应用的人应该都知道。同样的代码在模拟器中启动是非常缓慢的事情。</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-f719bfe8795e808fe927b986d0a12038_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1778\" data-rawheight=\"1210\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3bdb2d6380b5444ac05314fb2f6dc3e9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1778\" data-original=\"https://pic1.zhimg.com/v2-f719bfe8795e808fe927b986d0a12038_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1778'%20height='1210'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1778\" data-rawheight=\"1210\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-3bdb2d6380b5444ac05314fb2f6dc3e9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1778\" data-original=\"https://pic1.zhimg.com/v2-f719bfe8795e808fe927b986d0a12038_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-f719bfe8795e808fe927b986d0a12038_720w.jpg?source=54b3c3a5\"></figure><p><b>（4）C++</b></p><p>难度：★★★★☆ 受欢迎度：★★★★☆ 创始于：1983年</p><p>C++目前是被看做编写大型程序应用最好的面向对象编程语言。C++是C语言的升级版本；</p><p><b>C++用来做什么：</b></p><p>搜索引擎、软件开发、操作系统、视频游戏等</p><p><b>C++的优点：</b></p><p>在熟练掌握了C++之后，处在各个位置当中都能成为佼佼者。使用C/C++的话，帮助我们更理解其他编程语言。比如说是Java或者是Python是如何进行内存管理以及如何处理缺陷；</p><p>能调整性能：C++能允许调整你的应用性能以及影响所有计算机性能，它写起来的话比Java来说就并不是很友善，但是我们也可以利用C++做很多事情；</p><p><b>C++的缺点：</b></p><p>学习困难：C++相对来说学习难度很大，但是如果我们可以流畅使用的话，会圆圆超过其他的程序员；</p><p>尺寸很大：C++可以称为巨大，它的大部分功能互相影响是机器复杂的方式。没有开发者是可以使用全部提供的组成部件。但是会发挥大量的时间来挑选你的程序的子部件的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-2f82cdcaf9f7bcdbfded32771fb47d0a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2101\" data-rawheight=\"2113\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-6789dc61b2dc2973a1faa5e31315360a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2101\" data-original=\"https://pic1.zhimg.com/v2-2f82cdcaf9f7bcdbfded32771fb47d0a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2101'%20height='2113'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2101\" data-rawheight=\"2113\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-6789dc61b2dc2973a1faa5e31315360a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2101\" data-original=\"https://pic1.zhimg.com/v2-2f82cdcaf9f7bcdbfded32771fb47d0a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-2f82cdcaf9f7bcdbfded32771fb47d0a_720w.jpg?source=54b3c3a5\"></figure><p><b>我再去找一些有关入门的学习的资源，找到后会来更新在这里的；</b></p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1c26Oo6k\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">-Python有关的软件大全，密码：c5jq</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1htA3p3I\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">-Python有关的35个项目实战，密码:pt3r</a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1yXZ5G2GrL8htohYwNecdjA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">-Java2018年从入门到进阶视频链接，密码：exn4</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//pan.baidu.com/s/1i5FsweD\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">-Java2018年入门到进阶配套资料链接，密码：knhu</a> </p><p>-<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1v-mULWHbZUTqCeSjTJA3HA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GO语言快速入门配套资料，密码：jsyq</a> </p><p><a href=\"https://link.zhihu.com/?target=http%3A//pan.baidu.com/s/1pKZHt7X\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">-C++的发展趋势以及就业方向</a> </p><p><a href=\"https://link.zhihu.com/?target=http%3A//pan.baidu.com/s/1c2adFjy\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">-C++的发展趋势以及就业方向资料，密码：81w5</a> </p><p></p><p></p>", "为什么人工智能用 Python？": "<p>因为脚本语言写起来简单容易。</p><p>Python虽然慢但是它只是调用AI接口，真正的计算全是C/C++写好的底层，用Python只是写逻辑，即第一步怎么算，第二步怎么算，几行代码就出来了。</p><p>换成C++，得先学1个月才能编译通过。不是说用C++写不了上层逻辑，而是代码量太大，开发效率太低，换来总体速度提升1%，不合适。</p><p>计算机语言各有适用性，即C/C++速度快适合底层写算法，Python慢但适合上层写逻辑。两者各自牛逼的特点恰好是对方傻逼的特点。</p>", "Lambda 表达式有何用处？如何使用？": "<p>答主对Java比较熟悉，就用Java来讲一讲吧。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-c7cb18cbd37262ffad7b04e50fb13b92_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"61\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-c7cb18cbd37262ffad7b04e50fb13b92_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='61'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"61\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-c7cb18cbd37262ffad7b04e50fb13b92_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-c7cb18cbd37262ffad7b04e50fb13b92_720w.jpg?source=54b3c3a5\"></figure><h2><b>什么是Lambda?</b></h2><p>我们知道，对于一个Java变量，我们可以赋给其一个<b>“值”</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-ab6545c49383236a4af3f28a47886090_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"602\" data-rawheight=\"204\" class=\"origin_image zh-lightbox-thumb\" width=\"602\" data-original=\"https://pic2.zhimg.com/v2-ab6545c49383236a4af3f28a47886090_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='602'%20height='204'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"602\" data-rawheight=\"204\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"602\" data-original=\"https://pic2.zhimg.com/v2-ab6545c49383236a4af3f28a47886090_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-ab6545c49383236a4af3f28a47886090_720w.jpg?source=54b3c3a5\"></figure><p>如果你想把<b>“一块代码”</b>赋给一个Java变量，应该怎么做呢？</p><p>比如，我想把右边那块代码，赋给一个叫做aBlockOfCode的Java变量：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-1cc87e82fba0872c2cae3fee08e8fe41_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"133\" class=\"origin_image zh-lightbox-thumb\" width=\"534\" data-original=\"https://pic1.zhimg.com/v2-1cc87e82fba0872c2cae3fee08e8fe41_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='534'%20height='133'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"133\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"534\" data-original=\"https://pic1.zhimg.com/v2-1cc87e82fba0872c2cae3fee08e8fe41_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-1cc87e82fba0872c2cae3fee08e8fe41_720w.jpg?source=54b3c3a5\"></figure><p>在Java 8之前，这个是做不到的。但是Java 8问世之后，利用Lambda特性，就可以做到了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-145a556d86806c3163391a13428e3f03_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"585\" data-rawheight=\"120\" class=\"origin_image zh-lightbox-thumb\" width=\"585\" data-original=\"https://pic1.zhimg.com/v2-145a556d86806c3163391a13428e3f03_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='585'%20height='120'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"585\" data-rawheight=\"120\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"585\" data-original=\"https://pic1.zhimg.com/v2-145a556d86806c3163391a13428e3f03_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-145a556d86806c3163391a13428e3f03_720w.jpg?source=54b3c3a5\"></figure><p>当然，这个并不是一个很简洁的写法。所以，为了使这个赋值操作更加elegant, 我们可以移除一些没用的声明。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-a712753b42972e094a548ae02fa82987_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1362\" data-rawheight=\"1498\" class=\"origin_image zh-lightbox-thumb\" width=\"1362\" data-original=\"https://pic4.zhimg.com/v2-a712753b42972e094a548ae02fa82987_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1362'%20height='1498'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1362\" data-rawheight=\"1498\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1362\" data-original=\"https://pic4.zhimg.com/v2-a712753b42972e094a548ae02fa82987_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-a712753b42972e094a548ae02fa82987_720w.jpg?source=54b3c3a5\"></figure><p>这样，我们就成功的非常优雅的把“一块代码”赋给了一个变量。<b>而“这块代码”，或者说“这个被赋给一个变量的函数”，就是一个Lambda表达式</b>。</p><p>但是这里仍然有一个问题，就是变量aBlockOfCode的类型应该是什么？</p><p>在Java 8里面，<b>所有的Lambda的类型都是一个接口，而Lambda表达式本身，也就是”那段代码“，需要是这个接口的实现。</b>这是我认为理解Lambda的一个关键所在，简而言之就是，<b>Lambda表达式本身就是一个接口的实现</b>。直接这样说可能还是有点让人困扰，我们继续看看例子。我们给上面的aBlockOfCode加上一个类型：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-55de66060b4cb70193ddc7fea201b257_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"244\" class=\"origin_image zh-lightbox-thumb\" width=\"534\" data-original=\"https://pic1.zhimg.com/v2-55de66060b4cb70193ddc7fea201b257_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='534'%20height='244'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"534\" data-rawheight=\"244\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"534\" data-original=\"https://pic1.zhimg.com/v2-55de66060b4cb70193ddc7fea201b257_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-55de66060b4cb70193ddc7fea201b257_720w.jpg?source=54b3c3a5\"></figure><p>这种只有<b>一个接口函数需要被实现的接口类型，我们叫它”函数式接口“。</b>为了避免后来的人在这个接口中增加接口函数导致其有多个接口函数需要被实现，变成\"非函数接口”，我们可以在这个上面加上一个声明@FunctionalInterface, 这样别人就无法在里面添加新的接口函数了：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-2c57e7411de227d1eb09c327d01fb766_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"318\" data-rawheight=\"123\" class=\"content_image\" width=\"318\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='318'%20height='123'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"318\" data-rawheight=\"123\" class=\"content_image lazy\" width=\"318\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-2c57e7411de227d1eb09c327d01fb766_720w.jpg?source=54b3c3a5\"></figure><p>这样，我们就得到了一个完整的Lambda表达式声明：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-02eedc528fcee115f5ed0b7b045846d7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1354\" data-rawheight=\"148\" class=\"origin_image zh-lightbox-thumb\" width=\"1354\" data-original=\"https://pic2.zhimg.com/v2-02eedc528fcee115f5ed0b7b045846d7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1354'%20height='148'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1354\" data-rawheight=\"148\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1354\" data-original=\"https://pic2.zhimg.com/v2-02eedc528fcee115f5ed0b7b045846d7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-02eedc528fcee115f5ed0b7b045846d7_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-b3c9ad03a5333f5e61c3ee8186210634_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"61\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-b3c9ad03a5333f5e61c3ee8186210634_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='61'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"61\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-b3c9ad03a5333f5e61c3ee8186210634_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-b3c9ad03a5333f5e61c3ee8186210634_720w.jpg?source=54b3c3a5\"></figure><h2><b>Lambda表达式有什么作用?</b></h2><p><b>最直观的作用就是使得代码变得异常简洁。</b></p><p>我们可以对比一下Lambda表达式和传统的Java对同一个接口的实现：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-dbd46cf9d188d0fde25db700c23dcc79_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1178\" data-rawheight=\"403\" class=\"origin_image zh-lightbox-thumb\" width=\"1178\" data-original=\"https://pic4.zhimg.com/v2-dbd46cf9d188d0fde25db700c23dcc79_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1178'%20height='403'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1178\" data-rawheight=\"403\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1178\" data-original=\"https://pic4.zhimg.com/v2-dbd46cf9d188d0fde25db700c23dcc79_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-dbd46cf9d188d0fde25db700c23dcc79_720w.jpg?source=54b3c3a5\"></figure><p>这两种写法本质上是等价的。但是显然，Java 8中的写法更加优雅简洁。并且，由于Lambda可以直接赋值给一个变量，<b>我们就可以直接把Lambda作为参数传给函数, 而传统的Java必须有明确的接口实现的定义，初始化才行：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-28606f4328308baf7f70a36bd689e5ea_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1112\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb\" width=\"1112\" data-original=\"https://pic4.zhimg.com/v2-28606f4328308baf7f70a36bd689e5ea_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1112'%20height='498'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1112\" data-rawheight=\"498\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1112\" data-original=\"https://pic4.zhimg.com/v2-28606f4328308baf7f70a36bd689e5ea_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-28606f4328308baf7f70a36bd689e5ea_720w.jpg?source=54b3c3a5\"></figure><p>有些情况下，这个接口实现只需要用到一次。传统的Java 7必须要求你定义一个“污染环境”的接口实现MyInterfaceImpl，而相较之下Java 8的Lambda, 就显得干净很多。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-413d712fb74b8406502af05031cf8d4c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"61\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-413d712fb74b8406502af05031cf8d4c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='61'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"61\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-413d712fb74b8406502af05031cf8d4c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-413d712fb74b8406502af05031cf8d4c_720w.jpg?source=54b3c3a5\"></figure><h2>Lambda结合FunctionalInterface Lib, forEach, stream()，method reference等新特性可以使代码变的更加简洁！</h2><p>直接上例子。</p><p>假设Person的定义和List&lt;Person&gt;的值都给定。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-02ae14b4c341e2303ae86e2da6a038a2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"693\" data-rawheight=\"236\" class=\"origin_image zh-lightbox-thumb\" width=\"693\" data-original=\"https://pic1.zhimg.com/v2-02ae14b4c341e2303ae86e2da6a038a2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='693'%20height='236'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"693\" data-rawheight=\"236\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"693\" data-original=\"https://pic1.zhimg.com/v2-02ae14b4c341e2303ae86e2da6a038a2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-02ae14b4c341e2303ae86e2da6a038a2_720w.jpg?source=54b3c3a5\"></figure><p>现在需要你打印出guiltyPersons List里面所有LastName以\"Z\"开头的人的FirstName。</p><p><b>原生态Lambda写法</b>：定义两个函数式接口，定义一个静态函数，调用静态函数并给参数赋值Lambda表达式。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-fdef41934be8804fa244e89c84a567f1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"587\" data-rawheight=\"457\" class=\"origin_image zh-lightbox-thumb\" width=\"587\" data-original=\"https://pic2.zhimg.com/v2-fdef41934be8804fa244e89c84a567f1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='587'%20height='457'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"587\" data-rawheight=\"457\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"587\" data-original=\"https://pic2.zhimg.com/v2-fdef41934be8804fa244e89c84a567f1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-fdef41934be8804fa244e89c84a567f1_720w.jpg?source=54b3c3a5\"></figure><p>这个代码实际上已经比较简洁了，但是我们还可以更简洁么？</p><p>当然可以。在Java 8中有一个函数式接口的包，里面定义了大量可能用到的函数式接口（<a href=\"https://link.zhihu.com/?target=https%3A//docs.oracle.com/javase/8/docs/api/java/util/function/package-summary.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">java.util.function (Java Platform SE 8 )</a>）。所以，我们在这里压根都不需要定义NameChecker和Executor这两个函数式接口，直接用Java 8函数式接口包里的Predicate&lt;T&gt;和Consumer&lt;T&gt;就可以了——因为他们这一对的接口定义和NameChecker/Executor其实是一样的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ad5b3e8d225bf9e6d988c6dc83819637_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"551\" data-rawheight=\"247\" class=\"origin_image zh-lightbox-thumb\" width=\"551\" data-original=\"https://pic1.zhimg.com/v2-ad5b3e8d225bf9e6d988c6dc83819637_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='551'%20height='247'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"551\" data-rawheight=\"247\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"551\" data-original=\"https://pic1.zhimg.com/v2-ad5b3e8d225bf9e6d988c6dc83819637_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ad5b3e8d225bf9e6d988c6dc83819637_720w.jpg?source=54b3c3a5\"></figure><p><b>第一步简化 - 利用函数式接口包：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-493168d1a72120d69b0d13b4711c3c9f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"609\" data-rawheight=\"323\" class=\"origin_image zh-lightbox-thumb\" width=\"609\" data-original=\"https://pic2.zhimg.com/v2-493168d1a72120d69b0d13b4711c3c9f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='609'%20height='323'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"609\" data-rawheight=\"323\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"609\" data-original=\"https://pic2.zhimg.com/v2-493168d1a72120d69b0d13b4711c3c9f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-493168d1a72120d69b0d13b4711c3c9f_720w.jpg?source=54b3c3a5\"></figure><p>静态函数里面的for each循环其实是非常碍眼的。这里可以利用Iterable自带的forEach()来替代。forEach()本身可以接受一个Consumer&lt;T&gt; 参数。</p><p><b>第二步简化 - 用Iterable.forEach()取代foreach loop：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-bdd6f5a6dbf65b578080f7b7ad5ab6cf_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"606\" data-rawheight=\"276\" class=\"origin_image zh-lightbox-thumb\" width=\"606\" data-original=\"https://pic4.zhimg.com/v2-bdd6f5a6dbf65b578080f7b7ad5ab6cf_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='606'%20height='276'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"606\" data-rawheight=\"276\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"606\" data-original=\"https://pic4.zhimg.com/v2-bdd6f5a6dbf65b578080f7b7ad5ab6cf_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-bdd6f5a6dbf65b578080f7b7ad5ab6cf_720w.jpg?source=54b3c3a5\"></figure><p>由于静态函数其实只是对List进行了一通操作，这里我们可以甩掉静态函数，直接使用stream()特性来完成。stream()的几个方法都是接受Predicate&lt;T&gt;，Consumer&lt;T&gt;等参数的（<a href=\"https://link.zhihu.com/?target=https%3A//docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">java.util.stream (Java Platform SE 8 )</a>）。你理解了上面的内容，stream()这里就非常好理解了，并不需要多做解释。</p><p><b>第三步简化 - 利用stream()替代静态函数：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-e196d987f852b9b8e26a6a9dac648a06_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"507\" data-rawheight=\"116\" class=\"origin_image zh-lightbox-thumb\" width=\"507\" data-original=\"https://pic1.zhimg.com/v2-e196d987f852b9b8e26a6a9dac648a06_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='507'%20height='116'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"507\" data-rawheight=\"116\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"507\" data-original=\"https://pic1.zhimg.com/v2-e196d987f852b9b8e26a6a9dac648a06_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-e196d987f852b9b8e26a6a9dac648a06_720w.jpg?source=54b3c3a5\"></figure><p>对比最开始的Lambda写法，这里已经非常非常简洁了。但是如果，我们的要求变一下，变成print这个人的全部信息，及p -&gt; System.out.println(p); 那么还可以利用Method reference来继续简化。所谓Method reference, 就是用已经写好的别的Object/Class的method来代替Lambda expression。格式如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-12622326a5682285ce235d96291f3bb8_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"459\" data-rawheight=\"76\" class=\"origin_image zh-lightbox-thumb\" width=\"459\" data-original=\"https://pic4.zhimg.com/v2-12622326a5682285ce235d96291f3bb8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='459'%20height='76'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"459\" data-rawheight=\"76\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"459\" data-original=\"https://pic4.zhimg.com/v2-12622326a5682285ce235d96291f3bb8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-12622326a5682285ce235d96291f3bb8_720w.jpg?source=54b3c3a5\"></figure><p><b>第四步简化 - 如果是println(p)，则可以利用Method reference代替forEach中的Lambda表达式：</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-f29e6569d0265b91794565ae81d54265_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"449\" data-rawheight=\"104\" class=\"origin_image zh-lightbox-thumb\" width=\"449\" data-original=\"https://pic1.zhimg.com/v2-f29e6569d0265b91794565ae81d54265_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='449'%20height='104'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"449\" data-rawheight=\"104\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"449\" data-original=\"https://pic1.zhimg.com/v2-f29e6569d0265b91794565ae81d54265_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-f29e6569d0265b91794565ae81d54265_720w.jpg?source=54b3c3a5\"></figure><p>这基本上就是能写的最简洁的版本了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ad2b43af522ea121d3b751c4a0f881c6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"61\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-ad2b43af522ea121d3b751c4a0f881c6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='61'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"61\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-ad2b43af522ea121d3b751c4a0f881c6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ad2b43af522ea121d3b751c4a0f881c6_720w.jpg?source=54b3c3a5\"></figure><h2>Lambda配合Optional&lt;T&gt;可以使Java对于null的处理变的异常优雅</h2><p>这里假设我们有一个person object，以及一个person object的Optional wrapper:</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e78d71b9699504e46d86d77aabec42cf_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"539\" data-rawheight=\"134\" class=\"origin_image zh-lightbox-thumb\" width=\"539\" data-original=\"https://pic4.zhimg.com/v2-e78d71b9699504e46d86d77aabec42cf_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='539'%20height='134'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"539\" data-rawheight=\"134\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"539\" data-original=\"https://pic4.zhimg.com/v2-e78d71b9699504e46d86d77aabec42cf_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e78d71b9699504e46d86d77aabec42cf_720w.jpg?source=54b3c3a5\"></figure><p>Optional&lt;T&gt;如果不结合Lambda使用的话，并不能使原来繁琐的null check变的简单。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-ce82e2c3e69caab9acdec9d4e42cde0e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"667\" data-rawheight=\"181\" class=\"origin_image zh-lightbox-thumb\" width=\"667\" data-original=\"https://pic2.zhimg.com/v2-ce82e2c3e69caab9acdec9d4e42cde0e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='667'%20height='181'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"667\" data-rawheight=\"181\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"667\" data-original=\"https://pic2.zhimg.com/v2-ce82e2c3e69caab9acdec9d4e42cde0e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-ce82e2c3e69caab9acdec9d4e42cde0e_720w.jpg?source=54b3c3a5\"></figure><p><b>只有当Optional&lt;T&gt;结合Lambda一起使用的时候，才能发挥出其真正的威力！</b></p><p>我们现在就来对比一下下面四种常见的null处理中，Java 8的Lambda+Optional&lt;T&gt;和传统Java两者之间对于null的处理差异。</p><p><b>情况一 - 存在则开干</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f41305009c93effa8fe047631d5342ed_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"747\" data-rawheight=\"160\" class=\"origin_image zh-lightbox-thumb\" width=\"747\" data-original=\"https://pic4.zhimg.com/v2-f41305009c93effa8fe047631d5342ed_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='747'%20height='160'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"747\" data-rawheight=\"160\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"747\" data-original=\"https://pic4.zhimg.com/v2-f41305009c93effa8fe047631d5342ed_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f41305009c93effa8fe047631d5342ed_720w.jpg?source=54b3c3a5\"></figure><p><b>情况二 - 存在则返回，无则返回屁</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-cfa0e3298ba94efa29dc9cb8b32356fe_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"790\" data-rawheight=\"181\" class=\"origin_image zh-lightbox-thumb\" width=\"790\" data-original=\"https://pic1.zhimg.com/v2-cfa0e3298ba94efa29dc9cb8b32356fe_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='790'%20height='181'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"790\" data-rawheight=\"181\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"790\" data-original=\"https://pic1.zhimg.com/v2-cfa0e3298ba94efa29dc9cb8b32356fe_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-cfa0e3298ba94efa29dc9cb8b32356fe_720w.jpg?source=54b3c3a5\"></figure><p><b>情况三 - 存在则返回，无则由函数产生</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-4091bb966ac575fd83d5fa07dd7c2dce_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"996\" data-rawheight=\"176\" class=\"origin_image zh-lightbox-thumb\" width=\"996\" data-original=\"https://pic4.zhimg.com/v2-4091bb966ac575fd83d5fa07dd7c2dce_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='996'%20height='176'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"996\" data-rawheight=\"176\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"996\" data-original=\"https://pic4.zhimg.com/v2-4091bb966ac575fd83d5fa07dd7c2dce_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-4091bb966ac575fd83d5fa07dd7c2dce_720w.jpg?source=54b3c3a5\"></figure><p><b>情况四 - 夺命连环null检查</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7bc0ac86cd29a1cea92a853d73f41cec_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"867\" data-rawheight=\"276\" class=\"origin_image zh-lightbox-thumb\" width=\"867\" data-original=\"https://pic4.zhimg.com/v2-7bc0ac86cd29a1cea92a853d73f41cec_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='867'%20height='276'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"867\" data-rawheight=\"276\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"867\" data-original=\"https://pic4.zhimg.com/v2-7bc0ac86cd29a1cea92a853d73f41cec_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7bc0ac86cd29a1cea92a853d73f41cec_720w.jpg?source=54b3c3a5\"></figure><p>由上述四种情况可以清楚地看到，Optional&lt;T&gt;+Lambda可以让我们少写很多ifElse块。尤其是对于情况四那种夺命连环null检查，传统java的写法显得冗长难懂，而新的Optional&lt;T&gt;+Lambda则清新脱俗，清楚简洁。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e6b653cd6eced03376d5feb2e5943be3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"61\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-e6b653cd6eced03376d5feb2e5943be3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='61'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"61\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-e6b653cd6eced03376d5feb2e5943be3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e6b653cd6eced03376d5feb2e5943be3_720w.jpg?source=54b3c3a5\"></figure><p>关于Java的Lambda, 还有东西需要讨论和学习。比如如何handle lambda exception，如何利用Lambda的特性来进行parallel processing等。总之，我只是一如既往地介绍个大概，让你大概知道，哦！原来是这样子就OK了。网上关于Lambda有很多相关的教程，多看多练。假以时日，必定有所精益。</p>", "为什么现在部分985高校还是给大一上C语言课？": "<p>985CS专业学生认为C语言相比于python和Java是落后的跟不上时代的产物，我觉得这才是大学CS教育的失败。</p><p>首先大学CS专业的学生应明确认识到，CS专业教育的终极目的是教授CS(Computer Science)，而不是“CL”(Code Language)。选择大一时先学习哪一门语言的语法，完全由之后的CS教学需要决定。那么什么是CS专业本科的主要学习科目？当然是《数据结构和算法》《计算机组成原理》《操作系统》《计算机网络》《编译原理》《数据库原理》等。这些才是CS的核心专业知识，凭借这些专业知识的掌握，学生也将具备深入研究计算机科学的条件，以及学习其它琳琅满目的软件编程的基础。</p><p>而就目前来说，上述计算机科学学科的很多实践或实验性项目还是以C语言甚至汇编语言这种偏向于底层的语言为主要实现手段。比如操作系统、网络协议、数据库、编译器/解释器等，很多优秀的项目或课程实验是以C/C++为编程语言。所以从后续的学习来说，学习C语言是后续学习的前置条件。</p><p>当然我们不是说C语言就是必须优先掌握的，它也不是学习CS的唯一途径。老师选择先教C语言，并不影响其它语言的学习，最终要看对于计算机科学的掌握，而不是看对某种语言的掌握。一个有意学习计算机的初学者想先学习Python语言是没有问题的，只会C语言的人也是难以学好计算机的，但是现在就将教授C语言归为过时和落后的象征，还为时尚早。C语言语法最简单，但是用来操控计算机则最难。Python语言的语法相比C语言要复杂很多，但是上手后操控计算机则比C语言容易很多。如果时间条件允许，以python为入门计算机的语言是不错的（可惜大学老师没有时间把知识掰开揉碎了给你一口一口喂，大学的知识多复杂度高而时间少）。大学授课受到整体课时安排的限制，如果不能在限定时间内学会某特定基础内容会影响后续很多课程的学习。况且先学哪种语言更好并没有定论，所以你可以对整体课程设计提出质疑和可行性改进建议，这是可以的，很多CS专业的课程编排确实受到教师水平和学生水平等影响而存在很多不尽如人意的地方。但是总体来说先学哪种语言并不太会影响一个要计算机大师的人将来成为大师的整体进程。</p><p>作为一个985CS专业的学生，你们上的可以是北大，但绝对不是北大青鸟。你们掌握的知识应该上得厅堂下得厨房，而不是只能靠某一道快餐活着。</p><hr><p>问题被修改，原问题如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-3cca7d51135b7d03034ef6e4ce0753e6_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1242\" data-rawheight=\"663\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c51928c9f329a223decd5bded143a184_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1242\" data-original=\"https://pic1.zhimg.com/v2-3cca7d51135b7d03034ef6e4ce0753e6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1242'%20height='663'&gt;&lt;/svg&gt;\" data-rawwidth=\"1242\" data-rawheight=\"663\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c51928c9f329a223decd5bded143a184_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1242\" data-original=\"https://pic1.zhimg.com/v2-3cca7d51135b7d03034ef6e4ce0753e6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-3cca7d51135b7d03034ef6e4ce0753e6_720w.jpg?source=54b3c3a5\"></figure><p><br></p><hr><p>补充：鉴于某些同学阅读理解的问题（可能知乎越来越多中小学生了），我把我上面的话的一些意思稍微明确一下：</p><ol><li>我反对的不是CS专业要不要首先学习C语言课程，我反对的是将先学习C语言课程视为落伍和跟不上时代的言论。</li><li>我也没有表达“C语言是万众基础，先学C语言才是正途”的意思，我说的是学校先开设哪门语言应结合其整体课程进度安排来看，CS专业学生先学哪个语言从长远来看差异影响并不大，但在受到课时限制和课程之间依赖关系的影响下，课程编排不能靠脑袋一热。如果你对学校的课程有意见，可以对整体课程课时安排提出建设性建议，甚至要对整体招生和毕业要求做出改变。</li><li>我不反对先学习python等语言作为入门的第一步，我甚至提倡初学者在条件允许的情况下先学习方便操控计算机的语言。如果你只对自己负责，你学什么怎么学都行。</li></ol>", "你见过哪些令你瞠目结舌的爬虫技巧？": "<p>第一条：<b>you-get（<a href=\"https://link.zhihu.com/?target=https%3A//github.com/soimort/you-get/releases\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Releases · soimort/you-get · GitHub</a>，</b>这里面有各种发布版本<b>）。</b>什么，你不知道？想爬取视频网站的视频和图片分享网站的图片，是不是就得造个轮子写个爬虫？No，你只需要：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"err\">❯</span> <span class=\"n\">pip3</span> <span class=\"n\">install</span> <span class=\"n\">you</span><span class=\"o\">-</span><span class=\"n\">get</span>\n</code></pre></div><p>能干什么呢？我提供几个例子：</p><br><p><b>1. 下载优酷视频</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>❯ you-get http://v.youku.com/v_show/id_XMTc1MDQwODMxNg\\=\\=.html\nsite:                优酷 (Youku)\ntitle:               麻雀 51\nstream:\n    - format:        hd2\n      container:     flv\n      video-profile: 超清\n      size:          552.9 MiB (579718488 bytes) # download-with: you-get --format=hd2 [URL]\n\nDownloading 麻雀 51.flv ...\n 100% (552.9/552.9MB) ├██████████████████████████████████████████████████████████████████████████┤[16/16] 9 MB/s\nMerging video parts... Merged into 麻雀 51.mp4\n</code></pre></div><p>评论区 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/3c7cc77373a34510552878b87ee85a22\" data-hash=\"3c7cc77373a34510552878b87ee85a22\" data-hovercard=\"p$b$3c7cc77373a34510552878b87ee85a22\">@xavierskip</a> 提到可以使用-p观看无广告的优酷视频！我在Mac上使用的是mplayer</p><p>，安装和使用方法如下：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>❯ brew install mplayer   ❯ you-get -p /usr/local/Cellar/mplayer/1.3.0/bin/mplayer  http://v.youku.com/v_show/id_XMTc1MDQwODMxNg==.html\n</code></pre></div><p>这样就可以使用本地播放器播放了</p><br><p><b>2. B站</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>❯ you-get http://www.bilibili.com/video/av6543659/\nSite:       bilibili.com\nTitle:      【张继科】论张继科的CP是如何被国胖队手撕的\nType:       Flash video (video/x-flv)\nSize:       28.2 MiB (29567551 Bytes)\n\nDownloading 【张继科】论张继科的CP是如何被国胖队手撕的.flv ...\n 100% ( 28.2/ 28.2MB) ├████████████████████████████████████████████████████████████████████████████┤[1/1] 7 MB/s\n\nDownloading 【张继科】论张继科的CP是如何被国胖队手撕的.cmt.xml ...\n</code></pre></div><p><b>3. 网易云音乐</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>❯ you-get http://music.163.com/\\#/song\\?id\\=424262521        \nSite:       163.com\nTitle:      5. Rolling in the deep\nType:       MP3 (audio/mpeg)\nSize:       5.86 MiB (6144044 Bytes)\n\nDownloading 5. Rolling in the deep.mp3 ...\n 100% (  5.9/  5.9MB) ├████████████████████████████████████████████████████████████████████████████┤[1/1] 16 MB/s\n\nSaving 5. Rolling in the deep.lrc ...Done.\n</code></pre></div><p><b>4. 花瓣画板</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>❯ you-get http://huaban.com/boards/27965679/                       \nSite:       花瓣 (Huaban)\nTitle:      黑板画\nType:       JPEG Image (image/jpeg)\nSize:       inf MiB (inf Bytes)\n\nDownloading 595209478.jpeg ...\n 0.0% (  0.1/  infMB) ├────────────────────────────────────────────────────────────────────────────┤[1/1] 114 kB/s\n\nDownloading 595209312.jpeg ...\n 0.0% (  0.0/  infMB) ├────────────────────────────────────────────────────────────────────────────┤[1/1] 152 kB/s\n\nDownloading 595209225.jpeg ...\n 0.0% (  0.1/  infMB) ├────────────────────────────────────────────────────────────────────────────┤[1/1] 344 kB/s\n\nDownloading 595209031.jpeg ...\n 0.0% (  0.0/  infMB) ├────────────────────────────────────────────────────────────────────────────┤[1/1] 119 kB/s\n\nDownloading 595208942.jpeg ...\n 0.0% (  0.1/  infMB) ├────────────────────────────────────────────────────────────────────────────┤[1/1] 248 kB/s\n\n.... 图片太多就展示到这里吧 (๑&gt;◡&lt;๑)\n</code></pre></div><br><p>支持的网站太多，还是去<a href=\"https://link.zhihu.com/?target=https%3A//github.com/soimort/you-get%23supported-sites\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub - soimort/you-get: Dumb downloader that scrapes the web</a>看吧，如果你有其他网站的需求，欢迎去PR添加支持，未来让其他同学也能受益。</p><br><p><b><u>还不快去用！！！</u></b></p><br><p>you-get的可扩展爬虫实现非常值得学习，相信给它贡献代码甚至读了它的源码都会对你的爬虫技术有所提高的。</p><br><p>第二条： <b>不要只看 Web 网站, 还有移动版、 App 和 H5, 它们的反爬虫措施一般比较少, 所有社交网站爬虫, 优先选择爬移动版。 </b>这条大家好像都是直接忽略的... 忧伤</p><p><b>欢迎关注本人的微信公众号获取更多Python相关的内容（也可以直接搜索「Python之美」）：</b> </p><p><a href=\"https://link.zhihu.com/?target=http%3A//weixin.qq.com/r/D0zH35LE_s_Frda89xkd\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">weixin.qq.com/r/D0zH35L</span><span class=\"invisible\">E_s_Frda89xkd</span><span class=\"ellipsis\"></span></a> (二维码自动识别)</p>", "学Python Django学得很迷茫，怎么办？": "做个稍微的总结吧，已经有人吐槽我了<br>python工程师的工作比较广，因为python能做很多事，数据挖掘可以用python，做小游戏可以用python，写网站也可以用python，黑客也用python。<br>前端要学。<br><br>使用linux，熟悉bash命令<br>会用html，dreamwaver可以不学。<br>会用sql，区分动态和静态页面一个重要的因素就是数据库。<br>做好python2到python3的转移，django1.5就已经开始支持python3了<br>英语要过得去，因为往往你需要的documentation还没有翻译。。。<br>js可以不用深入地学，因为django自带提交表单，不用js也可以连接数据库。<br>stackoverflow是个好网站，有利于人民的好网站，只是你英语要过得去。<br>csdn上有很多大牛的日记，值得收藏。<br><br>最后一句，请诸位知友指摘。<br><br><br>-------------------------------------------------------------------------<br>我当初就想做个网站。<figure><noscript><img src=\"https://pic4.zhimg.com/50/5bd38f3111aee36e481948ef189ce386_720w.jpg?source=54b3c3a5\" data-rawwidth=\"126\" data-rawheight=\"124\" class=\"content_image\" width=\"126\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='126'%20height='124'&gt;&lt;/svg&gt;\" data-rawwidth=\"126\" data-rawheight=\"124\" class=\"content_image lazy\" width=\"126\" data-actualsrc=\"https://pic4.zhimg.com/50/5bd38f3111aee36e481948ef189ce386_720w.jpg?source=54b3c3a5\"></figure><br><br>我听说Python能做网站，而且很吊，<br><br><b>我就去学了Python。<figure><noscript><img src=\"https://pic4.zhimg.com/50/cb978b5f8a6494ea901d8df29e76b93e_720w.jpg?source=54b3c3a5\" data-rawwidth=\"120\" data-rawheight=\"115\" class=\"content_image\" width=\"120\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='120'%20height='115'&gt;&lt;/svg&gt;\" data-rawwidth=\"120\" data-rawheight=\"115\" class=\"content_image lazy\" width=\"120\" data-actualsrc=\"https://pic4.zhimg.com/50/cb978b5f8a6494ea901d8df29e76b93e_720w.jpg?source=54b3c3a5\"></figure></b><br><br>结果发现他们都是在Linux下写的代码，而我在Windows上装了一次Python后再也不想在Windows上写代码了，于是我去装了双系统，我装了Ubuntu，我发现好像不用bash没办法操作ubuntu，<br><br><b>于是我就去学了bash命令行，顺带学会了vi</b><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/8ec21eb25237234435db1bd5b335cc68_720w.jpg?source=54b3c3a5\" data-rawwidth=\"108\" data-rawheight=\"101\" class=\"content_image\" width=\"108\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='108'%20height='101'&gt;&lt;/svg&gt;\" data-rawwidth=\"108\" data-rawheight=\"101\" class=\"content_image lazy\" width=\"108\" data-actualsrc=\"https://pic4.zhimg.com/50/8ec21eb25237234435db1bd5b335cc68_720w.jpg?source=54b3c3a5\"></figure><br>然后发现我得学HTML，虽然有HTML和HTML5的区别，当时预感到HTML5是个大坑，我果断跳了这个大坑。<br><br><b>我去学了html，</b><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/8ec21eb25237234435db1bd5b335cc68_720w.jpg?source=54b3c3a5\" data-rawwidth=\"108\" data-rawheight=\"101\" class=\"content_image\" width=\"108\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='108'%20height='101'&gt;&lt;/svg&gt;\" data-rawwidth=\"108\" data-rawheight=\"101\" class=\"content_image lazy\" width=\"108\" data-actualsrc=\"https://pic2.zhimg.com/50/8ec21eb25237234435db1bd5b335cc68_720w.jpg?source=54b3c3a5\"></figure><br>发现像HTML用手打代码太恶心了，我<br><br><b>我又去学了dreamwaver，</b><br><figure><noscript><img src=\"https://pic1.zhimg.com/50/8ec21eb25237234435db1bd5b335cc68_720w.jpg?source=54b3c3a5\" data-rawwidth=\"108\" data-rawheight=\"101\" class=\"content_image\" width=\"108\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='108'%20height='101'&gt;&lt;/svg&gt;\" data-rawwidth=\"108\" data-rawheight=\"101\" class=\"content_image lazy\" width=\"108\" data-actualsrc=\"https://pic1.zhimg.com/50/8ec21eb25237234435db1bd5b335cc68_720w.jpg?source=54b3c3a5\"></figure><br>没错是盗版，谴责我吧，我原以为dreamwaver是和ps一样的操作，结果发现是这傻逼玩意，我还是手动撸代码吗。这时侯我就能做出一个简易的网站了，乘胜追击，继续学习django，我发现我需要用到SQL<br><br><b>于是我就去学了SQL</b><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/0e9458e131f1e99b8dba20c496d7b8c3_720w.jpg?source=54b3c3a5\" data-rawwidth=\"81\" data-rawheight=\"102\" class=\"content_image\" width=\"81\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='81'%20height='102'&gt;&lt;/svg&gt;\" data-rawwidth=\"81\" data-rawheight=\"102\" class=\"content_image lazy\" width=\"81\" data-actualsrc=\"https://pic2.zhimg.com/50/0e9458e131f1e99b8dba20c496d7b8c3_720w.jpg?source=54b3c3a5\"></figure><br>千辛万苦，sql也学了一些，我发现貌似没有js的网页似乎。。。但我预感到js是个大坑，我没有学js，所以我让我的一位程序员朋友去学，然后我回来继续学习Django，我学的版本是Django1.2，我发现一个很重要的问题，卧槽，这怎么引用css？？？对了关于css的问题，我已经在html里解决掉了，我意外的在互联网的某个角落里发现Django1.2不支持引用CSS。。。。<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/e84330d8016b11577890c1685178098a_720w.jpg?source=54b3c3a5\" data-rawwidth=\"170\" data-rawheight=\"127\" class=\"content_image\" width=\"170\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='170'%20height='127'&gt;&lt;/svg&gt;\" data-rawwidth=\"170\" data-rawheight=\"127\" class=\"content_image lazy\" width=\"170\" data-actualsrc=\"https://pic2.zhimg.com/50/e84330d8016b11577890c1685178098a_720w.jpg?source=54b3c3a5\"></figure><br><b>我默默去学了Django1.5，</b><br><figure><noscript><img src=\"https://pic1.zhimg.com/50/0e9458e131f1e99b8dba20c496d7b8c3_720w.jpg?source=54b3c3a5\" data-rawwidth=\"81\" data-rawheight=\"102\" class=\"content_image\" width=\"81\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='81'%20height='102'&gt;&lt;/svg&gt;\" data-rawwidth=\"81\" data-rawheight=\"102\" class=\"content_image lazy\" width=\"81\" data-actualsrc=\"https://pic1.zhimg.com/50/0e9458e131f1e99b8dba20c496d7b8c3_720w.jpg?source=54b3c3a5\"></figure><br>对，去Django官网上，因为我发现，妹的！我已经走到没有翻译的荒原了！！！点开一本国人的Django book，满心欢喜，结果就翻译了第一章。。。我默默关上了网站<br><br><b>我去学习英语了</b><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/74cfe663cb82a1ce1a8654be82ccb8b9_720w.jpg?source=54b3c3a5\" data-rawwidth=\"144\" data-rawheight=\"110\" class=\"content_image\" width=\"144\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='144'%20height='110'&gt;&lt;/svg&gt;\" data-rawwidth=\"144\" data-rawheight=\"110\" class=\"content_image lazy\" width=\"144\" data-actualsrc=\"https://pic4.zhimg.com/50/74cfe663cb82a1ce1a8654be82ccb8b9_720w.jpg?source=54b3c3a5\"></figure><br>然后然后。。。。我用Django1.5重写了网站，虽然量不大，但是很折磨人。CSS也引用也解决了，就差js了，我错误地预料到js并不是一个大坑，我的程序员朋友是个大坑。。。<figure><noscript><img src=\"https://pic4.zhimg.com/50/0c7b2096b0c4b28d1ef5802be41e82fc_720w.jpg?source=54b3c3a5\" data-rawwidth=\"222\" data-rawheight=\"213\" class=\"content_image\" width=\"222\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='222'%20height='213'&gt;&lt;/svg&gt;\" data-rawwidth=\"222\" data-rawheight=\"213\" class=\"content_image lazy\" width=\"222\" data-actualsrc=\"https://pic4.zhimg.com/50/0c7b2096b0c4b28d1ef5802be41e82fc_720w.jpg?source=54b3c3a5\"></figure><br><br><b>不过幸好！！！Django自带提交表单，所以不用js也行。</b><br><br>然后就到了现在，距离我开始学习Python已经十个月了，<br><br>但是我只是个<b>小会计啊啊啊啊</b>！！！！！！<br><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/8891ef47e517ccf893f40899b8ae898a_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1151\" data-rawheight=\"455\" class=\"origin_image zh-lightbox-thumb\" width=\"1151\" data-original=\"https://pic1.zhimg.com/8891ef47e517ccf893f40899b8ae898a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1151'%20height='455'&gt;&lt;/svg&gt;\" data-rawwidth=\"1151\" data-rawheight=\"455\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1151\" data-original=\"https://pic1.zhimg.com/8891ef47e517ccf893f40899b8ae898a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/8891ef47e517ccf893f40899b8ae898a_720w.jpg?source=54b3c3a5\"></figure><br><br><br>你妹呀！！！感觉自己整个技能树都被点歪了。。。<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/10d95b31bbc8636ad61613c7913e57bc_720w.jpg?source=54b3c3a5\" data-rawwidth=\"147\" data-rawheight=\"117\" class=\"content_image\" width=\"147\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='147'%20height='117'&gt;&lt;/svg&gt;\" data-rawwidth=\"147\" data-rawheight=\"117\" class=\"content_image lazy\" width=\"147\" data-actualsrc=\"https://pic4.zhimg.com/50/10d95b31bbc8636ad61613c7913e57bc_720w.jpg?source=54b3c3a5\"></figure><br>我想说啥呢，<br><br>1.知乎上推荐的那些Python的书都很好，但是不够。<br>2.正确的学习姿势是什么样的呢？？？一边撸代码，一边使用bing，一边上Stack Overflow，每次都能在那里喜极而泣，原来我这样的傻逼，世界上还有那么多。<br>3.CSDN是个好网站，里面有很多大神，让我反复了解我是个傻逼的现实。<br>4.你需要足够傻逼继续前进，因为你现在在一个大坑里面，现在回头还来得及。<br>5.现在一把辛酸泪，请问哪家公司需要一个会写代码的会计，我萌萌哒的哟！！！算了我还是去考研吧。<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/cfa73fbcede9697d831e86072469012c_720w.jpg?source=54b3c3a5\" data-rawwidth=\"219\" data-rawheight=\"214\" class=\"content_image\" width=\"219\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='219'%20height='214'&gt;&lt;/svg&gt;\" data-rawwidth=\"219\" data-rawheight=\"214\" class=\"content_image lazy\" width=\"219\" data-actualsrc=\"https://pic4.zhimg.com/50/cfa73fbcede9697d831e86072469012c_720w.jpg?source=54b3c3a5\"></figure><br><br>----------------------------------------------------------------------------------------------------------<br>看来我做的东西还是上不了台面，迄今图床问题也还在困扰我，就不贴出来了。", "TensorFlow 如何入门，如何快速学习？": "<p>李沐大神说过，深度学习框架就是丹炉.</p><ol><li>google丹炉的使用说明书：确实是很完善，从最开始出来到现在一直在更新，有段时间不看文档，发现对了好多contrib的文档内容（这个特别棒，建议持续关注），所以，所以一直要持续的关注/学习；</li><li>炼丹友的反馈：做实验用第三方框架 tflearn， tensorlayer都很好，不过个人感觉还是要先猜猜原生tensorflow源码的坑,所以在github上，watch tensorflow这个项目是必须的，尤其是没事看看别人提的issue，很多时候会避免在之后你用到的问题；</li><li>定位自己的方向：就是你做的这块的内容在tensorflow的体现，比如本人做cv的，会去关注tensorflow/model下的各种cv方向的<a href=\"https://link.zhihu.com/?target=https%3A//github.com/tensorflow/models\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">tensorflow/models</a>，会去读它的代码实现，google的工程实现确实很厉害，代码很完善，看着很漂亮，是种享受，还有就是github其他的基于tensorflow的cv下的内容，挑star高的去看下，过不了多久，你就会慢慢模仿着用来写自己的model，而且会显得很专业；</li><li>关注丹方： TensorFlow就是一套工具，无论是mxnet、torch、paddle，真正我们要做的是用某套工具把我们熟悉，了解的丹方炼出来，google model下<a href=\"https://link.zhihu.com/?target=https%3A//github.com/tensorflow/models/tree/master/slim/nets\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">tensorflow/models</a>里面很最新的image下的丹方，建议多熟悉熟悉，如果发现其他框架比如tflearn，tensorlayer，mxnet上没有的可以去尝试用别的丹炉炼出来，这个很有用的，本人用tflearn写过googlenet，inception-resnet-v2,用mxnet写过inception-resnet-v2，难度不大但你会学到从头到尾去熟悉丹炉；</li><li>第三方支持框架： tensorflow出来后有很多高级的第三方包，例如tflearn，keras，tensorlayer，提供高级的api用来快速实现某些功能，但是我觉得更大的好处其实不是快速写好某个模型，而是其内部专业的高级api的代码实现，极其值得参考，本人比较熟悉tflearn，tflearn里面的各种layer的写法简直是教科书级别的，童靴们在写tensorflow源码的时候完全可以拿来参考</li><li>金丹使用： model训练出来，如何使用？做inference还是保存下来对新的task做pretrained+fine-tuning，这些都要关注，具体可以去看看例如neural style的model还有一些图像分类比赛使用pretrained model的源码；</li><li>框架底层的学习： 本人在这块不熟悉，但是个人觉得还是很有必要掌握这些，我之后会在一段时间好好关注下这部分，读读轻量级框架<a href=\"https://link.zhihu.com/?target=https%3A//github.com/pjreddie/darknet\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">pjreddie/darknet</a>，<a href=\"https://link.zhihu.com/?target=https%3A//github.com/tiny-dnn/tiny-dnn\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">tiny-dnn/tiny-dnn</a>的源码</li></ol><p>最后不要脸地推荐下我博客的几篇相关文章：</p><p><a href=\"https://zhuanlan.zhihu.com/p/30487008\" class=\"internal\">TensorFlow入门一-小石头的码疯窝</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/30486925\" class=\"internal\">TensorFlow之深入理解Neural Style</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/30486789\" class=\"internal\">TensorFlow之深入理解AlexNet-小石头的码疯窝</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/30486562\" class=\"internal\">TensoFlow之深入理解GoogLeNet-小石头的码疯窝</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/30486413\" class=\"internal\">TensorFlow之深入理解VGG\\Residual Network</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/30486310\" class=\"internal\">TensorFlow之深入理解Fast Neural Style</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/30486170\" class=\"internal\">风格画之最后一弹MRF-CNN-小石头的码疯窝</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/30485080\" class=\"internal\">深度学习之Neural Image Caption</a></p><p><a href=\"https://zhuanlan.zhihu.com/p/24700487\" class=\"internal\">MXnet初体验之inception-resnet-v2从Model到Predict-小石头的码疯窝</a></p>", "很多网站源码都是分为 GBK 和 UTF-8 版，为什么要同时开发两种？": "<p>一直对字符的各种编码方式懵懵懂懂，什么ANSI UNICODE UTF-8 GB2312 GBK DBCS UCS……是不是看的很晕，假如您细细的阅读本文你一定可以清晰的理解他们。Let's go!</p><p>很久很久以前，有一群人，他们决定用8个可以开合的晶体管来组合成不同的状态，以表示世界上的万物。他们看到8个开关状态是好的，于是他们把这称为\"字节\"。 <br>再后来，他们又做了一些可以处理这些字节的机器，机器开动了，可以用字节来组合出很多状态，状态开始变来变去。他们看到这样是好的，于是它们就这机器称为\"计算机\"。</p><p>开始计算机只在美国用。八位的字节一共可以组合出256(2的8次方)种不同的状态。 <br>他们把其中的编号从0开始的32种状态分别规定了特殊的用途，一但终端、打印机遇上约定好的这些字节被传过来时，就要做一些约定的动作。遇上00x10, 终端就换行，遇上0x07, 终端就向人们嘟嘟叫，例好遇上0x1b, 打印机就打印反白的字，或者终端就用彩色显示字母。他们看到这样很好，于是就把这些0x20以下的字节状态称为\"控制码\"。 <br>他们又把所有的空格、标点符号、数字、大小写字母分别用连续的字节状态表示，一直编到了第127号，这样计算机就可以用不同字节来存储英语的文字了。大家看到这样，都感觉很好，于是大家都把这个方案叫做 ANSI 的\"Ascii\"编码（American Standard Code for Information Interchange，美国信息互换标准代码）。当时世界上所有的计算机都用同样的ASCII方案来保存英文文字。 <br>后来，就像建造巴比伦塔一样，世界各地的都开始使用计算机，但是很多国家用的不是英文，他们的字母里有许多是ASCII里没有的，为了可以在计算机保存他们的文字，他们决定采用127号之后的空位来表示这些新的字母、符号，还加入了很多画表格时需要用下到的横线、竖线、交叉等形状，一直把序号编到了最后一个状态255。从128到255这一页的字符集被称\"扩展字符集\"。从此之后，贪婪的人类再没有新的状态可以用了，美帝国主义可能没有想到还有第三世界国家的人们也希望可以用到计算机吧！ <br>等中国人们得到计算机时，已经没有可以利用的字节状态来表示汉字，况且有6000多个常用汉字需要保存呢。但是这难不倒智慧的中国人民，我们不客气地把那些127号之后的奇异符号们直接取消掉, 规定：一个小于127的字符的意义与原来相同，但两个大于127的字符连在一起时，就表示一个汉字，前面的一个字节（他称之为高字节）从0xA1用到0xF7，后面一个字节（低字节）从0xA1到0xFE，这样我们就可以组合出大约7000多个简体汉字了。在这些编码里，我们还把数学符号、罗马希腊的字母、日文的假名们都编进去了，连在 ASCII 里本来就有的数字、标点、字母都统统重新编了两个字节长的编码，这就是常说的\"全角\"字符，而原来在127号以下的那些就叫\"半角\"字符了。 <br>中国人民看到这样很不错，于是就把这种汉字方案叫做 \"GB2312\"。GB2312 是对 ASCII 的中文扩展。 <br>但是中国的汉字太多了，我们很快就就发现有许多人的人名没有办法在这里打出来，特别是某些很会麻烦别人的国家领导人。于是我们不得不继续把 GB2312 没有用到的码位找出来老实不客气地用上。 <br>后来还是不够用，于是干脆不再要求低字节一定是127号之后的内码，只要第一个字节是大于127就固定表示这是一个汉字的开始，不管后面跟的是不是扩展字符集里的内容。结果扩展之后的编码方案被称为 GBK 标准，GBK 包括了 GB2312 的所有内容，同时又增加了近20000个新的汉字（包括繁体字）和符号。 <br>后来少数民族也要用电脑了，于是我们再扩展，又加了几千个新的少数民族的字，GBK 扩成了 GB18030。从此之后，中华民族的文化就可以在计算机时代中传承了。 <br>中国的程序员们看到这一系列汉字编码的标准是好的，于是通称他们叫做 \"DBCS\"（Double Byte Charecter Set 双字节字符集）。在DBCS系列标准里，最大的特点是两字节长的汉字字符和一字节长的英文字符并存于同一套编码方案里，因此他们写的程序为了支持中文处理，必须要注意字串里的每一个字节的值，如果这个值是大于127的，那么就认为一个双字节字符集里的字符出现了。那时候凡是受过加持，会编程的计算机僧侣们都要每天念下面这个咒语数百遍： <br>\"一个汉字算两个英文字符！一个汉字算两个英文字符……\"</p><p>因为当时各个国家都像中国这样搞出一套自己的编码标准，结果互相之间谁也不懂谁的编码，谁也不支持别人的编码，连大陆和台湾这样只相隔了150海里，使用着同一种语言的兄弟地区，也分别采用了不同的 DBCS 编码方案——当时的中国人想让电脑显示汉字，就必须装上一个\"汉字系统\"，专门用来处理汉字的显示、输入的问题，但是那个台湾的愚昧封建人士写的算命程序就必须加装另一套支持 BIG5 编码的什么\"倚天汉字系统\"才可以用，装错了字符系统，显示就会乱了套！这怎么办？而且世界民族之林中还有那些一时用不上电脑的穷苦人民，他们的文字又怎么办？ <br>真是计算机的巴比伦塔命题啊！ <br>正在这时，大天使加百列及时出现了——一个叫 ISO （国际标谁化组织）的国际组织决定着手解决这个问题。他们采用的方法很简单：废了所有的地区性编码方案，重新搞一个包括了地球上所有文化、所有字母和符号的编码！他们打算叫它\"Universal Multiple-Octet Coded Character Set\"，简称 UCS, 俗称 \"UNICODE\"。 <br>UNICODE 开始制订时，计算机的存储器容量极大地发展了，空间再也不成为问题了。于是 ISO 就直接规定必须用两个字节，也就是16位来统一表示所有的字符，对于ascii里的那些“半角”字符，UNICODE 包持其原编码不变，只是将其长度由原来的8位扩展为16位，而其他文化和语言的字符则全部重新统一编码。由于\"半角\"英文符号只需要用到低8位，所以其高8位永远是0，因此这种大气的方案在保存英文文本时会多浪费一倍的空间。 <br>这时候，从旧社会里走过来的程序员开始发现一个奇怪的现象：他们的strlen函数靠不住了，一个汉字不再是相当于两个字符了，而是一个！是的，从 UNICODE 开始，无论是半角的英文字母，还是全角的汉字，它们都是统一的\"一个字符\"！同时，也都是统一的\"两个字节\"，请注意\"字符\"和\"字节\"两个术语的不同，“字节”是一个8位的物理存贮单元，而“字符”则是一个文化相关的符号。在UNICODE 中，一个字符就是两个字节。一个汉字算两个英文字符的时代已经快过去了。 <br>从前多种字符集存在时，那些做多语言软件的公司遇上过很大麻烦，他们为了在不同的国家销售同一套软件，就不得不在区域化软件时也加持那个双字节字符集咒语，不仅要处处小心不要搞错，还要把软件中的文字在不同的字符集中转来转去。UNICODE 对于他们来说是一个很好的一揽子解决方案，于是从 Windows NT 开始，MS 趁机把它们的操作系统改了一遍，把所有的核心代码都改成了用 UNICODE 方式工作的版本，从这时开始，WINDOWS 系统终于无需要加装各种本土语言系统，就可以显示全世界上所有文化的字符了。 <br>但是，UNICODE 在制订时没有考虑与任何一种现有的编码方案保持兼容，这使得 GBK 与UNICODE 在汉字的内码编排上完全是不一样的，没有一种简单的算术方法可以把文本内容从UNICODE编码和另一种编码进行转换，这种转换必须通过查表来进行。 <br>如前所述，UNICODE 是用两个字节来表示为一个字符，他总共可以组合出65535不同的字符，这大概已经可以覆盖世界上所有文化的符号。如果还不够也没有关系，ISO已经准备了UCS-4方案，说简单了就是四个字节来表示一个字符，这样我们就可以组合出21亿个不同的字符出来（最高位有其他用途），这大概可以用到银河联邦成立那一天吧！</p><p>UNICODE 来到时，一起到来的还有计算机网络的兴起，UNICODE 如何在网络上传输也是一个必须考虑的问题，于是面向传输的众多 UTF（UCS Transfer Format）标准出现了，顾名思义，UTF8就是每次8个位传输数据，而UTF16就是每次16个位，只不过为了传输时的可靠性，从UNICODE到UTF时并不是直接的对应，而是要过一些算法和规则来转换。 <br>受到过网络编程加持的计算机僧侣们都知道，在网络里传递信息时有一个很重要的问题，就是对于数据高低位的解读方式，一些计算机是采用低位先发送的方法，例如我们PC机采用的 INTEL 架构，而另一些是采用高位先发送的方式，在网络中交换数据时，为了核对双方对于高低位的认识是否是一致的，采用了一种很简便的方法，就是在文本流的开始时向对方发送一个标志符——如果之后的文本是高位在位，那就发送\"FEFF\"，反之，则发送\"FFFE\"。不信你可以用二进制方式打开一个UTF-X格式的文件，看看开头两个字节是不是这两个字节？</p><p>讲到这里，我们再顺便说说一个很著名的奇怪现象：当你在 windows 的记事本里新建一个文件，输入\"联通\"两个字之后，保存，关闭，然后再次打开，你会发现这两个字已经消失了，代之的是几个乱码！呵呵，有人说这就是联通之所以拼不过移动的原因。 <br>其实这是因为GB2312编码与UTF8编码产生了编码冲撞的原因。 <br>从网上引来一段从UNICODE到UTF8的转换规则：</p><p>Unicode <br>UTF-8</p><p>0000 - 007F <br>0xxxxxxx</p><p>0080 - 07FF <br>110xxxxx 10xxxxxx</p><p>0800 - FFFF <br>1110xxxx 10xxxxxx 10xxxxxx</p><p>例如\"汉\"字的Unicode编码是6C49。6C49在0800-FFFF之间，所以要用3字节模板：1110xxxx 10xxxxxx 10xxxxxx。将6C49写成二进制是：0110 1100 0100 1001，将这个比特流按三字节模板的分段方法分为0110 110001 001001，依次代替模板中的x，得到：1110-0110 10-110001 10-001001，即E6 B1 89，这就是其UTF8的编码。 <br>而当你新建一个文本文件时，记事本的编码默认是ANSI, 如果你在ANSI的编码输入汉字，那么他实际就是GB系列的编码方式，在这种编码下，\"联通\"的内码是： <br>c1 1100 0001 <br>aa 1010 1010 <br>cd 1100 1101 <br>a8 1010 1000 <br>注意到了吗？第一二个字节、第三四个字节的起始部分的都是\"110\"和\"10\"，正好与UTF8规则里的两字节模板是一致的，于是再次打开记事本时，记事本就误认为这是一个UTF8编码的文件，让我们把第一个字节的110和第二个字节的10去掉，我们就得到了\"00001 101010\"，再把各位对齐，补上前导的0，就得到了\"0000 0000 0110 1010\"，不好意思，这是UNICODE的006A，也就是小写的字母\"j\"，而之后的两字节用UTF8解码之后是0368，这个字符什么也不是。这就是只有\"联通\"两个字的文件没有办法在记事本里正常显示的原因。 <br>而如果你在\"联通\"之后多输入几个字，其他的字的编码不见得又恰好是110和10开始的字节，这样再次打开时，记事本就不会坚持这是一个utf8编码的文件，而会用ANSI的方式解读之，这时乱码又不出现了。</p><p>在数据库里，有n前缀的字串类型就是UNICODE类型，这种类型中，固定用两个字节来表示一个字符，无论这个字符是汉字还是英文字母，或是别的什么。 <br>如果你要测试\"abc汉字\"这个串的长度，在没有n前缀的数据类型里，这个字串是7个字符的长度，因为一个汉字相当于两个字符。而在有n前缀的数据类型里，同样的测试串长度的函数将会告诉你是5个字符，因为一个汉字就是一个字符。</p>"}{"我数学很差，最近报了培训班在学Python编程，上课都能听懂，自己写程序的时候感觉特别难是怎么回事？": "知乎上时常会冒出这样的问题<br><br>我英语差，我适不适合干开发？<br><br>说真的，我都没见过比我英语更烂的人，<br>认识我的人都知道我英语初一刚学开始，一路挂到了大学毕业。。。<br><br>也有人问这样的问题<br><br>我打字超慢，适不适合当程序员？<br><br>我带的培训班的[学生]们都亲眼所见，我这个两年多开发经验的人，打字速度在我们班绝对是最慢的。。。<br>还是那句话，我没见过比我还慢的<br><br><br><br>还有人会问这样的问题，我数学差，什么什么的，适合当程序员吗？<br>我大学兼职四年，，，除了考试周恶补外，没学过数学，好吧<br><br><br>。。。<br><br>我培训班的[学生]也问过题主同样的问题<br><br>我当初给的回答是：你这个阶段的经历，我都经历过，而且我相信大多数程序员都有过这个阶段。。。<br><br>真的，这些我真的都经历过。。。<br><br><br>我刚干开发时，怎么打开mfc工程都百度了半天。。。<br><br>等我打开时，是这样儿的<br><figure><noscript><img data-rawheight=\"1280\" src=\"https://pic4.zhimg.com/50/v2-32400c9dcf628d0a8d4542e03daca821_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1707\" class=\"origin_image zh-lightbox-thumb\" width=\"1707\" data-original=\"https://pic1.zhimg.com/v2-32400c9dcf628d0a8d4542e03daca821_720w.jpg?source=54b3c3a5\"></noscript><img data-rawheight=\"1280\" src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1707'%20height='1280'&gt;&lt;/svg&gt;\" data-rawwidth=\"1707\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1707\" data-original=\"https://pic1.zhimg.com/v2-32400c9dcf628d0a8d4542e03daca821_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-32400c9dcf628d0a8d4542e03daca821_720w.jpg?source=54b3c3a5\"></figure><br>满屏的代码，满屏的英文<br><br>你们不知道对于一个非科班，非培训，不会外语，仅控制台弹hello world框水平的人意味着什么。。。<br><br>。。。<br><br>进了公司，我害怕暴露后被开除，，，所以白天就装样子盯着屏幕看，领导路过时，就装样子敲键盘。。。<br><br>说真的，当时我真的很害怕被开除，相信大多数人没有经历过送肯德基时被人鄙视的样子，，，<br><br>相信知乎大多数人没有经历过，面试几十上百次的被拒绝。。。<br><br>所以我很是怕暴露自己的无知。。。<br><br>我不敢问任何问题，我怕暴露自己。。。<br><br>。。。<br><br>白天都是装样子过去的，，，<br><br>晚上回宿舍了拼命的看书看视频<br><br>跟题主一样，孙鑫的[vc++深入详解]，我刚开始看都看不懂，当我一集视频看第三遍第四遍终于看懂时，我也写不出来<br><br>说真的，我最后都看得懂，可是我自己写不出来。。。<br><br>侯俊杰[深入浅出mfc]，第二章，第三章看第五遍时，我才开的窍，，，才敢去写东西<br><br>就像新生儿童一样，刚开始都没有自己的思想，都是不停学习别人的，理解别人的，背别人的，最终才有了自己的思想，自己的代码<br><br>以下是我以前自学mfc时，书籍中的笔记<br><br><figure><noscript><img data-rawheight=\"1707\" src=\"https://pic2.zhimg.com/50/v2-78e31097c9df5c9473f7d2e3539a8ff1_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1280\" class=\"origin_image zh-lightbox-thumb\" width=\"1280\" data-original=\"https://pic2.zhimg.com/v2-78e31097c9df5c9473f7d2e3539a8ff1_720w.jpg?source=54b3c3a5\"></noscript><img data-rawheight=\"1707\" src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1280'%20height='1707'&gt;&lt;/svg&gt;\" data-rawwidth=\"1280\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1280\" data-original=\"https://pic2.zhimg.com/v2-78e31097c9df5c9473f7d2e3539a8ff1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-78e31097c9df5c9473f7d2e3539a8ff1_720w.jpg?source=54b3c3a5\"></figure><br>（别人笔记都是硬货，我的夹杂着很多外语单词）<br><br><figure><noscript><img data-rawheight=\"1707\" src=\"https://pic2.zhimg.com/50/v2-315a72c7a7cc8ddb80d06ed6f55ac9e3_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1280\" class=\"origin_image zh-lightbox-thumb\" width=\"1280\" data-original=\"https://pic1.zhimg.com/v2-315a72c7a7cc8ddb80d06ed6f55ac9e3_720w.jpg?source=54b3c3a5\"></noscript><img data-rawheight=\"1707\" src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1280'%20height='1707'&gt;&lt;/svg&gt;\" data-rawwidth=\"1280\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1280\" data-original=\"https://pic1.zhimg.com/v2-315a72c7a7cc8ddb80d06ed6f55ac9e3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-315a72c7a7cc8ddb80d06ed6f55ac9e3_720w.jpg?source=54b3c3a5\"></figure><br>这个是我自学孙鑫mfc书籍随便翻的一页<br><br><figure><noscript><img data-rawheight=\"1707\" src=\"https://pic4.zhimg.com/50/v2-55cb5df2fb8505f236f7d81af0b8ec2b_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1280\" class=\"origin_image zh-lightbox-thumb\" width=\"1280\" data-original=\"https://pic2.zhimg.com/v2-55cb5df2fb8505f236f7d81af0b8ec2b_720w.jpg?source=54b3c3a5\"></noscript><img data-rawheight=\"1707\" src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1280'%20height='1707'&gt;&lt;/svg&gt;\" data-rawwidth=\"1280\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1280\" data-original=\"https://pic2.zhimg.com/v2-55cb5df2fb8505f236f7d81af0b8ec2b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-55cb5df2fb8505f236f7d81af0b8ec2b_720w.jpg?source=54b3c3a5\"></figure><br>这个是我抄在侯俊杰[深入浅出mfc]鼓励自己的话<br><br><figure><noscript><img data-rawheight=\"1707\" src=\"https://pic2.zhimg.com/50/v2-bb77fdda9591a9c7fd5c847bef32b47a_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1280\" class=\"origin_image zh-lightbox-thumb\" width=\"1280\" data-original=\"https://pic2.zhimg.com/v2-bb77fdda9591a9c7fd5c847bef32b47a_720w.jpg?source=54b3c3a5\"></noscript><img data-rawheight=\"1707\" src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1280'%20height='1707'&gt;&lt;/svg&gt;\" data-rawwidth=\"1280\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1280\" data-original=\"https://pic2.zhimg.com/v2-bb77fdda9591a9c7fd5c847bef32b47a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-bb77fdda9591a9c7fd5c847bef32b47a_720w.jpg?source=54b3c3a5\"></figure><br>[深入浅出mfc]随便翻的一页<br><br><figure><noscript><img data-rawheight=\"1707\" src=\"https://pic4.zhimg.com/50/v2-248907987334546c47128cab97676b6d_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1280\" class=\"origin_image zh-lightbox-thumb\" width=\"1280\" data-original=\"https://pic4.zhimg.com/v2-248907987334546c47128cab97676b6d_720w.jpg?source=54b3c3a5\"></noscript><img data-rawheight=\"1707\" src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1280'%20height='1707'&gt;&lt;/svg&gt;\" data-rawwidth=\"1280\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1280\" data-original=\"https://pic4.zhimg.com/v2-248907987334546c47128cab97676b6d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-248907987334546c47128cab97676b6d_720w.jpg?source=54b3c3a5\"></figure><br>C++primer被我干成了这样<br><br>。。。<br><br>真的，对于这行，我无数次想过放弃。。。<br><br>可是我无路可走<br><br>。。。<br><br>希望对看了这个回答的人有所帮助吧", "如何优雅地使用 Jupyter？": "<p></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-209ea7530ee79adba3d81f755664ddfb_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"318\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-209ea7530ee79adba3d81f755664ddfb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='318'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"318\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-209ea7530ee79adba3d81f755664ddfb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-209ea7530ee79adba3d81f755664ddfb_720w.jpg?source=54b3c3a5\"></figure><p>除了基础的写文档之外，其实Jupyter还有N多功能，简直是一个集视频、图片、PPT、多种交互于一身的万花筒。</p><p>如果不会用，你可能错过了Jupyter 99%的功能。</p><p>Medium上走向数据科学（Towards Data Science）专栏的作者Parul Pandey就总结了七大Jupyter的进阶用法，量子位编译如下~</p><h2><b>执行shell命令</b></h2><p>Shell是一种与计算机进行文本交互的方式。</p><p>一般来讲，当你正在使用Python编译器，需要用到命令行工具的时候，要在shell和IDLE之间进行切换。</p><p>但是，如果你用的是Jupyter，就完全不用这么麻烦了，你可以直接在命令之前放一个“!”，就能执行shell命令，完全不用切换来切换去，就能在IPython里执行任何命令行。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>In [1]: !ls\nexample.jpeg list tmp\nIn [2]: !pwd\n/home/Parul/Desktop/Hello World Folder'\nIn [3]: !echo \"Hello World\"\nHello World\n</code></pre></div><p>我们甚至可以将值传递给shell，像下面这样：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>In [4]: files= !ls\nIn [5]: print(files)\n['example.jpeg', 'list', 'tmp']\nIn [6]: directory = !pwd\nIn [7]: print(directory)\n['/Users/Parul/Desktop/Hello World Folder']\nIn [8]: type(directory)\nIPython.utils.text.SList\n</code></pre></div><p>注意，返回结果的数据类型不是列表。</p><h2><b>给Jupyter换主题</b></h2><p>使用Jupyter主题，不仅能让你的Jupyter界面更好看、更舒服，还能让屏幕上的代码看起来更显眼。</p><p>比如<b>Chesterish</b>主题：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-96824bbc5ec438fed7573607a4119c09_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"634\" data-rawheight=\"720\" class=\"origin_image zh-lightbox-thumb\" width=\"634\" data-original=\"https://pic1.zhimg.com/v2-96824bbc5ec438fed7573607a4119c09_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='634'%20height='720'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"634\" data-rawheight=\"720\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"634\" data-original=\"https://pic1.zhimg.com/v2-96824bbc5ec438fed7573607a4119c09_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-96824bbc5ec438fed7573607a4119c09_720w.jpg?source=54b3c3a5\"></figure><p><b>solarizedl</b>主题：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-5153e26b8f9e3e24da9acf347252f54d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"616\" data-rawheight=\"722\" class=\"origin_image zh-lightbox-thumb\" width=\"616\" data-original=\"https://pic1.zhimg.com/v2-5153e26b8f9e3e24da9acf347252f54d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='616'%20height='722'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"616\" data-rawheight=\"722\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"616\" data-original=\"https://pic1.zhimg.com/v2-5153e26b8f9e3e24da9acf347252f54d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-5153e26b8f9e3e24da9acf347252f54d_720w.jpg?source=54b3c3a5\"></figure><p>来看一下具体的操作方法：</p><p>第一步，安装：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pip install jupyterthemes\n</code></pre></div><p>第二步，加载可用主题列表：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>jt -l\n</code></pre></div><p>第三步，选择你想要的主题：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"c1\"># selecting a particular theme</span>\n<span class=\"n\">jt</span> <span class=\"o\">-</span><span class=\"n\">t</span> <span class=\"o\">&lt;</span><span class=\"n\">name</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">theme</span><span class=\"o\">&gt;</span>\n<span class=\"c1\"># reverting to original Theme</span>\n<span class=\"n\">jt</span> <span class=\"o\">-</span><span class=\"n\">r</span>\n</code></pre></div><p>现在可用的主题有：</p><blockquote>chesterish<br>grade3<br>gruvboxd<br>gruvboxl monokai<br>oceans16<br>onedork<br>solarizedd<br>solarizedl</blockquote><p>把名字填进去就好啦。</p><p>不过，每次换主题的时候都要重新加载Jupyter，才能看到主题变化。</p><p>另外我们上面讲的在命令之前加“!”也一样可用。</p><h2><b>笔记本扩展</b></h2><p>笔记本扩展（nbextensions）是一种JavaScript模块，可以加载到笔记本前端页面上，可以大大提升用户体验。</p><p>比如下面这些扩展工具，简直能让效率提升10000倍。</p><p><b>Hinterland</b></p><p>Hinterland功能可以让你每敲完一个键，就出现下拉菜单，可以直接选中你需要的词汇。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-e28d18e962436e2e6a47ad3881fb3428_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"930\" data-rawheight=\"390\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-e28d18e962436e2e6a47ad3881fb3428_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"930\" data-original=\"https://pic1.zhimg.com/v2-e28d18e962436e2e6a47ad3881fb3428_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='930'%20height='390'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"930\" data-rawheight=\"390\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-e28d18e962436e2e6a47ad3881fb3428_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"930\" data-original=\"https://pic1.zhimg.com/v2-e28d18e962436e2e6a47ad3881fb3428_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e28d18e962436e2e6a47ad3881fb3428_720w.gif?source=54b3c3a5\"></figure><p><b>Snippets</b></p><p>Snippets在工具栏里加了一个下拉菜单，可以非常方便的直接插入代码段，完全不用手动敲。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ea962728373dee3acf36db577aa7369b_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"353\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-ea962728373dee3acf36db577aa7369b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-ea962728373dee3acf36db577aa7369b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='353'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"353\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-ea962728373dee3acf36db577aa7369b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-ea962728373dee3acf36db577aa7369b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ea962728373dee3acf36db577aa7369b_720w.gif?source=54b3c3a5\"></figure><p><b>拆分单元格</b></p><p>拆分笔记本中的单元格，改成相邻的模式，看起来就像分了两栏。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a6b763f3a76709d91799d68d4bbd6e08_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"488\" data-thumbnail=\"https://pic3.zhimg.com/50/v2-a6b763f3a76709d91799d68d4bbd6e08_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-a6b763f3a76709d91799d68d4bbd6e08_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='488'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"488\" data-thumbnail=\"https://pic3.zhimg.com/50/v2-a6b763f3a76709d91799d68d4bbd6e08_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-a6b763f3a76709d91799d68d4bbd6e08_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a6b763f3a76709d91799d68d4bbd6e08_720w.gif?source=54b3c3a5\"></figure><p><b>目录</b></p><p>这个功能可以自动找到所有的标题，生成目录。</p><p>并且这个目录还是移动的呦，你可以放在侧边栏，也可以拖动到任何你喜欢的地方悬浮起来。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1ba5686d37b502b593c4194bd6b62d51_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"428\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-1ba5686d37b502b593c4194bd6b62d51_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1269\" data-original=\"https://pic1.zhimg.com/v2-1ba5686d37b502b593c4194bd6b62d51_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1269'%20height='428'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"428\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-1ba5686d37b502b593c4194bd6b62d51_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1269\" data-original=\"https://pic1.zhimg.com/v2-1ba5686d37b502b593c4194bd6b62d51_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1ba5686d37b502b593c4194bd6b62d51_720w.gif?source=54b3c3a5\"></figure><p><b>折叠一个标题下的全部内容</b></p><p>如果你的代码太长，觉得滚动过去太麻烦，可以直接折叠掉。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-066526d8a71acaa577b986dc39a30b37_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"220\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-066526d8a71acaa577b986dc39a30b37_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-066526d8a71acaa577b986dc39a30b37_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='220'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"220\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-066526d8a71acaa577b986dc39a30b37_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-066526d8a71acaa577b986dc39a30b37_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-066526d8a71acaa577b986dc39a30b37_720w.gif?source=54b3c3a5\"></figure><p><b>Autopep8</b></p><p>一键美化代码，强迫症的福音。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-9de65b06bd26b03388f719c139b88505_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"356\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-9de65b06bd26b03388f719c139b88505_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-9de65b06bd26b03388f719c139b88505_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='356'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"356\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-9de65b06bd26b03388f719c139b88505_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-9de65b06bd26b03388f719c139b88505_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-9de65b06bd26b03388f719c139b88505_720w.gif?source=54b3c3a5\"></figure><p><b>安装方法</b></p><p>最后看一下怎么装，需要用到conda：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>conda install -c conda-forge jupyter_nbextensions_configurator\n</code></pre></div><p>或者用pip：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pip install jupyter_contrib_nbextensions &amp;&amp; jupyter contrib nbextension install\nincase you get permission errors on MacOS,\npip install jupyter_contrib_nbextensions &amp;&amp; jupyter contrib nbextension install --user\n</code></pre></div><p>然后把Jupyter打开，你就可以看到<b>NBextensions</b>这个选项卡了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-a6934e29babc243c6a670b194d83b93a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"451\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-a6934e29babc243c6a670b194d83b93a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='451'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"451\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-a6934e29babc243c6a670b194d83b93a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-a6934e29babc243c6a670b194d83b93a_720w.jpg?source=54b3c3a5\"></figure><p>找不到的话就去菜单的<b>Edit</b>里面找。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-db1bfd03b125e67ad7e1c944110e886c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"251\" data-rawheight=\"633\" class=\"content_image\" width=\"251\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='251'%20height='633'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"251\" data-rawheight=\"633\" class=\"content_image lazy\" width=\"251\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-db1bfd03b125e67ad7e1c944110e886c_720w.jpg?source=54b3c3a5\"></figure><p>搞定。</p><h2><b>Jupyter小工具</b></h2><p>还有一些Jupyter小工具，比如滑块、文本框之类的部分，可以做一些方便的交互。</p><p><b>滑块</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e65591c6413387dbf01af93bbeead4de_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"346\" data-rawheight=\"66\" class=\"content_image\" width=\"346\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='346'%20height='66'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"346\" data-rawheight=\"66\" class=\"content_image lazy\" width=\"346\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e65591c6413387dbf01af93bbeead4de_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>def f(x):\n return x\n# Generate a slider \ninteract(f, x=10,);\n</code></pre></div><p><b>布尔值生成复选框</b></p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e63ea358897981197ee40606c36853d1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"164\" data-rawheight=\"64\" class=\"content_image\" width=\"164\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='164'%20height='64'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"164\" data-rawheight=\"64\" class=\"content_image lazy\" width=\"164\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e63ea358897981197ee40606c36853d1_720w.jpg?source=54b3c3a5\"></figure><p><br></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># Booleans generate check-boxes\ninteract(f, x=True);\n</code></pre></div><p><b>字符串生成文本区域</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-5a890bf071e7e438a8dd3d0f46634c52_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"366\" data-rawheight=\"69\" class=\"content_image\" width=\"366\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='366'%20height='69'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"366\" data-rawheight=\"69\" class=\"content_image lazy\" width=\"366\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-5a890bf071e7e438a8dd3d0f46634c52_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># Strings generate text areas\ninteract(f, x='Hi there!');\n</code></pre></div><p><b>播放器</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-2cef7131696d3c4d3084630b83f5ff4a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"55\" class=\"origin_image zh-lightbox-thumb\" width=\"521\" data-original=\"https://pic2.zhimg.com/v2-2cef7131696d3c4d3084630b83f5ff4a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='521'%20height='55'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"55\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"521\" data-original=\"https://pic2.zhimg.com/v2-2cef7131696d3c4d3084630b83f5ff4a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-2cef7131696d3c4d3084630b83f5ff4a_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-text\"><span></span> play = widgets.Play(\n  # interval=10,\n  value=50,\n min=0,\n max=100,\n step=1,\n description=\"Press play\",\n disabled=False\n)\nslider = widgets.IntSlider()\nwidgets.jslink((play, 'value'), (slider, 'value'))\nwidgets.HBox([play, slider])\n</code></pre></div><p><b>日历</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-635979e941c5623ae5a2a9b574302eb6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"405\" data-rawheight=\"253\" class=\"content_image\" width=\"405\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='405'%20height='253'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"405\" data-rawheight=\"253\" class=\"content_image lazy\" width=\"405\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-635979e941c5623ae5a2a9b574302eb6_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>widgets.DatePicker(\n description='Pick a Date',\n disabled=False\n)\n</code></pre></div><p>不过这个部件只能咋Chrome和Edge里用，Firefox和Safari不支持。</p><p><b>调色盘</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-bb0387eaf47559182320e34e3b3f8078_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"275\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-bb0387eaf47559182320e34e3b3f8078_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='275'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"275\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-bb0387eaf47559182320e34e3b3f8078_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-bb0387eaf47559182320e34e3b3f8078_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>widgets.ColorPicker(\n concise=False,\n description='Pick a color',\n value='blue',\n disabled=False\n)\n</code></pre></div><p><b>标签</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-80ae93cd4a9877616b92bb94866e3c82_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"811\" data-rawheight=\"111\" class=\"origin_image zh-lightbox-thumb\" width=\"811\" data-original=\"https://pic1.zhimg.com/v2-80ae93cd4a9877616b92bb94866e3c82_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='811'%20height='111'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"811\" data-rawheight=\"111\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"811\" data-original=\"https://pic1.zhimg.com/v2-80ae93cd4a9877616b92bb94866e3c82_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-80ae93cd4a9877616b92bb94866e3c82_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-py3tb\"><span></span><span class=\"err\">tab_contents = ['P0', 'P1', 'P2', 'P3', 'P4']</span>\n<span class=\"err\">children = [widgets.Text(description=name) for name in tab_contents]</span>\n<span class=\"err\">tab = widgets.Tab()</span>\n<span class=\"err\">tab.children = children</span>\n<span class=\"err\">for i in range(len(children)):</span>\n<span class=\"err\"> tab.set_title(i, str(i))</span>\n<span class=\"err\">tab</span>\n</code></pre></div><p>其他的小部件，可以在文末的传送门跳转到GitHub寻找。</p><p><b>安装方法</b></p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"c1\"># pip</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">ipywidgets</span>\n<span class=\"n\">jupyter</span> <span class=\"n\">nbextension</span> <span class=\"n\">enable</span> <span class=\"o\">--</span><span class=\"n\">py</span> <span class=\"n\">widgetsnbextension</span>\n<span class=\"c1\"># Conda</span>\n<span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">conda</span><span class=\"o\">-</span><span class=\"n\">forge</span> <span class=\"n\">ipywidgets</span>\n<span class=\"c1\">#Installing ipywidgets with conda automatically enables the extension</span>\n</code></pre></div><p>使用“interact”功能自动创建UI控件，这是使用IPython最方便的方法。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># Start with some imports!\nfrom ipywidgets import interact\nimport ipywidgets as widgets\n</code></pre></div><h2><b>Qgrid</b></h2><p>Qgrid也是一个Jupyter的小部件，不过它主要用于数据帧，装上之后，就可以像操作Excel里的筛选功能一样，方便的处理数据。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e7dc5a8924f6774bfc8b25e0cddd5f18_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"846\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-e7dc5a8924f6774bfc8b25e0cddd5f18_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"916\" data-original=\"https://pic4.zhimg.com/v2-e7dc5a8924f6774bfc8b25e0cddd5f18_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='916'%20height='846'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"846\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-e7dc5a8924f6774bfc8b25e0cddd5f18_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"916\" data-original=\"https://pic4.zhimg.com/v2-e7dc5a8924f6774bfc8b25e0cddd5f18_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e7dc5a8924f6774bfc8b25e0cddd5f18_720w.gif?source=54b3c3a5\"></figure><p><b>安装方法</b></p><p>用pip安装：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pip install qgrid\njupyter nbextension enable --py --sys-prefix qgrid\n# only required if you have not enabled the ipywidgets nbextension yet\njupyter nbextension enable --py --sys-prefix widgetsnbextension\n</code></pre></div><p>用conda安装：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># only required if you have not added conda-forge to your channels yet\nconda config --add channels conda-forge\nconda install qgrid\n</code></pre></div><h2><b>放PPT</b></h2><p>人在江湖飘，难免遇到要做PPT的时候。</p><p>但是，如果你的内容都已经放在Jupyter里了，再重新导入PPT，太麻烦了，我们自动转换吧。</p><p>一种方法是用Jupyter内置的PPT选项，依次点击菜单栏里的View → Cell Toolbar → Slideshow，之后每个单元格上面都会有一个灰色的横条，选<b>Sub-Slide</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-84094a10aaf811dd97e5a72c199ad742_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"332\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-84094a10aaf811dd97e5a72c199ad742_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='332'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"332\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-84094a10aaf811dd97e5a72c199ad742_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-84094a10aaf811dd97e5a72c199ad742_720w.jpg?source=54b3c3a5\"></figure><p>然后输入以下代码：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>jupyter nbconvert *.ipynb --to slides --post serve\n# insert your notebook name instead of *.ipynb\n</code></pre></div><p>好了，现在就变成PPT样式的了，显示在端口8000，你也可以查看源代码找到PPT文件。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-af8775b777cb3233225467b7db89939c_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"968\" data-rawheight=\"538\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-af8775b777cb3233225467b7db89939c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"968\" data-original=\"https://pic1.zhimg.com/v2-af8775b777cb3233225467b7db89939c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='968'%20height='538'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"968\" data-rawheight=\"538\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-af8775b777cb3233225467b7db89939c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"968\" data-original=\"https://pic1.zhimg.com/v2-af8775b777cb3233225467b7db89939c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-af8775b777cb3233225467b7db89939c_720w.gif?source=54b3c3a5\"></figure><p>你也可以提前换好主题，比如onedork主题，然后再转换成PPT的的时候就是同一个主题风格的PPT了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-347f8630428dfbf28753a9b246e970c4_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"983\" data-rawheight=\"629\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-347f8630428dfbf28753a9b246e970c4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"983\" data-original=\"https://pic2.zhimg.com/v2-347f8630428dfbf28753a9b246e970c4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='983'%20height='629'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"983\" data-rawheight=\"629\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-347f8630428dfbf28753a9b246e970c4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"983\" data-original=\"https://pic2.zhimg.com/v2-347f8630428dfbf28753a9b246e970c4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-347f8630428dfbf28753a9b246e970c4_720w.gif?source=54b3c3a5\"></figure><p>不过，用PyTorch默认方法生成的PPT代码不能编辑，这个时候就要用到<b>RISE</b>插件了。</p><p>RISE用到reveal.js来运行PPT，可以不退出PPT，直接运行代码。</p><p>先来安装RISE，推荐用conda：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>conda install -c damianavila82 rise\n</code></pre></div><p>其实不太推荐pip：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pip install RISE\n</code></pre></div><p>然后调用JS和CSS：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>jupyter-nbextension install rise --py --sys-prefix\n#enable the nbextension:\njupyter-nbextension enable rise --py --sys-prefix\n</code></pre></div><p>安装好啦，现在重新打开你的Jupyter Notebook，发现一个新的扩展，名叫“Enter/Exit RISE Slideshow”。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8e0128997e9457b4d71e5f2c53b5f901_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"744\" data-rawheight=\"146\" class=\"origin_image zh-lightbox-thumb\" width=\"744\" data-original=\"https://pic1.zhimg.com/v2-8e0128997e9457b4d71e5f2c53b5f901_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='744'%20height='146'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"744\" data-rawheight=\"146\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"744\" data-original=\"https://pic1.zhimg.com/v2-8e0128997e9457b4d71e5f2c53b5f901_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8e0128997e9457b4d71e5f2c53b5f901_720w.jpg?source=54b3c3a5\"></figure><p>戳一下，一个可以边演示边改的PPT就好了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-63e5bba20c37427bf024f53fcf3a5e3e_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"538\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-63e5bba20c37427bf024f53fcf3a5e3e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"822\" data-original=\"https://pic1.zhimg.com/v2-63e5bba20c37427bf024f53fcf3a5e3e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='822'%20height='538'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"538\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-63e5bba20c37427bf024f53fcf3a5e3e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"822\" data-original=\"https://pic1.zhimg.com/v2-63e5bba20c37427bf024f53fcf3a5e3e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-63e5bba20c37427bf024f53fcf3a5e3e_720w.gif?source=54b3c3a5\"></figure><h2><b>嵌入链接和pdf</b></h2><p>扔链接再跳转实在是太麻烦了，不如直接把素材放进Jupyter里面。</p><p><b>嵌入链接</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#Note that http urls will not be displayed. Only https are allowed inside the Iframe\nfrom IPython.display import IFrame\nIFrame('https://en.wikipedia.org/wiki/HTTPS', width=800, height=450)\n</code></pre></div><p>操作方式如下，当然你需要把链接换成你要放的链接：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-e33137f598df1d3caeed35d47f6aea54_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"658\" data-rawheight=\"521\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-e33137f598df1d3caeed35d47f6aea54_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"658\" data-original=\"https://pic2.zhimg.com/v2-e33137f598df1d3caeed35d47f6aea54_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='658'%20height='521'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"658\" data-rawheight=\"521\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-e33137f598df1d3caeed35d47f6aea54_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"658\" data-original=\"https://pic2.zhimg.com/v2-e33137f598df1d3caeed35d47f6aea54_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e33137f598df1d3caeed35d47f6aea54_720w.gif?source=54b3c3a5\"></figure><p><b>嵌入pdf</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>from IPython.display import IFrame\nIFrame('https://arxiv.org/pdf/1406.2661.pdf', width=800, height=450)\n</code></pre></div><p>同样，把pdf链接换成你需要用的pdf。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7fa81759651e3061029391e955b29295_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"436\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-7fa81759651e3061029391e955b29295_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='436'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"436\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-7fa81759651e3061029391e955b29295_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7fa81759651e3061029391e955b29295_720w.jpg?source=54b3c3a5\"></figure><h2><b>传送门</b></h2><p>原文：<b>Bringing the best out of Jupyter Notebooks for Data Science</b></p><p>Parul Pandey, Towards Data Science</p><p><a href=\"https://link.zhihu.com/?target=https%3A//towardsdatascience.com/bringing-the-best-out-of-jupyter-notebooks-for-data-science-f0871519ca29\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">towardsdatascience.com/</span><span class=\"invisible\">bringing-the-best-out-of-jupyter-notebooks-for-data-science-f0871519ca29</span><span class=\"ellipsis\"></span></a></p><p>Jupyter主题</p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/dunovank/jupyter-themes\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/dunovank/jup</span><span class=\"invisible\">yter-themes</span><span class=\"ellipsis\"></span></a></p><p>IPython小部件</p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jupyter-widgets/ipywidgets\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/jupyter-widg</span><span class=\"invisible\">ets/ipywidgets</span><span class=\"ellipsis\"></span></a></p><p><br></p><p><b>- 完 -</b><br>最后，了解更多前沿科技，请关注我们的知乎号：</p><a href=\"https://www.zhihu.com/org/liang-zi-wei-48/activities\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-81de5b4926ed9516e4eea7314da450ec_l.jpg?source=54b3c3a5\" data-image-width=\"200\" data-image-height=\"200\" class=\"internal\">量子位</a><p></p>", "Python 爬虫学到什么样就可以找工作了？": "<p>我就是爬虫起家，一年时间机缘巧合进了BAT。</p><p>又是一帮光点关注感谢不点赞的。</p><p>感恩大家，上班时间短回头补充哈，勿怪。</p><ul><li>当你能看懂代码，简单的伪造请求，爬点图片视频搞下实习没问题。</li><li>当你能单挑分布式做亿以上采集量，各种伪造与绕ip，基本爬虫工作都要你。</li><li>当你能搞定滑动验证码和多数字符验证码，基本可以去敲大公司的门了。</li><li>当你能搞定第三代验证码那。。。。。。</li></ul><p>爬虫是入门超级简单，深入才难。有兴趣请点我头像，有博客git专栏，可以帮你确定技能树方向。</p><p><br></p><p>补充技能书</p><ul><li>现在上班时间，回头详细  <a href=\"https://zhuanlan.zhihu.com/p/26189571\" class=\"internal\">数据采集技术指南 第一篇 技术栈总览-附总图和演讲ppt - 知乎专栏</a></li><li>还有以前写的反反爬虫仓库  <a href=\"https://link.zhihu.com/?target=https%3A//github.com/luyishisi/Anti-Anti-Spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">luyishisi/Anti-Anti-Spider</a></li><li>专栏：<a href=\"https://zhuanlan.zhihu.com/c_68756530\" class=\"internal\">Urlteam - 知乎专栏</a></li><li>博客：<a href=\"https://link.zhihu.com/?target=https%3A//www.urlteam.cn/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">urlteam.cn/</span><span class=\"invisible\"></span></a></li><li>github: <a href=\"https://link.zhihu.com/?target=https%3A//github.com/luyishisi\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">luyishisi (luyishisi)</a></li></ul><p>这涨的有点快啊，还在上班，实在没时间写。回头补哈，求不怪。</p><p>本文不是来引战的，评论区的朋友息怒哈，只是想表达：</p><p>爬虫虽然有人觉得入门太简单因此很low，但是我觉得爬虫带来的项目成就感很舒服，让新人喜欢上编程逐步成长，并且爬虫做到深入一样是稀缺资源，不断成长，就有适合自己的空间。</p><p>一些值得看入门者看的相关回答与：</p><p>0. <a href=\"https://zhuanlan.zhihu.com/p/29016445\" class=\"internal\">目标检测笔记一：算法入门与优缺对比</a></p><ol><li><a href=\"https://www.zhihu.com/question/28661987/answer/132391467\" class=\"internal\">想知道大家都用python写过哪些有趣的脚本? - 知乎。</a> #</li><li><a href=\"https://www.zhihu.com/question/46394184/answer/184376800\" class=\"internal\">你写过的自己觉着最牛X的黑程序？ - 知乎。</a> #</li><li><a href=\"https://www.zhihu.com/question/60766946/answer/180358351\" class=\"internal\">学习Python很吃力，我是不是可以放弃编程了？ - 知乎</a> #</li><li><a href=\"https://www.zhihu.com/question/60256922/answer/174211193\" class=\"internal\">Python爬虫传送post请求要携带哪些参数? - 知乎。</a> #</li><li><a href=\"https://www.zhihu.com/question/52366000/answer/130306854\" class=\"internal\">不想拿学位证的计算机在校生？ - 知乎</a>。#</li><li><a href=\"https://www.zhihu.com/question/55778718/answer/186231811\" class=\"internal\">你在实验室经历过最危险的事情是什么？ - 知乎</a>。 #</li><li><a href=\"https://www.zhihu.com/question/61268510\" class=\"internal\">如果你能预知未来，你会不会更加努力？ - 知乎</a>。 #</li></ol><p>关于一些私信解答，值得分享给小虫子们看看</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-27ec8610401099a0d2a7e2e569bd2904_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1017\" data-rawheight=\"458\" class=\"origin_image zh-lightbox-thumb\" width=\"1017\" data-original=\"https://pic4.zhimg.com/v2-27ec8610401099a0d2a7e2e569bd2904_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1017'%20height='458'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1017\" data-rawheight=\"458\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1017\" data-original=\"https://pic4.zhimg.com/v2-27ec8610401099a0d2a7e2e569bd2904_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-27ec8610401099a0d2a7e2e569bd2904_720w.jpg?source=54b3c3a5\"></figure><p></p>", "如何处理 Python 入门难以进步的现象？": "<p><b>收藏是点赞两倍哟！顺手点赞呗~</b></p><p><br></p><p>很多人在学习编程之初都会碰到这种问题：<b>学会了基础的语法了，但是还是做不了项目，不知道如何下手。</b></p><p>当初，我学习C的时候是这样、Java的时候是这样、Python的时候也是这样，其实不管什么语言、什么知识都是这样：<b>理论基础知识 - 能动手做项目是有一道鸿沟的</b>。</p><p><br></p><p>那么如何突破这条鸿沟？中间的桥梁是什么？</p><p>其实题主自己已经回答出来了：<b>照抄！</b></p><p><br></p><hr><p>我把我自己的学习经验总结成了一本Python以及爬虫电子书，保证非常的通俗易懂帮助你学会Python，目前这本书帮助了数十万的人从零开始学会了Python以及爬虫，点击下方链接就能拿到。</p><a href=\"https://link.zhihu.com/?target=https%3A//t.1yb.co/7HXS\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-b84d1bb91953c1ee544f5077b1bf4cb8_bh.jpg?source=54b3c3a5\" data-image-width=\"531\" data-image-height=\"227\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">路人甲分享的：Python爬虫电子书和数据分析电子书</a><p><br></p><p><br></p><p>首先找到一些简单易上手的项目，这些项目大多散落在Python实践相关的书籍中、Github上，这些实战项目知乎上都有很多推荐。</p><p><br></p><p>1.一些比较好的适合初学者动手的项目：</p><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Show-Me-the-Code/show-me-the-code\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Show-Me-the-Code/show-me-the-code</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/aosabook/500lines/blob/master/README.md\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">aosabook/500lines</a></li></ul><p>另外知乎上这个问题下的一些推荐的项目还是非常适合新手练习的，可以作为参考：<a href=\"https://www.zhihu.com/question/29372574\" class=\"internal\">Python 的练手项目有哪些值得推荐？</a></p><p>2.大多数的Python书里面（除了纯理论书）都是有小项目的，而且书的一个优点是它会一步一步解释这样做的原因，可以推荐基本大家常看的书：</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p>先照抄这些项目，实现这些小功能在电脑上能运行确认无误之后，回过头来看代码：</p><ul><li>有没有你不理解的地方，不理解的地方标记去搜索引擎或者书中找解释。</li><li>学习作者设计这个项目的思路方法，并运用到接下来的项目，如果时间充裕，建议隔天再重新再不看书的情况下重新自己实现一遍这些小项目。</li></ul><p><br></p><p>如果你是跟着实战的书敲代码的，很多时候项目都不会一遍运行成功，那么你就要根据各种报错去寻找原因，这也是一个学习的过程。</p><p><br></p><p>总结起来从Python入门跳出来的过程分为三步：<b>照抄、照抄之后的理解、重新自己实现。</b></p>", "深度学习有哪些好玩的且易于实现的论文？": "<p>再次更新</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-91f47a7444bf3fce21265f20db523da4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1889\" data-rawheight=\"869\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e26a8ced668a6ae2358b6ef1737ace69_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1889\" data-original=\"https://pic1.zhimg.com/v2-91f47a7444bf3fce21265f20db523da4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1889'%20height='869'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1889\" data-rawheight=\"869\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e26a8ced668a6ae2358b6ef1737ace69_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1889\" data-original=\"https://pic1.zhimg.com/v2-91f47a7444bf3fce21265f20db523da4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-91f47a7444bf3fce21265f20db523da4_720w.jpg?source=54b3c3a5\"></figure><p> GitHub上发现了一个不错的项目，收集了中国科学技术大学课程资源，主要包括了计算机学院，也包括经管、经济、物理、数学等相关课程的repo，甚至包含了人文社科类的。目前该项目已收获了13716个Star，4221个Fork。课程的结构大致如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e1f3de77b4c6f79b876674b25c324733_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1423\" data-rawheight=\"855\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c16ce0dd3b11f58ef25dbc0ff07ef764_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1423\" data-original=\"https://pic2.zhimg.com/v2-e1f3de77b4c6f79b876674b25c324733_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1423'%20height='855'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1423\" data-rawheight=\"855\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c16ce0dd3b11f58ef25dbc0ff07ef764_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1423\" data-original=\"https://pic2.zhimg.com/v2-e1f3de77b4c6f79b876674b25c324733_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e1f3de77b4c6f79b876674b25c324733_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//ustc-resource.github.io/USTC-Course/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">ustc-resource.github.io</span><span class=\"invisible\">/USTC-Course/</span><span class=\"ellipsis\"></span></a><p><b><i>有很多</i></b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-8d17cb682fd6ea6cc9af8fd8028a91dc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1881\" data-rawheight=\"987\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-4b5f319148cd74a3bb37238e27559927_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1881\" data-original=\"https://pic2.zhimg.com/v2-8d17cb682fd6ea6cc9af8fd8028a91dc_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1881'%20height='987'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1881\" data-rawheight=\"987\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-4b5f319148cd74a3bb37238e27559927_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1881\" data-original=\"https://pic2.zhimg.com/v2-8d17cb682fd6ea6cc9af8fd8028a91dc_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-8d17cb682fd6ea6cc9af8fd8028a91dc_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-bc5d24c0b881d77e304cfebd70cf3d19_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1890\" data-rawheight=\"909\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-18cca06bf990f5b48810eaf36db1453c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1890\" data-original=\"https://pic2.zhimg.com/v2-bc5d24c0b881d77e304cfebd70cf3d19_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1890'%20height='909'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1890\" data-rawheight=\"909\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-18cca06bf990f5b48810eaf36db1453c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1890\" data-original=\"https://pic2.zhimg.com/v2-bc5d24c0b881d77e304cfebd70cf3d19_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-bc5d24c0b881d77e304cfebd70cf3d19_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//aws.amazon.com/marketplace/solutions/machine-learning\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-820ab4b581cc9c4b6495cf7472ffef1b_bh.jpg?source=54b3c3a5\" data-image-width=\"1783\" data-image-height=\"892\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Machine Learning solutions in AWS Marketplace</a><p><b><i>亚马逊的机器学习的博客</i></b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-9ab5f34036ed7989f6c4e027b37fab3e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1901\" data-rawheight=\"919\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-9df5565c36502f777d3955631238520e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1901\" data-original=\"https://pic2.zhimg.com/v2-9ab5f34036ed7989f6c4e027b37fab3e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1901'%20height='919'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1901\" data-rawheight=\"919\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-9df5565c36502f777d3955631238520e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1901\" data-original=\"https://pic2.zhimg.com/v2-9ab5f34036ed7989f6c4e027b37fab3e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-9ab5f34036ed7989f6c4e027b37fab3e_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//aws.amazon.com/marketplace/b/6297422015%3Fpage%3D1%26filters%3DFulfillmentOptionType%26FulfillmentOptionType%3DSageMaker\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-820ab4b581cc9c4b6495cf7472ffef1b_bh.jpg?source=54b3c3a5\" data-image-width=\"1783\" data-image-height=\"892\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">AWS Marketplace</a><p>2019/10/25再次更新</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-0ba7f265d786af87539dca187103a01a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1565\" data-rawheight=\"896\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-fb9a7bda0f67c2cbda0d75c54b46c103_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1565\" data-original=\"https://pic2.zhimg.com/v2-0ba7f265d786af87539dca187103a01a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1565'%20height='896'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1565\" data-rawheight=\"896\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-fb9a7bda0f67c2cbda0d75c54b46c103_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1565\" data-original=\"https://pic2.zhimg.com/v2-0ba7f265d786af87539dca187103a01a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-0ba7f265d786af87539dca187103a01a_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.learnpython.org/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-92a90bc3290883e4b6a81a8f866afd85_l.jpg?source=54b3c3a5\" data-image-width=\"200\" data-image-height=\"200\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Learn Python - Free Interactive Python Tutorial</a><p><b><i>优达学城，乔治亚理工学院的课程</i></b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-bb381ddb140d84c9e404db5794e51456_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1721\" data-rawheight=\"860\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-bd9e44b93fcc183393158f1983a35460_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1721\" data-original=\"https://pic1.zhimg.com/v2-bb381ddb140d84c9e404db5794e51456_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1721'%20height='860'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1721\" data-rawheight=\"860\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-bd9e44b93fcc183393158f1983a35460_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1721\" data-original=\"https://pic1.zhimg.com/v2-bb381ddb140d84c9e404db5794e51456_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-bb381ddb140d84c9e404db5794e51456_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//cn.udacity.com/courses/georgia-tech-masters-in-cs\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-337f27433c0dbf0481a06859f4927ca8_bh.jpg?source=54b3c3a5\" data-image-width=\"2400\" data-image-height=\"1260\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">优达学城课程分类_在线视频课程-优达学城(Udacity)官网</a><p>关于软件和镜像下载源，大家可以看看我这篇回答。管清华和中科大的朋友要的。 <a href=\"https://zhuanlan.zhihu.com/p/59124173\" class=\"internal\">清华，中科大，计算机学院下载资源</a></p><p>2019/10/17更新 ，基于大家对我的喜爱，我就放两本很好的电子书的链接在上边。深度学习的哦。如果你们给我点赞多一点，或者转发，我会放更多的资料在上边。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-eaf10e1cde743ed23c05e690363cb981_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1478\" data-rawheight=\"886\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-1bd94342ac4d64bd4fe7a878b0618b14_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1478\" data-original=\"https://pic2.zhimg.com/v2-eaf10e1cde743ed23c05e690363cb981_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1478'%20height='886'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1478\" data-rawheight=\"886\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-1bd94342ac4d64bd4fe7a878b0618b14_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1478\" data-original=\"https://pic2.zhimg.com/v2-eaf10e1cde743ed23c05e690363cb981_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-eaf10e1cde743ed23c05e690363cb981_720w.jpg?source=54b3c3a5\"></figure><p><br></p><a href=\"https://link.zhihu.com/?target=http%3A//www.deeplearningbook.org/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Deep Learning</a><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-647820f673caf8fc568cb6054dcdb68b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1592\" data-rawheight=\"903\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-668fd887da6549796ece9ec260a1c850_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1592\" data-original=\"https://pic4.zhimg.com/v2-647820f673caf8fc568cb6054dcdb68b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1592'%20height='903'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1592\" data-rawheight=\"903\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-668fd887da6549796ece9ec260a1c850_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1592\" data-original=\"https://pic4.zhimg.com/v2-647820f673caf8fc568cb6054dcdb68b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-647820f673caf8fc568cb6054dcdb68b_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=http%3A//neuralnetworksanddeeplearning.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-531b75ef7a6a008d6905b52a79db0992_l.jpg?source=54b3c3a5\" data-image-width=\"117\" data-image-height=\"107\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Neural networks and deep learning</a><p>----------------------------------------我是分割线------------------------------------------有很多！今天来强答一波。祭出我的月光宝盒来。各位小哥哥，小姐姐，看完记得点个赞哦(´-ω-`)。<b>还有机器学习大礼包，含tensorflow书籍和李航统计学习法，以及斯坦福的课件，大小400多M，有需要的小宝贝私聊我就好。</b>！(上传百度网盘链接，居然涉及违法违规～)</p><h3>1.网站<a href=\"https://link.zhihu.com/?target=https%3A//paperswithcode.com/sota\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">paperswithcode.com/sota</span><span class=\"invisible\"></span></a></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-6bbaee22122e5bb75b12143f8887c112_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1866\" data-rawheight=\"943\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a6dbcf348bc4dc879972e500ca6b2cbc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1866\" data-original=\"https://pic1.zhimg.com/v2-6bbaee22122e5bb75b12143f8887c112_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1866'%20height='943'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1866\" data-rawheight=\"943\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a6dbcf348bc4dc879972e500ca6b2cbc_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1866\" data-original=\"https://pic1.zhimg.com/v2-6bbaee22122e5bb75b12143f8887c112_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-6bbaee22122e5bb75b12143f8887c112_720w.jpg?source=54b3c3a5\"><figcaption>包含了 966 个机器学习任务、515 个评估排行榜（以及当前最优结果）、8625 篇论文（带源码）、704 个数据集</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-bfcf3bf943e180bfb1d1f30d67b2b803_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1889\" data-rawheight=\"923\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-6559f355ff6417668618803af596bf5b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1889\" data-original=\"https://pic1.zhimg.com/v2-bfcf3bf943e180bfb1d1f30d67b2b803_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1889'%20height='923'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1889\" data-rawheight=\"923\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-6559f355ff6417668618803af596bf5b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1889\" data-original=\"https://pic1.zhimg.com/v2-bfcf3bf943e180bfb1d1f30d67b2b803_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-bfcf3bf943e180bfb1d1f30d67b2b803_720w.jpg?source=54b3c3a5\"></figure><hr><h3>2.网站<a href=\"https://link.zhihu.com/?target=https%3A//github.com/zziz/pwc/blob/master/README.md%23----\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/zziz/pwc/blo</span><span class=\"invisible\">b/master/README.md#----</span><span class=\"ellipsis\"></span></a> ，是这个样子的，和上边差不多。</h3><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8f7d2c37fb452f06a5c0dd7179be3a69_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1479\" data-rawheight=\"897\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-37ec78aa5c57683a28883b1c8641de3c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1479\" data-original=\"https://pic4.zhimg.com/v2-8f7d2c37fb452f06a5c0dd7179be3a69_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1479'%20height='897'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1479\" data-rawheight=\"897\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-37ec78aa5c57683a28883b1c8641de3c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1479\" data-original=\"https://pic4.zhimg.com/v2-8f7d2c37fb452f06a5c0dd7179be3a69_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8f7d2c37fb452f06a5c0dd7179be3a69_720w.jpg?source=54b3c3a5\"></figure><hr><h3>3.还有视频，讲神经网络的，附YouTube链接<a href=\"https://link.zhihu.com/?target=https%3A//www.youtube.com/watch%3Fv%3DaircAruvnKk\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">youtube.com/watch?</span><span class=\"invisible\">v=aircAruvnKk</span><span class=\"ellipsis\"></span></a></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-3e742d68ef4c0aa050e345dd4365097f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1720\" data-rawheight=\"902\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d9e0ed421135cc5d9671cad2b11c06b5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1720\" data-original=\"https://pic1.zhimg.com/v2-3e742d68ef4c0aa050e345dd4365097f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1720'%20height='902'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1720\" data-rawheight=\"902\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d9e0ed421135cc5d9671cad2b11c06b5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1720\" data-original=\"https://pic1.zhimg.com/v2-3e742d68ef4c0aa050e345dd4365097f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-3e742d68ef4c0aa050e345dd4365097f_720w.jpg?source=54b3c3a5\"></figure><hr><h3>4.以及<i>DeepLearning-500-questions，</i><a href=\"https://link.zhihu.com/?target=https%3A//github.com/scutan90/DeepLearning-500-questions\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/scutan90/Dee</span><span class=\"invisible\">pLearning-500-questions</span><span class=\"ellipsis\"></span></a>深度学习500问，以问答形式对常用的概率知识、线性代数、机器学习、深度学习、计算机视觉等热点问题进行阐述，以帮助自己及有需要的读者。</h3><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-954cbdb024d8fc590fee0f47d0007785_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1285\" data-rawheight=\"860\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-4342b6424754ca5ea024d1a2a069b97e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1285\" data-original=\"https://pic2.zhimg.com/v2-954cbdb024d8fc590fee0f47d0007785_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1285'%20height='860'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1285\" data-rawheight=\"860\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-4342b6424754ca5ea024d1a2a069b97e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1285\" data-original=\"https://pic2.zhimg.com/v2-954cbdb024d8fc590fee0f47d0007785_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-954cbdb024d8fc590fee0f47d0007785_720w.jpg?source=54b3c3a5\"></figure><hr><h3>5.以及莫烦小哥的python <a href=\"https://link.zhihu.com/?target=https%3A//morvanzhou.github.io/tutorials/machine-learning/tensorflow/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">morvanzhou.github.io/tu</span><span class=\"invisible\">torials/machine-learning/tensorflow/</span><span class=\"ellipsis\"></span></a></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-faa141afff15a4e71dac1385268b084a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1907\" data-rawheight=\"900\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-9e0df461c60ef71cb08294c8443c9f5a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1907\" data-original=\"https://pic4.zhimg.com/v2-faa141afff15a4e71dac1385268b084a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1907'%20height='900'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1907\" data-rawheight=\"900\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-9e0df461c60ef71cb08294c8443c9f5a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1907\" data-original=\"https://pic4.zhimg.com/v2-faa141afff15a4e71dac1385268b084a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-faa141afff15a4e71dac1385268b084a_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-d0bbfe9005765e95786d6bbd54a13675_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1900\" data-rawheight=\"900\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-40942493c8e01b2fa3b1d181b58c1165_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1900\" data-original=\"https://pic1.zhimg.com/v2-d0bbfe9005765e95786d6bbd54a13675_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1900'%20height='900'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1900\" data-rawheight=\"900\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-40942493c8e01b2fa3b1d181b58c1165_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1900\" data-original=\"https://pic1.zhimg.com/v2-d0bbfe9005765e95786d6bbd54a13675_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-d0bbfe9005765e95786d6bbd54a13675_720w.jpg?source=54b3c3a5\"></figure><hr><h3>6.这个是思科的，<a href=\"https://link.zhihu.com/?target=https%3A//machine-learning-course.readthedocs.io/en/latest/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Welcome to Deep Learning NLP documentation!</a></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-cbd19a0e3542b7449b2434706d211896_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1469\" data-rawheight=\"883\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0368a426d1e3f4df76a6878cb339ba21_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1469\" data-original=\"https://pic4.zhimg.com/v2-cbd19a0e3542b7449b2434706d211896_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1469'%20height='883'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1469\" data-rawheight=\"883\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0368a426d1e3f4df76a6878cb339ba21_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1469\" data-original=\"https://pic4.zhimg.com/v2-cbd19a0e3542b7449b2434706d211896_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-cbd19a0e3542b7449b2434706d211896_720w.jpg?source=54b3c3a5\"></figure><hr><h3>7.这网站非常硬核，讲的清楚，而且很干净漂亮。还有python跟R的内容代码</h3><p><a href=\"https://link.zhihu.com/?target=https%3A//ujjwalkarn.me/2016/08/11/intuitive-explanation-convnets/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">ujjwalkarn.me/2016/08/1</span><span class=\"invisible\">1/intuitive-explanation-convnets/</span><span class=\"ellipsis\"></span></a></p><figure data-size=\"small\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-52bab0319a3270781652d005f6942eac_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1842\" data-rawheight=\"882\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-31c0530e0d6dd5e857a8e359ffac100d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1842\" data-original=\"https://pic4.zhimg.com/v2-52bab0319a3270781652d005f6942eac_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1842'%20height='882'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1842\" data-rawheight=\"882\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-31c0530e0d6dd5e857a8e359ffac100d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1842\" data-original=\"https://pic4.zhimg.com/v2-52bab0319a3270781652d005f6942eac_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-52bab0319a3270781652d005f6942eac_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"small\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-fabae68b41db9fe2be8b5b60d451411f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"992\" data-rawheight=\"807\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-66eb62026636ec79262b88bc92b62772_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"992\" data-original=\"https://pic1.zhimg.com/v2-fabae68b41db9fe2be8b5b60d451411f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='992'%20height='807'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"992\" data-rawheight=\"807\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-66eb62026636ec79262b88bc92b62772_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"992\" data-original=\"https://pic1.zhimg.com/v2-fabae68b41db9fe2be8b5b60d451411f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-fabae68b41db9fe2be8b5b60d451411f_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"small\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-667b3fb9e352eddb496b164dd25e7227_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1127\" data-rawheight=\"904\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-79516f156e7e58ea432fc03d1f1f9e39_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1127\" data-original=\"https://pic4.zhimg.com/v2-667b3fb9e352eddb496b164dd25e7227_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1127'%20height='904'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1127\" data-rawheight=\"904\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-79516f156e7e58ea432fc03d1f1f9e39_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1127\" data-original=\"https://pic4.zhimg.com/v2-667b3fb9e352eddb496b164dd25e7227_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-667b3fb9e352eddb496b164dd25e7227_720w.jpg?source=54b3c3a5\"></figure><hr><p>8.还有一个开放的社区，会定期讨论大家最近在看什么文章，机器学习相关的项目。前两天还让我投票，说是发起了请愿书，让大家呼吁不要去美国开AI的国际会议。<a href=\"https://link.zhihu.com/?target=https%3A//www.reddit.com/r/MachineLearning/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">reddit.com/r/MachineLea</span><span class=\"invisible\">rning/</span><span class=\"ellipsis\"></span></a></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-cc2b1380d2ed00e9ff8078f2db2c3521_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1917\" data-rawheight=\"815\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-ff525d9d0289a23269b04cdc04d2ebde_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1917\" data-original=\"https://pic2.zhimg.com/v2-cc2b1380d2ed00e9ff8078f2db2c3521_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1917'%20height='815'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1917\" data-rawheight=\"815\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-ff525d9d0289a23269b04cdc04d2ebde_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1917\" data-original=\"https://pic2.zhimg.com/v2-cc2b1380d2ed00e9ff8078f2db2c3521_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-cc2b1380d2ed00e9ff8078f2db2c3521_720w.jpg?source=54b3c3a5\"></figure><hr><p><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzA3MzI4MjgzMw%3D%3D%26mid%3D2650757542%26idx%3D3%26sn%3Dc054aac3dee9ce4903363657f74d511e%26chksm%3D871a9dd8b06d14ce3b1fc7f71c7426dcc5a9224e571efee47b28ee26af225c261146730b7f22%26mpshare%3D1%26scene%3D23%26srcid%3D%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">还有中科大的这个教程，从人工智能到区块链应有尽有</a></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-9a45d786b642af448716c9f89056da68_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1133\" data-rawheight=\"883\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-33f587ea75e90e44787c1bac012b51e2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1133\" data-original=\"https://pic1.zhimg.com/v2-9a45d786b642af448716c9f89056da68_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1133'%20height='883'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1133\" data-rawheight=\"883\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-33f587ea75e90e44787c1bac012b51e2_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1133\" data-original=\"https://pic1.zhimg.com/v2-9a45d786b642af448716c9f89056da68_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-9a45d786b642af448716c9f89056da68_720w.jpg?source=54b3c3a5\"></figure><hr><p>给大家放上几本好书，推荐！</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-dcc2d1cffea630ade129aeeb4e3c804b_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"687\" data-rawheight=\"881\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1f72bbda02a9af27b2d349a36e41c711_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"687\" data-original=\"https://pic4.zhimg.com/v2-dcc2d1cffea630ade129aeeb4e3c804b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='687'%20height='881'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"687\" data-rawheight=\"881\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1f72bbda02a9af27b2d349a36e41c711_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"687\" data-original=\"https://pic4.zhimg.com/v2-dcc2d1cffea630ade129aeeb4e3c804b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-dcc2d1cffea630ade129aeeb4e3c804b_720w.jpg?source=54b3c3a5\"><figcaption> 这本是机器学习基础</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7e00c70f3cdb1430283818ea383879c8_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"623\" data-rawheight=\"859\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-320da9eab490a9094825d6e2a3702134_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"623\" data-original=\"https://pic4.zhimg.com/v2-7e00c70f3cdb1430283818ea383879c8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='623'%20height='859'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"623\" data-rawheight=\"859\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-320da9eab490a9094825d6e2a3702134_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"623\" data-original=\"https://pic4.zhimg.com/v2-7e00c70f3cdb1430283818ea383879c8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7e00c70f3cdb1430283818ea383879c8_720w.jpg?source=54b3c3a5\"><figcaption>这本是剑桥的机器学习教材</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-ac7ffc9ada9caf3a894e405e089b462e_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1871\" data-rawheight=\"849\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1eca891e305038953eea76c3506bcc85_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1871\" data-original=\"https://pic4.zhimg.com/v2-ac7ffc9ada9caf3a894e405e089b462e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1871'%20height='849'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1871\" data-rawheight=\"849\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1eca891e305038953eea76c3506bcc85_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1871\" data-original=\"https://pic4.zhimg.com/v2-ac7ffc9ada9caf3a894e405e089b462e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-ac7ffc9ada9caf3a894e405e089b462e_720w.jpg?source=54b3c3a5\"><figcaption>斯坦福LV写的凸化化</figcaption></figure>"}{"GitHub 上有哪些优秀的 Python 爬虫项目？": "<p>之前总结了github上比较好的200个爬虫项目，有兴趣可以看看的</p><a href=\"https://zhuanlan.zhihu.com/p/73742321\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-23f8cffe631834d936bf11efe4aa6b73_bh.jpg?source=54b3c3a5\" data-image-width=\"518\" data-image-height=\"300\" class=\"internal\">朱卫军：干货！python爬虫100个入门项目</a><a href=\"https://zhuanlan.zhihu.com/p/75036835\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-6f0888686a98167bdd00a527075cd51d_bh.jpg?source=54b3c3a5\" data-image-width=\"518\" data-image-height=\"300\" class=\"internal\">朱卫军：干货！python爬虫100个入门项目 续</a><ol><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/1.%25E6%25B7%2598%25E5%25AE%259D%25E6%25A8%25A1%25E6%258B%259F%25E7%2599%25BB%25E5%25BD%2595\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">淘宝模拟登录</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/2.%25E5%25A4%25A9%25E7%258C%25AB%25E5%2595%2586%25E5%2593%2581%25E6%2595%25B0%25E6%258D%25AE%25E7%2588%25AC%25E8%2599%25AB%28%25E5%25B7%25B2%25E6%25A8%25A1%25E6%258B%259F%25E7%2599%25BB%25E5%25BD%2595%29\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">天猫商品数据爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/3.%25E6%25B7%2598%25E5%25AE%259D%25E5%25B7%25B2%25E4%25B9%25B0%25E5%2588%25B0%25E7%259A%2584%25E5%25AE%259D%25E8%25B4%259D%25E6%2595%25B0%25E6%258D%25AE%25E7%2588%25AC%25E8%2599%25AB%28%25E5%25B7%25B2%25E6%25A8%25A1%25E6%258B%259F%25E7%2599%25BB%25E5%25BD%2595%29\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">爬取淘宝我已购买的宝贝数据</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/4.%25E6%25AF%258F%25E5%25A4%25A9%25E4%25B8%258D%25E5%2590%258C%25E6%2597%25B6%25E9%2597%25B4%25E6%25AE%25B5%25E9%2580%259A%25E8%25BF%2587%25E5%25BE%25AE%25E4%25BF%25A1%25E5%258F%2591%25E6%25B6%2588%25E6%2581%25AF%25E6%258F%2590%25E9%2586%2592%25E5%25A5%25B3%25E5%258F%258B\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">每天不同时间段通过微信发消息提醒女友</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/5.%25E7%2588%25AC%25E5%258F%25965K%25E5%2588%2586%25E8%25BE%25A8%25E7%258E%2587%25E8%25B6%2585%25E6%25B8%2585%25E5%2594%25AF%25E7%25BE%258E%25E5%25A3%2581%25E7%25BA%25B8\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">爬取5K分辨率超清唯美壁纸</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/6.%25E7%2588%25AC%25E5%258F%2596%25E8%25B1%2586%25E7%2593%25A3%25E6%258E%2592%25E8%25A1%258C%25E6%25A6%259C%25E7%2594%25B5%25E5%25BD%25B1%25E6%2595%25B0%25E6%258D%25AE%28%25E5%2590%25ABGUI%25E7%2595%258C%25E9%259D%25A2%25E7%2589%2588%29\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">爬取豆瓣排行榜电影数据(含GUI界面版)</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/7.%25E7%2588%25AC%25E5%258F%2596%25E5%25A4%25A9%25E5%25A4%25A9%25E5%259F%25BA%25E9%2587%2591%25E7%25BD%2591%25E6%2589%2580%25E6%259C%2589%25E5%259F%25BA%25E9%2587%2591%25E6%2595%25B0%25E6%258D%25AE\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">多线程+代理池爬取天天基金网、股票数据(无需使用爬虫框架)</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/8.%25E4%25B8%2580%25E9%2594%25AE%25E7%2594%259F%25E6%2588%2590%25E5%25BE%25AE%25E4%25BF%25A1%25E4%25B8%25AA%25E4%25BA%25BA%25E4%25B8%2593%25E5%25B1%259E%25E6%2595%25B0%25E6%258D%25AE%25E6%258A%25A5%25E5%2591%258A%28%25E4%25BA%2586%25E8%25A7%25A3%25E4%25BD%25A0%25E7%259A%2584%25E5%25BE%25AE%25E4%25BF%25A1%25E7%25A4%25BE%25E4%25BA%25A4%25E5%258E%2586%25E5%258F%25B2%29\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">一键生成微信个人专属数据报告(了解你的微信社交历史)</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/9.%25E4%25B8%2580%25E9%2594%25AE%25E7%2594%259F%25E6%2588%2590QQ%25E4%25B8%25AA%25E4%25BA%25BA%25E5%258E%2586%25E5%258F%25B2%25E6%258A%25A5%25E5%2591%258A\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">一键生成QQ个人历史报告</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/bowenpay/wechat-spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">微信公众号文章爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/bone_ace/article/details/50903178\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">新浪微博爬虫分享（一天可抓取 1300 万条数据）</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/bone_ace/article/details/50904718\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">新浪微博分布式爬虫分享</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/CriseLYJ/Python-crawler-tutorial-starts-from-zero\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python爬虫教程，带你从零到一</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/lanbing510/DouBanSpider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">豆瓣读书的爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jumper2014/lianjia-beike-spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">链家网和贝壳网房价爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/decaywood/XueQiuSuperSpider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">雪球网股票超级爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Adyzng/jd-autobuy\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫，京东自动登录，在线抢购商品</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackgitgz/CnblogsSpider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">cnblog</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LintBin/1024crawer\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">caoliu 1024</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/shuiqukeyou/E-HentaiCrawler\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">E绅士</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/pein0119/girl-atlas-crawler\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Girl-atlas</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/xuelangcxy/girlCrawler\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">girl13</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/bonfy/github-trending\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">github trending</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/chenjiandongx/Github\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Github 仓库及用户分析爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/dta0502/NBSPRC-spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">国家统计用区划代码和城乡划分代码爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/stevenshuang/spider/tree/master/hdoj\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">HDOJ爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/xTEddie/Scrapstagram\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Instagram</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/XetRAHF/Scrapping-INC500\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">INC500 世界5000强爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/atonasting/zhihuspider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">看知乎</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/xinqiu/kechenggezi-Spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">课程格子校花榜</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/wudaown/konachanDL\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">konachan</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/lanbing510/LianJiaSpider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">链家</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/XuefengHuang/lianjia-scrawler\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">链家成交在售在租房源</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/GuozhuHe/webspider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">拉勾</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/youfou/hsdata\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">炉石传说</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/bonfy/leetcode\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">leetcode</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/XetRAHF/Spider_LinkedInSalesNavigatorURL\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">领英销售导航器爬虫 LinkedInSalesNavigator</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/eternal-flame-AD/mafengwo\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">马蜂窝 用户足迹</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Thoxvi/MyCar_python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">MyCar</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/miaoerduo/cartoon-cat\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">漫画喵 一键下载漫画~</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/qwertyuiop6/mm131\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">MM131性感美女写真图全爬取</a></li><li>美女写真套图爬虫 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/chenjiandongx/mmjpg\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">（一）</a><a href=\"https://link.zhihu.com/?target=https%3A//github.com/chenjiandongx/mzitu\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">（二）</a><a href=\"https://link.zhihu.com/?target=https%3A//github.com/chenjiandongx/photo-gevent\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">（三）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/3inchtime/mmjpg_spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">妹子图</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/CasterWx/python-maoyan-spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">猫眼网电影评分</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/NolanZhao/news_feed\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">新闻监控</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/sy-records/speech_spiders/tree/master/nihaowu\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">你好污啊</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/SilverBooker/ofoSpider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ofo共享单车爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LiuXingMing/QQSpider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">QQ空间</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/caspartse/QQ-Groups-Spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">QQ 群</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/kehao95/thu_learn\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">清华大学网络学堂爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/lining0806/QunarSpider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">去哪儿</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/chenjiandongx/51job\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">前程无忧Python招聘岗位信息爬取分析</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/gnehsoah/yyets-spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">人人影视</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/shanelau/rssSpider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">RSS 爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/evilcos/crawlers\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">rosi 妹子图</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/tsarjak/WallpapersFromReddit\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">reddit 壁纸</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/dannyvai/reddit_crawlers\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">reddit</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/qwertyuiop6/get_youtube_subtitle\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Youtube字幕下载</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/billvsme/videoSpider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">视频信息爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/chenqing/spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">电影网站</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/but0n/JianSo_Movie\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">80s 影视资源爬虫 - JianSo_Movie</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Nyloner/Nyspider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">各种爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/sy-records/speech_spiders/tree/master/chicken-soup\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">心灵毒鸡汤</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/blob/master/QSBK.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">糗事百科</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/57W2axrqEB9hbIA9mgpP0g\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python爬虫的时候对Json数据的解析</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/2kYWX8xOjdwifJZAkOlNjA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">秒爬，python爬虫中的多线程，多进程，协程</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU2ODYzNTkwMg%3D%3D%26mid%3D2247484441%26idx%3D1%26sn%3Df814247c9307e4ed4bb58cdff279d410%26scene%3D19%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">爬取下来的数据怎么保存？ CSV 了解一下</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//fxxkpython.com/python-pa-qu-biao-qing-bao.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python爬取 20w 表情包之后，从此你就成为了微信斗图届的高手</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzU2ODYzNTkwMg%3D%3D%26mid%3D2247484657%26idx%3D1%26sn%3D998bfcce6cd22b7fedff29e68a46fe3f%26chksm%3Dfc8bbc60cbfc3576f117d3566fbea8a042ee573d840bbe6a3d4ec9bffef815c691b7f9a59711%26scene%3D27%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python爬取你喜欢的公众号的所有原创文章，然后搞成PDF慢慢看</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzU2ODYzNTkwMg%3D%3D%26mid%3D2247484710%26idx%3D1%26sn%3Dcf17f2e87405ebffb20edd0ca0a7315b%26chksm%3Dfc8bbdb7cbfc34a1389e17d4485b677d5ada497a404dc8f14107914e50382c640e7bd3cb93a4%26scene%3D27%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">当 python 遇到你的微信的时候，你才发现原来你的微信好友是这样的</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzU2ODYzNTkwMg%3D%3D%26mid%3D2247484745%26idx%3D1%26sn%3D24362e73605d30e06ebe05d1fe7225f2%26chksm%3Dfc8bbdd8cbfc34ce100b9461f46c8a1c0008172f101b34b38e146f56323bc40bbd373a127ee8%26scene%3D27%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">高考要来了，扒一扒历年高考录取分数来压压惊</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU2ODYzNTkwMg%3D%3D%26mid%3D2247484261%26idx%3D1%26sn%3D2d839d004d592be3c98d1356d6710a69%26scene%3D19%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">就算你被封了也能继续爬，使用IP代理池伪装你的IP地址，让IP飘一会</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU2ODYzNTkwMg%3D%3D%26mid%3D2247484292%26idx%3D1%26sn%3D1d948f56e57a6586f11aabc0f0f6b3af%26scene%3D19%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">小帅b教你如何识别图片验证码</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU2ODYzNTkwMg%3D%3D%26mid%3D2247484321%26idx%3D1%26sn%3D4bc73324acfacda7d3bc82120b19d11a%26scene%3D19%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">对于b站这样的滑动验证码，不好意思，照样自动识别</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU2ODYzNTkwMg%3D%3D%26mid%3D2247484538%26idx%3D1%26sn%3Dd9b614201c96ad283bbad8a867d42082%26scene%3D19%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">你爬下的数据不分析一波可就亏了啊，使用python进行数据可视化</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/XJ4Jb5KU0Mf0PIeiSpdC7Q\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">什么是爬虫，怎么玩爬虫？</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/aqOuCZKxpEW2_P2fkfWReg\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">教你在 Chrome 浏览器轻松抓包</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/NGOUtPIW8n1whOYwR-LQYA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">教你通过 Fiddler 进行手机抓包？</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/rJ8bt4HjYU36MrsDejHLZA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">那个叫做 Urllib 的库让我们的 python 假装是浏览器</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/dYtF8ydJtqub0QkK1cGVjA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">长江后浪推前浪，Reuqests库把urllib库拍在沙滩上</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/t4hXKK-pjA8rIVmJuiyQcw\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">年轻人，不会正则表达式你睡得着觉？有点出息没有？</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/X8BT4sRp7_a4NHXa9ZSzCg\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">有了 BeautifulSoup ，妈妈再也不用担心我的正则表达式了</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzU2ODYzNTkwMg%3D%3D%26mid%3D2247484267%26idx%3D1%26sn%3D53486a7f41d9f57d14b10b7a21bfbb1e%26scene%3D19%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">遇到需要的登录的网站怎么办？用这3招轻松搞定！</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/blob/master/tieba.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">百度帖吧</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/blob/master/pixabay.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">pixabay图片网站</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/blob/master/pexels.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">pexels图片网</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/blob/master/BoLiBei.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">info社区</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/blob/master/JWCJ.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">教务网</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/tree/master/LaGou\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">拉勾</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/tree/master/DouBan\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">豆瓣</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/tree/master/TouTiao\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">抓取手机App数据</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/tree/master/ZhiHu1\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">断点续爬</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/tree/master/XiaoHua\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">scrapy爬多级网页及图片（一般方法)</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/tree/master/XiaoHua2\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">scrapy爬多级网页及图片（ImagesPipeline)</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/tree/master/TouTiao\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">App抓取并存入MongoDB</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/ET9HP2n3905PxBy4ZLmZNw\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">你的第一个爬虫，爬取当当网 Top 500 本五星好评书籍</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LUCY78765580/Python-web-scraping/tree/master/ZhiHu1\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">断点续爬并存入MySQL</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/2kYWX8xOjdwifJZAkOlNjA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">秒爬，python爬虫中的多线程，多进程，协程</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/yhangf/PythonCrawler/blob/master/spiderFile/baidu_wm_img.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">抓取百度图片唯美意境模块</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/yhangf/PythonCrawler/blob/master/spiderFile/get_photos.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">抓取百度贴吧某话题下的所有图片</a> </li></ol><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p></p>", "求十亿内所有质数的和，怎么做最快?": "这个题目下的答案大致分为几种：<br><ol><li>Magic。例如 <a data-hash=\"c1c892f179f95da8b37a1dc604839d2c\" href=\"https://www.zhihu.com/people/c1c892f179f95da8b37a1dc604839d2c\" class=\"member_mention\" data-editable=\"true\" data-title=\"@陈硕\" data-tip=\"p$b$c1c892f179f95da8b37a1dc604839d2c\" data-hovercard=\"p$b$c1c892f179f95da8b37a1dc604839d2c\">@陈硕</a>， <a data-hash=\"203b150d2cb5a62457a40471e40ae2f6\" href=\"https://www.zhihu.com/people/203b150d2cb5a62457a40471e40ae2f6\" class=\"member_mention\" data-editable=\"true\" data-title=\"@渡子厄\" data-tip=\"p$b$203b150d2cb5a62457a40471e40ae2f6\" data-hovercard=\"p$b$203b150d2cb5a62457a40471e40ae2f6\">@渡子厄</a>（半Magic，因为Wolfram Alpha并没给出准确结果）。这个我就不评论了，因为没说是什么方法。</li><li>暴力1到10亿，对每个数判断是否素数（或暴力试除，或Miller Rabin）。方法太暴力，最快也不过<img src=\"https://www.zhihu.com/equation?tex=%5COmega%28n%5Clog+n%29\" alt=\"\\Omega(n\\log n)\" eeimg=\"1\">，其中<img src=\"https://www.zhihu.com/equation?tex=n\" alt=\"n\" eeimg=\"1\">是上界10亿。</li><li>筛出所有<img src=\"https://www.zhihu.com/equation?tex=n\" alt=\"n\" eeimg=\"1\">以内的素数然后加起来。有人用Eratosthenes筛（复杂度<img src=\"https://www.zhihu.com/equation?tex=O%28n+%5Clog+%5Clog+n%29\" alt=\"O(n \\log \\log n)\" eeimg=\"1\">），有人用欧拉筛（最简单的线性筛之一），也有人用Matlab等软件。此方法也极其暴力。因为不超过n的素数有<img src=\"https://www.zhihu.com/equation?tex=%5CTheta%28%5Cfrac%7Bn%7D%7B%5Clog+n%7D%29\" alt=\"\\Theta(\\frac{n}{\\log n})\" eeimg=\"1\">个，所以任何先找出所有素数再加起来的方法（即使使用亚线性的筛法，例如Atkin筛或Wheel筛）都不可能快于这个时间复杂度。</li><li>不知所云型。就不点名了。</li><li>理论上更优的算法。目前只看到  <a data-hash=\"b7734862be39b570374b4d89e058666a\" href=\"https://www.zhihu.com/people/b7734862be39b570374b4d89e058666a\" class=\"member_mention\" data-editable=\"true\" data-title=\"@罗宸\" data-tip=\"p$b$b7734862be39b570374b4d89e058666a\" data-hovercard=\"p$b$b7734862be39b570374b4d89e058666a\">@罗宸</a>。他给出的代码是来自于Project Euler第10题（<a href=\"https://link.zhihu.com/?target=https%3A//projecteuler.net/problem%3D10\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Summation of primes</a> ）的论坛中Lucy_Hedgehog给出的Python代码的直接翻译，注释也都还在。接下来我就来介绍一下Lucy_Hedgehog给出的这个算法。</li></ol><b>==========正式回答分割线=============</b><br><br><br>首先来感受一下这个算法的速度：<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>$ for n in 10000000 100000000 1000000000 10000000000 100000000000; do time python Main.py $n; done\n3203324994356\n\nreal    0m0.049s\nuser    0m0.031s\nsys     0m0.015s\n279209790387276\n\nreal    0m0.117s\nuser    0m0.093s\nsys     0m0.015s\n24739512092254535\n\nreal    0m0.514s\nuser    0m0.468s\nsys     0m0.046s\n2220822432581729238\n\nreal    0m2.645s\nuser    0m2.625s\nsys     0m0.031s\n201467077743744681014\n\nreal    0m15.713s\nuser    0m15.656s\nsys     0m0.031s\n</code></pre></div>可以看到，即使是python这样的解释型动态语言，算出10亿的结果也不过需要0.5s，算出1000亿也只要15秒，是完虐以上各种暴力方法的。<br><br>整个算法类似于Wikipedia中给出的求n以内素数个数的算法（<a href=\"https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Prime-counting_function%23Algorithms_for_evaluating_.CF.80.28x.29\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Prime-counting function</a>），感兴趣的也可以去看一下。<br><br><b>==========真正的！正式回答分割线 :D =============</b><br><br><br>定义<img src=\"https://www.zhihu.com/equation?tex=S%28v%2Cp%29\" alt=\"S(v,p)\" eeimg=\"1\">为<img src=\"https://www.zhihu.com/equation?tex=2\" alt=\"2\" eeimg=\"1\">到<img src=\"https://www.zhihu.com/equation?tex=v\" alt=\"v\" eeimg=\"1\">所有整数中，在普通筛法中外层循环筛完<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">时仍然幸存的数的和。因此这些数要不本身是素数，要不其最小的素因子也大于<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">。因此我们需要求的是<img src=\"https://www.zhihu.com/equation?tex=S%28n%2C%5Clfloor%5Csqrt+n%5Crfloor%29\" alt=\"S(n,\\lfloor\\sqrt n\\rfloor)\" eeimg=\"1\">，其中<img src=\"https://www.zhihu.com/equation?tex=n\" alt=\"n\" eeimg=\"1\">是十亿。<br><br>为了计算<img src=\"https://www.zhihu.com/equation?tex=S%28v%2Cp%29\" alt=\"S(v,p)\" eeimg=\"1\">，先考虑几个特殊情况<br><ol><li><img src=\"https://www.zhihu.com/equation?tex=p%5Cle1\" alt=\"p\\le1\" eeimg=\"1\">。此时所有数都还没有被筛掉，所以<img src=\"https://www.zhihu.com/equation?tex=S%28v%2Cp%29%3D%5Csum_%7Bi%3D2%7D%5E%7Bv%7Di%3D%5Cfrac%7B%282%2Bv%29%28v-1%29%7D%7B2%7D\" alt=\"S(v,p)=\\sum_{i=2}^{v}i=\\frac{(2+v)(v-1)}{2}\" eeimg=\"1\"><br></li><li><img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">不是素数。因为筛法中<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">早已被别的数筛掉，所以在这步什么都不会做，所以此时<img src=\"https://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29\" alt=\"S(v,p)=S(v,p-1)\" eeimg=\"1\">；</li><li><img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">是素数，但是<img src=\"https://www.zhihu.com/equation?tex=v%3Cp%5E2\" alt=\"v&lt;p^2\" eeimg=\"1\">。因为每个合数都一定有一个不超过其平方根的素因子，如果筛到<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">时还没筛掉一个数，那么筛到<img src=\"https://www.zhihu.com/equation?tex=p-1\" alt=\"p-1\" eeimg=\"1\">时这个数也还在。所以此时也有<img src=\"https://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29\" alt=\"S(v,p)=S(v,p-1)\" eeimg=\"1\">。</li></ol><br>现在考虑最后一种稍微麻烦些的情况：<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">是素数，且<img src=\"https://www.zhihu.com/equation?tex=p%5E2%5Cle+v\" alt=\"p^2\\le v\" eeimg=\"1\">。<br>此时，我们要用素数<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">去筛掉剩下的那些数中<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">的倍数。注意到现在还剩下的合数都没有小于<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">的素因子。因此有：<br><img src=\"https://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29-%5Csum_%7B%5Csubstack%7B2%5Cle+k+%5Cle+v%2C%5C%5C+p%5Cmbox%7B%E4%B8%BA%7Dk%5Cmbox%7B%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B4%A0%E5%9B%A0%E5%AD%90%7D%7D%7Dk\" alt=\"S(v,p)=S(v,p-1)-\\sum_{\\substack{2\\le k \\le v,\\\\ p\\mbox{为}k\\mbox{的最小素因子}}}k\" eeimg=\"1\"><br><br>后面那项中提取公共因子<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">，有：<br><img src=\"https://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29-p%5Ctimes%5Csum_%7B%5Csubstack%7B2%5Cle+k+%5Cle+v%2C%5C%5C+p%5Cmbox%7B%E4%B8%BA%7Dk%5Cmbox%7B%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B4%A0%E5%9B%A0%E5%AD%90%7D%7D%7D%5Cfrac%7Bk%7D%7Bp%7D\" alt=\"S(v,p)=S(v,p-1)-p\\times\\sum_{\\substack{2\\le k \\le v,\\\\ p\\mbox{为}k\\mbox{的最小素因子}}}\\frac{k}{p}\" eeimg=\"1\"><br><br>因为<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">整除<img src=\"https://www.zhihu.com/equation?tex=k\" alt=\"k\" eeimg=\"1\">，稍微变形一下，令<img src=\"https://www.zhihu.com/equation?tex=t%3D%5Cfrac%7Bk%7D%7Bp%7D\" alt=\"t=\\frac{k}{p}\" eeimg=\"1\">，有：<br><img src=\"https://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29-p%5Ctimes%5Csum_%7B%5Csubstack%7B2%5Cle+t+%5Cle+%5Clfloor%5Cfrac%7Bv%7D%7Bp%7D%5Crfloor%2C%5C%5C+t%5Cmbox%7B%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B4%A0%E5%9B%A0%E5%AD%90%7D%5Cge+p%7D%7Dt\" alt=\"S(v,p)=S(v,p-1)-p\\times\\sum_{\\substack{2\\le t \\le \\lfloor\\frac{v}{p}\\rfloor,\\\\ t\\mbox{的最小素因子}\\ge p}}t\" eeimg=\"1\"><br><br>注意到一开始提到的<img src=\"https://www.zhihu.com/equation?tex=S\" alt=\"S\" eeimg=\"1\">的定义（“这些数要不本身是素数，要不其最小的素因子也<b>大于(注意!)</b><img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">”），此时<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">后面这项可以用<img src=\"https://www.zhihu.com/equation?tex=S\" alt=\"S\" eeimg=\"1\">来表达：<br><img src=\"https://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29-p%5Ctimes%28S%28%5Cleft%5Clfloor%5Cfrac%7Bv%7D%7Bp%7D%5Cright%5Crfloor%2Cp-1%29-%5C%7Bp-1%5Cmbox%7B%E4%BB%A5%E5%86%85%E7%9A%84%E6%89%80%E6%9C%89%E7%B4%A0%E6%95%B0%E5%92%8C%5C%7D%7D%29\" alt=\"S(v,p)=S(v,p-1)-p\\times(S(\\left\\lfloor\\frac{v}{p}\\right\\rfloor,p-1)-\\{p-1\\mbox{以内的所有素数和\\}})\" eeimg=\"1\"><br><br>再用<img src=\"https://www.zhihu.com/equation?tex=S\" alt=\"S\" eeimg=\"1\">替换素数和得到最终表达式：<br><img src=\"https://www.zhihu.com/equation?tex=S%28v%2Cp%29%3DS%28v%2Cp-1%29-p%5Ctimes%28S%28%5Cleft%5Clfloor%5Cfrac%7Bv%7D%7Bp%7D%5Cright%5Crfloor%2Cp-1%29-S%28p-1%2Cp-1%29%29\" alt=\"S(v,p)=S(v,p-1)-p\\times(S(\\left\\lfloor\\frac{v}{p}\\right\\rfloor,p-1)-S(p-1,p-1))\" eeimg=\"1\"><br><br><br>我们最终的结果是<img src=\"https://www.zhihu.com/equation?tex=S%28n%2C%5Clfloor%5Csqrt+n%5Crfloor%29\" alt=\"S(n,\\lfloor\\sqrt n\\rfloor)\" eeimg=\"1\">。计算时可以使用记忆化，也可以直接自底向上动态规划。<br>至于算法的复杂度就留作练习，是低于以上任何一种暴力方法的。<br><br>希望我讲清楚了。代码我就不放了，自己解决Project Euler 第10题之后可以去论坛里看Lucy_Hedgehog的代码（在论坛第5页）。也可以去看 <a data-hash=\"b7734862be39b570374b4d89e058666a\" href=\"https://www.zhihu.com/people/b7734862be39b570374b4d89e058666a\" class=\"member_mention\" data-editable=\"true\" data-title=\"@罗宸\" data-tip=\"p$b$b7734862be39b570374b4d89e058666a\" data-hovercard=\"p$b$b7734862be39b570374b4d89e058666a\">@罗宸</a> 给出的代码。<br><br><br><b>========== 更新：</b><br><a data-hash=\"ad0a1e81c1f9c59375f78a74161fe6bd\" href=\"https://www.zhihu.com/people/ad0a1e81c1f9c59375f78a74161fe6bd\" class=\"member_mention\" data-editable=\"true\" data-title=\"@吴昌隆\" data-tip=\"p$b$ad0a1e81c1f9c59375f78a74161fe6bd\" data-hovercard=\"p$b$ad0a1e81c1f9c59375f78a74161fe6bd\">@吴昌隆</a> 在评论中给出一个链接，其中包含一个理论上更优的算法（<a href=\"https://link.zhihu.com/?target=http%3A//cstheory.stackexchange.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Theoretical Computer Science Stack Exchange</a>上<a href=\"https://link.zhihu.com/?target=http%3A//cstheory.stackexchange.com/questions/5578/can-merlin-convince-arthur-about-a-certain-sum\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Charles的回答</a>）。我粗略读了一下，认为理论上是可行的。因为本题中的答案只有<img src=\"https://www.zhihu.com/equation?tex=O%28%5Cfrac%7Bn%5E2%7D%7B%5Clog+n%7D%29\" alt=\"O(\\frac{n^2}{\\log n})\" eeimg=\"1\">级别，使用中国剩余定理的话也只需要算到<img src=\"https://www.zhihu.com/equation?tex=O%28%5Clog+n%29\" alt=\"O(\\log n)\" eeimg=\"1\">级别的素数，因此总复杂度为<img src=\"https://www.zhihu.com/equation?tex=O%28n%5E%7B1%2F2%2B%5Cepsilon%7D%5Clog+n%29\" alt=\"O(n^{1/2+\\epsilon}\\log n)\" eeimg=\"1\">。<br>粗略读了下其参考文献（J. C. Lagarias and A. M. Odlyzko, <a href=\"https://link.zhihu.com/?target=http%3A//www.dtc.umn.edu/%7Eodlyzko/doc/arch/analytic.pi.of.x.pdf\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Computing </a><a href=\"https://link.zhihu.com/?target=http%3A//www.dtc.umn.edu/%7Eodlyzko/doc/arch/analytic.pi.of.x.pdf\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">π(x): An analytic method</a>, <em>Journal of Algorithms</em><strong>8</strong> (1987), pp. 173-191. ）后，我认为这算法不可能像这个答案中的算法一样在十几行代码内实现，仅放出来供感兴趣的朋友去看一下。", "Lambda 表达式有何用处？如何使用？": "简单来说，编程中提到的 lambda 表达式，通常是在<b>需要一个函数，但是又不想费神去命名一个函数</b>的场合下使用，也就是指<b>匿名函数</b>。这一用法跟所谓 λ 演算（题目说明里的维基链接）的关系，有点像原子弹和质能方程的关系，差别其实还是挺大的。<br><br>不谈形式化的 λ 演算，只说有实际用途的匿名函数。先举一个普通的 Python 例子：将一个 list 里的每个元素都平方：<br><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"nb\">map</span><span class=\"p\">(</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">*</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">y</span> <span class=\"k\">for</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)]</span> <span class=\"p\">)</span>\n</code></pre></div>这个写法要好过<br><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">def</span> <span class=\"nf\">sq</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">x</span>\n\n<span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">sq</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">y</span> <span class=\"k\">for</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)])</span>\n</code></pre></div>，因为后者多定义了一个（污染环境的）函数，尤其如果这个函数只会使用一次的话。而且第一种写法实际上更易读，因为那个映射到列表上的函数具体是要做什么，非常一目了然。如果你仔细观察自己的代码，会发现这种场景其实很常见：你在某处就真的只需要一个能做一件事情的函数而已，连它叫什么名字都无关紧要。Lambda 表达式就可以用来做这件事。<br><br>进一步讲，匿名函数本质上就是一个函数，它所抽象出来的东西是一组运算。这是什么意思呢？类比<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>a = [1, 2, 3]\n</code></pre></div>和<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>f = lambda x : x + 1\n</code></pre></div>，你会发现，等号右边的东西完全可以脱离等号左边的东西而存在，等号左边的<b>名字</b>只是右边之<b>实体</b>的标识符。如果你能习惯 [1, 2, 3] 单独存在，那么 lambda x : x + 1 也能单独存在其实也就不难理解了，它的意义就是给「某个数加一」这一运算本身。<br><br>现在回头来看 map() 函数，它可以将一个函数映射到一个可枚举类型上面。沿用上面给出的 a 和 f，可以写：<br><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">)</span>\n</code></pre></div>也就是将函数 f 依次套用在 a 的每一个元素上面，获得结果 [2, 3, 4]。现在用 lambda 表达式来替换 f，就变成：<br><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"nb\">map</span><span class=\"p\">(</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span> <span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"p\">)</span>\n</code></pre></div>会不会觉得现在很一目了然了？尤其是类比<br><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">each</span> <span class=\"ow\">in</span> <span class=\"n\">a</span><span class=\"p\">:</span>\n    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">each</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre></div>这样的写法时，你会发现自己如果能将「遍历列表，给遇到的每个元素都做某种<b>运算</b>」的过程从一个循环里抽象出来成为一个函数 map，然后用 lambda 表达式将这种<b>运算</b>作为参数传给 map 的话，考虑事情的思维层级会高出一些来，需要顾及的细节也少了一点。Python 之中，类似能用到 lambda 表达式的「高级」函数还有 reduce、filter 等等，很多语言也都有这样的工具（不过这些特性最好不要在 Python 中用太多，原因详见 <a href=\"http://www.zhihu.com/question/19794855/answer/12987428\" class=\"internal\"><span class=\"invisible\">http://www.</span><span class=\"visible\">zhihu.com/question/1979</span><span class=\"invisible\">4855/answer/12987428</span><span class=\"ellipsis\"></span></a> 的评论部分）。这种能够接受一个函数作为参数的函数叫做「高阶函数」（higher-order function），是来自函数式编程（functional programming）的思想。<br><br>和其他很多语言相比，Python 的 lambda 限制多多，最严重的当属它只能由一条表达式组成。这个限制主要是为了防止滥用，因为当人们发觉 lambda 很方便，就比较容易滥用，可是用多了会让程序看起来不那么清晰，毕竟每个人对于抽象层级的忍耐 / 理解程度都有所不同。", "如何系统地学习Python 中 matplotlib, numpy, scipy, pandas？": "<p>有些答案推荐太多杂七杂八的资料，根本不适合初学者。<b>我只推荐一本书，不是打广告，你认真学完之后，保证能系统的掌握这四个数据分析库。</b></p><p>现在我工作中使用这几门工具的频率非常高，当初学习的时候也是走了很多弯路！</p><p>matplotlib, numpy, scipy, pandas这四种库之间的联系很紧密，一般而言numpy、scipy用来做科学计算，matplotlib用来绘制图表，pandas比较基础，类似excel，提供了简洁的数据结构，既可以做科学计算也可以绘制图表。</p><p>如果想系统的学习这几个库，强烈推荐<b>《利用python进行数据分析 第二版》</b>，这也是我入门数据分析的书，理由如下：</p><ul><li>该书作者Wes McKinney是pandas库的主要开发者，并且实战经验丰富</li><li>该书结合pandas、numpy、scipy、matplotlib、ipython，讲解了大量案例，涵盖常用基本函数操作，肯定够用</li><li><b>该书是学习Python数据分析最好的参考书，没有之一</b></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-13666a5d43fed3b5b07237a17fd5e334_720w.jpg?source=54b3c3a5\" data-rawwidth=\"386\" data-rawheight=\"508\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-3bc99566f19bb1d8899bb4ee598d9a23_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"386\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='386'%20height='508'&gt;&lt;/svg&gt;\" data-rawwidth=\"386\" data-rawheight=\"508\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-3bc99566f19bb1d8899bb4ee598d9a23_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"386\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-13666a5d43fed3b5b07237a17fd5e334_720w.jpg?source=54b3c3a5\"></figure><p><br></p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p>你只要从头到尾把这本书的案例代码都敲一遍，<b>我保证你肯定能掌握这四门工具，并且达到相当的熟练程度。</b></p><blockquote>python学习也是同理，看官方文档就ok了<br>最近写了一篇关于python入门的经验贴，如何通过官方文档学习python，分享出来：<br><a href=\"https://www.zhihu.com/question/60402355/answer/770025809\" class=\"internal\">为什么自学Python看不进去？ - 濡须一扁舟的回答 - 知乎 https://www.zhihu.com/question/60402355/answer/770025809</a></blockquote><h2>放上目录，你参考一下：</h2><h2>目录  · · · · · ·</h2><p>前言1<br>第1章 准备工作7<br>1.1 本书内容7<br>1.1.1 什么类型的数据7<br>1.2 为何利用Python进行数据分析8<br>1.2.1 Python作为胶水8<br>1.2.2 解决“双语言”难题8<br>1.2.3 为何不使用Python9<br>1.3 重要的Python库9<br>1.3.1 NumPy9<br>1.3.2 pandas10<br>1.3.3matplotlib11<br>1.3.4 IPython与Jupyter11<br>1.3.5 SciPy12<br>1.3.6scikit-learn12<br>1.3.7statsmodels13<br>1.4 安装与设置13<br>1.4.1 Windows14<br>1.4.2 Apple（OS X和macOS）14<br>1.4.3 GNU/Linux14<br>1.4.4 安装及更新Python包15<br>1.4.5 Python 2和Python 316<br>1.4.6 集成开发环境和文本编辑器16<br>1.5 社区和会议17<br>1.6 快速浏览本书17<br>1.6.1 代码示例18<br>1.6.2 示例数据18<br>1.6.3导入约定18<br>1.6.4术语19<br>第2章 Python语言基础、IPython及Jupyter notebook20<br>2.1 Python解释器21<br>2.2 IPython基础22<br>2.2.1 运行IPython命令行22<br>2.2.2 运行 Jupyter notebook23<br>2.2.3 Tab补全25<br>2.2.4 内省27<br>2.2.5 %run命令28<br>2.2.6 执行剪贴板中的程序30<br>2.2.7 终端快捷键30<br>2.2.8 关于魔术命令31<br>2.2.9　matplotlib集成33<br>2.3 Python语言基础34<br>2.3.1 语言语义34<br>2.3.2 标量类型42<br>2.3.3 控制流49<br>第3章 内建数据结构、函数及文件54<br>3.1 数据结构和序列54<br>3.1.1 元组54<br>3.1.2 列表57<br>3.1.3 内建序列函数61<br>3.1.4 字典64<br>3.1.5集合67<br>3.1.6 列表、集合和字典的推导式69<br>3.2 函数72<br>3.2.1 命名空间、作用域和本地函数72<br>3.2.2 返回多个值73<br>3.2.3 函数是对象74<br>3.2.4 匿名（Lambda）函数75<br>3.2.5 柯里化：部分参数应用76<br>3.2.6 生成器77<br>3.2.7 错误和异常处理79<br>3.3 文件与操作系统82<br>3.3.1 字节与Unicode文件85<br>3.4 本章小结86<br>第4章 NumPy基础：数组与向量化计算87<br>4.1 NumPy ndarray：多维数组对象89<br>4.1.1 生成ndarray90<br>4.1.2 ndarray的数据类型92<br>4.1.3 NumPy数组算术94<br>4.1.4 基础索引与切片95<br>4.1.5 布尔索引100<br>4.1.6 神奇索引103<br>4.1.7 数组转置和换轴104<br>4.2 通用函数：快速的逐元素数组函数106<br>4.3 使用数组进行面向数组编程109<br>4.3.1 将条件逻辑作为数组操作110<br>4.3.2 数学和统计方法111<br>4.3.3 布尔值数组的方法113<br>4.3.4 排序114<br>4.3.5 唯一值与其他集合逻辑115<br>4.4 使用数组进行文件输入和输出115<br>4.5 线性代数116<br>4.6 伪随机数生成118<br>4.7 示例：随机漫步120<br>4.7.1 一次性模拟多次随机漫步121<br>4.8 本章小结122<br>第5章 pandas入门123<br>5.1 pandas数据结构介绍123<br>5.1.1 Series123<br>5.1.2DataFrame128<br>5.1.3 索引对象134<br>5.2 基本功能135<br>5.2.1 重建索引136<br>5.2.2 轴向上删除条目138<br>5.2.3 索引、选择与过滤140<br>5.2.4 整数索引144<br>5.2.5 算术和数据对齐145<br>5.2.6 函数应用和映射150<br>5.2.7 排序和排名152<br>5.2.8 含有重复标签的轴索引155<br>5.3 描述性统计的概述与计算157<br>5.3.1 相关性和协方差159<br>5.3.2 唯一值、计数和成员属性161<br>5.4 本章小结164<br>第6章 数据载入、存储及文件格式165<br>6.1 文本格式数据的读写165<br>6.1.1 分块读入文本文件171<br>6.1.2 将数据写入文本格式172<br>6.1.3 使用分隔格式174<br>6.1.4 JSON数据176<br>6.1.5 XML和HTML：网络抓取177<br>6.2 二进制格式180<br>6.2.1 使用HDF5格式181<br>6.2.2 读取Microsoft Excel文件183<br>6.3 与Web API交互184<br>6.4 与数据库交互186<br>6.5 本章小结187<br>第7章 数据清洗与准备188<br>7.1 处理缺失值188<br>7.1.1 过滤缺失值189<br>7.1.2 补全缺失值191<br>7.2 数据转换194<br>7.2.1 删除重复值194<br>7.2.2 使用函数或映射进行数据转换195<br>7.2.3 替代值197<br>7.2.4 重命名轴索引198<br>7.2.5 离散化和分箱199<br>7.2.6 检测和过滤异常值202<br>7.2.7 置换和随机抽样203<br>7.2.8 计算指标/虚拟变量204<br>7.3 字符串操作207<br>7.3.1 字符串对象方法208<br>7.3.2 正则表达式210<br>7.3.3 pandas中的向量化字符串函数213<br>7.4 本章小结215<br>第8章 数据规整：连接、联合与重塑216<br>8.1 分层索引216<br>8.1.1重排序和层级排序219<br>8.1.2 按层级进行汇总统计220<br>8.1.3 使用DataFrame的列进行索引220<br>8.2 联合与合并数据集221<br>8.2.1 数据库风格的DataFrame连接222<br>8.2.2 根据索引合并226<br>8.2.3 沿轴向连接230<br>8.2.4 联合重叠数据235<br>8.3 重塑和透视236<br>8.3.1 使用多层索引进行重塑236<br>8.3.2 将“长”透视为“宽”240<br>8.3.3 将“宽”透视为“长”242<br>8.4 本章小结244<br>第9章 绘图与可视化245<br>9.1 简明matplotlib API入门245<br>9.1.1 图片与子图246<br>9.1.2 颜色、标记和线类型250<br>9.1.3 刻度、标签和图例252<br>9.1.4 注释与子图加工255<br>9.1.5 将图片保存到文件258<br>9.1.6 matplotlib设置258<br>9.2 使用pandas和seaborn绘图259<br>9.2.1 折线图259<br>9.2.2 柱状图262<br>9.2.3 直方图和密度图266<br>9.2.4 散点图或点图269<br>9.2.5 分面网格和分类数据270<br>9.3 其他Python可视化工具271<br>9.4 本章小结272<br>第10章 数据聚合与分组操作274<br>10.1 GroupBy机制274<br>10.1.1 遍历各分组278<br>10.1.2 选择一列或所有列的子集279<br>10.1.3 使用字典和Series分组280<br>10.1.4 使用函数分组281<br>10.1.5 根据索引层级分组282<br>10.2 数据聚合282<br>10.2.1 逐列及多函数应用284<br>10.2.2 返回不含行索引的聚合数据287<br>10.3 应用：通用拆分-应用-联合288<br>10.3.1 压缩分组键290<br>10.3.2 分位数与桶分析291<br>10.3.3 示例：使用指定分组值填充缺失值292<br>10.3.4 示例：随机采样与排列294<br>10.3.5 示例：分组加权平均和相关性296<br>10.3.6 示例：逐组线性回归298<br>10.4 数据透视表与交叉表298<br>10.4.1 交叉表：crosstab301<br>10.5 本章小结302<br>第11章 时间序列303<br>11.1 日期和时间数据的类型及工具303<br>11.1.1 字符串与datetime互相转换305<br>11.2 时间序列基础307<br>11.2.1 索引、选择、子集308<br>11.2.2 含有重复索引的时间序列311<br>11.3 日期范围、频率和移位312<br>11.3.1 生成日期范围313<br>11.3.2 频率和日期偏置316<br>11.3.3 移位（前向和后向）日期317<br>11.4 时区处理320<br>11.4.1 时区的本地化和转换320<br>11.4.2 时区感知时间戳对象的操作323<br>11.4.3 不同时区间的操作324<br>11.5 时间区间和区间算术324<br>11.5.1 区间频率转换326<br>11.5.2 季度区间频率327<br>11.5.3 将时间戳转换为区间（以及逆转换）329<br>11.5.4 从数组生成PeriodIndex330<br>11.6 重新采样与频率转换332<br>11.6.1 向下采样334<br>11.6.2 向上采样与插值336<br>11.6.3 使用区间进行重新采样337<br>11.7 移动窗口函数339<br>11.7.1 指数加权函数342<br>11.7.2 二元移动窗口函数343<br>11.7.3 用户自定义的移动窗口函数344<br>11.8 本章小结344<br>第12章 高阶pandas346<br>12.1 分类数据346<br>12.1.1 背景和目标346<br>12.1.2 pandas中的Categorical类型348<br>12.1.3 使用Categorical对象进行计算350<br>12.1.4 分类方法352<br>12.2 高阶GroupBy应用355<br>12.2.1 分组转换和“展开”GroupBy355<br>12.2.2 分组的时间重新采样359<br>12.3 方法链技术361<br>12.3.1 pipe方法362<br>12.4 本章小结363<br>第13章 Python建模库介绍364<br>13.1 pandas与建模代码的结合364<br>13.2 使用Patsy创建模型描述367<br>13.2.1 Patsy公式中的数据转换369<br>13.2.2 分类数据与Patsy371<br>13.3 statsmodels介绍373<br>13.3.1 评估线性模型374<br>13.3.2 评估时间序列处理377<br>13.4 scikit-learn介绍377<br>13.5 继续你的教育381<br>第14章 数据分析示例382<br>14.1 从Bitly获取<a href=\"https://link.zhihu.com/?target=http%3A//1.USA.gov\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">1.USA.gov</span><span class=\"invisible\"></span></a>数据382<br>14.1.1 纯Python时区计数383<br>14.1.2 使用pandas进行时区计数385<br>14.2 MovieLens 1M数据集392<br>14.2.1 测量评价分歧396<br>14.3 美国1880～2010年的婴儿名字397<br>14.3.1分析名字趋势402<br>14.4 美国农业部食品数据库410<br>14.5 2012年联邦选举委员会数据库416<br>14.5.1 按职业和雇主的捐献统计419<br>14.5.2 捐赠金额分桶421<br>14.5.3 按州进行捐赠统计423<br>14.6 本章小结424<br>附录A 高阶NumPy425<br>附录B 更多IPython系统相关内容457</p>"}{"Python 的开发效率真的比 Java高吗？": "<p>我觉得Python与任何带有“大型”二字的程序，都是相斥的，甚至“中型”都很难触及。只适合用于“小型”项目，且最好无需维护，用完即丢。否则我会尽量避免使用Python。</p><p>第一次接触Python，到现在也快十年了，按说也算一名老Pythoner，可随着Python越来越火，我对它的关注却越来越少了。因为我的工作中，它一直像个替补球员，常年坐在冷板凳上，很少有上场的机会。当然，如果我刻意为之，它可以常常上场，但我的项目，会变得非常不健壮，甚至可能因为部分代码难以维护，而导致整个项目烂尾。</p><p>当然，在有足够把握的前提下，换Python上场，通常也并不会影响最终结果。可这样做的理由又是什么呢？莫非只是为了给维护工作增加难度？</p><p>下面这句话也许有些极端，但很多时候我心中确实就是这么想的：“在构建大型程序之时，所有动态语言都是垃圾”。</p><p>如果把静态语言(Java,C#,C++)比做汽车，那动态语言就像是自行车，如果你每天去门口的菜市场买菜，开车会显得很麻烦。踩离合，挂档，松离合，踩油门，刚走了两三米，堵了，于是又是一遍踩离合，挂档，松离合，踩油门。。。。从任何角度看自行车都简单方便的多。所以如果你每天外出，都只去菜市场，从来没去过更远的地方，自行车当然是世界上最好的交通工具。汽车的存在，似乎根本就是多余的，你想反驳两句，人家只要一句话就能把你堵回来：“我既然可以骑到菜市场，当然就可以骑到全世界”。</p><p>久而久之，这几乎就成了真理，所以静态语言在这些人眼中，只是在原本完美的语句上面，如强迫症一般，硬加了一堆完全没必要的int，float，string。。。。。。纯属自讨没趣，离合，油门，方向盘，搞得这么臃肿？安两个脚蹬子一下全搞定，要用什么样的词汇形容这种感觉？优雅！</p><p>于是通过口耳相传，这个划时代的脚蹬子，成为了当今最火的网红，拥有了最高的逼格，肩负着改变世界的使命。。。。。。那些执着于离合，油门，方向盘的，都是一群顽冥不化的老顽固。整个行业的未来，当然是要靠脚蹬子来推动的。为什么？因为优雅！</p><p>跑1米？我到了，汽车连动都没动。</p><p>跑10米？我到了，汽车还是一动没动。</p><p>跑100米？我到了，汽车才走了一米。</p><p>果然自行车完胜啊，无论怎么比都完虐汽车。</p><p>而等到某一天，你真的决定出一趟远门，依然骑着自行车出门了。骑到半路两腿发麻，于是放弃出远门的计划，回家躺着去了。之后把一切归咎于自己踩车蹬子的水平不够，甚至根本不会考虑用汽车试试，因为汽车不优雅！</p><p>确实有些大型项目中大量使用了Python，但这能说明什么呢？不是每年都有骑行爱好者，骑着自行车环游世界吗？</p><p>可毕竟对于绝大多数人来说，骑自行车出门，十来公里，就会两腿发麻。而开车出门，百公里毫无压力，这就是事实啊。</p><p>真的比较开发效率，微型程序，Python当然比java强。但也仅此而已吧？逛菜市场若是输给汽车，你还有啥存在价值？若是web方向，大概php更有效率吧？连菜篮子都是现成的，离开菜市场，就只能进废品站了。桌面程序，还有比Delphi或VB开发效率更高的？</p><p>大中型程序，<a href=\"https://link.zhihu.com/?target=http%3A//xn--ub1a.net/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">自.Net</a> Core发布之后，C#还真是棒。虽然刚刚起步，远不如Java主流，但确实好用。语法骚，性能棒，配置方便，IDE也牛逼。以前用Java几个小时才能写完一套基础CRUD代码。<a href=\"https://link.zhihu.com/?target=http%3A//xn--zbvq86a.net/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">改用.Net</a> Core之后才知道，只要配置好数据库上下文，这些基础CRUD代码根本不用手写，可以用Visual Studio直接生成。不仅大幅减少工作量，还能避免人为疏失产生的BUG，啥叫生产力？单从技术面考虑，.NET Core能以不太高的学习成本，实现巨大的技术回报，大概是目前主流语言中性价比最高的了。而且项目越大，发现的优点越多。</p><p>Java可能确实老了，我也越来越不喜欢它了。框架从ssh换成了ssm，IDE也从eclips变成了idea，好像是一直在进步。但实际生产力还是跟十几年前毫无差别。尤其被那个三天两头跑法院，以打官司闻名天下的甲骨文公司收购之后，Java就注定会一直走下坡路。毕竟甲骨文的心思早已不在Java本身，而在于Java所能产生出的诉讼赔偿金。按照甲骨文公司的行事风格，Java在法律圈的寿命，或许会比在IT圈更长。</p><p>如果将来取代Java的是C#，那当然最好，说明我押对了宝。如果不是的话，没关系，至少我还可以学。而无论那门将会取代Java的语言是什么，至少可以确定，它一定是静态语言。</p><p>无论再时髦的自行车，赋予了再多噱头，就算换上镶钻的车把，镀金的车圈，也依然只是辆自行车，如何取代一辆稍显破旧，但功能完好的帕萨特？</p>"}{"如何拿到知乎用户H-index的排名？": "在学术界，<b>h-index 的含义是 “至少有x篇文章被引用x次”。</b><br><br>举个例子：一个人发表了10篇文章，被引用数为：102，74，34，23，10，8，6，5，3，2；<br>那么，他有 6 篇文章被至少引用了 6 次，但是并没有 7 篇文章被引用 7 次。<br>因此，他的 h-index 为 6。<br><br>对于知乎用户，如果要使用 h-index 的话，通常来说，其含义为 “至少有x篇回答被赞同x次”。<br><br>然而，比起学术界的 h-index，这种统计方式或许有些不妥。<br><br>因为引用一篇文章是不容易的，需要付出较高的成本（至少自己也写一篇论文）；<br>而赞同一个答案比起写一个回答却是比较简单的（只要点一个向上的箭头就可以了）。<br><br>在学术界，如果一个人的 h-index 大于 100，那基本上可以被认定为“超级大牛”。<br>但在知乎上， h-index 大于 100 的人非常多，有超过 150 个。<br><br>这说明什么呢？说明有相当多的人，他们有超过 100 个回答超过 100 个赞同。<br>一方面，对于大牛来说，由于自身影响力的马太效应，回答一个超过 100 赞同的回答相对来说是比较简单的。另一方面，这项统计对于回答数比较少的大牛（如 <a data-hash=\"f35fcb19ea50373fc10f2219f4a12754\" href=\"https://www.zhihu.com/people/f35fcb19ea50373fc10f2219f4a12754\" class=\"member_mention\" data-editable=\"true\" data-title=\"@马伯庸\" data-hovercard=\"p$b$f35fcb19ea50373fc10f2219f4a12754\">@马伯庸</a> 、 <a data-hash=\"48ddfa526720c3ada296462afb5d564b\" href=\"https://www.zhihu.com/people/48ddfa526720c3ada296462afb5d564b\" class=\"member_mention\" data-editable=\"true\" data-title=\"@梁边妖\" data-hovercard=\"p$b$48ddfa526720c3ada296462afb5d564b\">@梁边妖</a> 等）非常不公平。<br><br>因此，我做了一点小改进：<br>除了统计 h-index， 还加了几个指标：<br><ul><li><b>h-10：至少有 x 个回答被赞同了至少 10x 次；<br></b></li><li><b>h-100：至少有 x 个回答被赞同了至少 100x 次；<br></b></li><li><b>h-1000：至少有 x 个回答被赞同了至少 1000x 次；</b><br></li></ul><br>通过 <a href=\"https://link.zhihu.com/?target=http%3A//www.kanzhihu.com/useranalysis\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">用户动态 - 看知乎</a>，我抓取了<b>知乎站内赞同数前 50</b> 的用户<br>（对于匿名过很多回答的用户来说，此方法无法统计到）<br><br>截至 2015.8.20，给出链接是方便大家关注 ^u^<br><blockquote>1 <a href=\"http://www.zhihu.com/people/zhang-jia-wei\" class=\"internal\">张佳玮</a> 2 <a href=\"http://www.zhihu.com/people/zhu-xuan-86\" class=\"internal\">朱炫</a> 3 <a href=\"http://www.zhihu.com/people/feifeimao\" class=\"internal\">肥肥猫</a> 4 <a href=\"http://www.zhihu.com/people/yolfilm\" class=\"internal\">yolfilm</a> 5 <a href=\"http://www.zhihu.com/people/gayscript\" class=\"internal\">GayScript</a><br>6 <a href=\"http://www.zhihu.com/people/ze.ran\" class=\"internal\">mu mu</a> 7 <a href=\"http://www.zhihu.com/people/xiepanda\" class=\"internal\">谢熊猫君</a> 8 <a href=\"http://www.zhihu.com/people/cai-tong\" class=\"internal\">采铜</a> 9 <a href=\"http://www.zhihu.com/people/kaiserwang730\" class=\"internal\">Kaiser</a> 10 <a href=\"http://www.zhihu.com/people/bo-cai-28-7\" class=\"internal\">菠菜</a><br>11 <a href=\"http://www.zhihu.com/people/WxzxzW\" class=\"internal\">王豖</a> 12 <a href=\"http://www.zhihu.com/people/yixiao-feng-yun-guo\" class=\"internal\">一笑风云过</a> 13 <a href=\"http://www.zhihu.com/people/zord-vczh\" class=\"internal\">vczh</a> 14 <a href=\"http://www.zhihu.com/people/lzy135\" class=\"internal\">Justin Lee</a> 15 <a href=\"http://www.zhihu.com/people/linaoshi\" class=\"internal\">李嫑嫑</a><br>16 <a href=\"http://www.zhihu.com/people/magasa\" class=\"internal\">magasa</a> 17 <a href=\"http://www.zhihu.com/people/zengjiaplus\" class=\"internal\">曾加</a> 18 <a href=\"http://www.zhihu.com/people/meng-de-er\" class=\"internal\">孟德尔</a> 19 <a href=\"http://www.zhihu.com/people/wangnuonuo\" class=\"internal\">王诺诺</a> 20 <a href=\"http://www.zhihu.com/people/ma-bo-yong\" class=\"internal\">马伯庸</a><br>21 <a href=\"http://www.zhihu.com/people/leng-zhe\" class=\"internal\">冷哲</a> 22 <a href=\"http://www.zhihu.com/people/e-mo-de-nai-ba\" class=\"internal\">恶魔的奶爸Sam</a> 23 <a href=\"http://www.zhihu.com/people/ayat\" class=\"internal\">安雅</a> 24 <a href=\"http://www.zhihu.com/people/nordenbox\" class=\"internal\">罗登</a> 25 <a href=\"http://www.zhihu.com/people/liuniandate\" class=\"internal\">刘念</a><br>26 <a href=\"http://www.zhihu.com/people/liangbianyao\" class=\"internal\">梁边妖</a> 27 <a href=\"http://www.zhihu.com/people/haoqishiyanshi\" class=\"internal\">滕腾</a> 28 <a href=\"http://www.zhihu.com/people/aton\" class=\"internal\">苏莉安</a> 29 <a href=\"http://www.zhihu.com/people/huo-zhen-bu-lu-zi-lao-ye\" class=\"internal\">霍真布鲁兹老爷</a> 30 <a href=\"http://www.zhihu.com/people/maimu\" class=\"internal\">孔鲤</a><br>31 <a href=\"http://www.zhihu.com/people/sizhuren\" class=\"internal\">寺主人</a> 32 <a href=\"http://www.zhihu.com/people/lisongwei\" class=\"internal\">李松蔚</a> 33 <a href=\"http://www.zhihu.com/people/douzishushu\" class=\"internal\">豆子</a> 34 <a href=\"http://www.zhihu.com/people/su-fei-17\" class=\"internal\">苏菲</a> 35 <a href=\"http://www.zhihu.com/people/zeng-kai-87\" class=\"internal\">Hannibal Lecter</a><br>36 <a href=\"http://www.zhihu.com/people/li-ao-wen\" class=\"internal\">李傲文</a> 37 <a href=\"http://www.zhihu.com/people/tang-que\" class=\"internal\">唐缺</a> 38 <a href=\"http://www.zhihu.com/people/liu-peng-cheng-sai-l\" class=\"internal\">刘鹏程Sai.L</a> 39 <a href=\"http://www.zhihu.com/people/zhuxiaobao\" class=\"internal\">猪小宝</a> 40 <a href=\"http://www.zhihu.com/people/kun-yu\" class=\"internal\">kun yu</a><br>41 <a href=\"http://www.zhihu.com/people/commando\" class=\"internal\">cOMMANDO</a> 42 <a href=\"http://www.zhihu.com/people/wang-lu-43-95\" class=\"internal\">王路</a> 43 <a href=\"http://www.zhihu.com/people/fei-niao-bing-he\" class=\"internal\">飞鸟冰河</a> 44 <a href=\"http://www.zhihu.com/people/ji-xuan-yi-9\" class=\"internal\">姬轩亦</a> 45 <a href=\"http://www.zhihu.com/people/wangxiaofeng\" class=\"internal\">带三个表</a><br>46 <a href=\"http://www.zhihu.com/people/thejennyyy\" class=\"internal\">Jennyyy</a> 47 <a href=\"http://www.zhihu.com/people/chenbailing\" class=\"internal\">陈柏龄</a> 48 <a href=\"http://www.zhihu.com/people/zhang-jing-88-76\" class=\"internal\">匡靖</a> 49 <a href=\"http://www.zhihu.com/people/ma-qian-zu\" class=\"internal\">马前卒</a> 50 <a href=\"http://www.zhihu.com/people/binka\" class=\"internal\">斌卡</a></blockquote><br>统计了他们各自所有回答（不包括专栏文章）的 h-index，以及 h-10，h-100，h-1000<br><br>结果如下表所示：<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/756653afddb94cc56962a769ca91328c_720w.png?source=54b3c3a5\" data-rawwidth=\"702\" data-rawheight=\"1097\" class=\"origin_image zh-lightbox-thumb\" width=\"702\" data-original=\"https://pic2.zhimg.com/756653afddb94cc56962a769ca91328c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='702'%20height='1097'&gt;&lt;/svg&gt;\" data-rawwidth=\"702\" data-rawheight=\"1097\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"702\" data-original=\"https://pic2.zhimg.com/756653afddb94cc56962a769ca91328c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/756653afddb94cc56962a769ca91328c_720w.png?source=54b3c3a5\"></figure><br>如果给 <b>h-index</b> 进行排名，前 20 名的结果是这样的：<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/fd46d1f9343ceb7d001f02bc89ce3265_720w.png?source=54b3c3a5\" data-rawwidth=\"532\" data-rawheight=\"466\" class=\"origin_image zh-lightbox-thumb\" width=\"532\" data-original=\"https://pic4.zhimg.com/fd46d1f9343ceb7d001f02bc89ce3265_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='532'%20height='466'&gt;&lt;/svg&gt;\" data-rawwidth=\"532\" data-rawheight=\"466\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"532\" data-original=\"https://pic4.zhimg.com/fd46d1f9343ceb7d001f02bc89ce3265_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/fd46d1f9343ceb7d001f02bc89ce3265_720w.png?source=54b3c3a5\"></figure><br>张公子一骑绝尘。第 20 名的 h-index 也达到了 200 以上。<br><br>但这个排名并不能真实地反映出知乎用户的影响力。对于回答少于 200 个的用户，即使他们回答很优秀，也无法入榜，在总表中，除了 <a data-hash=\"f35fcb19ea50373fc10f2219f4a12754\" href=\"https://www.zhihu.com/people/f35fcb19ea50373fc10f2219f4a12754\" class=\"member_mention\" data-editable=\"true\" data-title=\"@马伯庸\" data-hovercard=\"p$b$f35fcb19ea50373fc10f2219f4a12754\">@马伯庸</a><a data-hash=\"48ddfa526720c3ada296462afb5d564b\" href=\"https://www.zhihu.com/people/48ddfa526720c3ada296462afb5d564b\" class=\"member_mention\" data-editable=\"true\" data-title=\"@梁边妖\" data-hovercard=\"p$b$48ddfa526720c3ada296462afb5d564b\">@梁边妖</a> 以外，还有 <a data-hash=\"ec57f56165fc5d88cef8e69816b456ba\" href=\"https://www.zhihu.com/people/ec57f56165fc5d88cef8e69816b456ba\" class=\"member_mention\" data-editable=\"true\" data-title=\"@朱炫\" data-hovercard=\"p$b$ec57f56165fc5d88cef8e69816b456ba\">@朱炫</a><a data-hash=\"342d47c5da88fb45217f0685d261ce64\" href=\"https://www.zhihu.com/people/342d47c5da88fb45217f0685d261ce64\" class=\"member_mention\" data-editable=\"true\" data-title=\"@肥肥猫\" data-hovercard=\"p$b$342d47c5da88fb45217f0685d261ce64\">@肥肥猫</a><a data-hash=\"c948a6c96e21986af5d9c720334989f7\" href=\"https://www.zhihu.com/people/c948a6c96e21986af5d9c720334989f7\" class=\"member_mention\" data-editable=\"true\" data-title=\"@谢熊猫君\" data-hovercard=\"p$b$c948a6c96e21986af5d9c720334989f7\">@谢熊猫君</a> 等等，他们的优质回答有很多，但因为回答数不够而无法入榜。<br><br>因此， h-index 的榜单不能很好地反映知乎用户的真正影响力，它仅仅反应了一个用户贡献<br><b>“有存在感” 的回答 </b>的能力。<br><br>所以我们统计 h-10、h-100、h-1000。排名如下。<br><br><ul><li><b>h-10 </b>（用户贡献<b> “有一定影响力” 的回答</b>的能力）<br></li></ul><figure><noscript><img src=\"https://pic4.zhimg.com/50/850d11011927dea3349d2093ebcdc125_720w.png?source=54b3c3a5\" data-rawwidth=\"536\" data-rawheight=\"466\" class=\"origin_image zh-lightbox-thumb\" width=\"536\" data-original=\"https://pic2.zhimg.com/850d11011927dea3349d2093ebcdc125_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='536'%20height='466'&gt;&lt;/svg&gt;\" data-rawwidth=\"536\" data-rawheight=\"466\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"536\" data-original=\"https://pic2.zhimg.com/850d11011927dea3349d2093ebcdc125_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/850d11011927dea3349d2093ebcdc125_720w.png?source=54b3c3a5\"></figure><br><ul><li>在这张表中，张公子的优势已经不那么大了。<br></li><li>此外我们发现， <a data-hash=\"0970f947b898ecc0ec035f9126dd4e08\" href=\"https://www.zhihu.com/people/0970f947b898ecc0ec035f9126dd4e08\" class=\"member_mention\" data-editable=\"true\" data-title=\"@vczh\" data-hovercard=\"p$b$0970f947b898ecc0ec035f9126dd4e08\">@vczh</a><a data-hash=\"62d4e1d717ad1d2951ce5b0f264de480\" href=\"https://www.zhihu.com/people/62d4e1d717ad1d2951ce5b0f264de480\" class=\"member_mention\" data-editable=\"true\" data-title=\"@带三个表\" data-hovercard=\"p$b$62d4e1d717ad1d2951ce5b0f264de480\">@带三个表</a> 等人不见了，这说明什么呢？</li></ul>——说明他们的大部分回答都很水……（顺手一黑）<br><ul><li><a data-hash=\"ec57f56165fc5d88cef8e69816b456ba\" href=\"https://www.zhihu.com/people/ec57f56165fc5d88cef8e69816b456ba\" class=\"member_mention\" data-editable=\"true\" data-title=\"@朱炫\" data-hovercard=\"p$b$ec57f56165fc5d88cef8e69816b456ba\">@朱炫</a> 出现在榜单中，并一下子排在第2， <a data-hash=\"342d47c5da88fb45217f0685d261ce64\" href=\"https://www.zhihu.com/people/342d47c5da88fb45217f0685d261ce64\" class=\"member_mention\" data-editable=\"true\" data-title=\"@肥肥猫\" data-hovercard=\"p$b$342d47c5da88fb45217f0685d261ce64\">@肥肥猫</a> 也进入了榜单。<br></li><li><a data-hash=\"030b64419090e8f5e6ac52957ee92193\" href=\"https://www.zhihu.com/people/030b64419090e8f5e6ac52957ee92193\" class=\"member_mention\" data-editable=\"true\" data-title=\"@王豖\" data-hovercard=\"p$b$030b64419090e8f5e6ac52957ee92193\">@王豖</a><a class=\"member_mention\" href=\"https://www.zhihu.com/people/aa15a1808f0b3a526df99769e03a2f84\" data-editable=\"true\" data-hash=\"aa15a1808f0b3a526df99769e03a2f84\" data-title=\"@刘念\" data-hovercard=\"p$b$aa15a1808f0b3a526df99769e03a2f84\">@刘念</a> 等人也出现了，这反应了他们真正的影响力——他们在知乎的影响力的确是在前 20 的，但 h-index 并不能很好地反映出来。<br></li></ul><br><ul><li><b>h-100</b>（用户贡献<b>“有较大影响力”的回答</b>的能力）<br></li></ul><figure><noscript><img src=\"https://pic2.zhimg.com/50/ffc29a133155005c11a1688d90a6e51f_720w.png?source=54b3c3a5\" data-rawwidth=\"539\" data-rawheight=\"466\" class=\"origin_image zh-lightbox-thumb\" width=\"539\" data-original=\"https://pic1.zhimg.com/ffc29a133155005c11a1688d90a6e51f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='539'%20height='466'&gt;&lt;/svg&gt;\" data-rawwidth=\"539\" data-rawheight=\"466\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"539\" data-original=\"https://pic1.zhimg.com/ffc29a133155005c11a1688d90a6e51f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/ffc29a133155005c11a1688d90a6e51f_720w.png?source=54b3c3a5\"></figure><br>在这张榜单中，比较大的变化是张公子已经不再排名第一。还首次出现了 <a data-hash=\"491b1dc31ed6c376323c2fe5f643f650\" href=\"https://www.zhihu.com/people/491b1dc31ed6c376323c2fe5f643f650\" class=\"member_mention\" data-editable=\"true\" data-title=\"@王诺诺\" data-hovercard=\"p$b$491b1dc31ed6c376323c2fe5f643f650\">@王诺诺</a><a data-hash=\"48ddfa526720c3ada296462afb5d564b\" href=\"https://www.zhihu.com/people/48ddfa526720c3ada296462afb5d564b\" class=\"member_mention\" data-editable=\"true\" data-title=\"@梁边妖\" data-hovercard=\"p$b$48ddfa526720c3ada296462afb5d564b\">@梁边妖</a><a data-hash=\"acb05f758c6249ff1a1d8aac2fe2aee6\" href=\"https://www.zhihu.com/people/acb05f758c6249ff1a1d8aac2fe2aee6\" class=\"member_mention\" data-editable=\"true\" data-title=\"@苏菲\" data-hovercard=\"p$b$acb05f758c6249ff1a1d8aac2fe2aee6\">@苏菲</a> ，这些用户在知乎贡献了很多有较大影响力的回答。<br><br><ul><li><b>h-1000</b> （用户贡献<b>“有极大影响力”的回答 </b>的能力）<br></li></ul><figure><noscript><img src=\"https://pic1.zhimg.com/50/4a38bb353309aaa46cbe3ce584f55773_720w.png?source=54b3c3a5\" data-rawwidth=\"538\" data-rawheight=\"613\" class=\"origin_image zh-lightbox-thumb\" width=\"538\" data-original=\"https://pic3.zhimg.com/4a38bb353309aaa46cbe3ce584f55773_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='538'%20height='613'&gt;&lt;/svg&gt;\" data-rawwidth=\"538\" data-rawheight=\"613\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"538\" data-original=\"https://pic3.zhimg.com/4a38bb353309aaa46cbe3ce584f55773_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/4a38bb353309aaa46cbe3ce584f55773_720w.png?source=54b3c3a5\"></figure><br><ul><li>排名第一的用户是 <a data-hash=\"342d47c5da88fb45217f0685d261ce64\" href=\"https://www.zhihu.com/people/342d47c5da88fb45217f0685d261ce64\" class=\"member_mention\" data-editable=\"true\" data-title=\"@肥肥猫\" data-hovercard=\"p$b$342d47c5da88fb45217f0685d261ce64\">@肥肥猫</a>， h-1000 因子高达 12，这意味着，他至少有 12 个回答获得了 12000 赞同，他在贡献 “有极大影响力” 回答方面在全知乎首屈一指。 <a data-hash=\"ec57f56165fc5d88cef8e69816b456ba\" href=\"https://www.zhihu.com/people/ec57f56165fc5d88cef8e69816b456ba\" class=\"member_mention\" data-editable=\"true\" data-title=\"@朱炫\" data-hovercard=\"p$b$ec57f56165fc5d88cef8e69816b456ba\">@朱炫</a> 的 h-1000因子也高达 11，他们两个是唯二 h-1000 因子超过 10 的用户。他们两个每次在知乎上回答问题，都会挂起一阵旋风。<br></li><li><a data-hash=\"48ddfa526720c3ada296462afb5d564b\" href=\"https://www.zhihu.com/people/48ddfa526720c3ada296462afb5d564b\" class=\"member_mention\" data-editable=\"true\" data-title=\"@梁边妖\" data-hovercard=\"p$b$48ddfa526720c3ada296462afb5d564b\">@梁边妖</a> 一下子跃居第三，这也在某种程度上真实地反应了他的回答的影响力。<br></li><li>值得注意的是，这个榜单上出现了一些总赞同数在 50 名开外的用户，比如 <a data-hash=\"5874b9fc2c79879886cc9caaa2aa1492\" href=\"https://www.zhihu.com/people/5874b9fc2c79879886cc9caaa2aa1492\" class=\"member_mention\" data-editable=\"true\" data-title=\"@windleavez\" data-hovercard=\"p$b$5874b9fc2c79879886cc9caaa2aa1492\">@windleavez</a>、<a data-hash=\"3dd48458b6234d7074a1e55102083980\" href=\"https://www.zhihu.com/people/3dd48458b6234d7074a1e55102083980\" class=\"member_mention\" data-editable=\"true\" data-title=\"@杜绍斐\" data-hovercard=\"p$b$3dd48458b6234d7074a1e55102083980\">@杜绍斐</a>、<a data-hash=\"26f0e98f29d0b22105fceef089530915\" href=\"https://www.zhihu.com/people/26f0e98f29d0b22105fceef089530915\" class=\"member_mention\" data-editable=\"true\" data-title=\"@Seasee Youl\" data-hovercard=\"p$b$26f0e98f29d0b22105fceef089530915\">@Seasee Youl</a>、<a data-hash=\"8e5fd509c8169f05d256903b2f0aca75\" href=\"https://www.zhihu.com/people/8e5fd509c8169f05d256903b2f0aca75\" class=\"member_mention\" data-editable=\"true\" data-title=\"@藥師\" data-hovercard=\"p$b$8e5fd509c8169f05d256903b2f0aca75\">@藥師</a>、 <a data-hash=\"7a2f597e6663b6ae4400f350bf568af3\" href=\"https://www.zhihu.com/people/7a2f597e6663b6ae4400f350bf568af3\" class=\"member_mention\" data-editable=\"true\" data-title=\"@君临\" data-hovercard=\"p$b$7a2f597e6663b6ae4400f350bf568af3\">@君临</a> 、 <a data-hash=\"823a80ddd21e3acc32a2a783a6db3e6d\" href=\"https://www.zhihu.com/people/823a80ddd21e3acc32a2a783a6db3e6d\" class=\"member_mention\" data-editable=\"true\" data-title=\"@张英锋\" data-hovercard=\"p$b$823a80ddd21e3acc32a2a783a6db3e6d\">@张英锋</a> 、 <a data-hash=\"c6fd13a060c38130756535c2fc3397c4\" href=\"https://www.zhihu.com/people/c6fd13a060c38130756535c2fc3397c4\" class=\"member_mention\" data-editable=\"true\" data-title=\"@小岩井\" data-hovercard=\"p$b$c6fd13a060c38130756535c2fc3397c4\">@小岩井</a> 、<a data-hash=\"980f8cb328df5d02d154c5e31a043d83\" href=\"https://www.zhihu.com/people/980f8cb328df5d02d154c5e31a043d83\" class=\"member_mention\" data-editable=\"true\" data-title=\"@叫兽易小星\" data-hovercard=\"p$b$980f8cb328df5d02d154c5e31a043d83\">@叫兽易小星</a>、<a data-hash=\"f03a74410ff31839adba9c10b06ef3d0\" href=\"https://www.zhihu.com/people/f03a74410ff31839adba9c10b06ef3d0\" class=\"member_mention\" data-editable=\"true\" data-title=\"@刘易杰\" data-hovercard=\"p$b$f03a74410ff31839adba9c10b06ef3d0\">@刘易杰</a>  等等。他们虽然赞同数还不够多，但是有很强的输出超高影响力回答的能力，这是值得注意的。<br></li></ul><br><b>那么，你觉得哪张表单最符合你心目中的知乎呢？</b><br><br>神马？你想知道 h-10000 ?<br>好吧……现在只有 <a href=\"http://www.zhihu.com/people/zhu-xuan-86\" class=\"internal\">朱炫</a>、<a href=\"http://www.zhihu.com/people/feifeimao\" class=\"internal\">肥肥猫</a>、<a href=\"http://www.zhihu.com/people/zengjiaplus\" class=\"internal\">曾加</a>、<a href=\"http://www.zhihu.com/people/yixiao-feng-yun-guo\" class=\"internal\">一笑风云过</a>、<a href=\"http://www.zhihu.com/people/tong-yao-20-46\" class=\"internal\">童瑶</a>、<a href=\"http://www.zhihu.com/people/zeng-kai-87\" class=\"internal\">Hannibal Lecter</a>、<a href=\"http://www.zhihu.com/people/da-tou-bang-zhu\" class=\"internal\">大头帮主</a>、<a href=\"http://www.zhihu.com/people/wangyuancheng\" class=\"internal\">王远成</a>、<a href=\"http://www.zhihu.com/people/liu-peng-cheng-sai-l\" class=\"internal\">刘鹏程Sai.L</a>、<a href=\"http://www.zhihu.com/people/zhangyingfeng\" class=\"internal\">张英锋</a>、<a href=\"http://www.zhihu.com/people/valarmorghulis\" class=\"internal\">瘾小明</a> 11 个人的 h-10000 达到了 2（有 2 个回答均达到 20000 赞同）。<br>其他人都是 1 （有万赞回答） 和 0 （没有万赞回答）。<br><br>（其实之前有个人达到了 3，可惜她离开了……）<br><figure><noscript><img src=\"https://pic3.zhimg.com/50/0496c39009324b1bca16a7e6ecea3faa_720w.png?source=54b3c3a5\" data-rawwidth=\"158\" data-rawheight=\"126\" class=\"content_image\" width=\"158\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='158'%20height='126'&gt;&lt;/svg&gt;\" data-rawwidth=\"158\" data-rawheight=\"126\" class=\"content_image lazy\" width=\"158\" data-actualsrc=\"https://pic3.zhimg.com/50/0496c39009324b1bca16a7e6ecea3faa_720w.png?source=54b3c3a5\"></figure><br>==========<br><br>本回答只对知乎用户回答的影响力作分析。<br>不讨论回答质量的好坏，更无意评价用户的质量的优劣，特此说明。<br><br>==========<br><br>好吧，为了避免大家在评论区猜来猜去，我坦陈，我是 <a data-hash=\"184d63c15edb58b42e0a02628945fa76\" href=\"https://www.zhihu.com/people/184d63c15edb58b42e0a02628945fa76\" class=\"member_mention\" data-editable=\"true\" data-title=\"@曾加\" data-hovercard=\"p$b$184d63c15edb58b42e0a02628945fa76\">@曾加</a>。<br>如需转载（转发链接不论）到其他平台，请务必联系我。<br>不过还是要匿名的，小号被发现就不好了……", "维护一个五六百行的程序就已经力不从心了怎么办？": "&lt;--------- Modified at 2015/12/13 start ---------&gt;<br>以下是关于重构的个人书单。<br>两本就够了，别的都大同小异，有兴趣的朋友可以去读读：<br><a href=\"https://link.zhihu.com/?target=http%3A//www.amazon.cn/gp/product/B0031M9GHC%3Fkeywords%3D%25E4%25BB%25A3%25E7%25A0%2581%25E6%2595%25B4%25E6%25B4%2581%25E4%25B9%258B%25E9%2581%2593%26qid%3D1449985124%26ref_%3Dsr_1_1%26sr%3D8-1\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">代码整洁之道</a><br><a href=\"https://link.zhihu.com/?target=http%3A//www.amazon.cn/%25E9%2587%258D%25E6%259E%2584-%25E6%2594%25B9%25E5%2596%2584%25E6%2597%25A2%25E6%259C%2589%25E4%25BB%25A3%25E7%25A0%2581%25E7%259A%2584%25E8%25AE%25BE%25E8%25AE%25A1-%25E9%25A9%25AC%25E4%25B8%2581%25C2%25B7%25E7%25A6%258F%25E5%258B%2592/dp/B011LPUB42/ref%3Dsr_1_1%3Fs%3Dbooks%26ie%3DUTF8%26qid%3D1449985230%26sr%3D1-1%26keywords%3D%25E9%2587%258D%25E6%259E%2584%253A%25E6%2594%25B9%25E5%2596%2584%25E6%2597%25A2%25E6%259C%2589%25E4%25BB%25A3%25E7%25A0%2581%25E7%259A%2584%25E8%25AE%25BE%25E8%25AE%25A1\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">重构:改善既有代码的设计</a><br>&lt;--------- Modified at 2015/12/13 end ---------&gt;<br><br>&lt;--------- Modified at 2015/11/18 start ---------&gt;<br><br>有朋友知道怎么开专栏么？想在知乎找块地专门谈谈代码的那些事儿。<br>&lt;--------- Modified at 2015/11/18 end ---------&gt;<br><br>题主，我来告诉你解决你目前困境的不二法门。不要说区区五六百行的程序，再大到上W行的代码，都可以<b>让你满怀信心</b>的解决。这个法门就叫做--<b>重构</b>。<br>不用担心，它是有方法论的。只要你按下面的步骤，<b>小步修改，确保每次修改后通过测试</b>。我保证：<br><blockquote>变量众多，再牵涉到相互之间的逻辑<br></blockquote>1.你会对这500多行代码的整体结构一目了然，豁然开朗；<br><br><blockquote>生怕某个地方改错，导致不可知的错误</blockquote>2.对每一次修改都充满信心，对它的影响范围都了如指掌，不担心会引起代码的degree；<br><br>接下来开始我们的重构：<br><b><u>1.给每一个变量和函数重命名</u></b><br><b>重命名的方法是，让每一个变量或函数的意义明确，一目了然。</b><br>      如果你看到一个i，不要默认它是循环变量，给它取一个有意思的名字；<br>      如果你想给“对战”取一个变量名，不要这么写：dz。如果你写成fight，下一个读代码的人会对你感激不尽；<br>      如果insert函数是插入成绩，那么insertScore是一个更合适的函数名称；<br>      如果你的函数里，做了成绩查询和修改处理，那么用retrieveAndModifyScore来命名它；<br>      做完如此之后，如果你发现乃至<b>所有的注释都是多此一举</b>，那么恭喜你：Well done！<br><br><i><b>然后Run -&gt; Test，谨小慎微的确保我们的该步操作大功告成。</b></i><br><br> 接下来我们深入函数的内部，厘清那些让我们力不从心的复杂逻辑。<br><u><b>  2.改写if else逻辑</b></u><br>     繁多的if else，if中的if else，else中if else，这些庞大的逻辑块看上去就让人云山雾绕，那是是时候祭出重构公式来简化它了。<br>    重构的思路为：if和else的逻辑我们只能二选其一。<br>     对于if，我们可在if的逻辑块里加上一个return，表明我们执行完if之后，不再涉及else的代码。<br>     对于else，由于之前一部已确保if的逻辑执行后会返回，我们大可放心的将else的代码提出来，去掉else这个关键字。<br>     话不多说，直接上例子：<br><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">A</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">)</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">B</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"s\">\"Good\"</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">B</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"s\">\"Not too bad\"</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"s\">\"Just so so\"</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n<span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">A</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"o\">)</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">B</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">C</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">)</span>\n        <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"s\">\"Need improvement\"</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"s\">\"Need more improvement\"</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">B</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"s\">\"Have a chance to improve\"</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"s\">\"Too bad\"</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n</code></pre></div>这是一段重构前的代码，每每看到这里，都有一种给跪了的感觉。<br>于是第一步的重构开始了，我们的第一次，就从 else if ( m_Prop.A == 2 )开始，从去掉else开始。<br>这次重构后的代码如下，是一次简单的不能再简单的修改。<br><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">A</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">){</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">B</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"s\">\"Good\"</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">B</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"s\">\"Not too bad\"</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"s\">\"Just so so\"</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">A</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"o\">)</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">B</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">C</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">)</span>\n        <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"s\">\"Need improvement\"</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"s\">\"Need more improvement\"</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">B</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"s\">\"Have a chance to improve\"</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"s\">\"Too bad\"</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n</code></pre></div>以此类推的重构后，得到如下代码：<br><br><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">A</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">){</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">B</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"s\">\"Good\"</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">B</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"s\">\"Not too bad\"</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n     <span class=\"k\">return</span> <span class=\"s\">\"Just so so\"</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">A</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"o\">)</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">B</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">C</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">)</span>\n        <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"s\">\"Need improvement\"</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"k\">return</span> <span class=\"s\">\"Need more improvement\"</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span> <span class=\"n\">m_Prop</span><span class=\"o\">.</span><span class=\"na\">B</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"o\">)</span>\n    <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"s\">\"Have a chance to improve\"</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">return</span> <span class=\"s\">\"Too bad\"</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n</code></pre></div><br>     如果<b>重构后的代码再也不见else，而逻辑上你很清楚与重构前相等</b>，那么恭喜你，这一步也完成了！<br><br><i><b>在每一次if else的修改后，</b></i><i><b>Run -&gt; Test，谨小慎微的确保我们的该步操作大功告成。</b></i><br><br><br><i>--------------------------------------</i><i>----</i><i>--</i>更新于2015/05/11<i>--------------------------------------</i><i>----</i><i>--</i><br><br>感谢大家热情的反馈。上周因为换工作的事没来得及更新，换工作后白天也不能上外网，我将尽量利用晚上的时间，在这周之内更完余下的部分。<br>今天探讨的是<b>去除重复</b>。<br><br>言归正传之前，继续说说 2.改写if else逻辑。<br>记得大学学谭总的C语言，教材上仿佛提到过：一个函数只能有一个出口。前面提到if之后立即return，似乎有违此理。<br>好在这么写并不违背语法，于是我也可以斗胆谈谈这么做的初衷：<br>1.可读性<br>当函数中出现任一一个return，即意味着这个分支到此为止。这样一个个return，将一块块的逻辑分支分段。读代码的人只需专心理解每一段的逻辑，而不必耗费精力，深挖该段逻辑之后是否还有额外的处理--因为我们的代码已经return了。<br>2.避免误修改<br>诚然我们可以在每个分支的结尾，将返回值赋值给一个新的变量，在函数的末尾返回这个变量。这样做保证了函数只有一次返回，并且该处还可以做一些诸如异常捕捉的统一处理。 <br>但是，但是这就没法保证，这个作为返回值的变量，不会在后续的处理中被意外的修改。俗话说夜长梦多，个人建议还是该出手时就出手，能返回时就返回。<br><br>关于这个话题，最后还是将评论里<a href=\"http://www.zhihu.com/people/tianzihou\" class=\"internal\">侯天资</a>兄的评论借花献佛：<br><blockquote>进入enum用switch-case逻辑模块+带现实意义的常量作为case的值进行捕捉和处理，这个也会比==1， !=2, &gt;=3这种if-else的逻辑判断的可读性好得多得多<br></blockquote>即使小小的if-else也需要我们足够努力，才能让读代码的人读的不费吹灰之力。<br><br>写到这里，想请大家思考个问题：当我们要做什么的时候，我们会想到if-else / switch？<br>是否我们是想基于不同的业务触发条件，来做不同的数据处理？亦或是判断对象的不同状态，来调用它不同的行为响应？<br>好吧，我想各位已经明白我想表达的。不明白的话，可以看看多态的定义。<br>有人的地方就有江湖，有分支的地方就可能改为多态。<br>关于这个话题，后面有机会再行展开。<br><br>当逻辑分支重构得不那么令人头疼的时候，我们来说说最令代码修改者闻风丧胆、谈之色变的问题--代码重复。<br><u><b>3.去除重复代码</b></u><br>过往的项目经验里，最让人头疼的便是修改重复代码，无论是因为需求变更，还是因为bug修改。当你用着关键字，一遍遍的CTRL+F，将找到之处再一遍遍的用类似的代码替换时，是否已经精疲力尽？更糟糕的是，你还会担心这样的查找，会不会有漏网之鱼。在某个可能无法用关键字找出的角落，会不会还有类似需要修改的地方，让你担惊受怕？<br>遗憾的是，很多programmer意识不到这样的无用功是因为代码重复产生的。<b>当一行行的代码用CTRL+C、CTRL+V的方式产生时，恶趣味的重复代码就注定生成了。</b><br><b>将重复的代码块浓缩为函数，使用一次就调用一次这个函数，直到</b><b>找不出类似代码</b>。<br><br>我相信有时候并不是程序员不知道如何解决前文提到的困扰，他们只是缺乏这么做的信心和勇气。<br>想想终将修改这些重复代码时，你的疲乏和担心。反正都要一个个的修改，何不如一个个的替换为函数。<i><b>用函数代替重复代码块，Run -&gt; Test，替换一处就测试一次，直到全部的重复代码都变为函数调用。</b></i><br><br><br><br><i>--------------------------------------</i><i>----</i><i>--</i>更新于2015/05/12<i>--------------------------------------</i><i>----</i><i>--</i><br>完成了变量、代码块的重构后，接下来谈谈如何重构一个函数。<br><b><u>4.让函数只做一件事情</u></b><br>我大学刚开始写C代码时，脑子里充满了如果XXX，就XXX，然后XXX的逻辑思维。<br>翻译成C语言，就是main里面一大段一气呵成的代码。后来觉着这样不对啊：没用到函数啊！于是乎将相关又相邻的代码提炼出来，取一个函数名，函数调用一用上，大功告成！<br>就好像下面这个修改密码的函数，咋一看逻辑清楚，似乎也没啥大问题：<br><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"kd\">public</span> <span class=\"n\">Boolean</span> <span class=\"nf\">ChangePassword</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">oldPassword</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">newPassword</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">oldPassword</span> <span class=\"o\">=</span> <span class=\"n\">EncodeHelper</span><span class=\"o\">.</span><span class=\"na\">MD5</span><span class=\"o\">(</span><span class=\"n\">oldPassword</span><span class=\"o\">.</span><span class=\"na\">trim</span><span class=\"o\">());</span>\n    <span class=\"n\">newPassword</span> <span class=\"o\">=</span> <span class=\"n\">EncodeHelper</span><span class=\"o\">.</span><span class=\"na\">MD5</span><span class=\"o\">(</span><span class=\"n\">newPassword</span><span class=\"o\">.</span><span class=\"na\">trim</span><span class=\"o\">());</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">(!</span><span class=\"n\">oldPassword</span><span class=\"o\">.</span><span class=\"na\">Equals</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">GetStudent</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"o\">).</span><span class=\"na\">LoginPassword</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n\t <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\t\n    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">UpdateStudent</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Student</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">newPassword</span><span class=\"o\">));</span>\n<span class=\"o\">}</span>\n</code></pre></div><br>可是，若后续要修改密码的验证逻辑，我们还能否记得，在ChangePassword的函数里，留有一行小小的if语句必须修改？<br><b>重构函数的方法，也是函数分割的基准：一个函数一次只能做一件事。</b><br>而一个函数一次能做的，有且仅有下面三件事～～之一：<br><b>1.查询</b><br><b>2.修改</b><br><b>3.调用上述两个过程</b><br>按照这个思路，重构上面的代码：<br><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"kd\">public</span> <span class=\"n\">Boolean</span> <span class=\"nf\">ChangePassword</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">oldPassword</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">newPassword</span><span class=\"o\">){</span>\n    <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">ValidateOldPassword</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">oldPassword</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">SaveNewPassword</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">newPassword</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">private</span> <span class=\"n\">Boolean</span> <span class=\"nf\">ValidateOldPassword</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">oldPassword</span><span class=\"o\">){</span>\n    <span class=\"n\">oldPassword</span> <span class=\"o\">=</span> <span class=\"n\">EncodeHelper</span><span class=\"o\">.</span><span class=\"na\">MD5</span><span class=\"o\">(</span><span class=\"n\">oldPassword</span><span class=\"o\">.</span><span class=\"na\">trim</span><span class=\"o\">());</span>\n    <span class=\"k\">return</span> <span class=\"n\">oldPassword</span><span class=\"o\">.</span><span class=\"na\">Equals</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">GetStudent</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"o\">).</span><span class=\"na\">LoginPassword</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">private</span> <span class=\"n\">Boolean</span> <span class=\"nf\">SaveNewPassword</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">newPassword</span><span class=\"o\">){</span>\n    <span class=\"n\">newPassword</span> <span class=\"o\">=</span> <span class=\"n\">EncodeHelper</span><span class=\"o\">.</span><span class=\"na\">MD5</span><span class=\"o\">(</span><span class=\"n\">newPassword</span><span class=\"o\">.</span><span class=\"na\">trim</span><span class=\"o\">());</span>\n    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">UpdateStudent</span><span class=\"o\">((</span><span class=\"k\">new</span> <span class=\"n\">Student</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">newPassword</span><span class=\"o\">)));</span>\n<span class=\"o\">}</span>\n</code></pre></div><br>完成上述重构后，<b>每个函数体中的代码逻辑，一定是围绕着函数名所示的功能，绝无多余。</b><br>函数一次只做一件事，至少有如下2点好处：<br>1.可读性强<br>   我们甚至不用深入函数体，只浏览函数名就能理解其逻辑意义。<br>2.便于维护修改<br>   上面的例子中，若要修改密码的验证逻辑，我们只需修改ValidateOldPassword()即可。<br><br>此外，功能单一，划分维度细小的函数也有助于发现代码中的漏洞。<br>例如下面的代码展示了一个游戏在服务器端，是如何返回PVP画面显示用的JSON：<br><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"c1\">//fightHistories：从PVP表中获得的记录列表</span>\n<span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getPVPResult</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">userId</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">rivalId</span><span class=\"o\">,</span> <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">FightHistoryDao</span><span class=\"o\">&gt;</span> <span class=\"n\">fightHistories</span><span class=\"o\">){</span>\n    <span class=\"n\">String</span> <span class=\"n\">myProfile</span> <span class=\"o\">=</span> <span class=\"n\">getMyProfile</span><span class=\"o\">(</span><span class=\"n\">userId</span><span class=\"o\">);</span>\n    <span class=\"n\">String</span> <span class=\"n\">rivalProfile</span> <span class=\"o\">=</span> <span class=\"n\">getRivalProfile</span><span class=\"o\">(</span><span class=\"n\">rivalId</span><span class=\"o\">);</span>\n    <span class=\"n\">String</span> <span class=\"n\">fightHistory</span> <span class=\"o\">=</span> <span class=\"n\">getFightHistories</span><span class=\"o\">(</span><span class=\"n\">fightHistories</span><span class=\"o\">);</span>\n    <span class=\"k\">return</span> <span class=\"n\">generateJsonForPVPResult</span><span class=\"o\">(</span><span class=\"n\">myProfile</span><span class=\"o\">,</span> <span class=\"n\">rivalProfile</span><span class=\"o\">,</span> <span class=\"n\">fightHistory</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"nf\">getFightHistories</span><span class=\"o\">(</span><span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">FightHistoryDao</span><span class=\"o\">&gt;</span> <span class=\"n\">fightHistoryDaos</span><span class=\"o\">){</span>\n    <span class=\"k\">for</span><span class=\"o\">(</span><span class=\"n\">FightHistoryDao</span> <span class=\"n\">oneFightScore</span> <span class=\"n\">in</span> <span class=\"n\">fightHistoryDaos</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">//{取得对战时间}</span>\n        <span class=\"c1\">//{取得转化为百分数后的分数}</span>\n        <span class=\"c1\">//{取得作战详细｝</span>\n<span class=\"o\">}</span>\n</code></pre></div>这段代码若是按照上述的方法进行重构分析，在第1和第4步是能够发现潜在的漏洞的：<br><blockquote>在getFightHistories()中，{取得转化为百分数后的分数}做了不止一件事：<br>既将画面显示用的分数取出，做了格式转换；<br>同时由于oneFightScore是List中的一个对象，因而悄无声息地修改了fightHistories中记录的值。</blockquote><p>getFightHistories这个函数既查询了数据，又修改了数据。更糟糕的是，单单看这个函数名，我们很难想到它修改了fightHistories。</p><p>若后续代码修改，调用getFightHistories之后，再次使用了已被修改过的fightHistories变量，产生不可预料的结果就不足为奇了。</p><p>为了避免上述问题，请严格按照<b>一次只做一事的标准分割函数</b>，并且参数传递时<b>尽量使用immutable变量</b>。</p><br><p><i><b>然后Run -&gt; Test，保证每分割出一个函数，中间的调用和返回都准确无误。</b></i></p><br><p><i>--------------------------------------</i><i>----</i><i>--</i>更新于2015/05/14<i>--------------------------------------</i><i>----</i><i>--</i><br></p><p><b><u>5.减少函数参数</u></b></p><p>公用函数的参数越多，调用时了解的细节必须越多，不利于函数的公用；<br></p><p>另一方面，参数越多也就意味着变数越大。当与传参有关的逻辑发生变化时，拥有多个参数的函数，总是让人顾虑重重。</p><p>减少函数参数具体的办法有：</p><p>①函数参数 -&gt; context变量（如cookie、session）</p><p>②函数参数 -&gt; TABLE字段</p><p>③<b>函数参数</b><b> -&gt; 提取类参</b></p><p>④<b>函数参数</b><b> -&gt; 公共变量</b></p><p>这里主要讲讲③和④，<br></p><p>所谓类参，就是将‘类“作为参数。比如说代码里，有多个函数都有<b>一些固定搭配的参数，就可以将他们组合成一个类（或结构体）</b>，从而达到减少参数的目的。</p><p>例如你在不止一个函数调用中见到过id、password这种搭配。那么就可以将他们组成一个类，取一个合适的名字，如user。</p><p>俗话说不是一家人，不进一家门。这几个参数既然搭配出现，不如就让他们在一起吧。</p><br><p>至于第④点：公共变量。以上面重构后的代码为例，目前重构后的代码有三个函数，分别为：</p><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"kd\">public</span> <span class=\"n\">Boolean</span> <span class=\"nf\">ChangePassword</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">oldPassword</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">newPassword</span><span class=\"o\">)</span>\n<span class=\"kd\">private</span> <span class=\"n\">Boolean</span> <span class=\"nf\">ValidateOldPassword</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">oldPassword</span><span class=\"o\">)</span>\n<span class=\"kd\">private</span> <span class=\"n\">Boolean</span> <span class=\"nf\">SaveNewPassword</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">newPassword</span><span class=\"o\">)</span>\n</code></pre></div><p>这三个函数的参数虽然各有不同，但实质都是围绕三个变量来处理：</p><p>int id, String oldPassword, String newPassword</p><p>因此我们将这三个<b>参数作为公共变量提取出来，改为类变量。将使用这些参数的函数作为类的方法，去掉函数参数，改为直接使用类变量</b>。重构后的代码为：</p><br><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Student</span> <span class=\"o\">{</span>\n\t<span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">id</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">oldPassword</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">newPassword</span><span class=\"o\">;</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"nf\">Student</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">password</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">id</span> <span class=\"o\">=</span> <span class=\"n\">id</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">oldPassword</span> <span class=\"o\">=</span> <span class=\"n\">password</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">newPassword</span> <span class=\"o\">=</span> <span class=\"n\">password</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"n\">Boolean</span> <span class=\"nf\">ChangePassword</span><span class=\"o\">(){</span>\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">ValidateOldPassword</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"k\">return</span> <span class=\"n\">SaveNewPassword</span><span class=\"o\">();</span>\n\t\t<span class=\"o\">}</span>\n\t\t<span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"kd\">private</span> <span class=\"n\">Boolean</span> <span class=\"nf\">ValidateOldPassword</span><span class=\"o\">(){</span>\n\t\t<span class=\"n\">oldPassword</span> <span class=\"o\">=</span> <span class=\"n\">EncodeHelper</span><span class=\"o\">.</span><span class=\"na\">MD5</span><span class=\"o\">(</span><span class=\"n\">oldPassword</span><span class=\"o\">.</span><span class=\"na\">trim</span><span class=\"o\">());</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">oldPassword</span><span class=\"o\">.</span><span class=\"na\">Equals</span><span class=\"o\">(</span><span class=\"n\">GetStudent</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"o\">).</span><span class=\"na\">LoginPassword</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"kd\">private</span> <span class=\"n\">Boolean</span> <span class=\"nf\">SaveNewPassword</span><span class=\"o\">(){</span>\n\t\t<span class=\"n\">newPassword</span> <span class=\"o\">=</span> <span class=\"n\">EncodeHelper</span><span class=\"o\">.</span><span class=\"na\">MD5</span><span class=\"o\">(</span><span class=\"n\">newPassword</span><span class=\"o\">.</span><span class=\"na\">trim</span><span class=\"o\">());</span>\n\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">UpdateStudent</span><span class=\"o\">((</span><span class=\"k\">new</span> <span class=\"n\">Student</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">newPassword</span><span class=\"o\">)));</span>\n\t<span class=\"o\">}</span> \n\n        <span class=\"c1\">//其余部分略</span>\n<span class=\"o\">}</span>\n</code></pre></div><br><p><b>通过提取类参、将公共变量改为类变量，使函数参数尽可能减少，越少越好。</b></p><br><p><b><i>这样</i></b><b><i>每</i></b><b><i>重构一次函数，就修改相应的调用语句。然后</i></b><i><b>Run -&gt; Test，保证每次调用都结果不变。</b></i></p><br><p>++++++++++++++++我是做总结的分割线++++++++++++++++</p><p>到这里已经谈了关于变量、代码块、以及函数的重构方法。所有的这些重构，说到底都是为了将函数写漂亮。那什么是漂亮的函数？我的目标是：</p><ol><li>每个函数每次只做一件事<br></li><li>将函数的处理流程和具体实现分开<br></li></ol><p>   例如下面的代码，既描述了更改密码的处理流程，又描述了验证的具体实现。</p><p>   需要将处于不同的层级的两块代码分开。</p><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"kd\">public</span> <span class=\"n\">Boolean</span> <span class=\"nf\">ChangePassword</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">oldPassword</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">newPassword</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">oldPassword</span> <span class=\"o\">=</span> <span class=\"n\">EncodeHelper</span><span class=\"o\">.</span><span class=\"na\">MD5</span><span class=\"o\">(</span><span class=\"n\">oldPassword</span><span class=\"o\">.</span><span class=\"na\">trim</span><span class=\"o\">());</span>\n    <span class=\"n\">newPassword</span> <span class=\"o\">=</span> <span class=\"n\">EncodeHelper</span><span class=\"o\">.</span><span class=\"na\">MD5</span><span class=\"o\">(</span><span class=\"n\">newPassword</span><span class=\"o\">.</span><span class=\"na\">trim</span><span class=\"o\">());</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">(!</span><span class=\"n\">oldPassword</span><span class=\"o\">.</span><span class=\"na\">Equals</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">GetStudent</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"o\">).</span><span class=\"na\">LoginPassword</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n\t <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\t\n    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">UpdateStudent</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">Student</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">newPassword</span><span class=\"o\">));</span>\n<span class=\"o\">}</span>\n</code></pre></div>    3.  函数读起来应该像书的目录<br><p>   我们读目录时，先看共有多少章节，再看一个章节里分了哪些小节，最后可根据索引去查询具体内容。</p><p>   于是我写的函数大体这样：</p><p>    1.最高层次的函数描述处理流程，流程中的每一步就是一个函数    -&gt; 介绍章节</p><p>    2. 1中每一步描述处理方法，每一个方法就是一个函数                 -&gt; 章节里分小节</p><p>    3. 2中的每一个函数描述具体算法                                               -&gt; 具体内容</p><p>    这样读代码时，可以先从【1流程】看起，不必纠结具体的处理方法；</p><p>     看懂后再了解【2方法】，不必拘泥于算法；</p><p>     逐层升入，以此类推...</p><br><p>另外有一些个人的经验是：</p><p>1.不要有else；</p><p>2.将if、while、for里的代码块用函数代替；</p><p>3.尽量少的函数参数；</p><p>4.不要怕函数体短小（1~15行就行）；</p><p>   ※短小的函数读起来轻而易举，同时能将修改限定在最小范围</p><br><p><i>--------------------------------------</i><i>----</i><i>--</i>更新于2015/05/16<i>--------------------------------------</i><i>----</i><i>--</i><br></p><p>函数的重构讲完了，来谈谈如何重构类。</p><p>这个问题可以分解为：重组一个类和分解一个类。</p><p><b><u>6.重组一个类</u></b></p><p>类是怎样划分的？也许是基于你头脑中一个实体的映射，也许是基于UML的一个建模？</p><p>但既有的代码用起来，也有这样那样的不顺手。是时候祭出法宝，重新审视既有的函数和类了。</p><p>这个办法在重构第5法中提到过：尽可能减少函数的参数。</p><p><b>规则1:</b></p><blockquote><p>          当你发现函数的多数参数，是另一个类A的成员变量 </p><p>   －&gt; 将该函数从现有类抽离出来，改造成为A的方法</p></blockquote><p><b>规则2:</b></p><blockquote><p>          当你发现若干函数有相同的参数，且无有关的类变量与之对应</p><p>   －&gt; 重新定义一个类，将这些函数作为类方法，其相同的行参作为类的成员变量</p></blockquote><p>重构以后发现成员方法的参数减少，成员变量在方法体内被充分使用。</p><br><p><i><b>然后Run -&gt; Test，确保每次函数的变化（参数变更、类间移动）都不影响其output。</b></i></p><br><p><b><u>7.分解一个类</u></b></p><p>在函数重构中，一直有个概念：函数一次只能做一事。</p><p>同样的，一个类如果责任过多，做了太多太多事，也不利于代码的维护。</p><p><b>如果你发现类的某些成员变量，只被部分方法所使用，而另一些变量，被其他方法所使用，就意味这你可以分解这个类。</b></p><p>以一个例子来说明重构的方法：</p><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"o\">{</span>\n\t<span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">officeAreaCode</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">officeNumber</span><span class=\"o\">;</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getName</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getTelephoneNumber</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"(\"</span> <span class=\"o\">+</span> <span class=\"n\">officeAreaCode</span> <span class=\"o\">+</span> <span class=\"s\">\")\"</span> <span class=\"o\">+</span> <span class=\"n\">officeNumber</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getOfficeAreaCode</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">officeAreaCode</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setOfficeAreaCode</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">officeAreaCode</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">officeAreaCode</span> <span class=\"o\">=</span> <span class=\"n\">officeAreaCode</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getOfficeNumber</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">officeNumber</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setOfficeNumber</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">officeNumber</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">officeNumber</span> <span class=\"o\">=</span> <span class=\"n\">officeNumber</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div><p>这段代码中，name只被getName()使用，其余的成员变量和方法看起来另成一派。于是我们将Person类<b>拆分为两个</b>：</p><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"o\">{</span>\n\t<span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getName</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n<span class=\"o\">}</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">TelephonePhone</span> <span class=\"o\">{</span>\n\t<span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">officeAreaCode</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">officeNumber</span><span class=\"o\">;</span>\n\n\t<span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getTelephoneNumber</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"(\"</span> <span class=\"o\">+</span> <span class=\"n\">officeAreaCode</span> <span class=\"o\">+</span> <span class=\"s\">\")\"</span> <span class=\"o\">+</span> <span class=\"n\">officeNumber</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getOfficeAreaCode</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">officeAreaCode</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setOfficeAreaCode</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">officeAreaCode</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">officeAreaCode</span> <span class=\"o\">=</span> <span class=\"n\">officeAreaCode</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getOfficeNumber</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">officeNumber</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setOfficeNumber</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">officeNumber</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">officeNumber</span> <span class=\"o\">=</span> <span class=\"n\">officeNumber</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\t\n<span class=\"o\">}</span>\n</code></pre></div><p>这样划分后两个类，责任划分清晰明了。 但人总得有个电话号码吧，所以还得把两者的联系加上：</p><br><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"o\">{</span>\n\t<span class=\"kd\">private</span> <span class=\"n\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"n\">TelephonePhone</span> <span class=\"n\">telephonePhone</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">TelephonePhone</span><span class=\"o\">();</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getName</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getTelephoneNumber</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">telephonePhone</span><span class=\"o\">.</span><span class=\"na\">getTelephoneNumber</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div><br><br>在Person类中添加telephonePhone成员变量，<b>建立从旧类到新类的连接关系</b>。<br><br><i><b>每次搬移一个变量或方法时，Run -&gt; Test。</b></i><br><br><br><b><u>8.消除类的重复</u></b><br>经过这么多的重构尝试，你应该注意到重复是编码的大忌。<br>函数中重复的代码块可变为函数，那么类中重复的变量和方法呢？Bingo，就是父类（或接口）！<br><b>规则：</b><br><blockquote>1.建立或修改父类，添加类中重复的变量和方法名；<br>2.将添加的变量或方法限定为protected或public；<br>3.之前的类继承该父类；<br>4.如果重复的方法处理逻辑一致，就在父类中实现该方法，视情况添加final限定；<br>5.如果重复的方法处理不一致，则父类中只声明方法名（或提取成接口）。视情况添加abstract限定；<br>6.移出子类中的重复变量和函数；</blockquote>按照这种方式越重构下去，会发现父类越像是一个模版：把控了业务处理的流程，把具体的算法逻辑，交由子类重载。 －－ 这便是设计模式中的［模版模式］。<br><br><b><i>子类每移出一次重复变量和函数，Run -&gt; Test，确保子类对父类相关字段或方法的正确使用。</i></b><br><br><br>个人对重构方法的理解大体就是如此了。<br>在这篇文章的最后，再一次和各位分享我对重构的认识：<br><blockquote><b>1.重构是个持续的过程</b><br>   并非等到程序无法控制的最后，才进行重构。恰恰相反，从你写第一个函数、第一个类开始，就想着重构它吧。越早开始重构，就会让项目开发越早进入良性循环，避免后续莫名奇妙的错误，以及大量耗时的修改。<br><b>2.重构将更深入理解编程</b><br>   审视重构后的代码，会发现在不知不觉中，用到了抽象，用到了多态，用到了设计模式。这些编程中的概念，我们往往只知道是什么，却不知道它们从何而来、为何而去？重构的过程就像一次拾遗，让代码清晰的揭示：这些概念是因何产生，以及它们被使用的场景。<br>－－人类最初数数时，只知道加法。后来它们总结出了乘法，应用在生活里简化了计算。一次次的重构，就是不断总结、孰能生巧的过程。我们回顾重构后的代码，给它分类，叫它XX模式。时间久了，编程遇到类似的需求时，就会自然而然想使用该模式。</blockquote><br>在过去的项目中，见识过糟糕的代码是如何带来灾难性的后果的：要不就是程序产生莫名奇妙的错误，要不就是一次小小的修改就牵一发动全身；<br>而另一方面，我们也曾体会过重构带来的美妙：一切都是简洁易修改的。往往我们面对一次大的逻辑变动，经调查后才发现，原来只需改一个函数，一切都会迎刃而解。<br>Wow，重构让一切的代码，都变得刚刚好！<br><br>++++++++++++++++我是有彩蛋的分割线++++++++++++++++<br>前前前回书有说到，有if、else的地方就有可能使用多态。举一个例子，JAVA的对象在未创建时为NULL，对一个NULL对象操作会引发系统错误。因而在代码中常需要对一个对象是否为NULL进行判断，如：<br><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"kd\">public</span> <span class=\"n\">Book</span> <span class=\"nf\">getBook</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">id</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t<span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">id</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"n\">Book</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">\"Design Pattern\"</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</code></pre></div><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"n\">Book</span> <span class=\"n\">book</span> <span class=\"o\">=</span> <span class=\"n\">getBook</span><span class=\"o\">(-</span><span class=\"mi\">1</span><span class=\"o\">);</span>\n<span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">book</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n   <span class=\"n\">book</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">();</span>\t\t\t\n<span class=\"o\">}</span>\n</code></pre></div><br>book != null 和 book == null成了两个分支。我们可以：<br>1.添加Book的一个NULL子类<br>2.在创建Book对象时，视情况创建NULL子类<br>3.在调用Book方法的逻辑处利用多态，去掉对象是否为null的判断<br><br>重构后的代码变为：<br><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"c1\">//添加的Null对象</span>\n<span class=\"kd\">public</span> <span class=\"n\">Class</span> <span class=\"n\">NullBook</span> <span class=\"kd\">extends</span> <span class=\"n\">Book</span> <span class=\"o\">{</span>\n        <span class=\"kd\">public</span> <span class=\"nf\">NullBook</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n        <span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"n\">String</span> <span class=\"nf\">getName</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"\"</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>//创建Book对象\npublic Book getBook(int id) {\n\tif (id &lt; 0) {\n\t\treturn new NullBook();\n\t}\n\treturn new Book(1, \"Design Pattern\", 100);\n}\n</code></pre></div><div class=\"highlight\"><pre><code class=\"language-java\"><span></span><span class=\"c1\">//调用Book方法时去掉null判断</span>\n<span class=\"n\">Book</span> <span class=\"n\">book</span> <span class=\"o\">=</span> <span class=\"n\">getBook</span><span class=\"o\">(-</span><span class=\"mi\">1</span><span class=\"o\">);</span>  \n<span class=\"n\">book</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">();</span> \n</code></pre></div><br>&lt;以上&gt;", "人工智能、机器学习和深度学习的区别？": "<p>人工智能的浪潮正在席卷全球，诸多词汇时刻萦绕在我们耳边：人工智能（Artificial Intelligence）、机器学习（Machine Learning）、深度学习（Deep Learning）。不少人对这些高频词汇的含义及其背后的关系总是似懂非懂、一知半解。</p><p>为了帮助大家更好地理解人工智能，这篇文章用最简单的语言解释了这些词汇的含义，理清它们之间的关系，希望对刚入门的同行有所帮助。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a385117fd08095b522d10a3b9827d4b7_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"503\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic2.zhimg.com/v2-a385117fd08095b522d10a3b9827d4b7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='800'%20height='503'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"503\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"800\" data-original=\"https://pic2.zhimg.com/v2-a385117fd08095b522d10a3b9827d4b7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a385117fd08095b522d10a3b9827d4b7_720w.jpg?source=54b3c3a5\"><figcaption>图一 人工智能的应用</figcaption></figure><h2>人工智能：从概念提出到走向繁荣</h2><p>1956年，几个计算机科学家相聚在达特茅斯会议，提出了“人工智能”的概念，梦想着用当时刚刚出现的计算机来构造复杂的、拥有与人类智慧同样本质特性的机器。其后，人工智能就一直萦绕于人们的脑海之中，并在科研实验室中慢慢孵化。之后的几十年，人工智能一直在两极反转，或被称作人类文明耀眼未来的预言，或被当成技术疯子的狂想扔到垃圾堆里。直到2012年之前，这两种声音还在同时存在。</p><p>2012年以后，得益于数据量的上涨、运算力的提升和机器学习新算法（深度学习）的出现，人工智能开始大爆发。据领英近日发布的《全球AI领域人才报告》显示，截至2017年一季度，基于领英平台的全球AI（人工智能）领域技术人才数量超过190万，仅国内人工智能人才缺口达到500多万。</p><p>人工智能的研究领域也在不断扩大，图二展示了人工智能研究的各个分支，包括专家系统、机器学习、进化计算、模糊逻辑、计算机视觉、自然语言处理、推荐系统等。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e358e127afbe5963f5b8622e2dd5b49f_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"390\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-e358e127afbe5963f5b8622e2dd5b49f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='390'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"390\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-e358e127afbe5963f5b8622e2dd5b49f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e358e127afbe5963f5b8622e2dd5b49f_720w.jpg?source=54b3c3a5\"><figcaption>图二 人工智能研究分支</figcaption></figure><p>但目前的科研工作都集中在弱人工智能这部分，并很有希望在近期取得重大突破，电影里的人工智能多半都是在描绘强人工智能，而这部分在目前的现实世界里难以真正实现（通常将人工智能分为弱人工智能和强人工智能，前者让机器具备观察和感知的能力，可以做到一定程度的理解和推理，而强人工智能让机器获得自适应能力，解决一些之前没有遇到过的问题）。</p><p>弱人工智能有希望取得突破，是如何实现的，“智能”又从何而来呢？这主要归功于一种实现人工智能的方法——机器学习。</p><h2>机器学习：一种实现人工智能的方法</h2><p>机器学习最基本的做法，是使用算法来解析数据、从中学习，然后对真实世界中的事件做出决策和预测。与传统的为解决特定任务、硬编码的软件程序不同，机器学习是用大量的数据来“训练”，通过各种算法从数据中学习如何完成任务。</p><p>举个简单的例子，当我们浏览网上商城时，经常会出现商品推荐的信息。这是商城根据你往期的购物记录和冗长的收藏清单，识别出这其中哪些是你真正感兴趣，并且愿意购买的产品。这样的决策模型，可以帮助商城为客户提供建议并鼓励产品消费。</p><p>机器学习直接来源于早期的人工智能领域，传统的算法包括决策树、聚类、贝叶斯分类、支持向量机、EM、Adaboost等等。从学习方法上来分，机器学习算法可以分为监督学习（如分类问题）、无监督学习（如聚类问题）、半监督学习、集成学习、深度学习和强化学习。</p><p>传统的机器学习算法在指纹识别、基于Haar的人脸检测、基于HoG特征的物体检测等领域的应用基本达到了商业化的要求或者特定场景的商业化水平，但每前进一步都异常艰难，直到深度学习算法的出现。</p><h2>深度学习：一种实现机器学习的技术</h2><p>深度学习本来并不是一种独立的学习方法，其本身也会用到有监督和无监督的学习方法来训练深度神经网络。但由于近几年该领域发展迅猛，一些特有的学习手段相继被提出（如残差网络），因此越来越多的人将其单独看作一种学习的方法。</p><p>最初的深度学习是利用深度神经网络来解决特征表达的一种学习过程。深度神经网络本身并不是一个全新的概念，可大致理解为包含多个隐含层的神经网络结构。为了提高深层神经网络的训练效果，人们对神经元的连接方法和激活函数等方面做出相应的调整。其实有不少想法早年间也曾有过，但由于当时训练数据量不足、计算能力落后，因此最终的效果不尽如人意。</p><p>深度学习摧枯拉朽般地实现了各种任务，使得似乎所有的机器辅助功能都变为可能。无人驾驶汽车，预防性医疗保健，甚至是更好的电影推荐，都近在眼前，或者即将实现。</p><h2>三者的区别和联系</h2><p>机器学习是一种实现人工智能的方法，深度学习是一种实现机器学习的技术。我们就用最简单的方法——同心圆，可视化地展现出它们三者的关系。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-cdbef7f0385b59656eaa9df2a75d890e_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"614\" data-rawheight=\"324\" class=\"origin_image zh-lightbox-thumb\" width=\"614\" data-original=\"https://pic2.zhimg.com/v2-cdbef7f0385b59656eaa9df2a75d890e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='614'%20height='324'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"614\" data-rawheight=\"324\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"614\" data-original=\"https://pic2.zhimg.com/v2-cdbef7f0385b59656eaa9df2a75d890e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-cdbef7f0385b59656eaa9df2a75d890e_720w.jpg?source=54b3c3a5\"><figcaption>图三 三者关系示意图</figcaption></figure><p>目前，业界有一种错误的较为普遍的意识，即“<b>深度学习最终可能会淘汰掉其他所有机器学习算法</b>”。这种意识的产生主要是因为，当下深度学习在计算机视觉、自然语言处理领域的应用远超过传统的机器学习方法，并且媒体对深度学习进行了大肆夸大的报道。</p><p>深度学习，作为目前最热的机器学习方法，但并不意味着是机器学习的终点。起码目前存在以下问题：</p><p><b>1.</b> 深度学习模型需要大量的训练数据，才能展现出神奇的效果，但现实生活中往往会遇到小样本问题，此时深度学习方法无法入手，传统的机器学习方法就可以处理；</p><p><b>2.</b> 有些领域，采用传统的简单的机器学习方法，可以很好地解决了，没必要非得用复杂的深度学习方法；</p><p><b>3.</b> 深度学习的思想，来源于人脑的启发，但绝不是人脑的模拟，举个例子，给一个三四岁的小孩看一辆自行车之后，再见到哪怕外观完全不同的自行车，小孩也十有八九能做出那是一辆自行车的判断，也就是说，人类的学习过程往往不需要大规模的训练数据，而现在的深度学习方法显然不是对人脑的模拟。</p><p>深度学习大佬 Yoshua Bengio 在 Quora 上回答一个类似的问题时，有一段话讲得特别好，这里引用一下，以回答上述问题：</p><blockquote>Science is NOT a battle, it is a collaboration. We all build on each other's ideas. Science is an act of love, not war. Love for the beauty in the world that surrounds us and love to share and build something together. That makes science a highly satisfying activity, emotionally speaking!</blockquote><p>这段话的大致意思是，科学不是战争而是合作，任何学科的发展从来都不是一条路走到黑，而是同行之间互相学习、互相借鉴、博采众长、相得益彰，站在巨人的肩膀上不断前行。机器学习的研究也是一样，你死我活那是邪教，开放包容才是正道。</p><p>结合机器学习2000年以来的发展，再来看Bengio的这段话，深有感触。进入21世纪，纵观机器学习发展历程，研究热点可以简单总结为2000-2006年的流形学习、2006年-2011年的稀疏学习、2012年至今的深度学习。未来哪种机器学习算法会成为热点呢？深度学习三大巨头之一吴恩达曾表示，“在继深度学习之后，迁移学习将引领下一波机器学习技术”。但最终机器学习的下一个热点是什么，谁又能说得准呢。</p><hr><p>深蓝学院（<a href=\"https://link.zhihu.com/?target=https%3A//www.shenlanxueyuan.com/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">shenlanxueyuan.com/</span><span class=\"invisible\"></span></a>）是专注于人工智能的在线教育平台，致力于构建前沿科技课程培养体系的业界标准，涵盖机器学习、计算机视觉、智能语音、智能机器人等领域。</p>", "如何处理 Python 入门难以进步的现象？": "今天本来以为在评论里互相探讨问题,没想到火药味这么大,后来看到答案才知道自己被喷了.作者在答案里喷完不爽又来评论里喷,也不知道为啥这么大的火气.<br><br>说明以下几点:<br>1. 写几个脚本,分享一下star的python代码,就叫装X,也挺无语了.<br>2. 刚写答案的时候题主还没有补充内容,看前半段的时候题主没有说是0基础,所以当时也没考虑题主0基础的情况.<br>3. 也不知道怎么看出我不理解函数式编程,面向对象,面向过程的概念了.<br><br>=================================<br>更新2015-03-20 13:50:24<br><br>lz可以问问自己为什么要编程?为什么要学python,不就是为用吗!!!<br>难道lz没有什么idea想要在电脑上实现,光学习脑子里根本记不住.<br><br>至于优秀的开源项目的确很有用,它都是好多人总结提炼成的,你可以想一想如果你要实现sqlmap你改怎么做,不是要你敲一遍,是让你理解它的思维.而且它的代码格式和习惯都是应当值得学习的.<br><br>比如我以前这么写:<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>if value &gt; 100:\n    value = 100\nif value &lt; 0:\n    value =0\n</code></pre></div>看到别人这么写:<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>max(min(value, 100), 0)\n</code></pre></div><br>再比如我原来这么写:<br><br><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">if</span> <span class=\"n\">value</span><span class=\"p\">:</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n</code></pre></div><br>后来我看到原来可以这么写:<br><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>a = 1 if value else 2\n</code></pre></div><br>我也是个大菜鸟,还在学习,我知道的就这么多了...<br><br><br>============================================<br>原稿<br><br>这里有个项目,每天一题,可以试着做一下  <a href=\"https://link.zhihu.com/?target=https%3A//github.com/Yixiaohan/show-me-the-code\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Yixiaohan/show-me-the-code · GitHub</a><br>外国的一个游戏网站,有中文翻译,具体没做过,不过看起来还挺好玩的 <a href=\"https://link.zhihu.com/?target=http%3A//www.checkio.org/station/home/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">http://www.checkio.org</a><br>还有就是 leetcode 里面有 python 的题目可以拿来练手<br><br>=============================================<br>更新 2015年02月06日20:53:46<br><br>从简单入手,说实话看书或者看视频有限,许多问题书上根本学不到,介绍一下自己写的帮题主打开一下思路.<br><br>项目一:远程关机<br>有时候有事情去不了实验室,实验室的机子也不能总开着啊,然后就写了个脚本,通过微博关实验室的电脑.<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/be8d19b6d828b58c56ff86526c1b445c_720w.jpg?source=54b3c3a5\" data-rawwidth=\"587\" data-rawheight=\"257\" class=\"origin_image zh-lightbox-thumb\" width=\"587\" data-original=\"https://pic1.zhimg.com/be8d19b6d828b58c56ff86526c1b445c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='587'%20height='257'&gt;&lt;/svg&gt;\" data-rawwidth=\"587\" data-rawheight=\"257\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"587\" data-original=\"https://pic1.zhimg.com/be8d19b6d828b58c56ff86526c1b445c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/be8d19b6d828b58c56ff86526c1b445c_720w.jpg?source=54b3c3a5\"></figure><br>地址: <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taizilongxu/weibo_robot\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">taizilongxu/weibo_robot · GitHub</a><br><br><b>项目二: douban.fm</b><br><br>有一天逛着 github 发现了这个:<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/1ce8ca9dad7bea215ba10d0eb2a628f4_720w.jpg?source=54b3c3a5\" data-rawwidth=\"796\" data-rawheight=\"539\" class=\"origin_image zh-lightbox-thumb\" width=\"796\" data-original=\"https://pic4.zhimg.com/1ce8ca9dad7bea215ba10d0eb2a628f4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='796'%20height='539'&gt;&lt;/svg&gt;\" data-rawwidth=\"796\" data-rawheight=\"539\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"796\" data-original=\"https://pic4.zhimg.com/1ce8ca9dad7bea215ba10d0eb2a628f4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/1ce8ca9dad7bea215ba10d0eb2a628f4_720w.jpg?source=54b3c3a5\"></figure>这个是 node.js 做的,自己也不太会,就拿 python 仿照着做了一个,一开始以为挺简单的,后来实际操作中发现还是有困难的,自己还是菜鸟,边学习边做, shell, 线程进程,同步异步,日志,异常,跨平台,重构优化,各种意想不到的 bug,包发布,还得自己抓 豆瓣的 API...不过最后还是可以用了<br><br>地址: <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taizilongxu/douban.fm\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">taizilongxu/douban.fm · GitHub</a><br><br><b>项目三:网站</b><br><br>自己收藏看的,一个简单网站论坛的 tornado 的源码 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/littlethunder/ustchacker.com\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">littlethunder/ustchacker.com · GitHub</a><br>这个是 the5fire 的 django blog <a href=\"https://link.zhihu.com/?target=https%3A//github.com/the5fire/django_selfblog\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">the5fire/django_selfblog · GitHub</a><br>还有个tango with django 的中文教程 <a href=\"https://link.zhihu.com/?target=http%3A//hackerxu.com/Twd/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Tango with Django 中文文档</a><br><br><br><br><br>一些比较小的项目,利于初学者能看懂的:<br><br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Flowerowl/ici\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Flowerowl/ici · GitHub</a> 在在终端上查询单词<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/bfontaine/term2048\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">bfontaine/term2048 · GitHub</a> 终端上的2048<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/np1/mps-youtube\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">np1/mps-youtube · GitHub</a> 终端上的 youtube<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/skyline75489/SimpleDNS\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">skyline75489/SimpleDNS · GitHub</a> A lightweight yet useful proxy DNS server powered by Python Twisted<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/binux/qiandao\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">binux/qiandao · GitHub</a> 每日定时签到<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jiffies/GouYong\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">jiffies/GouYong · GitHub</a> linux 下划词翻译<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/laiwei/thepast\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">laiwei/thepast · GitHub</a> 你好旧时光<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/DTVD/rainbowstream\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">DTVD/rainbowstream · GitHub</a> Terminal-based Twitter Client<br><br>还有一些收藏的用 python 写的开源项目:<br><br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/binux/pyspider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">binux/pyspider · GitHub</a> 一个可视化的爬虫<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/scrapy/scrapy\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">scrapy/scrapy · GitHub</a> python知名爬虫<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/mitsuhiko/flask\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">mitsuhiko/flask · GitHub</a> flask, web 微框架<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/reddit/reddit\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">reddit/reddit · GitHub</a> reddit网站源代码<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/tornadoweb/tornado\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">tornadoweb/tornado · GitHub</a> 知乎使用的 web 框架(异步)<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/kennethreitz/requests\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">kennethreitz/requests · GitHub</a> 给人用的HTTP<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/whtsky/WeRoBot\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">whtsky/WeRoBot · GitHub</a> 微信机器人框架<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/goagent/goagent\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">goagent/goagent · GitHub</a> 大名的goagent<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/sqlmapproject/sqlmap\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">sqlmapproject/sqlmap · GitHub</a> 注入神器<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/ipython/ipython\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ipython/ipython · GitHub</a> ipython<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/LiuLang/bcloud\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">LiuLang/bcloud · GitHub</a> 百度网盘 linux 客户端<br><br><br><br>最后还有一个 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/vinta/awesome-python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">vinta/awesome-python · GitHub</a> ,这个比较全了, awesome 系列.<br><br>先写到这,发现其他的再补充", "自学 Python 之后如果不去公司上班，自己一个人可以通过此技能挣什么钱？": "<p>一般这种问题都是培训班搞的，所以我就必须要来喷：</p><p><br></p><p><b>自学py入门对于一名高中及以上文化以上的人没任何难度，比你学会玩王者农药还简单。</b></p><p><br></p><p>就这样想躺赚？</p><p><br></p><p>你能用py做啥呀，扯呢！</p><p><br></p><p>做个黄站还是钓鱼站？淘宝源码5元，境外vps60元，域名55元，一站搞定。</p><p><br></p><p>做个外挂？精易论坛一堆大仙嗷嗷待哺呢。</p><p><br></p><p>做个量化交易？美元开户几十万本钱先不提，你先整好VPN再说。</p><p><br></p><p>做人工智能和数据分析？好好好，别扯，哪个客户需要你个个体户分析数据，？</p><p><br></p><p>知乎上这些年除了爬黄网和豆瓣，还搞出过什么好项目练手？没有！通通没有！</p><p><br></p><h2><b>都是培训班的逗你玩呢！</b></h2><p><br></p><p>年薪50万，呵呵，你给我？</p>", "GitHub 上有哪些优秀的 Python 爬虫项目？": "<p>有一些给你推荐一下，参考</p><a href=\"https://zhuanlan.zhihu.com/p/61289585\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-d09266547985b4c3d451f4811d9d2d4b_bh.jpg?source=54b3c3a5\" data-image-width=\"1366\" data-image-height=\"768\" class=\"internal\">龙鹏-言有三：【杂谈】GitHub上有哪些好用的爬虫(从Google百度，腾讯视频抖音，豆瓣知乎到不可描述)</a><h2><b>1、awesome-spider</b></h2><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>地址：https://github.com/facert/awesome-spider\n</code></pre></div><p>这是ID为facert的一个知乎工程师开源的，star6000+，内容如下：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ee612efef72b94132d89647c639e3bc3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"647\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-ee612efef72b94132d89647c639e3bc3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='647'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"647\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-ee612efef72b94132d89647c639e3bc3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ee612efef72b94132d89647c639e3bc3_720w.jpg?source=54b3c3a5\"></figure><p>这一款爬虫，里面搜集了<b>几乎所有可以爬取的中文网址，从知乎豆瓣到知网，抖音微博到QQ</b>，还有很多的不可描述的网站，你懂的。</p><h2><b>2、Nyspider</b></h2><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>地址：https://github.com/Nyloner/Nyspider\n</code></pre></div><p>这是ID为Nyloner的一个今日头条的工程师弄的，star1000+，风格与上面的项目大有不同。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d1fe68d7224635de408cb2255daeb889_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"815\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-d1fe68d7224635de408cb2255daeb889_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='815'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"815\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-d1fe68d7224635de408cb2255daeb889_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d1fe68d7224635de408cb2255daeb889_720w.jpg?source=54b3c3a5\"></figure><p>可以看出，都是各类网址。这很头条，跟这位小哥哥的工作内容估计有关系。</p><h2><b>3、awesome-python-login-model</b></h2><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>地址：https://github.com/CriseLYJ/awesome-python-login-model\n</code></pre></div><p>这是ID为CriseLYJ(职业不详)的用户，这个项目用于模拟各种网址登陆，也包含一些简单的爬虫，star6000+。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-23881da1d51a55470964ac2c13a3921e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"677\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-23881da1d51a55470964ac2c13a3921e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='677'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"677\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-23881da1d51a55470964ac2c13a3921e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-23881da1d51a55470964ac2c13a3921e_720w.jpg?source=54b3c3a5\"></figure><p>先从这个项目开始分析各大网站的登录方式，非常有用，可谓摸清对手再动手。</p><h2><b>4、python-spider</b></h2><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>地址：https://github.com/Jack-Cherish/python-spider\n</code></pre></div><p>这是ID为Jack-Cherish的东北大学的一个学生整理的学习python爬虫的资料，star6000+，包含不少的实战项目，非常适合想学习的朋友。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-90c45e61530577c29729981d6e119ffc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"939\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-90c45e61530577c29729981d6e119ffc_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='939'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"939\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-90c45e61530577c29729981d6e119ffc_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-90c45e61530577c29729981d6e119ffc_720w.jpg?source=54b3c3a5\"></figure><p>其他还有一些项目，不再一一介绍。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>https://github.com/jhao104/proxy_pool\nhttps://github.com/Ehco1996/Python-crawler\n</code></pre></div><p>--------------------------------------此处是分割线--------------------------------------</p><p>如果你是做图像的，我再推荐两个<b>功能强大，简单好用的图片和视频爬虫。</b>工具亲测长期有效，省去了很多找爬虫工具的时间，早用早好。</p><h2><b>1、Google，Baidu，Bing三大搜素引擎图片爬虫</b></h2><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>地址：https://github.com/sczhengyabin/Image-Downloader\n</code></pre></div><p>这个爬虫由ID为sczhengyabin的用户整理，可以按要求爬取百度、Bing、Google上的图片，我已经用了几年了，提供了非常人性化的GUI方便操作，使用方法如下：</p><p>使用python image_downloader_gui.py调用GUI界面，配置好参数(关键词，路径，爬取数目等)，关键词可以直接在这里输入也可以选择从txt文件中选择。</p><p>可以配置需要爬取的样本数目，这里一次爬了2000张，妥妥的3分钟搞定。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-6c7c2e967f3f1c37fc53274602f902a7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"927\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-6c7c2e967f3f1c37fc53274602f902a7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='927'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"927\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-6c7c2e967f3f1c37fc53274602f902a7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-6c7c2e967f3f1c37fc53274602f902a7_720w.jpg?source=54b3c3a5\"></figure><p>这个爬虫足够满足小型项目初始数据集的积累<b>(爬几千张高质量图片妥妥的)</b>，结果命名也非常整齐规范，<b>最大的优势就是稳定啊</b>，不会三天两天不能用了。</p><h2><b>2、各大视频网站爬虫</b></h2><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>地址：https://github.com/iawia002/annie\n</code></pre></div><p>由ID为iawia002的用户整理，Annie是一款以go语言编码的视频下载工具，使用便捷并<b>支持youtube，腾讯视频，抖音等多个网站视频和图像的下载</b>，收录站点如下，可以说是该有的都有的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-4d0ff269fd73daf35410fd25ab626e83_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"761\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-4d0ff269fd73daf35410fd25ab626e83_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='761'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"761\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-4d0ff269fd73daf35410fd25ab626e83_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-4d0ff269fd73daf35410fd25ab626e83_720w.jpg?source=54b3c3a5\"></figure><p>虽然这个项目可以下载图片，但是我们还是来用它下载视频吧，使用方法很简单：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>annie ［可选参数］http://…  (视频网址)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1b54219f73368d2d8d684e36e9360438_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"253\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-1b54219f73368d2d8d684e36e9360438_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='253'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"253\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-1b54219f73368d2d8d684e36e9360438_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1b54219f73368d2d8d684e36e9360438_720w.jpg?source=54b3c3a5\"></figure><p>视频会下载到当前目录，至于那些可选参数，赶紧去摸索吧。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-c5919430bad668693cb00c3826ba0f86_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"465\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-c5919430bad668693cb00c3826ba0f86_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='465'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"465\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-c5919430bad668693cb00c3826ba0f86_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-c5919430bad668693cb00c3826ba0f86_720w.jpg?source=54b3c3a5\"></figure><p></p>"}{"jupyter notebook 可以做哪些事情？": "<p>我会从下面4个方面详细聊聊，记得实践每一步，你将不仅了解什么是Jupyter notebook，而且还能轻松使用这个神器。</p><p><b>1.Jupyter notebook 是什么？</b></p><p><b>2.如何启动Jupyter notebook？</b></p><p><b>3.新手如何快速使用notebook？</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a3685a05ccd1517dc402c911b5395cdd_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"85\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-a3685a05ccd1517dc402c911b5395cdd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='85'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"85\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-a3685a05ccd1517dc402c911b5395cdd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a3685a05ccd1517dc402c911b5395cdd_720w.jpg?source=54b3c3a5\"></figure><p><b>1.Jupyter notebook 是什么？</b></p><p>在没有notebook之前，在IT领域工作的我都是这样工作的：</p><p>在普通的 Python shell 或者在IDE（集成开发环境）如Pycharm中写代码，然后在word中写文档来说明你的项目。</p><p>这个过程很反锁，通常是写完代码，再写文档的时候我还的重头回顾一遍代码。最蛋疼的地方在于，有些数据分析的中间结果，我还的重新跑代码，然后把结果弄到文档里给客户看。</p><p><br></p><p>有了notebook之后，我的世界突然美好了许多，因为notebook 可以直接在代码旁写出叙述性文档，而不是另外编写单独的文档。也就是它可以能将代码、文档等这一切集中到一处，让用户一目了然。</p><p>例如，我的数据分析社群小伙伴就用Jupyter notebook写出了他的学习笔记，长这样，是不是很酷：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a6ac6b5664eca9f16eba4cebc39bf3e8_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"688\" data-rawheight=\"401\" class=\"origin_image zh-lightbox-thumb\" width=\"688\" data-original=\"https://pic4.zhimg.com/v2-a6ac6b5664eca9f16eba4cebc39bf3e8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='688'%20height='401'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"688\" data-rawheight=\"401\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"688\" data-original=\"https://pic4.zhimg.com/v2-a6ac6b5664eca9f16eba4cebc39bf3e8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a6ac6b5664eca9f16eba4cebc39bf3e8_720w.jpg?source=54b3c3a5\"></figure><p>所以，你现在明白了这句话是在说什么了：</p><blockquote>Jupyter notebook（<a href=\"https://link.zhihu.com/?target=http%3A//jupyter.org/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">jupyter.org/</span><span class=\"invisible\"></span></a>） 是一种 Web 应用，能让用户将说明文本、数学方程、代码和可视化内容全部组合到一个易于共享的文档中。</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-8ac2d9d32e996face92fca51647c7a0d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"646\" data-rawheight=\"413\" class=\"origin_image zh-lightbox-thumb\" width=\"646\" data-original=\"https://pic1.zhimg.com/v2-8ac2d9d32e996face92fca51647c7a0d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='646'%20height='413'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"646\" data-rawheight=\"413\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"646\" data-original=\"https://pic1.zhimg.com/v2-8ac2d9d32e996face92fca51647c7a0d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-8ac2d9d32e996face92fca51647c7a0d_720w.jpg?source=54b3c3a5\"></figure><p><b>Jupyter Notebook 已迅速成为数据分析，机器学习的必备工具。因为它可以让数据分析师集中精力向用户解释整个分析过程。</b></p><p><br></p><p>Jupyter这个名字是它要服务的三种语言的缩写：Julia，PYThon和R，这个名字与“木星（jupiter）”谐音。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-a3685a05ccd1517dc402c911b5395cdd_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"85\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-a3685a05ccd1517dc402c911b5395cdd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='85'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"85\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-a3685a05ccd1517dc402c911b5395cdd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-a3685a05ccd1517dc402c911b5395cdd_720w.jpg?source=54b3c3a5\"></figure><p><b>2.如何启动 Jupyter notebook？</b></p><p>对于做数据分析这么有用的神器，不安装使用下是不是很遗憾？</p><p>安装 Jupyter 的最简单方法是使用 Anaconda。该发行版附带了 Jupyter notebook。你能够在默认环境下使用 notebook。</p><p>确保你已经安装了Anaconda，如果不知道如何安装的，可以看我之前写的：</p><a href=\"https://www.zhihu.com/question/58033789/answer/254673663\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-2c005cd28ab50cd710e9fbb20610bc94_l.jpg?source=54b3c3a5\" data-image-width=\"1242\" data-image-height=\"1491\" class=\"internal\">初学python者自学anaconda的正确姿势是什么？？</a><p>如何打开notebook？</p><p>按下图点击菜单栏，打开Anaconda Navigator</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a904730c9624e13711694d141a7e8820_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"354\" data-rawheight=\"370\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-af400e0c715df1a733814a13f3b1370a_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"354\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='354'%20height='370'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"354\" data-rawheight=\"370\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-af400e0c715df1a733814a13f3b1370a_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"354\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a904730c9624e13711694d141a7e8820_720w.jpg?source=54b3c3a5\"></figure><p>找到下图的jupyer notebook，点击红框的地方，就可以打开notebook了</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-ff4d6631216f34dbc69209403dd7e0b0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1367\" data-rawheight=\"687\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-d43cf3dfe9df0540fa86979a3d00b13c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1367\" data-original=\"https://pic2.zhimg.com/v2-ff4d6631216f34dbc69209403dd7e0b0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1367'%20height='687'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1367\" data-rawheight=\"687\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-d43cf3dfe9df0540fa86979a3d00b13c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1367\" data-original=\"https://pic2.zhimg.com/v2-ff4d6631216f34dbc69209403dd7e0b0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-ff4d6631216f34dbc69209403dd7e0b0_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>启动notebook 服务器后，在浏览器中会自动打开notebook页面地址：http://localhost:8888 </p><p>（其中localhost 表示你的计算机，而 8888 是服务器的默认端口）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-af2141fe2218ae17693e4070736b814f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"617\" data-rawheight=\"225\" class=\"origin_image zh-lightbox-thumb\" width=\"617\" data-original=\"https://pic1.zhimg.com/v2-af2141fe2218ae17693e4070736b814f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='617'%20height='225'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"617\" data-rawheight=\"225\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"617\" data-original=\"https://pic1.zhimg.com/v2-af2141fe2218ae17693e4070736b814f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-af2141fe2218ae17693e4070736b814f_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>如果启动后遇到问题，参考这里的解决方案：</p><a href=\"https://zhuanlan.zhihu.com/p/34337292\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-138151d5464c9e4742a34d0bfce283b5_720w.jpg?source=54b3c3a5\" data-entity-type=\"article\" data-entity-data=\"null\" class=\"internal\"><span class=\"invisible\">https://</span><span class=\"visible\">zhuanlan.zhihu.com/p/34</span><span class=\"invisible\">337292</span><span class=\"ellipsis\"></span></a><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-cd22b307ea83679cd6e916b1d507ec3e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"85\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-cd22b307ea83679cd6e916b1d507ec3e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='85'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"85\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-cd22b307ea83679cd6e916b1d507ec3e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-cd22b307ea83679cd6e916b1d507ec3e_720w.jpg?source=54b3c3a5\"></figure><p><b>3.新手如何快速使用notebook？</b></p><p><b>1）顶部的3个选项卡</b></p><p>顶部的3个选项卡是：<i>Files</i>（文件）、<i>Running</i>（运行）和 <i>Cluster</i>（集群）。</p><p><i>Files</i>（文件）显示当前“notebook工作文件夹”中的所有文件和文件夹。</p><p>点击 <i>Running</i>（运行）选项卡会列出所有正在运行的 notebook。可以在该选项卡中管理这些 notebook。</p><p><i>Clusters一般不会用到。因为</i>过去在 <i>Clusters</i>（集群）中创建多个用于并行计算的内核。现在，这项工作已经由 <a href=\"https://link.zhihu.com/?target=https%3A//ipyparallel.readthedocs.io/en/latest/intro.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ipyparallel</a> 接管。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-12f44fe33ecd2e3cf1668e57e346bc6d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"233\" class=\"origin_image zh-lightbox-thumb\" width=\"620\" data-original=\"https://pic1.zhimg.com/v2-12f44fe33ecd2e3cf1668e57e346bc6d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='620'%20height='233'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"233\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"620\" data-original=\"https://pic1.zhimg.com/v2-12f44fe33ecd2e3cf1668e57e346bc6d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-12f44fe33ecd2e3cf1668e57e346bc6d_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>2）如何创建一个新的notebook？</b></p><p>像下面图片中一样，在右侧点击“New”（新建），创建新的 notebook、文本文件、文件夹或终端。</p><p>“Notebooks”下的列表显示了你已安装的内核，这里直接选择你电脑上默认的环境名即可（名称可以与下面图的不一样）。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8b121c76186adebf10886026fdbabc82_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"617\" data-rawheight=\"354\" class=\"origin_image zh-lightbox-thumb\" width=\"617\" data-original=\"https://pic2.zhimg.com/v2-8b121c76186adebf10886026fdbabc82_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='617'%20height='354'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"617\" data-rawheight=\"354\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"617\" data-original=\"https://pic2.zhimg.com/v2-8b121c76186adebf10886026fdbabc82_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8b121c76186adebf10886026fdbabc82_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>默认的环境名在navigator中是 root，对应notebook里的默认环境名</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-b8a9b027e50b54519bbd94a27652f679_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"516\" data-rawheight=\"384\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7fd7f18a328e9e3d93673230f6d11575_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"516\" data-original=\"https://pic1.zhimg.com/v2-b8a9b027e50b54519bbd94a27652f679_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='516'%20height='384'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"516\" data-rawheight=\"384\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7fd7f18a328e9e3d93673230f6d11575_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"516\" data-original=\"https://pic1.zhimg.com/v2-b8a9b027e50b54519bbd94a27652f679_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-b8a9b027e50b54519bbd94a27652f679_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-5c9d2efae6906f05da1086a9aa17d0c2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1064\" data-rawheight=\"368\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-97f9df4b246a01f53953d0802de6a37c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1064\" data-original=\"https://pic1.zhimg.com/v2-5c9d2efae6906f05da1086a9aa17d0c2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1064'%20height='368'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1064\" data-rawheight=\"368\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-97f9df4b246a01f53953d0802de6a37c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1064\" data-original=\"https://pic1.zhimg.com/v2-5c9d2efae6906f05da1086a9aa17d0c2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-5c9d2efae6906f05da1086a9aa17d0c2_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>这样你就打开了下面的页面，你会看到外框为绿色的一个小方框。它称为<i>单元格</i>。单元格是你编写和运行代码的地方。以后你就可以在这里写你的数据分析代码了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-feab80e8667c9363c83970e3e1649f0d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"615\" data-rawheight=\"254\" class=\"origin_image zh-lightbox-thumb\" width=\"615\" data-original=\"https://pic2.zhimg.com/v2-feab80e8667c9363c83970e3e1649f0d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='615'%20height='254'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"615\" data-rawheight=\"254\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"615\" data-original=\"https://pic2.zhimg.com/v2-feab80e8667c9363c83970e3e1649f0d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-feab80e8667c9363c83970e3e1649f0d_720w.jpg?source=54b3c3a5\"></figure><p>在这里你可以输入自己人生中的第一行Python代码Hello world。然后点击图中的运行按钮，会执行你当前所在的代码，其实我更喜欢用快捷键（键盘上同时按住ctrl+enter键）来执行代码。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-4b6e97bdccc8f7c6a8839c970fa0a63c_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"695\" data-rawheight=\"392\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-4b6e97bdccc8f7c6a8839c970fa0a63c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"695\" data-original=\"https://pic1.zhimg.com/v2-4b6e97bdccc8f7c6a8839c970fa0a63c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='695'%20height='392'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"695\" data-rawheight=\"392\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-4b6e97bdccc8f7c6a8839c970fa0a63c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"695\" data-original=\"https://pic1.zhimg.com/v2-4b6e97bdccc8f7c6a8839c970fa0a63c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-4b6e97bdccc8f7c6a8839c970fa0a63c_720w.gif?source=54b3c3a5\"></figure><p>这句代码的意思是在界面输出字符串\"Hello world！\"，所以你会看到在下面与输出结果出来。</p><p>运行代码单元格时，单元格下方会显示输出。单元格还会被编号（左侧会显示 In [1]:）。如果运行了多个单元格的话（也就是多块代码），这能让你知道运行的代码和运行顺序。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-f53feac0a3240d8ce923aa8360d2f654_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"612\" data-rawheight=\"257\" class=\"origin_image zh-lightbox-thumb\" width=\"612\" data-original=\"https://pic1.zhimg.com/v2-f53feac0a3240d8ce923aa8360d2f654_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='612'%20height='257'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"612\" data-rawheight=\"257\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"612\" data-original=\"https://pic1.zhimg.com/v2-f53feac0a3240d8ce923aa8360d2f654_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-f53feac0a3240d8ce923aa8360d2f654_720w.jpg?source=54b3c3a5\"></figure><p>notebook 中的大部分工作均在代码单元格中完成。这是编写和执行代码的地方。在代码单元格中可以执行多种操作，例如编写代码、给变量赋值、导入包，展示数据分析结果等。在一个单元格中执行的任何代码在所有其他单元格中均可用。</p><p>+ 按钮用于创建新的单元格</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-f81fd1cea118a2feabdc977e221f3091_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"695\" data-rawheight=\"493\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-f81fd1cea118a2feabdc977e221f3091_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"695\" data-original=\"https://pic1.zhimg.com/v2-f81fd1cea118a2feabdc977e221f3091_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='695'%20height='493'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"695\" data-rawheight=\"493\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-f81fd1cea118a2feabdc977e221f3091_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"695\" data-original=\"https://pic1.zhimg.com/v2-f81fd1cea118a2feabdc977e221f3091_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-f81fd1cea118a2feabdc977e221f3091_720w.gif?source=54b3c3a5\"></figure><p><br></p><p>还记得一开始我提到代码自动补全功能吗？那么，什么是代码自动补全呢？</p><p>比如 我定义了下面的变量。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-c85acc44ab71c88cc6c705f6712c5dc3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"499\" data-rawheight=\"107\" class=\"origin_image zh-lightbox-thumb\" width=\"499\" data-original=\"https://pic2.zhimg.com/v2-c85acc44ab71c88cc6c705f6712c5dc3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='499'%20height='107'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"499\" data-rawheight=\"107\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"499\" data-original=\"https://pic2.zhimg.com/v2-c85acc44ab71c88cc6c705f6712c5dc3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-c85acc44ab71c88cc6c705f6712c5dc3_720w.jpg?source=54b3c3a5\"></figure><p>在后面代码中用到这个变量是，我只要输入第一个变量的第一个字母p，然后按下Tab键，边会自动查找到代码中以p开头的变量名称，这可以大幅度提供你写代码的效率。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1d768e1f5a5ec63148b599f74846a4dc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"364\" data-rawheight=\"116\" class=\"content_image\" width=\"364\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='364'%20height='116'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"364\" data-rawheight=\"116\" class=\"content_image lazy\" width=\"364\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1d768e1f5a5ec63148b599f74846a4dc_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-a407fc1a30feae6d5bf02afb0661311c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1581\" class=\"origin_image zh-lightbox-thumb\" width=\"1242\" data-original=\"https://pic1.zhimg.com/v2-a407fc1a30feae6d5bf02afb0661311c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1242'%20height='1581'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1581\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1242\" data-original=\"https://pic1.zhimg.com/v2-a407fc1a30feae6d5bf02afb0661311c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-a407fc1a30feae6d5bf02afb0661311c_720w.jpg?source=54b3c3a5\"></figure><p>但是要注意：如果你定义的变量想出现在代码补全里，需要你先把定义该变量的cell运行以后，notebook才能识别它。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-32ff5adc5bc9fc1741fdd7984ea8154a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1907\" class=\"origin_image zh-lightbox-thumb\" width=\"1242\" data-original=\"https://pic4.zhimg.com/v2-32ff5adc5bc9fc1741fdd7984ea8154a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1242'%20height='1907'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1907\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1242\" data-original=\"https://pic4.zhimg.com/v2-32ff5adc5bc9fc1741fdd7984ea8154a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-32ff5adc5bc9fc1741fdd7984ea8154a_720w.jpg?source=54b3c3a5\"></figure><p>当Cell前出现*，表示当前cell程序正在运行，或者它前面的cell正在运行。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-dea4274b505d98e559744a7c08a3c455_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"338\" data-rawheight=\"290\" class=\"content_image\" width=\"338\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='338'%20height='290'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"338\" data-rawheight=\"290\" class=\"content_image lazy\" width=\"338\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-dea4274b505d98e559744a7c08a3c455_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-7668f7237f48174803fee9b3f5536f4f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1924\" class=\"origin_image zh-lightbox-thumb\" width=\"1242\" data-original=\"https://pic4.zhimg.com/v2-7668f7237f48174803fee9b3f5536f4f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1242'%20height='1924'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1924\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1242\" data-original=\"https://pic4.zhimg.com/v2-7668f7237f48174803fee9b3f5536f4f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-7668f7237f48174803fee9b3f5536f4f_720w.jpg?source=54b3c3a5\"></figure><p><b>2）重命名notebook</b></p><p>你会看到刚才我建的notebook文件名是下面这样默认的，我想修改成自己喜欢的文件名如何办呢？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f0bc10aa340f1fd10312a0f34c7b38e3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"611\" data-rawheight=\"248\" class=\"origin_image zh-lightbox-thumb\" width=\"611\" data-original=\"https://pic4.zhimg.com/v2-f0bc10aa340f1fd10312a0f34c7b38e3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='611'%20height='248'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"611\" data-rawheight=\"248\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"611\" data-original=\"https://pic4.zhimg.com/v2-f0bc10aa340f1fd10312a0f34c7b38e3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f0bc10aa340f1fd10312a0f34c7b38e3_720w.jpg?source=54b3c3a5\"></figure><p>点击“File”-&gt;Rename，可以对notebook文件进行重命名，这里我命名成‘Helloworld’</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-90ccf672022060b084288aa2d4e443cc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"615\" data-rawheight=\"432\" class=\"origin_image zh-lightbox-thumb\" width=\"615\" data-original=\"https://pic1.zhimg.com/v2-90ccf672022060b084288aa2d4e443cc_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='615'%20height='432'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"615\" data-rawheight=\"432\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"615\" data-original=\"https://pic1.zhimg.com/v2-90ccf672022060b084288aa2d4e443cc_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-90ccf672022060b084288aa2d4e443cc_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-50a4398a900d25b0e132451925b14fe7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"612\" data-rawheight=\"280\" class=\"origin_image zh-lightbox-thumb\" width=\"612\" data-original=\"https://pic1.zhimg.com/v2-50a4398a900d25b0e132451925b14fe7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='612'%20height='280'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"612\" data-rawheight=\"280\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"612\" data-original=\"https://pic1.zhimg.com/v2-50a4398a900d25b0e132451925b14fe7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-50a4398a900d25b0e132451925b14fe7_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-da42e72a1847f574cea0dadeffa12413_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"618\" data-rawheight=\"274\" class=\"origin_image zh-lightbox-thumb\" width=\"618\" data-original=\"https://pic2.zhimg.com/v2-da42e72a1847f574cea0dadeffa12413_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='618'%20height='274'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"618\" data-rawheight=\"274\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"618\" data-original=\"https://pic2.zhimg.com/v2-da42e72a1847f574cea0dadeffa12413_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-da42e72a1847f574cea0dadeffa12413_720w.jpg?source=54b3c3a5\"></figure><p>同时，你可以在当前运行notebook服务器的“notebook工作文件夹”下看到创建的notebook，文件名后缀是ipynb。</p><p>（其实Notebook 就是个扩展名为 .ipynb 的大型 <a href=\"https://link.zhihu.com/?target=http%3A//www.json.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">JSON</a> 文件。）</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-d9b9cb54b5ce31b7617bded1d7e8fd74_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"387\" data-rawheight=\"218\" class=\"content_image\" width=\"387\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='387'%20height='218'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"387\" data-rawheight=\"218\" class=\"content_image lazy\" width=\"387\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-d9b9cb54b5ce31b7617bded1d7e8fd74_720w.jpg?source=54b3c3a5\"></figure><p>点击下面的保存按钮，可以保存你的notebook文件。但 notebook 也会定期自动保存。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1c257cf0737a094c353f38adbfff0f2d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"621\" data-rawheight=\"266\" class=\"origin_image zh-lightbox-thumb\" width=\"621\" data-original=\"https://pic4.zhimg.com/v2-1c257cf0737a094c353f38adbfff0f2d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='621'%20height='266'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"621\" data-rawheight=\"266\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"621\" data-original=\"https://pic4.zhimg.com/v2-1c257cf0737a094c353f38adbfff0f2d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1c257cf0737a094c353f38adbfff0f2d_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-fb2404e8d794bd6bb868c13ae7454566_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1060\" data-rawheight=\"410\" class=\"origin_image zh-lightbox-thumb\" width=\"1060\" data-original=\"https://pic3.zhimg.com/v2-fb2404e8d794bd6bb868c13ae7454566_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1060'%20height='410'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1060\" data-rawheight=\"410\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1060\" data-original=\"https://pic3.zhimg.com/v2-fb2404e8d794bd6bb868c13ae7454566_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-fb2404e8d794bd6bb868c13ae7454566_720w.jpg?source=54b3c3a5\"></figure><p><b>3）重新运行所有单元格里的代码</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-4b75254d1cf9cda6cb9443b2fd85d527_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1242\" class=\"origin_image zh-lightbox-thumb\" width=\"1242\" data-original=\"https://pic1.zhimg.com/v2-4b75254d1cf9cda6cb9443b2fd85d527_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1242'%20height='1242'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"1242\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1242\" data-original=\"https://pic1.zhimg.com/v2-4b75254d1cf9cda6cb9443b2fd85d527_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-4b75254d1cf9cda6cb9443b2fd85d527_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>4）关闭 notebook文件</b></p><p>通过在服务器主页上选中 notebook 旁边的复选框，然后点击“Shutdown”（关闭），你就可以关闭各个 notebook。</p><p>但是，在这样做之前，请确保你保存了工作！否则，在你上次保存后所做的任何更改都会丢失。同时如果不保存，你下次运行 notebook 时，你还需要重新运行代码。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-6f5564e24bd90c67fda75883a787cf8c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"615\" data-rawheight=\"294\" class=\"origin_image zh-lightbox-thumb\" width=\"615\" data-original=\"https://pic3.zhimg.com/v2-6f5564e24bd90c67fda75883a787cf8c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='615'%20height='294'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"615\" data-rawheight=\"294\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"615\" data-original=\"https://pic3.zhimg.com/v2-6f5564e24bd90c67fda75883a787cf8c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-6f5564e24bd90c67fda75883a787cf8c_720w.jpg?source=54b3c3a5\"></figure><p><b>5）如何共享你的notebook？</b></p><p>点击File-&gt;Download as，你可以选择多种格式下载你的notebook。一般我都会根据下面的用途来选择不同的下载格式：</p><p>1）如果我想和客户分享我的数据分析成果，我会选择将notebook下载为HTML文件。</p><p>2）如果我希望将自己的数据分析成果和代码嵌入到项目中，比如为药店管理系统做个数据分析子模块，我就会选择Python（.py）模块，这可以将我的代码融入项目中，成为子模块，方便和其他开发人员共同完成任务。</p><p>3）如果要在博客或文档中使用 notebook，我就选择Markdown格式。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-481ad93115ea27713977b86f3d2546d9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"616\" data-rawheight=\"479\" class=\"origin_image zh-lightbox-thumb\" width=\"616\" data-original=\"https://pic1.zhimg.com/v2-481ad93115ea27713977b86f3d2546d9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='616'%20height='479'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"616\" data-rawheight=\"479\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"616\" data-original=\"https://pic1.zhimg.com/v2-481ad93115ea27713977b86f3d2546d9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-481ad93115ea27713977b86f3d2546d9_720w.jpg?source=54b3c3a5\"></figure><p><b>6）关闭Jupler notebook服务器</b></p><p>直接关闭打开notebook的页面就可以。再次提醒，这会立即关闭所有运行中的 notebook，因此，请确保你保存了工作！</p><p>关闭notebook服务器后，下次启动再打开notebook，当你继续在该notebook中写代码时，发现之前的变量无法访问了。需要你在该notebook的Kernerl选项卡中选择“Run All”重新编译下之前的代码。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-8be0aaad666647bec7cc281bdbfeb6b8_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"478\" data-rawheight=\"267\" class=\"origin_image zh-lightbox-thumb\" width=\"478\" data-original=\"https://pic4.zhimg.com/v2-8be0aaad666647bec7cc281bdbfeb6b8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='478'%20height='267'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"478\" data-rawheight=\"267\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"478\" data-original=\"https://pic4.zhimg.com/v2-8be0aaad666647bec7cc281bdbfeb6b8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-8be0aaad666647bec7cc281bdbfeb6b8_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>如果你实践了上面的每一步，恭喜你，已经入门学会了 notebook。上面的命令也不需要你记住，只有你后面经常使用notebook，自然就熟练了。想想，你每天说话，会记住每个单词吗？当然不会，用的多了自然在大脑中就形成了记忆，而所谓的新技能学习，无非也是熟能生巧。</p><p>后期可以进一步学习Python：</p><a href=\"https://www.zhihu.com/lives/903272047218692096\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-12ef91a3f1e91e70bd3480d755e058b1_l.jpg?source=54b3c3a5\" data-image-width=\"962\" data-image-height=\"962\" class=\"internal\">零基础掌握人工智能(AI)核心语言：Python</a><a href=\"https://www.zhihu.com/column/tongjigailv\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-f69a021d27e1db2d883aa6b5b9aae8f5_l.jpg?source=54b3c3a5\" data-image-width=\"962\" data-image-height=\"962\" class=\"internal\">猴子Python</a><p></p>", "如何应对网站反爬虫策略？如何高效地爬大量数据?": "爬虫(Spider)，反爬虫(Anti-Spider)，反反爬虫(Anti-Anti-Spider)，这之间的斗争恢宏壮阔...<br><br>Day 1<br>小莫想要某站上所有的电影，写了标准的爬虫(基于HttpClient库)，不断地遍历某站的电影列表页面，根据 Html 分析电影名字存进自己的数据库。<br>这个站点的运维小黎发现某个时间段请求量陡增，分析日志发现都是 IP(1.1.1.1)这个用户，并且 useragent 还是 JavaClient1.6 ，基于这两点判断非人类后直接在Nginx 服务器上封杀。<br><br>Day 2<br>小莫电影只爬了一半，于是也针对性的变换了下策略：1. useragent 模仿百度(\"Baiduspider...\")，2. IP每爬半个小时就换一个IP代理。<br>小黎也发现了对应的变化，于是在 Nginx 上设置了一个频率限制，每分钟超过120次请求的再屏蔽IP。 同时考虑到百度家的爬虫有可能会被误伤，想想市场部门每月几十万的投放，于是写了个脚本，通过 hostname 检查下这个 ip 是不是真的百度家的，对这些 ip 设置一个白名单。<br><br>Day 3<br>小莫发现了新的限制后，想着我也不急着要这些数据，留给服务器慢慢爬吧，于是修改了代码，随机1-3秒爬一次，爬10次休息10秒，每天只在8-12，18-20点爬，隔几天还休息一下。<br>小黎看着新的日志头都大了，再设定规则不小心会误伤真实用户，于是准备换了一个思路，当3个小时的总请求超过50次的时候弹出一个验证码弹框，没有准确正确输入的话就把 IP 记录进黑名单。<br><br>Day 4<br>小莫看到验证码有些傻脸了，不过也不是没有办法，先去学习了图像识别（关键词 PIL，tesseract），再对验证码进行了二值化，分词，模式训练之后，识别了小黎的验证码（关于验证码，验证码的识别，验证码的反识别也是一个恢弘壮丽的斗争史，这里先不展开....），之后爬虫又跑了起来。<br>小黎是个不折不挠的好同学，看到验证码被攻破后，和开发同学商量了变化下开发模式，数据并不再直接渲染，而是由前端同学异步获取，并且通过 js 的加密库生成动态的 token，同时加密库再进行混淆（比较重要的步骤的确有网站这样做，参见微博的登陆流程）。<br><br>Day5<br>混淆过的加密库就没有办法了么？当然不是，可以慢慢调试，找到加密原理，不过小莫不准备用这么耗时耗力的方法，他放弃了基于 HttpClient的爬虫，选择了内置浏览器引擎的爬虫(关键词：PhantomJS，Selenium)，在浏览器引擎中js 加密脚本算出了正确的结果，又一次拿到了对方的数据。<br>小黎：.....<br><br>爬虫与发爬虫的斗争还在继续。<br>不过实际应用时候，一般大家做到根据 IP 限制频次就结束了，除非很核心的数据，不会再进行更多的验证，毕竟工程的问题一半是成本的问题。<br><br>至于高效部分，一些 Tips：<br>1.尽量减少请求次数，能抓列表页就不抓详情页<br>2.不要只看 Web 网站，还有 App 和 H5，他们的反爬虫措施一般比较少<br>3.如果真的对性能要求很高，可以考虑多线程(一些成熟的框架如 scrapy都已支持)，甚至分布式<br><br>另外，想深入研究爬虫/反爬虫的同学，可以把简历发过来： shenyubao&lt;At&gt;<a href=\"https://link.zhihu.com/?target=http%3A//souche.com\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">souche.com</span><span class=\"invisible\"></span></a> ，本广告长期有效。<br><br>====<br>2016.1.3 修改几处 spider 拼写错误，感谢 <a data-hash=\"70a7fca8e7f979a45be3c26170e17ff5\" href=\"https://www.zhihu.com/people/70a7fca8e7f979a45be3c26170e17ff5\" class=\"member_mention\" data-tip=\"p$b$70a7fca8e7f979a45be3c26170e17ff5\" data-hovercard=\"p$b$70a7fca8e7f979a45be3c26170e17ff5\">@Danilo</a>", "python教程看完了，还是不会编程？": "<p>不会是正常的。如果编程是读个教程就能学会的话，培训班哪还有活路？</p><p>我才你学习的时候肯定忘了一件事：输出个99乘法表并不是会编程，你得试着去做项目。</p><p>项目从哪儿来呢？</p><p>其实无论是知乎还是博客这种社区或者GitHub等专业网站，都已经有非常多的、面向新手的成熟案例可以让你练习自己的技能。</p><p>如果你实在懒的找，我这里汇总了一些，你可以来看看：</p><h2><a href=\"https://link.zhihu.com/?target=https%3A//juejin.im/post/59719caef265da6c4741cdd7\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">动手实操 | 如何用 Python 实现人脸识别，证明这个杨幂是那个杨幂？</a></h2><p>网红和明星越来越像，脸盲症发作了？</p><p>别怕，写个程序帮你认人就行了</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-ef887ed84b43155c6ae0cea62fede01b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"481\" data-rawheight=\"300\" class=\"origin_image zh-lightbox-thumb\" width=\"481\" data-original=\"https://pic4.zhimg.com/v2-ef887ed84b43155c6ae0cea62fede01b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='481'%20height='300'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"481\" data-rawheight=\"300\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"481\" data-original=\"https://pic4.zhimg.com/v2-ef887ed84b43155c6ae0cea62fede01b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-ef887ed84b43155c6ae0cea62fede01b_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><a href=\"https://zhuanlan.zhihu.com/p/27199954\" class=\"internal\">提高驾驶技术：用GAN去除(爱情)动作片中的马赛克和衣服</a></h2><p>没时间解释了，快上车！</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-3e548bb93abddabebceac22672e54545_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"558\" data-rawheight=\"315\" class=\"origin_image zh-lightbox-thumb\" width=\"558\" data-original=\"https://pic1.zhimg.com/v2-3e548bb93abddabebceac22672e54545_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='558'%20height='315'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"558\" data-rawheight=\"315\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"558\" data-original=\"https://pic1.zhimg.com/v2-3e548bb93abddabebceac22672e54545_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-3e548bb93abddabebceac22672e54545_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/jiaoyu121/p/6992814.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python抓取花瓣网高清美图 - 狙击手+ - 博客园</a></h2><p>恩，这个标题就够清楚了吧~</p><p>做完之后的效果是这样的</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-30a744dff49262db0802b04b5b52802a_720w.png?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1240\" data-rawheight=\"541\" class=\"origin_image zh-lightbox-thumb\" width=\"1240\" data-original=\"https://pic4.zhimg.com/v2-30a744dff49262db0802b04b5b52802a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1240'%20height='541'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1240\" data-rawheight=\"541\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1240\" data-original=\"https://pic4.zhimg.com/v2-30a744dff49262db0802b04b5b52802a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-30a744dff49262db0802b04b5b52802a_720w.png?source=54b3c3a5\"></figure><p><br></p><h2><a href=\"https://link.zhihu.com/?target=https%3A//www.leiphone.com/news/201707/1xJRSVJtNSxYv79O.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">从零开始教你用 Python 做词云</a></h2><p>词云是个很简单但是同样很好玩的项目，最重要的特性是实用。</p><p>在别人用表格做分析的时候，你把下面的图片拿了出来，震慑全场~</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-0d634b6969b50acc2127db1edf08e4d2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"740\" data-rawheight=\"740\" class=\"origin_image zh-lightbox-thumb\" width=\"740\" data-original=\"https://pic1.zhimg.com/v2-0d634b6969b50acc2127db1edf08e4d2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='740'%20height='740'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"740\" data-rawheight=\"740\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"740\" data-original=\"https://pic1.zhimg.com/v2-0d634b6969b50acc2127db1edf08e4d2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-0d634b6969b50acc2127db1edf08e4d2_720w.jpg?source=54b3c3a5\"></figure><h2><a href=\"https://zhuanlan.zhihu.com/p/27913553\" class=\"internal\">Python Crawler - 网信贷黑名单数据爬取</a></h2><p>借钱出去的时候，要不要先看一下借款人的信用？</p><p>去看一下信用黑名单吧，要是借款人名字高挂，这钱还是不借了吧</p><p>案例里是将结果输出到txt的，大家也可以尝试讲这些转成pdf或者输出到其他更方便查询的地方~</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-1ad8f70c88003daa3745d0bd73c86351_720w.png?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"495\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-1ad8f70c88003daa3745d0bd73c86351_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='495'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"495\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-1ad8f70c88003daa3745d0bd73c86351_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-1ad8f70c88003daa3745d0bd73c86351_720w.png?source=54b3c3a5\"></figure><p><br></p><h2><a href=\"https://link.zhihu.com/?target=http%3A//developer.51cto.com/art/201707/544604.htm\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">一件有趣的事：我用 Python 爬了爬自己的微信朋友</a></h2><p>不想了解一下自己朋友们的情况吗？微信加上了一千人，男生多还是女生多？北方多还是南方多？</p><p>用这个案例来查看一下吧</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-5c58a14b8f0dcb64e0bd85a08c7cf1a6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic2.zhimg.com/v2-5c58a14b8f0dcb64e0bd85a08c7cf1a6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='500'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"500\" data-original=\"https://pic2.zhimg.com/v2-5c58a14b8f0dcb64e0bd85a08c7cf1a6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-5c58a14b8f0dcb64e0bd85a08c7cf1a6_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><a href=\"https://zhuanlan.zhihu.com/p/28017883\" class=\"internal\">Python小工具: 发个周报邮件给老板</a></h2><p>每周都要发周报，烦死了。</p><p>照着这个教程做一篇，以后统统全自动发送，爽不爽？</p><p>（假装有图）</p><h2><a href=\"https://link.zhihu.com/?target=https%3A//juejin.im/post/595d0714f265da6c4c4fda65\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">微信公号 DIY：一小时搭建微信聊天机器人</a></h2><p>可能是公众号运营者的福音吧...</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-fae84dd509f05c7fb6836ea7d7154505_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"719\" data-rawheight=\"1280\" class=\"origin_image zh-lightbox-thumb\" width=\"719\" data-original=\"https://pic1.zhimg.com/v2-fae84dd509f05c7fb6836ea7d7154505_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='719'%20height='1280'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"719\" data-rawheight=\"1280\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"719\" data-original=\"https://pic1.zhimg.com/v2-fae84dd509f05c7fb6836ea7d7154505_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-fae84dd509f05c7fb6836ea7d7154505_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><a href=\"https://link.zhihu.com/?target=https%3A//juejin.im/post/596b72545188252a6a4f900f\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">微信公号DIY：MongoDB 简易ORM &amp;amp;amp; 公号记账数据库设计</a></h2><p>恩，公众号运营福音系列，其实这个系列还有一篇啦，你们点进去就看到了。</p><p>我就不贴了啦啦啦~</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a496851c19458933a16d2d3d4f4ec2b9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"719\" data-rawheight=\"1280\" class=\"origin_image zh-lightbox-thumb\" width=\"719\" data-original=\"https://pic1.zhimg.com/v2-a496851c19458933a16d2d3d4f4ec2b9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='719'%20height='1280'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"719\" data-rawheight=\"1280\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"719\" data-original=\"https://pic1.zhimg.com/v2-a496851c19458933a16d2d3d4f4ec2b9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a496851c19458933a16d2d3d4f4ec2b9_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><a href=\"https://link.zhihu.com/?target=http%3A//www.yangyanxing.com/article/use-python-get-house-info.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用python抓取自住房信息</a></h2><p>买房吗大哥？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-8d1a9f3036de7d732952151d737024f5_720w.png?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1146\" data-rawheight=\"659\" class=\"origin_image zh-lightbox-thumb\" width=\"1146\" data-original=\"https://pic2.zhimg.com/v2-8d1a9f3036de7d732952151d737024f5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1146'%20height='659'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1146\" data-rawheight=\"659\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1146\" data-original=\"https://pic2.zhimg.com/v2-8d1a9f3036de7d732952151d737024f5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-8d1a9f3036de7d732952151d737024f5_720w.png?source=54b3c3a5\"></figure><p><br></p><h2><a href=\"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/jaycekon/p/WxpyRedis.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python-WXPY实现微信监控报警 - jaycekong - 博客园</a></h2><p>监控报警发邮件经常不看？直接发到你微信上啊</p><p>（再假装有图）</p><h2><a href=\"https://link.zhihu.com/?target=http%3A//www.mengxiangjia.info/2017/04/01/create-image-by-pillow/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用pillow生成分享图片｜梦想.家</a></h2><p>一篇很好的实操教程，而且十分细致。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-9c6b4aa699b40d689dd95f67584dda84_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"1136\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-9c6b4aa699b40d689dd95f67584dda84_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='1136'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"1136\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-9c6b4aa699b40d689dd95f67584dda84_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-9c6b4aa699b40d689dd95f67584dda84_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><a href=\"https://link.zhihu.com/?target=http%3A//sunjiajia.com/2017/03/07/taobao-spider/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">淘宝商品信息定向爬虫</a></h2><p>绝对的剁手党福利啊~~~</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-6231199a237e97f852cf0b2bcc2e5ffe_720w.png?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"235\" data-rawheight=\"384\" class=\"content_image\" width=\"235\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='235'%20height='384'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"235\" data-rawheight=\"384\" class=\"content_image lazy\" width=\"235\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-6231199a237e97f852cf0b2bcc2e5ffe_720w.png?source=54b3c3a5\"></figure><p><br></p><h2><a href=\"https://link.zhihu.com/?target=http%3A//www.jianshu.com/p/fcfbd3131b84\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python实现车牌定位及分割</a></h2><blockquote>1、将采集到的彩色车牌图像转换成灰度图<br>2、灰度化的图像利用高斯平滑处理后，再对其进行中直滤波<br>3、使用Sobel算子对图像进行边缘检测<br>4、对二值化的图像进行腐蚀，膨胀，开运算，闭运算的形态学组合变换<br>5、对形态学变换后的图像进行轮廓查找，根据车牌的长宽比提取车牌</blockquote><p>光看着简介就知道值不值得看了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-df5795287fc0963229766b89e2b09a73_720w.png?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"696\" data-rawheight=\"490\" class=\"origin_image zh-lightbox-thumb\" width=\"696\" data-original=\"https://pic1.zhimg.com/v2-df5795287fc0963229766b89e2b09a73_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='696'%20height='490'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"696\" data-rawheight=\"490\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"696\" data-original=\"https://pic1.zhimg.com/v2-df5795287fc0963229766b89e2b09a73_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-df5795287fc0963229766b89e2b09a73_720w.png?source=54b3c3a5\"></figure><p><br></p><h2><a href=\"https://link.zhihu.com/?target=http%3A//www.jianshu.com/p/991cb07b3ad3\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">用Python把图片变成字符画</a></h2><p>试一下，把刘看山变成字符画？</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a62e4c39fffb67c7c2afbfe53c93dbb3_720w.png?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1240\" data-rawheight=\"990\" class=\"origin_image zh-lightbox-thumb\" width=\"1240\" data-original=\"https://pic4.zhimg.com/v2-a62e4c39fffb67c7c2afbfe53c93dbb3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1240'%20height='990'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1240\" data-rawheight=\"990\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1240\" data-original=\"https://pic4.zhimg.com/v2-a62e4c39fffb67c7c2afbfe53c93dbb3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a62e4c39fffb67c7c2afbfe53c93dbb3_720w.png?source=54b3c3a5\"></figure><hr><p>你想更深入了解学习Python知识体系，你可以看一下我们花费了一个多月整理了上百小时的几百个知识点体系内容： </p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.magedu.com/73198.html%3FPython_wenda_zhihu_jinke_pythonjiaochengkanwanlehaishibuhuibiancheng_question/29237672\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【超全整理】《Python自动化全能开发从入门到精通》笔记全放送</a></p>", "python是用C实现的，Java是用C++实现的，那为什么不直接用C或C++呢？": "<p>C是汇编写的，汇编是机器码写的。</p><p>机器码是用门电路堆的。</p><p>门电路是用二极管搭的。</p><p>二极管是用硅半导体做的。</p><p>硅半导体是硅原子加氮和磷做出来的。</p><p>所以，真的不要用高级语言，要用就从原子冶金开始。</p><p><br></p><p>知乎回答，都不能用输入法，要用内码，而且是1010的那种，所以用一个只有1和0的键盘给我就行了。</p><p><br></p><p>不行，不能用键盘，要用继电器，电报那种。。</p>", "入门python有什么好的书籍推荐？": "<p><b>可以看下 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/fdf235f952c4498478db0107f435c58a\" data-hash=\"fdf235f952c4498478db0107f435c58a\" data-hovercard=\"p$b$fdf235f952c4498478db0107f435c58a\">@苏克1900</a>  童鞋推荐的书单</b></p><p>  入门必看|5 位知乎大佬们【刘志军 (Python 之禅 作者)<a href=\"https://www.zhihu.com/people/ba286d02fd9701a446d68ba85d0755c0\" class=\"internal\">@刘志军</a>、 leoxin (菜鸟学 Python 作者)<a href=\"https://www.zhihu.com/people/6304d5cea185bc39e1c0ee2555a73f86\" class=\"internal\">@leoxin</a>、 刘顺祥 (数据分析 1480 作者) 、 秦路 (七周成为数据分析师课程作者<a href=\"https://www.zhihu.com/people/fd165ce69c8ed95800f5595d9e753533\" class=\"internal\">@秦路</a>)、 王大伟 (Python爱好者作者)<a href=\"https://www.zhihu.com/people/9a7d6515fb875c3876293f1e0df21d38\" class=\"internal\">@Python程序员</a>】推荐的 Python 书单汇总<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/rx26v5o_CFqrRX7pGZaUUg\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">mp.weixin.qq.com/s/rx26</span><span class=\"invisible\">v5o_CFqrRX7pGZaUUg</span><span class=\"ellipsis\"></span></a> 除了入门书，还包括数据分析、数据挖掘、机器学习等方面，可以说是非常全面。附电子书下载！</p><p><br></p><p><b>补充下来</b></p><p><b>摘要</b>：此文主要针对想入门 Python 但不知道看什么书好和有选择纠结症的童鞋，大佬们可绕道。<br></p><p><b>写在前面</b>：本文有很多超链接，建议点击底部「阅读原文」进行跳转查看。</p><p>这是「每周分享」的第 9 期，前 8 期基本都在分享一些我珍藏推荐的好软件、App，（前期文章汇总见底部推荐阅读处）数量不算少，够诸位消化一阵了。</p><p>转眼也到了年终，这一期换个话题，围绕这几个问题：「<b>学习 Python 该看哪些书？不同的书该怎么看？按照什么样的顺序看？」</b>，来聊一聊如何入门 Python，为了更有说服性一些，这里我把入门时看过的一些大佬推荐的书单进行了汇总，最后结合我的学习路径谈谈怎么读书。</p><p>半年前，Python 对我来说就是谜一样的东西，根本不知道如何下手、从何处下手，整天像无头苍蝇一样到处找资源，个把月过去了还没找到 Python 大门在哪儿，主要是花了很多的时间在纠结「<b>该学习 Python 还是 R、学习 Python3 还是 Python 2 、看什么入门书最合适？」</b>这些问题。知乎、豆瓣、CSDN、各大佬的公众号搜罗逛了一圈下来，只明确了前两个问题，就是要学习 Python，而且是 Python3，但对于看什么书，陷入了纠结迟迟下不了手。</p><p>现在看来，这应该是属于必经的过程，当涉足一个陌生的学习领域，对什么都不了解，即使别人给的建议再对，也会掂量犹豫几下。慢慢地，我开始进行总结，把一些大佬推荐的入门书籍文章进行汇总对比，然后就发现有些书是都在推荐的，于是决定重点就看这些书，这样才算慢慢摸到 Python 的大门。</p><p>话不多说，下面就分享 5 位大佬推荐的书单，除了入门书，还包括数据分析、数据挖掘、机器学习等方面，可以说是非常全面。</p><h2><b>▌<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5MzgyODQxMQ%3D%3D%26mid%3D2650367449%26idx%3D1%26sn%3Dc0f0699e727ea3becda923c4aeb0a566%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">刘志军 (Python 之禅 作者)</a></b></h2><p>刘志军是位不折不扣的 Python 大佬，他博客中的 Python 文章最早可以追溯到 2013 年。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-d17bff7228c2174b30a38ff046b7a036_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"947\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-57efa15be04364679de6b3d3bf9614a4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-d17bff7228c2174b30a38ff046b7a036_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='947'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"947\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-57efa15be04364679de6b3d3bf9614a4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-d17bff7228c2174b30a38ff046b7a036_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-d17bff7228c2174b30a38ff046b7a036_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><b>▌<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzIxNjM4NDE2MA%3D%3D%26mid%3D2247484655%26idx%3D1%26sn%3D076fd906523ee928d530ce2dae1f211d%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">leoxin (菜鸟学 Python 作者)</a></b></h2><p>辛哥爬取分析了豆瓣 Python 相关的 1000 多本书籍，从各个角度找到了最受欢迎的书目，然后给出了自己的推荐。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f293b82250eeeb2005bf29e03089d9f8_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"653\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-ab74e0b8eb99cc643ffb47c969da86b5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-f293b82250eeeb2005bf29e03089d9f8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='653'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"653\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-ab74e0b8eb99cc643ffb47c969da86b5_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-f293b82250eeeb2005bf29e03089d9f8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f293b82250eeeb2005bf29e03089d9f8_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><br></p><p><b>▌<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzIxNjA2ODUzNg%3D%3D%26mid%3D2651436374%26idx%3D1%26sn%3Dc208a75ea6b8f989d32aa3f5633e8db8%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">刘顺祥 (数据分析 1480 作者)</a></b></p><p>刘顺祥大佬的公众号干货很多，入门时学习到很多。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-5806069ecb4928db01ece5f09025f006_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1549\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f5b7db0d3d46d7a590322d1ef6f1adb4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-5806069ecb4928db01ece5f09025f006_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='1549'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1549\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f5b7db0d3d46d7a590322d1ef6f1adb4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-5806069ecb4928db01ece5f09025f006_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-5806069ecb4928db01ece5f09025f006_720w.jpg?source=54b3c3a5\"></figure><h2><b>▌<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5NjEyMDI2MQ%3D%3D%26mid%3D2455946885%26idx%3D1%26sn%3D57744be444e8adfd2b60cf15edb6cdf2%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">秦路 (七周成为数据分析师课程作者)</a></b></h2><p>秦路大佬在天善智能社区开设的《七周成为数据分析师》课程非常棒，他的推荐也非常值得参考。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-497352ca1beece16c54164a97c8f771a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"957\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-9120b3c37113c2b2bdc55d69ec8a3114_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-497352ca1beece16c54164a97c8f771a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='957'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"957\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-9120b3c37113c2b2bdc55d69ec8a3114_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-497352ca1beece16c54164a97c8f771a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-497352ca1beece16c54164a97c8f771a_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h2><b>▌王大伟 (Python爱好者作者)</b></h2><p>王大伟大佬写的文章非常有趣，我看了他的几篇关于类（Class） 的文章后才彻底搞懂类是怎么回事。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-e840a3482605ce96964f2fb9411e86b7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"741\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-767f310a762e5d213d1e8834e12b256e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-e840a3482605ce96964f2fb9411e86b7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='741'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"741\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-767f310a762e5d213d1e8834e12b256e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-e840a3482605ce96964f2fb9411e86b7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e840a3482605ce96964f2fb9411e86b7_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>以上就是 5 位大佬的推荐，想必你心里大概有个谱了，下面再说说我看过的一些书，然后分享一下我的入门路径。</p><h2><b>▌我都看了哪些书</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-3364f373d1ccef5aba30d77592274b85_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"765\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-27f6dd5e9b92ae02a25389f44b17e964_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-3364f373d1ccef5aba30d77592274b85_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='765'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"765\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-27f6dd5e9b92ae02a25389f44b17e964_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-3364f373d1ccef5aba30d77592274b85_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-3364f373d1ccef5aba30d77592274b85_720w.jpg?source=54b3c3a5\"></figure><p>你可能注意到了，以上推荐了少说也有好几十本书，范围还是有点大，就算都是值得看的书，也没么多时间精力都去看，所以上面只是入门 Python 的第一个步骤，即筛选书的范围，还有更为重要的两个步骤。</p><p><b>第一，首先要明确你学 Python 的目的</b>。也就是你想学了去干嘛，是做爬虫、数据分析挖掘、机器学习、web 开发还是什么其他的，虽说不同的方向都需要有 Python 基础，但对 Python 的基础也是有所侧重，只有确定一个方向才可以进一步筛选书和书中章节的范围。</p><p><b>第二，确定了书的范围后，要琢磨好怎么去看每一本书、以什么样的顺序去看书。</b>不然，同时看好几本书，每一本都从头开始看，坚持不了几天就会放弃。</p><p>下面以我入门的过程来具体说一下。</p><p>由于我此前是零编程基础，helloworld 都不会打的那种，上知乎看了几个 Python 入门的回答后，觉得用 Python 做数据分析这个方向不错，加上我此前学 Excel 时就对数据分析比较感兴趣，所以就确定了这个方向，但很快就发现行不通，因为我连基本的 Python 操作都不会，处处卡壳，时间都花在抠一个个的小问题上去了，折腾到最后也没太大兴趣去分析了，而且数据分析本身是有一套理论方法的，我更不会，如果同时学 Python 操作和分析方法，比较耗费精力，显然不可取，所以就放弃直接学数据分析这个想法。</p><p>然后我选了另外一条路，就是爬虫，因为基础的爬虫比数据分析简单，学习曲线不陡，而且爬虫比较有意思，写出来别人也更愿意看，进一步了解到初步的爬虫学习主要学几个爬虫类库、网页解析提取库、框架这几块就行了，这样一下就缩小了书的选择范围和内容范围。</p><p>至此，我就选择了<b>「Python 基础——爬虫——数据分析」</b>这样一条路线。</p><p>首先，我选择了《深入浅出 Python 》这本书作为入门的第一本书，该书浅显易懂，注释详尽，对新手很友好。接着，我又大致过了一遍《Python 编程从入门到实践》，前面几章写得非常实用，这样对 Python 就有了一个大致了解。</p><p>接着，便开始上手爬虫，但爬虫类的书非常少，起先只找到两本，一本是国外的《Python 网络数据采集》，书不厚，看了后大致了解了：爬虫是怎么一回事、爬虫能做什么、要会哪些东西等这几个问题，另一本是韦玮老师的《精通 Python 网络爬虫》，这本书当时觉得还不错，有很多实操案例，但是理论部分欠缺一些。<br>后来偶然搜到了崔庆才大佬的爬虫文章，很赞，果断就买了他刚出的《Python3 网络爬虫实战》这本书，由此算是找到了爬虫方向。</p><p>通过爬虫把数据爬下来后就开始尝试一些简单的分析，但发现很多操作根本不熟练，于是采取了两种方法去学习，首先是谷歌解决实际问题，然后闲的时候翻看了《利用 Python 进行数据分析》、《流畅的 python》、《 Python Cookbook》这几本书，算是系统地巩固了一下相关知识。</p><p>就这样，几个月下来，练习了 10 个左右的爬虫，自认为算是入门了 Python 爬虫和数据分析。</p><p>以上就是本期的推荐，如果对里面的书感兴趣的话可以去找来看看，老规矩，为了更方便你，我这里准备好了部分电子书，关注下方 <b>Python爱好者社区</b>，<b>公众号回复「Python书」就可以得到。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-5eb34b06a9a04f51f22d8e2520792d49_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"701\" data-rawheight=\"475\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-fb91f95340a3ab2cf72e20d7d3d1b54e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"701\" data-original=\"https://pic3.zhimg.com/v2-5eb34b06a9a04f51f22d8e2520792d49_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='701'%20height='475'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"701\" data-rawheight=\"475\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-fb91f95340a3ab2cf72e20d7d3d1b54e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"701\" data-original=\"https://pic3.zhimg.com/v2-5eb34b06a9a04f51f22d8e2520792d49_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-5eb34b06a9a04f51f22d8e2520792d49_720w.jpg?source=54b3c3a5\"></figure><p></p>", "怎么样才算是精通 Python？": "你们所说的什么要怎样数据分析、爬虫、Web 等，在我看来那不是精通 Python，而是精通某一领域，抛开 Python 换用另一门语言也可，在我看来，精通 Python 语言大约需要如下这些步骤（个人愚见，不服你奈我何~~~）：<br><br>------------------------<br><b>level 1：了解基本语法</b><br>这是最容易的一级，掌握了 Python 的基本语法，可以通过 Python 代码实现常用的需求，不管代码质量怎么样。这部分内容，可以参考：<a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/2/tutorial/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">The Python Tutorial</a>。<br><br>------------------------<br><b>level 2：熟练使用常用的库</b><br><ul><li>熟悉常用 standard library 的使用，包括但不限于 copy / json / itertools / collections / hashlib / os / sys 等，这部分内容，可以参考：<a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/2/library/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">The Python Standard Library</a>。</li><li>熟悉常用的第三方库，这就根据每个人不同的用法而有所不同了，但是一定要掌握你所常用的那个领域里的第三方库。 </li></ul><br>------------------------<br><b>level 3：Pythonic</b><br>这一级别比上一级别稍难，但是还是可以轻松达到。所谓 Pythonic，就是相比其它语言，Python 可以通过更加优雅的实现方式（不管是语法糖还是什么），比如（包括但不限于） with、for-else、try-else、yield 等。<br>另外你还需要掌握这些所谓魔法的实现原理，了解 Python 在语法层面的一些协议，可以自己实现语法糖。如 with 的实现方式（上下文管理器）等。<br>达到这一级，你的代码可以看起来很漂亮了。这部分内容，可以参考：<br><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/2/reference/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">The Python Language Reference</a><br></li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/2/howto/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python HOWTOs</a><br></li></ul><br>------------------------<br><b>level 4：高级玩法</b><br>掌握 Python 的内存机制、GIL 限制等，知道如何改变 Python 的行为，可以轻松写出高效的优质的 Python 代码，能够轻松分辨不同 Python 代码的效率并知道如何优化。<br><br>------------------------<br><b>level 5：看透本质</b><br>阅读 Python 的 C 实现，掌握 Python 中各种对象的本质，掌握是如何通过 C 实现面向对象的行为，对于常见的数据结构，掌握其实现细节。到这一步，需要将 Python 源码学习至少一遍，并对关键部分有较深层次的理解。<br><br>------------------------<br><b>level 6：手到拈来，一切皆空</b><br>不可说，不必说~<br><br><br><br>--------------------- 以下为补充说明 ---------------------------<br>看到评论区有朋友误解，这里解释一下。<br><br>首先，以上步骤<b>并不是打怪升级</b>，不存在到了一级再去第下一级，你完全可以在熟练标准库的过程中掌握语言的实现原理等，这并不矛盾。所以那些评论说「我已经 xx 级了， xx 时候要到 xx 级」的朋友们，希望不要误解了我的意思，你不必将自己限制死，而可以很灵活的变通。<br><br>另外题干中的「招聘要求写着“精通 Python 语言”」，对于这样的招聘要求，绝大多数其实是 HR 脑残（不排除少部分公司真的有特殊需求），一般面对这样的公司我会选择绕道而行。既然是找工作，还是要找自己满意且公司本身很不错的，人生苦短，何必跟自己过不去呢？说到这里，我看知乎的招聘岗位中（<a href=\"https://www.zhihu.com/careers\" class=\"internal\">知乎招聘</a>），貌似没有出现「精通」二字，自认技术高超的小伙伴可以去试试看哟~~~<br><br>最后，希望各位不要被某些答案「不需要精通 xx 语言」这样的言论干扰，编程语言有很多相似的地方，个人觉得掌握一门语言的底层实现，对自身的编程水平提升是很有帮助的。但是要搞清楚，仅仅编程语言是不够的，如何使用一门编程语言做有趣的事情，这很重要。"}{"你是如何开始能写 Python 爬虫？": "<p>这得从年轻时候说起。</p><p>我有一群饥渴的室友（嗯，就是室友，不是自己），由于那时候年轻，不知道 1024 这等网站的存在，等上的小黄片网站大多经常更换网址 + 满屏广告，体验很是不好。有一天，一个室友抱怨说：哎……要是小黄文、小黄图、小黄片都自动进我硬盘就好咯！</p><p>说者无意，听者有心。于是乎，我开始入了爬虫的坑。</p><p>那种羞羞的小网站算是非常好抓的，尽管网址各不相同，但是大多是从同一个模板生成的，而且根本就没有反爬策略。所以，一套代码就足以应对很多网站了。在经过一个下午的努力之后，室友的愿望实现了，那些让人营养跟不上的内容，很快塞满了他的硬盘。记得当时是写了一篇博客介绍，不过几次迁移博客，那篇文章已经找不到了。</p><p>后来，我不满足于抓定向小网站的内容，开始尝试新的思路。从一个网址出发，广度优先遍历，不再指定具体规则和解析策略，而是从 HTML 中正则匹配 ed2k 链接。后来嘛，程序自动下载的 ed2k 链接足够室友这辈子营养不良。</p><p>然后找了第一份工作，开始从写爬虫玩，变成了写爬虫养活自己。开始写各种比较大规模的爬虫，对非常大量的数据做抓取，以及有机会使用大量机器做抓取，当然，工作内容，不细表。虽不细聊，但是这段经历可以算是对我写爬虫技能长进帮助最多的了。</p><p>再后来，抓过知乎用户数据，当时写了一篇文章《<a href=\"https://link.zhihu.com/?target=https%3A//xlzd.me/2015/09/12/zhihu/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">一个知乎重度用户眼中的知乎</a>》那时候的一百万知乎用户和现在的一百万知乎用户，所占的比例应该是非常不一样的。还顺手做过一个小网站，聚合知乎用户的信息，提供简单的检索功能，大概是这样：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-88e1295c71516e6f8e44db0a86be8ee4_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"484\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-88e1295c71516e6f8e44db0a86be8ee4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='484'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"484\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-88e1295c71516e6f8e44db0a86be8ee4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-88e1295c71516e6f8e44db0a86be8ee4_720w.jpg?source=54b3c3a5\"><figcaption>facezh，一个已经下线的小网站</figcaption></figure><p>然后看到知乎站内如此多爆照钓鱼问题，就写了一个程序，根据问题下各回答的文本密度和图片数量，以及回答下的评论内容等信息，自动判断钓鱼回答并抓取，效果还挺好。就注册了一个域名 「zhihu.photo」，又做了一个聚合小站（已经下线，由于知乎已经改版，代码你只能 star，并用不上：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/xlzd/zhihu.photo/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub</a>）：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-21bc775385497886a5356e9f3cffe2e8_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"385\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-21bc775385497886a5356e9f3cffe2e8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='385'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"385\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-21bc775385497886a5356e9f3cffe2e8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-21bc775385497886a5356e9f3cffe2e8_720w.jpg?source=54b3c3a5\"><figcaption>zhihu.photo，又一个已经下线的小网站</figcaption></figure><p>说起来写爬虫，我对知乎绝对算得上是真爱了。针对知乎写了好多不同种类的爬虫，还很情怀地（当然也是为了防止被反爬虫命中）故意放慢了爬虫速度，希望不对知乎服务器造成任何压力。来知乎工作后才知道，我写爬虫那个年代，知乎还没有反爬虫系统。知乎的第一版反爬虫系统，就是我写的，我还给它取了个很中二的名字。</p><p>再后来就针对最最没有基础的同学写了几篇博客，据我得到的反馈，至少有一个朋友看我博客受到了一点点启发：</p><ul><li><a href=\"https://zhuanlan.zhihu.com/p/20410446\" class=\"internal\">爬虫必备——requests</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/20413379\" class=\"internal\">Web Crawler with Python - 01. 准备</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/20413828\" class=\"internal\">Web Crawler with Python - 02. 简单的尝试</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/20416894\" class=\"internal\">番外篇. 搭建称手的Python开发环境</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/20423182\" class=\"internal\">Web Crawler with Python - 03. 豆瓣电影 TOP250</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/20430122\" class=\"internal\">Web Crawler with Python - 04. 另一种抓取方式</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/20432575\" class=\"internal\">Web Crawler with Python - 05. 存储</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/20435541\" class=\"internal\">Web Crawler with Python - 06. 海量数据的抓取策略</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/20471442\" class=\"internal\">Web Crawler with Python - 07. 反爬机制&lt;1&gt;</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/20494731\" class=\"internal\">Web Crawler with Python - 08. 模拟登录</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/20546546\" class=\"internal\">Web Crawler with Python - 09. 通过爬虫找出我和轮子哥之间的最短关注链</a></li></ul><p>最后的一点体会是，很多情况下，爬虫程序对个人的提升比较有限，各位差不多就得了，同样的时间，有更多收益更大、更值得做的事情。</p>", "Python和Java二选一该学啥？": "<p>声明：这是一篇容易引起撕逼的问答，为了祖国和谐，人民安康，请各位看官尽量理性讨论。正巧我前两天写了一篇 <a href=\"https://zhuanlan.zhihu.com/p/31062573\" class=\"internal\">Java和Python现在都挺火，我应该怎么选</a> 的文章，正好对题，就此回答一波。同时，这篇文章是面向一些初入行的朋友进行一些相对中肯一点的分析和建议而已，虽然有浓厚的个人色彩，但我还是尽量以事实说话，以代码说话，大牛们就不要拿自己的牛逼经验来这里装逼了，当然，你如果非得来跟我撕，哥们儿我奉陪。另外，由于文中以自己所在的机构蜗牛学院所做的一些事情来举例，如果你认为这是软文广告，请止步于此。强哥打广告，都是硬的，软的不来（做了**还要立**的事哥不屑）。好吧，咱们进入正题。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-ce986471888f314f1b8a0c08e858598a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"780\" data-rawheight=\"271\" class=\"origin_image zh-lightbox-thumb\" width=\"780\" data-original=\"https://pic4.zhimg.com/v2-ce986471888f314f1b8a0c08e858598a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='780'%20height='271'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"780\" data-rawheight=\"271\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"780\" data-original=\"https://pic4.zhimg.com/v2-ce986471888f314f1b8a0c08e858598a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-ce986471888f314f1b8a0c08e858598a_720w.jpg?source=54b3c3a5\"></figure><p>我先问大家一个问题，为什么中国人用刀叉是很容易上手的一件事情，而外国人用筷子，应该是他们在中国吃饭时最痛苦的一件事情吧。为什么会这样呢？</p><p>其实原因非常简单，当我们学会了一门技术难度要求更高的技能以后，再去降级学习难度更低的技能是非常容易的一件事情，反之则不然。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-18d15496b30d0e1c10faca6d5ef6e07b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"393\" class=\"origin_image zh-lightbox-thumb\" width=\"1000\" data-original=\"https://pic2.zhimg.com/v2-18d15496b30d0e1c10faca6d5ef6e07b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1000'%20height='393'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"393\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1000\" data-original=\"https://pic2.zhimg.com/v2-18d15496b30d0e1c10faca6d5ef6e07b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-18d15496b30d0e1c10faca6d5ef6e07b_720w.jpg?source=54b3c3a5\"></figure><p>这个道理同样适用于我们的学习，强哥对Java和Python都有较为丰富的使用经验，当然，Java的应用经验更丰富，代码量比Python更多一些。正是由于我们丰富的Java经验，当蜗牛学院的软件测试方向需要为学生讲授Python课程时，我们所有的讲师都会被分配任务去研究Python，并完成教案编写，教材编写，案例编写。我们会发现，使用Python是一件非常容易的事情。基本上来说，解决问题的方式，方法，算法，思路，所有的编程语言都一样。我们去学习一门新的编程语言的时候就会容易很多，只需要关注与我们所熟悉的编程语言在语法和使用上存在哪些方面的不同即可。</p><p>那么问题来了，蜗牛学院也要讲授Python，那到底是Python值得学习还是Java呢？</p><p>这里面有三点我必须说破，却很少有人从这个角度来给大家做分析：</p><ol><li>如果一个不懂2-3门编程语言的人，或者很少使用到Java或者Python，来告诉你Java好还是Python好，这是赤裸裸的不负责任。如果这个人用Python并且混得还稍微可以，他一定会告诉你Python好，如果这个人用Java，他一定会告诉你用Java好。如果两个语言都没有用过的键盘侠，他会告诉你语言都是相通的，不要纠结。每一个人都说得好有道理的样子，于是让你无从选择。强哥熟练使用8种以上的编程语言，所以才稍微感觉有点资格，来说一说这两门编程语言。虽然，从我个人的角度在我心目中，编程语言只有两种，第一种是Java/C，第二种是其它。但是我不能通过这种偏激的方式来误导大家。</li><li>我们必须要明白Java和Python的各自定位。Java源自C和C++的技术体系，于1995年推出，定位于给专门的程序员设计大型的复杂分布式应用而设计。而Python是1991年推出（比Java还早）主要面向于系统管理，科研，教育和非程序员群体等。大家一定要理解清楚一个现实，这个世界上并不是只有程序员才需要写程序，还有很多群体需要写程序。比如蜗牛学院在这方面的定位就很清楚：Java开发全栈方向的学生学习Java编程和JavaScript编程，软件测试方向的就业班学员学习Python（因为他们并非专业的程序员群体），而软件测试方向下属的自动化测试开发高级研修班，是Java/Python两个方向同时存在。那你说你觉得哪个更好呢？</li><li>Python比Java早4年出身，但是在国内为什么几乎到2010年之后，Python才逐渐火起来呢？原因很简单，因为我们都太现实了。由于大数据的盛行，由于自动化测试方面的人才需求，以及对于互联网的一些基础应用系统的的开发，企业加大了对Python人才的招聘力度（当然，与Java比还有较大的差距），由于有一门感觉很简单又能赚大钱的编程语言出现了，简直是人类的福音啊，所以火起来了。这一点与近几年虚火很旺的Web前端开发很像，其实绝大部分人没什么技术能力，但是工资却拿得不错。这不是个人的原因，企业也很浮躁，仅此而已，一旦虚火泄了，谁能撑到最后？请各位自行脑补。</li></ol><p>也不知道大家从哪里得来的一些“误导”，觉得Python简单，Java很难，所谓\"人生苦短,我用Python\"之类的。一方面，Python上手的确相对要快一点而已，仅此而已。解决复杂问题时，没有人会觉得难点在使用哪门编程语言上，而是解决这个具体问题的算法思路上。这一点各位务必要拎清这个思路。另外一方面，由于Python近几年的火爆，不排除一些人故意散播一些言论，来误导大家使用Python。这件事情就像这么多年，一直有人觉得学习软件测试要容易一些一样，很多人也是报着通过软件测试进入这个行业，选择了一个自己认为没有难度的领域进入。但是，强哥发现，当3，5年过去了，很多测试人员目前最焦虑的就是，自己技术不够深，在企业当中越来越没有竞争力了。所以最终，还是得硬着头皮研究深层次的测试技术，无论是编程，网络，数据库，协议，还是自动化测试，性能测试等。但是这个过程非常痛苦，就像我说的那样，这个世界上99%的人都会选择一条容易走的大路，因为懒惰，因为恐惧。而成功是属于那1%的人一样。这句话同样适用于编程语言或者技术功底的训练上。</p><p>其实大家如果有过实际的编程经验，我们不妨认真想想，当我们研发一个系统的时候，究竟会用到哪些技术？</p><p>那些什么需求分析，跟测试撕逼，跟客户撕逼，跟老板撕逼的那些烂事我们就不提了。我们就来看看纯技术层面的一些基本要求：数据库，Linux命令，网络协议，接口设计，算法思路，框架，改BUG，编程，前端交互。你应该懂我，利用不同的编程语言编写程序只是研发过程中众多你需要掌握的技术当中的一块而已。其它，与你用哪们编程语言无关，这一点如果你都理解不了，觉得强哥在忽悠你的话，那请自便吧。或者换一个角度，会一门编程语言，而不是完整技术体系，就能当技术大牛的情况，我觉得可能只有在你们家村里可以行得通，因为就你一个人懂。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-af031790f2149d0d001e99020199bd73_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"780\" data-rawheight=\"326\" class=\"origin_image zh-lightbox-thumb\" width=\"780\" data-original=\"https://pic1.zhimg.com/v2-af031790f2149d0d001e99020199bd73_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='780'%20height='326'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"780\" data-rawheight=\"326\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"780\" data-original=\"https://pic1.zhimg.com/v2-af031790f2149d0d001e99020199bd73_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-af031790f2149d0d001e99020199bd73_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-bab0b30e32aa88271c574d0f2f1a902c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"780\" data-rawheight=\"322\" class=\"origin_image zh-lightbox-thumb\" width=\"780\" data-original=\"https://pic4.zhimg.com/v2-bab0b30e32aa88271c574d0f2f1a902c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='780'%20height='322'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"780\" data-rawheight=\"322\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"780\" data-original=\"https://pic4.zhimg.com/v2-bab0b30e32aa88271c574d0f2f1a902c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-bab0b30e32aa88271c574d0f2f1a902c_720w.jpg?source=54b3c3a5\"></figure><p>当然，以上我们讨论是的纯粹的基于技术定位，你也许可以反驳我说，难道做测试的都得懂编程，难道做Python的都不行？</p><p>这当然不是这样的，任何一个领域都有大神，随着经验的丰富都能够解决很多难题。但是，那是很久以后的事了，我们现在讨论的是，你还在纠结Java还是Python的这件事，毫无疑问，这个时候，你仍然还是一个菜鸟，甚至连门都没入。强哥建议大家，不要因为什么事情简单，所以我要去做，无论是学习编程语言，还是其它，这是最要命的一个出发点，会毁了你的未来。</p><p>下面我给大家列出一段我分别使用Java和Python写的发送一个HTTP协议的一段代码。这段代码收录在强哥今年年底即将出版的一本自动化测试开发的高级教程里面，全书均采用Java进行代码演示，明年，我会有一本几乎一模一样的但是是使用Python进行代码实现的书。之所以能够这样，原因很简单，Java能解决的基本问题，Python也能解决，当然，Python能解决的，Java一样可以。但是在干重活儿方面呢，Java更成熟一些。</p><p><b>Java的代码，实现Agileone系统的需求提案新增功能：</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>// 实现需求提案的新增\npublic void doAdd() {\n    // 先发送POST请求实现登录\n    String postUrl1 = \"http://localhost/agileone/index.php/common/login\";\n    String postData1 = \"username=admin&amp;password=admin&amp;savelogin=true\";\n    String resp1 = hr.sendPost(postUrl1, postData1);\n    System.out.println(resp1);\n    // 对sendPost()方法进行了额外的封装，一次封装，处处使用\n\n    // 再发送POST请求完成新增\n    String postUrl2 = \"http://localhost/agileone/index.php/proposal/add\";\n    String postData2 = \"type=Enhancement&amp;importance=Medium&amp;\"\n           + \"headline=&amp;\"\n           + \"content=这是用于Java代码测试的内容-10009&amp;processresult=\";\n    String resp2 = hr.sendPost(postUrl2, postData2);\n    System.out.println(resp2);\n}\n</code></pre></div><p><b>我们再来看看Python实现同样功能的代码：</b></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># 导入urllib和http库\n import urllib\n import http.cookiejar\n\n# 利用cookiejar自动管理整个过程中的Cookie\n cj = http.cookiejar.CookieJar()\n opener = urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj))\n\n # 利用urllib构造POST请求并处理登录\n logindata = { \"username\" : 'admin', \"password\": 'admin', \"savelogin\" : \"true\" }\n data_encoded = urllib.parse.urlencode(logindata).encode('utf-8')\n login = opener.open(\"http://localhost/agileone/index.php/common/login/\", data_encoded)\n print(login.read())\n\n # 发送Post请求提交新增需求提案\n proposaldata = {\"type\":\"Requirement\", \"importance\":\"medium\",\n             \"headline\":\"Headline from Python - 10010\",\n             \"content\":\"Content from Python - 10010\", \"scope\":\"1\", \n\"processresult\":\"\"}\n data_encoded = urllib.parse.urlencode(proposaldata).encode('utf-8')\n proposal = opener.open(\"http://localhost/agileone/index.php/proposal/add\", data_encoded)\n print(proposal.read())\n</code></pre></div><p>相信大家很难区分所谓的简单与难。因为代码几乎都很类似，这种情况发生在很多场景，解决很多问题时都是一样的。其实很多人之所以宣传Python简单易学，我们抛开某些可能的商业目的或者社会心理的原因之外（商业目的还用说吗，比如最简单的例子，蜗牛学院专门做Python培训的，当然我会不顾一切地说服你，Python是最好的编程语言，没有之一，Java都是垃圾，都是落伍了的，这种睁眼说瞎话的还少吗？因为你很懒，懒得去求证真相而已。社会心理就是我自己是搞Python的，我怎么能说自己做的技术很Low逼呢，我自己是搞Java的，Java必然是最牛的啊）。让我们单纯从事实出发，Python简单的原因只是因为，我们使用Python时，我们可能跟个傻子一样，在直接调用别人给我们写好的代码接口而已，而Java的很多处理相对要原生一点，我们写的代码要稍微多一点。但是只要完成封装，代码就很难说谁更简单了。而这个封装的过程，其实才是编程最重要的部分，如果这一部分我们都不愿意亲自参与，也不想知道个中实现原理，你想想，你怎么可能成长为一个优秀的程序员，还有天理吗？让那些勤奋的人，情何以堪。</p><p>这一点就像C语言，由于C语言更原生，更底层，几乎没有提供太多封装好的代码接口，很多问题的解决都需要我们自己写代码，所以这也是为什么很多人觉得C语言很难，道理是一样的。但是，牛逼的人，都更喜欢自己创造。相比起C语言来说，Java和C#之类的，为我们提供的代码接口要丰富得多，我们使用起来其实也要容易得多，结论就是，在C语言面前，其它高级语言都太简单了，因为封装了太多可以直接用的类库和接口。所以，要成长为一个高级程序员，一定不是写写简单的应用而已，比如Java的源代码是必须要去学习的，我们一定要知道这些封装好的代码接口的实现细节。否则，跟使用Python封装好的东西，又有何本质区别呢？</p><p>所以，请不要再纠结了。强哥的经验，如果你把Java作为你的人生的第一门用心学习的语言，那么你只需要花极短的时间，就可以基本学会C++，JavaScript，PHP, Python，R，C#，Objective-C，Swift，Go（是的，每一门语言都可以在极短的时间学会，只是具体的问题解决和一些坑需要多积累一些实战经验而已）。但是反过来，如果你把Python作为你的第一门语言，问题就回到外国人使用筷子这件事情上了，答案不言而喻。</p><p>所以，你未来如果要立志成为一个专业的程序员，建议先学习Java（或者C#也行，两者有很多原理上很像，实在不行，C/C++也可以哦），那是给程序员的专属语言，是有门槛的，所以你才能够建立自己的竞争力。如果你只是想玩玩，感受一下，或者是把编程语言作为一个工作中的工具而已，Python是个不错的选择。这是面向学习的建议，如果是在企业中真实做项目，那就不要纠结了，项目需要什么，咱们就学什么，不需要那么多理由，干，才是真理。</p><p>锤子好用还是榔头好用？</p><p>Java好还是Python好？</p><p>为什么非得二选一？</p><p>浮躁，一个吃饭的工具而已，搞技术的，通吃它们不就完了吗，你再也不会纠结了，这，才是一个技术人员该有的状态。难道不是吗？</p><p><b>注：</b>本文为蜗牛学院CEO邓强所撰，原文链接<a href=\"https://link.zhihu.com/?target=http%3A//www.bossqiang.com/article/4\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">bossqiang.com/article/4</span><span class=\"invisible\"></span></a>，转载请联系我方获得授权并注明原文出处。</p>", "要学 Python 需要怎样的基础？": "<p>2020.11.29更新：</p><p>最近一直有小伙伴私信问我如何入门 Python，这里统一答复一下。对于小白来说，有个人引导会比自学要高效的多，尤其容易坚持不下去的小伙伴。可以试试下面这个免费课程，不用本地安装Python环境，可以直接在网页上敲代码，还有大牛老师带着入门，能少走很多弯路！只要跟着老师一行行的敲代码，坚持下来会发现其实学Python很容易！！想要0基础入门的同学现在可以免费领取，能少走很多弯路！</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://xg.zhihu.com/plugin/3857801f726a66b04c88f2ef8bc45fca?BIZ=ECOMMERCE\" class=\"internal\">知乎营销平台</a><p><br></p><p>谢邀。</p><p>目前来说python最好找工作的三个方向：爬虫、数据分析和web开发。</p><p>之前我跟一些转行成功的朋友交流过，有一个朋友印象深刻，跟大家聊一下，朋友A某211研究生毕业，毕业后到了一家航空相关的企业上班，上了两个月之后感觉工作不尽如人意，于是裸辞，在出租屋里买书、刷题，两个月后成功拿到offer，我很诧异，他从裸辞到转行大概只用了两个月，我便问他python学到什么程度便可以投简历了呢？做什么方向的？他是这么回答的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-294b45a0b43a9feac9baf5b1d15f780a_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1080\" data-rawheight=\"1920\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-fd0c62073fb1d0966d3db6a9b445b49e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-294b45a0b43a9feac9baf5b1d15f780a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='1920'&gt;&lt;/svg&gt;\" data-rawwidth=\"1080\" data-rawheight=\"1920\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-fd0c62073fb1d0966d3db6a9b445b49e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-294b45a0b43a9feac9baf5b1d15f780a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-294b45a0b43a9feac9baf5b1d15f780a_720w.jpg?source=54b3c3a5\"></figure><p>相比我推荐的学习路线，我这位朋友可以说是相当简洁了，只学了语法、框架、反扒等最基本的爬虫知识，便去做互联网了，其实我也觉得做爬虫这基本够用了，但是为了保险起见，还是推荐同学们按照我的路线来学习爬虫。</p><p>首先在明确了学习方向之后，比如是写爬虫还是做数据分析抑或web后端，这时候就要开始着手学习基础知识了。我个人比较推荐《python学习手册》这本书，当当上有卖，这本书讲的比较详实，通俗易懂，我就是刷这本书来过基础知识的，那时候我白天上班，所以只能晚上抽时间看，大概花了一个半月吧，基础知识算是一点一点啃完，因为我在大学有一些C语言的基础，所以这本书看起来还是蛮轻松的。</p><p>基础知识学过之后，先别着急做项目，写爬虫啊用第三方库啊，这时候不着急，先抽出大概十天左右刷刷题，刷刷练习题，像是循环啊、函数啊做做题，题目可以再网上找，我记得我当时是在菜鸟教程上找的题来做的，链接在下面：</p><p>当然这点练习题肯定不够，这个就要自己多找找，巩固一下基础知识。</p><p>当你基础知识啃了一遍，练习题也做了，这时候就可以上手爬虫、web和数据分析了，到这其实也没有多难，下面我分开说。<b>（因为这三个方向对新手来说转行相对最容易，工作也相对好找，其他方向不多说，等你成为大神可以研究一下。）</b></p><p>1、首先是爬虫，我是看书来学的，这里我列几本书供大家选择：</p><p>《python爬虫开发与项目实战》《精通python爬虫框架scrapy》《python3网络爬虫开发实战》等等，过多我就不列了，大同小异，选适合自己的，但记住千万别买那种学起来特别吃力的，初学者成就感最重要，我当初学完基础知识后到写下第一个爬某东的图片大概花了一周，时间不多，但是当你看着自己的程序运行起来的时候成就感还是很大的。</p><p>基本的HTTP知识、隐藏IP、多线程之类的学过之后，，可以跟着书做一些项目。然后就是学习爬虫最厉害的最知名的scrapy框架了，这个学爬虫必学的，这个也不会太难，半个月足够。然后就是你会在学爬虫的时候发现在用正则表达式提取图片、文本之类的话会有些html之类的知识不懂，这时候你就可以开始补充一些html和css的知识，当然不用看的太深入，了解大概就好。</p><p>除了以上，还要学会mysql数据库、了解MongoDB、布隆过滤器等等，这些都学会之后，基本的爬虫即就已经掌握了，差不多就可以海投简历。 </p><p>书单的话推荐这两本《head first html 与css 中文版》和《mysql入门很简单》这两本，这个大家根据自己情况选择。</p><p><b>注意：爬虫</b> <b>是数据分析和web的基础，无论你想转行哪个方向，这个必须都要学的。</b></p><p>2.学习了爬虫之后，如果想更进一步深入学习，就可以学习数据分析了。当然这个对初学者略有难度，首先肯定要补一些统计学的知识，不需要太深入，贝叶斯公式总要知道吧，简单的补一些统计学的知识便可以跟书或者视频做项目了。这里我推荐两本我认为还不错的书：</p><p>《利用python进行数据分析》《python数据分析与挖掘实战》《从excel到python——数据分析进阶指南》</p><p>其实python的数据分析无外乎那几个库，做数据分析，pandas和numpy库一定要掌握、mysql等数据库也不必说，都要学习，跟着书或者视频做几个项目，数据可视化啊、清洗数据建立模型啊都会学到，就可以尝试海投一下简历了。</p><p>注意：转行数据分析，python很重要无需多说，excel一定要精通，不会excel基本不用转这个方向，因为很多时候只需要excel就能满足简单的需求了。</p><p>3.web开发。这个也一样，跟着书或者视频做项目，遇到不会的知识要及时补充，Django库和flask库必须会吧，这里也推荐几本书：</p><p>《python高效开发实战——Django、tornado、flask、twisted》《轻量级Django》《flask web开发实战：入门、进阶与原理分析》</p><p>跟着书做一些项目，试着做一个自己的网站，像mysql、nosql、bootsrap等等肯定都是要学的，独立的做几个项目，遇到不会的 多补充知识，就可以投简历啦。</p><p>以上便是python的三个转行方向，自认为我的经历具有可复制性，所以在这里分享给大家，不过我的经历只是参考，还是要看大家个人的努力。以上推荐的书我这里有一些电子版的，等我抽时间整理出来会发在我的微信公众号跟大家分享一下的，有什么不明白的大家私信我即可。</p><p>俗话说，知己知彼才能百战不殆，大家可以根据自身的一个学习进度和认知情况来选择适合自己的学习方式。刚接触Python的同学还是要打好基础，多多上手实操。话不多说，上干货！给大家分享一个免费的Python课程，老师讲解基础知识+网页上学习实操代码，适合小白，比找资料自学高效多了。只要基础打得牢，Python小白也能变敲码大佬。</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://xg.zhihu.com/plugin/e5717f438d924c0aa4f16983c77e64d9?BIZ=ECOMMERCE\" class=\"internal\">知乎营销平台</a><p></p>", "学习 Python 很吃力，我是不是可以放弃编程了？": "<p>其实吧，</p><p>你也没不能接受别人一分钟能赚你一辈子的钱吧…</p><p>比尔盖茨动动手指就有一套房子，你不是也没觉得有什么不对吗？</p><p>那你为什么不能接受有人一分钟能学你一辈子的知识…</p><p>别人用一分钟学你一个小时的事情，不也没什么不对吗？</p><p><br></p><p><b>能接受了就好办了，别人学多快（自己学多慢），关你鸟事。</b></p><p><br></p><p>学习是为了把自己变得厉害，</p><p>不是为了把自己变得比别人厉害。</p><p>因为不管你学不学，总有无数人永远比你厉害，也有无数人永远没你厉害。</p><p>但如果你不学，你就永远不会变得更厉害。</p>", "Python 有什么不为人知的坑？": "<p>这个问题我一定要来回答一波！</p><p>GitHub上有一个项目叫做“wtfpython”，目的就是记录那些Python程序猿总会感到“What the f**k!”的瞬间。我把这个项目的地址贴在下面，然后从里面摘录几个最经典的例子出来。</p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/satwikkansal/wtfpython\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-d46d130f7a21573e9566e837b2bae1b9_l.jpg?source=54b3c3a5\" data-image-width=\"327\" data-image-height=\"327\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/satwikkansal</span><span class=\"invisible\">/wtfpython</span><span class=\"ellipsis\"></span></a><h2>首先，一些关于字符串的“基本”操作——</h2><p>1.</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s2\">\"some_string\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">id</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"mi\">140420665652016</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">id</span><span class=\"p\">(</span><span class=\"s2\">\"some\"</span> <span class=\"o\">+</span> <span class=\"s2\">\"_\"</span> <span class=\"o\">+</span> <span class=\"s2\">\"string\"</span><span class=\"p\">)</span> <span class=\"c1\"># 注意两个的id值是相同的.</span>\n<span class=\"mi\">140420665652016</span>\n</code></pre></div><p>2.</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s2\">\"wtf\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"s2\">\"wtf\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"ow\">is</span> <span class=\"n\">b</span>\n<span class=\"bp\">True</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s2\">\"wtf!\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"s2\">\"wtf!\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"ow\">is</span> <span class=\"n\">b</span>\n<span class=\"bp\">False</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"s2\">\"wtf!\"</span><span class=\"p\">,</span> <span class=\"s2\">\"wtf!\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"ow\">is</span> <span class=\"n\">b</span> \n<span class=\"bp\">True</span> <span class=\"c1\"># 3.7 版本返回结果为 False.</span>\n</code></pre></div><p>3.</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'a'</span> <span class=\"o\">*</span> <span class=\"mi\">20</span> <span class=\"ow\">is</span> <span class=\"s1\">'aaaaaaaaaaaaaaaaaaaa'</span>\n<span class=\"bp\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'a'</span> <span class=\"o\">*</span> <span class=\"mi\">21</span> <span class=\"ow\">is</span> <span class=\"s1\">'aaaaaaaaaaaaaaaaaaaaa'</span>\n<span class=\"bp\">False</span> <span class=\"c1\"># 3.7 版本返回结果为 True</span>\n</code></pre></div><h3>  说明:</h3><ul><li>这些行为是由于 Cpython 在编译优化时, 某些情况下会尝试使用已经存在的不可变对象而不是每次都创建一个新对象. (这种行为被称作字符串的驻留[string interning])</li><li>发生驻留之后, 许多变量可能指向内存中的相同字符串对象. (从而节省内存)</li><li>在上面的代码中, 字符串是隐式驻留的. 何时发生隐式驻留则取决于具体的实现. 这里有一些方法可以用来猜测字符串是否会被驻留:</li><ul><li>所有长度为 0 和长度为 1 的字符串都被驻留.</li><li>字符串在编译时被实现 (<code>'wtf'</code> 将被驻留, 但是 <code>''.join(['w', 't', 'f'])</code> 将不会被驻留)</li><li>字符串中只包含字母，数字或下划线时将会驻留. 所以 <code>'wtf!'</code> 由于包含 <code>!</code> 而未被驻留. </li><li>当在同一行将 <code>a</code> 和 <code>b</code> 的值设置为 <code>\"wtf!\"</code> 的时候, Python 解释器会创建一个新对象, 然后同时引用第二个变量(译: 仅适用于3.7以下, 详细情况请看<a href=\"https://link.zhihu.com/?target=https%3A//github.com/leisurelicht/wtfpython-cn/issues/13\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">这里</a>). 如果你在不同的行上进行赋值操作, 它就不会“知道”已经有一个 <code>wtf！</code> 对象 (因为 <code>\"wtf!\"</code> 不是按照上面提到的方式被隐式驻留的). 它是一种编译器优化, 特别适用于交互式环境.</li><li>常量折叠(constant folding) 是 Python 中的一种窥孔优化(peephole optimization)技术. 这意味着在编译时表达式 <code>'a'*20</code> 会被替换为 <code>'aaaaaaaaaaaaaaaaaaaa'</code> 以减少运行时的时钟周期. 只有长度小于 20 的字符串才会发生常量折叠.</li></ul></ul><h2>关于函数的返回值——</h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">def</span> <span class=\"nf\">some_func</span><span class=\"p\">():</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'from_try'</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'from_finally'</span>\n</code></pre></div><p>输出：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">some_func</span><span class=\"p\">()</span>\n<span class=\"s1\">'from_finally'</span>\n</code></pre></div><h3>  说明:</h3><ul><li>当在 \"try...finally\" 语句的 <code>try</code> 中执行 <code>return</code>, <code>break</code> 或 <code>continue</code> 后, <code>finally</code> 子句依然会执行.</li><li>函数的返回值由最后执行的 <code>return</code> 语句决定. 由于 <code>finally</code> 子句一定会执行, 所以 <code>finally</code> 子句中的 <code>return</code> 将始终是最后执行的语句.</li></ul><h2>关于类的本质——</h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">class</span> <span class=\"nc\">WTF</span><span class=\"p\">:</span>\n  <span class=\"k\">pass</span>\n</code></pre></div><p>输出：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">WTF</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">WTF</span><span class=\"p\">()</span> <span class=\"c1\"># 两个不同的对象应该不相等</span>\n<span class=\"bp\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">WTF</span><span class=\"p\">()</span> <span class=\"ow\">is</span> <span class=\"n\">WTF</span><span class=\"p\">()</span> <span class=\"c1\"># 也不相同</span>\n<span class=\"bp\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"n\">WTF</span><span class=\"p\">())</span> <span class=\"o\">==</span> <span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"n\">WTF</span><span class=\"p\">())</span> <span class=\"c1\"># 哈希值也应该不同</span>\n<span class=\"bp\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">id</span><span class=\"p\">(</span><span class=\"n\">WTF</span><span class=\"p\">())</span> <span class=\"o\">==</span> <span class=\"nb\">id</span><span class=\"p\">(</span><span class=\"n\">WTF</span><span class=\"p\">())</span>\n<span class=\"bp\">True</span>\n</code></pre></div><h3>  说明:</h3><ul><li>当调用 <code>id</code> 函数时, Python 创建了一个 <code>WTF</code> 类的对象并传给 <code>id</code> 函数. 然后 <code>id</code> 函数获取其id值 (也就是内存地址), 然后丢弃该对象. 该对象就被销毁了.</li><li>当我们连续两次进行这个操作时, Python会将相同的内存地址分配给第二个对象. 因为 (在CPython中) <code>id</code> 函数使用对象的内存地址作为对象的id值, 所以两个对象的id值是相同的.</li><li>综上, 对象的id值仅仅在对象的生命周期内唯一. 在对象被销毁之后, 或被创建之前, 其他对象可以具有相同的id值.</li><li>那为什么 <code>is</code> 操作的结果为 <code>False</code> 呢? 这是由对象销毁的顺序造成的.</li></ul><h2>你了解Python中的for循环语句吗——</h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">):</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n</code></pre></div><p>输出：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">0</span>\n<span class=\"mi\">1</span>\n<span class=\"mi\">2</span>\n<span class=\"mi\">3</span>\n</code></pre></div><p><b>说明:</b></p><ul><li>由于循环在Python中工作方式, 赋值语句 <code>i = 10</code> 并不会影响迭代循环, 在每次迭代开始之前, 迭代器(这里指 <code>range(4)</code>) 生成的下一个元素就被解包并赋值给目标列表的变量(这里指 <code>i</code>)了.</li></ul><h2>“is”究竟是什么——</h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">256</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">256</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"ow\">is</span> <span class=\"n\">b</span>\n<span class=\"bp\">True</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">257</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">257</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"ow\">is</span> <span class=\"n\">b</span>\n<span class=\"bp\">False</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">257</span><span class=\"p\">;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">257</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"ow\">is</span> <span class=\"n\">b</span>\n<span class=\"bp\">True</span>\n</code></pre></div><h3>  说明:</h3><p><b><code>is</code></b> <b>和</b> <b><code>==</code></b> <b>的区别</b></p><ul><li><code>is</code> 运算符检查两个运算对象是否引用自同一对象 (即, 它检查两个运算对象是否相同).</li><li><code>==</code> 运算符比较两个运算对象的值是否相等.</li><li>因此 <code>is</code> 代表引用相同, <code>==</code> 代表值相等.  还有一个例子可以用来说明这一点——</li></ul><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[]</span> <span class=\"o\">==</span> <span class=\"p\">[]</span>\n<span class=\"bp\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[]</span> <span class=\"ow\">is</span> <span class=\"p\">[]</span> <span class=\"c1\"># 这两个空列表位于不同的内存地址.</span>\n<span class=\"bp\">False</span>\n</code></pre></div><p><b><code>256</code></b> <b>是一个已经存在的对象, 而</b> <b><code>257</code></b> <b>不是</b></p><p>当你启动Python 的时候, 数值为 <code>-5</code> 到 <code>256</code> 的对象就已经被分配好了. 这些数字因为经常被使用, 所以会被提前准备好.</p><p>Python 通过这种创建小整数池的方式来避免小整数频繁的申请和销毁内存空间.</p><h2>is not … is not is (not …) 你在说绕口令吗？</h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'something'</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span>\n<span class=\"bp\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'something'</span> <span class=\"ow\">is</span> <span class=\"p\">(</span><span class=\"ow\">not</span> <span class=\"bp\">None</span><span class=\"p\">)</span>\n<span class=\"bp\">False</span>\n</code></pre></div><h3>  说明:</h3><ul><li><code>is not</code> 是个单独的二元运算符, 与分别使用 <code>is</code> 和 <code>not</code> 不同.</li><li>如果操作符两侧的变量指向同一个对象, 则 <code>is not</code> 的结果为 <code>False</code>, 否则结果为 <code>True</code>.</li></ul><h2>三个引号——</h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s1\">'wtfpython'''</span><span class=\"p\">)</span>\n<span class=\"n\">wtfpython</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">\"wtfpython\"\"\"</span><span class=\"p\">)</span>\n<span class=\"n\">wtfpython</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># 下面的语句会抛出 `SyntaxError` 异常</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># print('''wtfpython')</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># print(\"\"\"wtfpython\")</span>\n</code></pre></div><h3>  说明:</h3><ul><li>Python 提供隐式的字符串连接, 例如,</li></ul><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">\"wtf\"</span> <span class=\"s2\">\"python\"</span><span class=\"p\">)</span>\n<span class=\"n\">wtfpython</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">\"wtf\"</span> <span class=\"s2\">\"\"</span><span class=\"p\">)</span> <span class=\"c1\"># or \"wtf\"\"\"</span>\n<span class=\"n\">wtf</span>\n</code></pre></div><ul><li><code>'''</code> 和 <code>\"\"\"</code> 在 Python中也是字符串定界符, Python 解释器在先遇到三个引号的的时候会尝试再寻找三个终止引号作为定界符, 如果不存在则会导致 <code>SyntaxError</code> 异常.</li></ul><h2>假作真时真亦假——</h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"bp\">True</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n<span class=\"k\">if</span> <span class=\"bp\">True</span> <span class=\"o\">==</span> <span class=\"bp\">False</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s2\">\"I've lost faith in truth!\"</span><span class=\"p\">)</span>\n</code></pre></div><p>输出：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">I</span><span class=\"s1\">'ve lost faith in truth!</span>\n</code></pre></div><h3>  说明:</h3><ul><li>最初, Python 并没有 <code>bool</code> 型 (人们用0表示假值, 用非零值比如1作为真值). 后来他们添加了 <code>True</code>, <code>False</code>, 和 <code>bool</code> 型, 但是, 为了向后兼容, 他们没法把 <code>True</code> 和 <code>False</code> 设置为常量, 只是设置成了内置变量.</li><li>Python 3 由于不再需要向后兼容, 终于可以修复这个问题了, 所以这个例子无法在 Python 3.x 中执行!</li></ul><h2>骗过你的眼睛——</h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mi\">11</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">valu</span><span class=\"err\">е</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span>\n<span class=\"mi\">11</span>\n</code></pre></div><h3>  说明:</h3><p>一些非西方字符虽然看起来和英语字母相同, 但会被解释器识别为不同的字母.</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s1\">'е'</span><span class=\"p\">)</span> <span class=\"c1\"># 西里尔语的 'e' (Ye)</span>\n<span class=\"mi\">1077</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s1\">'e'</span><span class=\"p\">)</span> <span class=\"c1\"># 拉丁语的 'e', 用于英文并使用标准键盘输入</span>\n<span class=\"mi\">101</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'е'</span> <span class=\"o\">==</span> <span class=\"s1\">'e'</span>\n<span class=\"bp\">False</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mi\">42</span> <span class=\"c1\"># 拉丁语 e</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">valu</span><span class=\"err\">е</span> <span class=\"o\">=</span> <span class=\"mi\">23</span> <span class=\"c1\"># 西里尔语 'e', Python 2.x 的解释器在这会抛出 `SyntaxError` 异常</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span>\n<span class=\"mi\">42</span>\n</code></pre></div><h2>奇怪的加号——</h2><p>1.</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]</span>\n</code></pre></div><p>输出：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span>\n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span>\n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n</code></pre></div><p>2.</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span>\n<span class=\"n\">a</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]</span>\n</code></pre></div><p>输出：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span>\n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span>\n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]</span>\n</code></pre></div><h3>  说明:</h3><ul><li><code>a += b</code> 并不总是与 <code>a = a + b</code> 表现相同. 类实现 <code><i>op=</i></code> 运算符的方式 <i>也许</i> 是不同的, 列表就是这样做的.</li><li>表达式 <code>a = a + [5,6,7,8]</code> 会生成一个新列表, 并让 <code>a</code> 引用这个新列表, 同时保持 <code>b</code> 不变.</li><li>表达式 <code>a += [5,6,7,8]</code> 实际上是使用的是 \"extend\" 函数, 所以 <code>a</code> 和 <code>b</code> 仍然指向已被修改的同一列表.</li></ul><p>最后，再来一条超极机密——</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"kn\">import</span> <span class=\"nn\">antigravity</span>\n</code></pre></div><p>别问，自己试一试就知道了！</p>"}{"毫无基础的人如何入门 Python ？": "关于中文字幕的问题：中文字幕系好心人无偿翻译，有些课程可能就缺少文本。我在2015年学的时候基本所有课程都有中文字幕，如果有这之后的新课，可能会没有中文字幕。<br>关于钱的问题：所有课程都是免费的，交钱只会多一个证明你完成课程的证书。<br><br><br>--------<br><br><br>在Coursera上有一门用Python做游戏的课程：<a href=\"https://link.zhihu.com/?target=https%3A//www.coursera.org/course/interactivepython1\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python交互编程入门</a>。<br>一共两部分，9周课时，有中文字幕。从最基础的变量开始讲起，每周都会留一个编程作业，编写各种小游戏：猜拳、猜数字、虚拟乒乓球、21点...就算是完全不了解编程的新手也可以逐渐入门，直至最后做出一个飞行射击的游戏。而且这门课还提供了一个功能强大的模拟Python环境的编程网站<a href=\"https://link.zhihu.com/?target=http%3A//www.codeskulptor.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CodeSkulptor</a>，可以实现（和Python并非完全一样）很多基本的语法和函数，以及一个简单易用的simplegui图形界面包。<br><br>另外还有一个网站，<a href=\"https://link.zhihu.com/?target=https%3A//www.codecademy.com/tracks/python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python | Codecademy</a> 可以学习Python以及一些其他语言。这个教程更加基础，连True False都可以讲好几页...适合真正完全没接触过编程的人。<br>--------<br>更新：<br>第一周的时候你做的游戏大概是这样的：<br><figure><noscript><img data-rawheight=\"459\" src=\"https://pic2.zhimg.com/50/b120961ca02ba3d721de9d402588f8eb_720w.jpg?source=54b3c3a5\" data-rawwidth=\"807\" class=\"origin_image zh-lightbox-thumb\" width=\"807\" data-original=\"https://pic2.zhimg.com/b120961ca02ba3d721de9d402588f8eb_720w.jpg?source=54b3c3a5\"></noscript><img data-rawheight=\"459\" src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='807'%20height='459'&gt;&lt;/svg&gt;\" data-rawwidth=\"807\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"807\" data-original=\"https://pic2.zhimg.com/b120961ca02ba3d721de9d402588f8eb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/b120961ca02ba3d721de9d402588f8eb_720w.jpg?source=54b3c3a5\"></figure>过了几周后就会变成这样的：<br><figure><noscript><img data-rawheight=\"404\" src=\"https://pic1.zhimg.com/50/aec45372a59ab23ec050033a68b76312_720w.jpg?source=54b3c3a5\" data-rawwidth=\"605\" class=\"origin_image zh-lightbox-thumb\" width=\"605\" data-original=\"https://pic4.zhimg.com/aec45372a59ab23ec050033a68b76312_720w.jpg?source=54b3c3a5\"></noscript><img data-rawheight=\"404\" src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='605'%20height='404'&gt;&lt;/svg&gt;\" data-rawwidth=\"605\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"605\" data-original=\"https://pic4.zhimg.com/aec45372a59ab23ec050033a68b76312_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/aec45372a59ab23ec050033a68b76312_720w.jpg?source=54b3c3a5\"></figure>这样的：<br><figure><noscript><img data-rawheight=\"534\" src=\"https://pic4.zhimg.com/50/a225777483b5b91b21a4a0652650750a_720w.jpg?source=54b3c3a5\" data-rawwidth=\"786\" class=\"origin_image zh-lightbox-thumb\" width=\"786\" data-original=\"https://pic4.zhimg.com/a225777483b5b91b21a4a0652650750a_720w.jpg?source=54b3c3a5\"></noscript><img data-rawheight=\"534\" src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='786'%20height='534'&gt;&lt;/svg&gt;\" data-rawwidth=\"786\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"786\" data-original=\"https://pic4.zhimg.com/a225777483b5b91b21a4a0652650750a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/a225777483b5b91b21a4a0652650750a_720w.jpg?source=54b3c3a5\"></figure>直到最后变成这样的：<br><figure><noscript><img data-rawheight=\"451\" src=\"https://pic1.zhimg.com/50/9a04afcaae184f42e2a040947e5df822_720w.jpg?source=54b3c3a5\" data-rawwidth=\"604\" class=\"origin_image zh-lightbox-thumb\" width=\"604\" data-original=\"https://pic2.zhimg.com/9a04afcaae184f42e2a040947e5df822_720w.jpg?source=54b3c3a5\"></noscript><img data-rawheight=\"451\" src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='604'%20height='451'&gt;&lt;/svg&gt;\" data-rawwidth=\"604\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"604\" data-original=\"https://pic2.zhimg.com/9a04afcaae184f42e2a040947e5df822_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/9a04afcaae184f42e2a040947e5df822_720w.jpg?source=54b3c3a5\"></figure>", "数学不好，能学好算法吗?": "<p>说一个面试故事。</p><p>今年年初，我面试了一位实习生。这位候选人的简历看起来挺丰富的，貌似参加过一些知名的竞赛，也有一定相关的科研经历。</p><p>由于我刚刚毕业不久，对编程类题目相对熟悉，因此师兄让我去面试他写代码的能力。</p><p>看到候选人简历的项目描述中，有这样一段经历大概是这样的：</p><blockquote>带领团队参加了xxxx大数据竞赛，任务是完成xx目标匹配的检索，最终获得第三名。</blockquote><p>我便简单询问了相关经历，并提出第一个算法问题：</p><blockquote>在一个长度为n的数组中，查找出前k大的元素，最佳时间复杂度是多少？</blockquote><p>他听了一愣，可能是没有马上理解我的问题。</p><p>我解释了一下出这道题目的原因：既然是检索任务，肯定是在一个数据候选集中依据某种度量方式进行比较，最终得到最符合任务需求的相关结果。那么很自然地，问题可以抽象为：在规模为n的候选集中，挑选最满足要求的k个结果。</p><p>他想了一下，表示他的直接思路是将数组排个序，然后取出前k个。</p><p>我：嗯，这是一种解决方案。这样的时间复杂度是多少？</p><p>（我想，一般面试题的回答套路都是先答个最基础的，然后再不断优化，也没毛病。）</p><p>他思考了一小会儿，不确定地说：nlogn吧。</p><p>我：还有更优化的方案吗？</p><p>他沉默了。后来，我开始不断提示，在提示他”对整个数组进行排序“有些浪费之后，他的思路变成了，遍历整个数组，找出最大的那个，拿出来，再遍历一次，找出第二大的，再拿出来……</p><p>我开始为他捉急了。</p><p>最终，他在我的不断提醒下磕磕绊绊明白了题目的答案。</p><p>而在写出这个题目的代码的过程中，更是艰难了。</p><p>如此这般，我实在不敢相信，他简历中的这些看起来很厉害的项目经历，究竟能有多厉害。</p><p>最后我礼貌地向他表示面试结束。在送他离开时，我含蓄地提醒他，这一类<code>基础且贴近实际</code>的算法题目，讲道理是应该要能够写出来的。</p><p><br></p><p>回到这个问题，上述面试中的<code>检索算法</code>和<code>数学</code>有什么直接的联系吗？</p><p>我个人感觉没有。当然，也有可能我忽略了一些潜意识中已经掌握的基础数学原理。</p><p><b>算法只是对解题方案的一种准确而完整的描述，是解决问题的一系列清晰指令。只要对现实问题有足够清晰的认识，学习、掌握算法并不需要依赖于数学基础。</b></p><p><b>因此，数学不好，也能学好算法，只是有可能需要绕一点弯。</b></p><p><br></p><p>下面来认真回答一下题主的几个问题：</p><p><br></p><p><b><u>1.学习算法和数据结构能带来什么实际作用？</u></b></p><p>编程的最终目的是用于解决现实生活中的实际问题。</p><p>要将这些问题转化为计算机可以读懂的内容，通常是有难度的，这可以理解为现实问题与代码之间的「语义鸿沟」。如果在编程的过程中，能够使用适当的「数据结构」进行表示和建模，能够最大程度减少这种转化所需的工作量。</p><p>在问题有了恰当的表示方法后，就需要真正开始解决问题，之前已经提到，解决问题的所有准确描述方案都可以统称为「算法」。</p><p><b>因此，学习「算法」和「数据结构」的实际作用，就是学习如何将现实场景中的问题转换为代码，并高效正确地解决这个问题。</b></p><p><br></p><p><b><u>2.为什么很多面试都需要考算法跟数据结构呢？</u></b></p><p>其实我也曾抱怨过面试要考算法和数据结构，因为这东西是需要复习的，尤其是一些不常用的算法和数据结构，在一段时间没写后很容易忘记。</p><p>然而转念一想，如果不考察这个，还能考察什么呢？</p><p><br></p><p>比较可笑的是那些国企和银行的行测题目，一堆图象找规律。这完全是在臆断出题人的主观意愿，虽然确实对候选者的思维逻辑有一定的筛选功能，但并没有太多实际的工程价值。</p><p>可以参考 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/184d63c15edb58b42e0a02628945fa76\" data-hash=\"184d63c15edb58b42e0a02628945fa76\" data-hovercard=\"p$b$184d63c15edb58b42e0a02628945fa76\">@曾加</a> 学长的这篇文章，对我的思考方式很有启发。</p><a href=\"https://zhuanlan.zhihu.com/p/33126929\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-93220960f2442546ae621227dcc3f3a1_bh.jpg?source=54b3c3a5\" data-image-width=\"2042\" data-image-height=\"852\" class=\"internal\">1,2,4,8,16……数列的下一项是什么？</a><p>此外，在程序员面试中常见的是考察项目经历，但这其中还是存在相对较多的“水份”因素。有可能沉默少言的面试者实际上是项目的核心开发者，也有可能口若悬河的人把自己的工作吹得天花乱坠却其实没有什么真实水平。</p><p>可以参考Linus大神说过的话：</p><blockquote>Talk is cheap, show me the code.</blockquote><p><br></p><p>毕竟面试时间较短，不可能完成一名候选者在实际项目中工作能力的全面考察。</p><p>因此，考察算法和数据结构，可以说是一种无奈之举。只能通过基础知识，用面试过程中相对客观的评价体系，用一种能够直接反映候选人能力的证据，来进行筛选。</p><p><br></p><p><b><u>3.我数学底子比较差，需要在补数学知识吗，或者跟数学的那些知识挂钩？</u></b></p><p>说来惭愧，其实我的数学底子也差。经常在看论文时阅读到某些单词如<code>orthogonality</code>，心里就害怕了，因为知道是正交的相关定理，知道是大一时期《几何与代数》课程学习过的，却早已经忘光了。</p><p><b>我的个人建议是，补是肯定要补的。但是在时间有限的情况下，盲目补数学知识的效果不大。</b></p><p>可以尝试以任务为导向，比如在工作中遇到了什么问题，如果自己没能解决，参考同学、同事、网络的标准答案后，记得反思自己为什么没有想到这些解决思路，是不是因为空缺了什么数学知识。</p><p>再以此为契机去补相关的数学知识。</p><p>在弥补一段时间后记得总结，不断完善和整理自己的数学知识体系。</p><p><br></p><p><b><u>4.数学很差，基本都忘了，能学好算法吗？</u></b></p><p>能，但存在天花板。</p><p>算法是生活中问题的解决方案，相比于一些高等数学理论来说，更贴近于生活，也更容易理解。</p><p>有很多算法并不需要数学依赖，可以直接学习。</p><p>有许多算法的解法需要数学基础，此时正好以算法为切入点，寻找自己数学知识体系的不足之处，在学习算法（主导）的过程中不断增强自己的数学功底（辅助）。</p><p><br></p><p>========================</p><p>20180309更新：</p><p>感谢大家的点赞和讨论~ </p><p>昨天午休时看到这个问题，想起当时的体会因此写了这个答案，没想到评论区引来了这么多大神的讨论。我的初衷只是想说明，某些算法与数学没有非常强的依赖关系，不必有畏难情绪。当然，学好数学也是很重要的。</p><p>上班时比较忙，没有时间一一回复每一条评论，很抱歉。有时间了我会认真看一下，挑一些我能够回答的进行回复，谢谢~</p><p><br></p><p>关于许多同学表示这类题目“见过就能快速做出来，没见过很难快速想出”的困惑，我的想法正如在评论区对 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/c7cde0a89e9d11a929e6d81a5423c0a0\" data-hash=\"c7cde0a89e9d11a929e6d81a5423c0a0\" data-hovercard=\"p$b$c7cde0a89e9d11a929e6d81a5423c0a0\">@Yu Cheung</a> 同学问题的解释：</p><blockquote>具体到题目的话，其实我的问题描述并不是非常精确，这时候其实期望候选者对问题本身进行提问。<br>比如候选集的实际场景性质？如果数据集是一群人的年龄，一种直接的方法是像评论区有些大佬说的桶排序方式。比如我具体是要取前k个数（乱序即可），还是前k个顺序排列的数？这个对于解法也有一定的差异。另外还有k与n的大小关系等等因素可以考虑。<br>面试是一个相互讨论的过程，主要是考察面试者的思路，并不一定要求能在短时间内把题目做出来。</blockquote><p>关于面试的一些讨论， <a class=\"member_mention\" href=\"https://www.zhihu.com/people/cbd40082b37d24a265829349934e67a4\" data-hash=\"cbd40082b37d24a265829349934e67a4\" data-hovercard=\"p$b$cbd40082b37d24a265829349934e67a4\">@黄路遥</a> 同学提出了一个挺好的问题：</p><blockquote>请教一个问题，我一直挺疑惑的。我知道面试官希望面试者能多讨论一下题目的内容，比如您说应用场景之类的。但我觉得这种思路挺不自然的，我们做工程的时候是正向思维的，即根据实际场景抽象模型出来，但这里反推实际场景用的是逆向思维，感觉很不自然。另外比如您说的，数据集是一组年龄，那如果我没有做过年龄相关的项目或者做的时候没有仔细思考这个特别之处（这个感觉做学生比赛也挺正常的），感觉很容易就被问蒙了，因为我知道面试官的意思是一组年龄和一组普通数据集做法可能不太一样，但我一时半会反应不过来或者没想到桶排序，面试者可能就没办法答的那么好。</blockquote><p>昨晚我认真思考了一下，个人体会是这样：</p><blockquote>之所以这样“故意模糊”题目，有两点好处。一是将题目的描述尽量简化，让面试者根据自己的认知去填补。如果您看到这个题目，只想到了最普通的n选k场景，接下来会让您在这种场景下阐述思路继续解题，没有考虑到“年龄场景”并不会影响面试评价。如果主线答题任务完成得比较好，面试官可以随口一问“如果遇到的是年龄场景有没有更优的解法”，此时算是一种加分任务。对于您（面试者）来说，一开始接触的自己选择的最熟悉的场景，有利于发挥，不致于立刻碰壁毫无思路；而完成普通场景后，再被问及“年龄场景”时，也可以算是进行“根据实际场景”的正向思维思路吧？<br>第二点，您所说的“实际场景”，在工程中很多时候也是不确定的。总之我的个人感觉，和产品经理讨论需求的时候，总是要从各个方面反复确认需求细节，反复提出各种极端情况咨询特殊案例下的期望结果，才能真正透彻地明白产品设计者的实际意图。这种主动”发起讨论“能够避免对需求的误解，防止无谓的开发工作，以及失败后的相互扯皮。从这个角度来说，这和面试者参与面试过程中遇到的场景还是有几分相似之处的，“面对不确定问题时的适当质疑”在工程开发中也是挺有用的。</blockquote><p>其它讨论可以移步评论区~</p>", "Python 有哪些好的学习资料或者博客？": "<h2>不废话直接上干货！</h2><h2>一、Python基础</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//bop.mol.uno/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python简明教程（Python3）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/tutorial/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3.7.4官方中文文档</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/zh-cn/3/library/index.html%23library-index\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python标准库中文版</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">廖雪峰 Python 3 中文教程</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.pythondoc.com/pythontutorial3/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 3.3 官方教程中文版</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//python3-cookbook.readthedocs.io/zh_CN/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3 Cookbook 中文版</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//old.sebug.net/paper/books/LearnPythonTheHardWay/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">笨办法学 Python</a> (<a href=\"https://link.zhihu.com/?target=http%3A//liam0205.me/attachment/Python/PyHardWay/Learn_Python_The_Hard_Way_zh-cn.pdf\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PDF</a><a href=\"https://link.zhihu.com/?target=https%3A//www.gitbook.com/download/epub/book/wizardforcel/lpthw\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">EPUB</a>)</li><li><a href=\"https://link.zhihu.com/?target=http%3A//codingpy.com/books/thinkpython2/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Think Python 2e》最新版中文</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//wizardforcel.gitbooks.io/core-python-2e/content/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 核心编程 第二版 中文</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.runoob.com/python3/python3-tutorial.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">菜鸟教程 Python3基础</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.w3cschool.cn/python3/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">W3cschool Python3基础</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//pythonguidecn.readthedocs.io/zh/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python最佳实践指南</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.gitbook.com/book/wizardforcel/python-essential-tutorial/details\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 精要教程</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.pythontab.com/interpy/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python进阶 中文版</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/lijin-THU/notes-python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">中文 Python 笔记</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//morvanzhou.github.io/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">莫烦python教程</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.python-guide.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">The Hitchhiker's Guide to Python</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/TwoWater/Python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">草根学 Python</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av14184325/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python从入门到精通教程 视频（600集）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.kaggle.com/learn/python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Kaggle Python基础学习（英文）</a></li></ul><h2>二、Python资源</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//www.pythontab.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python中文开发者社区</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/52957088\" class=\"internal\">Python 资源大全中文版</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python-100天从新手到大师（github）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/521xueweihan/HelloGitHub\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub上入门开发项目汇总（含Python）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/taizilongxu/interview_python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python面试题-1</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/kenwoodjw/python_interview_question\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python面试题-2</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/JushuangQiao/Python-Offer\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python面试题-3</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/mahmoud/awesome-python-applications\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Awesome Python Applications 酷炫Python小应用</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/sylnsfar/qrcode\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python艺术二维码生成器</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/injetlee/Python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python有趣脚本集合</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/keon/algorithms\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python数据结构和算法（英文）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/mahmoud/awesome-python-applications\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Awesome Python Applications</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/apachecn/Interview/tree/master/docs/Algorithm/Leetcode/Python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python常见算法刷题</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.lfd.uci.edu/%7Egohlke/pythonlibs/%23\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 第三方库whl文件下载</a></li></ul><h2>三、Python爬虫</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/facert/awesome-spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">awesome-spider 爬虫集合</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/CriseLYJ/awesome-python-login-model\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python模拟登陆&amp;爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jhao104/proxy_pool\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬虫代理IP池(proxy pool)</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/lining0806/PythonSpiderNotes\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门网络爬虫之精华版</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Jack-Cherish/python-spider\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python3网络爬虫实战</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Alfred1984/interesting-python\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">有趣的Python爬虫和Python数据分析小项目</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/lining0806/PythonSpiderNotes\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门爬虫</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//2.python-requests.org/en/master/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Requests 英文文档</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//2.python-requests.org//zh_CN/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Requests 中文文档</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//docs.scrapy.org/en/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy 英文文档</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//scrapy-chs.readthedocs.io/zh_CN/0.24/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scrapy 中文文档</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//docs.pyspider.org/en/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Pyspider 英文文档</a></li></ul><h2>四、Python可视化</h2><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//seaborn.pydata.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">seaborn 英文文档</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//seaborn.apachecn.org/%23/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">seaborn 中文文档</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//matplotlib.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">matplotlib 英文文档</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//wizardforcel.gitbooks.io/matplotlib-user-guide/content/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">matplotlib 中文文档</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//pyecharts.org/%23/zh-cn/intro\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">pyecharts 中文文档（官方）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//plot.ly/python/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">plotly绘图官方教程 英文文档</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//bokeh.pydata.org/en/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">bokeh动态可视化教程 英文文档</a></li></ul><h2>五、python数据分析</h2><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//pandas.pydata.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">pandas 英文文档</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//pandas.apachecn.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">pandas 中文文档（非官方）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//seancheney.gitbook.io/python-for-data-analysis-2nd/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">利用python进行数据分析 第二版（中文）</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.numpy.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">numpy 英文文档</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//numpy.apachecn.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">numpy 中文文档（非官方）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/rougier/numpy-100\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">numpy 100 练习题</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jrjohansson/scientific-python-lectures\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python科学计算笔记（英文）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/FavioVazquez/ds-cheatsheets\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">数据科学速查表（英文）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//jakevdp.github.io/PythonDataScienceHandbook/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python data science handbook（python数据科学手册）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/donnemartin/data-science-ipython-notebooks\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">data science python notebook（数据科学python笔记）</a></li></ul><h2>六、python机器学习</h2><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/apachecn/AiLearning\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">AI Learning 机器学习实战 中文（GitHub 15000星）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.kaggle.com/learn/overview\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Kaggle 机器学习基础学习</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//zh.d2l.ai/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">动手学深度学习</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//scikit-learn.org/stable/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">scikit-learn 英文文档</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//sklearn.apachecn.org/%23/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">scikit-learn 中文文档</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//xgboost.apachecn.org/%23/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">xgboost 中文文档</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//machinelearningmastery.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">machine learning mastery 博客（英文）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/ageron/handson-ml\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">机器学习笔记 英文</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//fe4ml.apachecn.org/%23/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">面向机器学习的特征工程</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//keras.io/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">keras英文文档</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//keras.io/zh/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">keras中文文档</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/aymericdamien/TensorFlow-Examples\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">TensorFlow Examples</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/imhuay/Algorithm_Interview_Notes-Chinese\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">面试-机器学习算法试题及讲解（中文）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Avik-Jain/100-Days-Of-ML-Code\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">机器学习100天练习（英文）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/MLEveryday/100-Days-Of-ML-Code\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">机器学习100天练习（中文）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av9912938%3Ffrom%3Dsearch%26seid%3D11914534456869662293\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">吴恩达-机器学习 视频（b站）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av37947862%3Ffrom%3Dsearch%26seid%3D11914534456869662293\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">机器学习算法基础 视频（b站）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av34661735%3Ffrom%3Dsearch%26seid%3D9109291334133521229\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">吴恩达-神经网络和深度学习 视频（b站）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/av17741845%3Ffrom%3Dsearch%26seid%3D9109291334133521229\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">李飞飞-深度学习与计算机视觉 视频（b站）</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Smilexuhc/Data-Competition-TopSolution\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">kaggle等数据比赛TOP解决方案集合</a> </li></ul><p>更多关注：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://zhuanlan.zhihu.com/p/69869004\" data-image=\"https://pic1.zhimg.com/v2-ac39235b2c14052f9c4038b426168354_bh.jpg?source=54b3c3a5\" data-image-width=\"500\" data-image-height=\"300\" class=\"internal\">濡须一扁舟：数据分析资料汇总（含python、爬虫、数据库、大数据、tableau等）</a><blockquote><b>此资源持续更新~~欢迎点赞收藏关注！</b></blockquote><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p></p>", "Python 编码为什么那么蛋疼？": "一旦走上了编程之路，如果你不把编码问题搞清楚，那么它将像幽灵一般纠缠你整个职业生涯，各种灵异事件会接踵而来，挥之不去。只有充分发挥程序员死磕到底的精神你才有可能彻底摆脱编码问题带来的烦恼，我第一次遇到编码问题是写 JavaWeb 相关的项目，一串字符从浏览器游离到应用程序代码中，翻江倒海沉浸到数据库中，随时随地都有可能踩到编码的地雷。第二次遇到编码问题就是学 Python 的时候，在爬取网页数据时，编码问题又出现了，当时我的心情是奔溃的，用时下最ing的一句话就是：“我当时就懵逼了”。为了搞清字符编码，我们得从计算机的起源开始，计算机中的所有数据，不论是文字、图片、视频、还是音频文件，本质上最终都是按照类似 01010101 的数字形式存储的。我们是幸运的，我们也是不幸的，幸运的是时代赋予了我们都有机会接触计算机，不幸的是，计算机不是我们国人发明的，所以计算机的标准得按美帝国人的习惯来设计，那么最开始计算机是通过什么样的方式来表现字符的呢？这要从计算机编码的发展史说起。<br><br><b>ASCII</b><br>每个做 JavaWeb 开发的新手都会遇到乱码问题，每个做 Python 爬虫的新手都会遇到编码问题，为什么编码问题那么蛋疼呢？这个问题要从1992年 Guido van Rossum 创造 Python 这门语言说起，那时的 Guido 绝对没想到的是 Python 这门语言在今天会如此受大家欢迎，也不会想到计算机发展速度会如此惊人，尽管 Guido 在当初设计这门语言时是不需要关心编码的，因为在英语世界里，字符的个数非常有限，26个字母（大小写）、10个数字、标点符号、控制符，也就是键盘上所有的键所对应的字符加起来也不过是一百多个字符而已，这在计算机中用一个字节的存储空间来表示一个字符是绰绰有余的，因为一个字节相当于8个比特位，8个比特位可以表示256个符号。于是聪明的美国人就制定了一套字符编码的标准叫ASCII(American Standard Code for Information Interchange)，每个字符都对应唯一的一个数字，比如字符A对应的二进制数值是01000001，对应的十进制就是65。最开始ASCII只定义了128个字符编码，包括96个文字和32个控制符号，一共128个字符只需要一个字节的7位就能表示所有的字符，因此 ASCII 只使用了一个字节的后7位，最高位都为0。每个字符与ASCII码的对应关系可查看网站<a href=\"https://link.zhihu.com/?target=http%3A//www.ascii-code.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ascii-code</a>。 <br><figure><noscript><img src=\"https://pic1.zhimg.com/50/17a164b78dc784ad5362c7f2e6b104ce_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1178\" data-rawheight=\"906\" class=\"origin_image zh-lightbox-thumb\" width=\"1178\" data-original=\"https://pic3.zhimg.com/17a164b78dc784ad5362c7f2e6b104ce_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1178'%20height='906'&gt;&lt;/svg&gt;\" data-rawwidth=\"1178\" data-rawheight=\"906\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1178\" data-original=\"https://pic3.zhimg.com/17a164b78dc784ad5362c7f2e6b104ce_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/17a164b78dc784ad5362c7f2e6b104ce_720w.jpg?source=54b3c3a5\"></figure><b>EASCII(ISO/8859-1)</b><br>然而计算机慢慢地普及到其他西欧地区时，他们发现还有很多西欧所特有的字符是 ASCII 编码表中没有的，于是后来出现了可扩展的 ASCII 叫 EASCII ，顾名思义，它是在ASCII的基础上扩展而来，把原来的7位扩充到8位，它完全兼容ASCII，扩展出来的符号包括表格符号、计算符号、希腊字母和特殊的拉丁符号。然而 EASCII 时代是一个混乱的时代，大家没有统一标准，他们各自把最高位按照自己的标准实现了自己的一套字符编码标准，比较著名的就有 <strong>CP437</strong>， CP437 是 Windows 系统中使用的字符编码，如下图：<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/9269dd9e4793ab5a13e40753f23c7f2b_720w.jpg?source=54b3c3a5\" data-rawwidth=\"573\" data-rawheight=\"322\" class=\"origin_image zh-lightbox-thumb\" width=\"573\" data-original=\"https://pic1.zhimg.com/9269dd9e4793ab5a13e40753f23c7f2b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='573'%20height='322'&gt;&lt;/svg&gt;\" data-rawwidth=\"573\" data-rawheight=\"322\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"573\" data-original=\"https://pic1.zhimg.com/9269dd9e4793ab5a13e40753f23c7f2b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/9269dd9e4793ab5a13e40753f23c7f2b_720w.jpg?source=54b3c3a5\"></figure><br>另外一种被广泛使用的 EASCII 还有 <strong>ISO/8859-1(Latin-1)</strong>，它是国际标准化组织（ISO）及国际电工委员会（IEC）联合制定的一系列8位元字符集的标准，ISO/8859-1 只继承了 CP437 字符编码的128-159之间的字符，所以它是从160开始定义的，不幸的是这些众多的 ASCII 扩充字集之间互不兼容。 <br><b><figure><noscript><img src=\"https://pic2.zhimg.com/50/868e60bf85b62201aea8781f1f37c1cb_720w.jpg?source=54b3c3a5\" data-rawwidth=\"771\" data-rawheight=\"430\" class=\"origin_image zh-lightbox-thumb\" width=\"771\" data-original=\"https://pic4.zhimg.com/868e60bf85b62201aea8781f1f37c1cb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='771'%20height='430'&gt;&lt;/svg&gt;\" data-rawwidth=\"771\" data-rawheight=\"430\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"771\" data-original=\"https://pic4.zhimg.com/868e60bf85b62201aea8781f1f37c1cb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/868e60bf85b62201aea8781f1f37c1cb_720w.jpg?source=54b3c3a5\"></figure><br>GBK</b><br>随着时代的进步，计算机开始普及到千家万户，比尔盖茨让每个人桌面都有一台电脑的梦想得以实现。但是计算机进入中国不得不面临的一个问题就是字符编码，虽然咱们国家的汉字是人类使用频率最多的文字，汉字博大精深，常见的汉字就有成千上万，这已经大大超出了 ASCII 编码所能表示的字符范围了，即使是 EASCII 也显得杯水车薪，于是聪明的中国人自己弄了一套编码叫 <strong>GB2312</strong>，又称GB0，1981由中国国家标准总局发布。GB2312 编码共收录了6763个汉字，同时他还兼容 ASCII，GB 2312的出现，基本满足了汉字的计算机处理需要，它所收录的汉字已经覆盖中国大陆99.75%的使用频率，不过 GB2312 还是不能100%满足中国汉字的需求，对一些罕见的字和繁体字 GB2312 没法处理，后来就在GB2312的基础上创建了一种叫 GBK 的编码，GBK 不仅收录了27484个汉字，同时还收录了藏文、蒙文、维吾尔文等主要的少数民族文字。同样 GBK 也是兼容 ASCII 编码的，对于英文字符用1个字节来表示，汉字用两个字节来标识。<br><br><b>Unicode</b><p>对于如何处理中国人自己的文字我们可以另立山头，按照我们自己的需求制定一套编码规范，但是计算机不止是美国人和中国人用啊，还有欧洲、亚洲其他国家的文字诸如日文、韩文全世界各地的文字加起来估计也有好几十万，这已经大大超出了ASCII码甚至GBK所能表示的范围了，况且人家为什么用采用你GBK标准呢？如此庞大的字符库究竟用什么方式来表示好呢？于是统一联盟国际组织提出了Unicode编码，Unicode的学名是\"Universal Multiple-Octet Coded Character Set\"，简称为UCS。Unicode有两种格式：UCS-2和UCS-4。UCS-2就是用两个字节编码，一共16个比特位，这样理论上最多可以表示65536个字符，不过要表示全世界所有的字符显示65536个数字还远远不过，因为光汉字就有近10万个，因此Unicode4.0规范定义了一组附加的字符编码，UCS-4就是用4个字节（实际上只用了31位，最高位必须为0）。理论上完全可以涵盖一切语言所用的符号。世界上任何一个字符都可以用一个Unicode编码来表示，一旦字符的Unicode编码确定下来后，就不会再改变了。但是Unicode有一定的局限性，一个Unicode字符在网络上传输或者最终存储起来的时候，并不见得每个字符都需要两个字节，比如一字符“A“，用一个字节就可以表示的字符，偏偏还要用两个字节，显然太浪费空间了。第二问题是，一个Unicode字符保存到计算机里面时就是一串01数字，那么计算机怎么知道一个2字节的Unicode字符是表示一个2字节的字符呢，还是表示两个1字节的字符呢，如果你不事先告诉计算机，那么计算机也会懵逼了。Unicode只是规定如何编码，并没有规定如何传输、保存这个编码。例如“汉”字的Unicode编码是6C49，我可以用4个ascii数字来传输、保存这个编码；也可以用utf-8编码的3个连续的字节E6 B1 89来表示它。关键在于通信双方都要认可。因此Unicode编码有不同的实现方式，比如：UTF-8、UTF-16等等。这里的Unicode就像英语一样，做为国与国之间交流世界通用的标准，每个国家有自己的语言，他们把标准的英文文档翻译成自己国家的文字，这是实现方式，就像utf-8。<br></p><br><b>UTF-8</b><p>UTF-8（Unicode Transformation Format）作为Unicode的一种实现方式，广泛应用于互联网，它是一种变长的字符编码，可以根据具体情况用1-4个字节来表示一个字符。比如英文字符这些原本就可以用ASCII码表示的字符用UTF-8表示时就只需要一个字节的空间，和ASCII是一样的。对于多字节（n个字节）的字符，第一个字节的前n为都设为1，第n+1位设为0，后面字节的前两位都设为10。剩下的二进制位全部用该字符的unicode码填充。<br></p><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/cd6c79db0291464c193de1b532ae890c_720w.jpg?source=54b3c3a5\" data-rawwidth=\"779\" data-rawheight=\"216\" class=\"origin_image zh-lightbox-thumb\" width=\"779\" data-original=\"https://pic1.zhimg.com/cd6c79db0291464c193de1b532ae890c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='779'%20height='216'&gt;&lt;/svg&gt;\" data-rawwidth=\"779\" data-rawheight=\"216\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"779\" data-original=\"https://pic1.zhimg.com/cd6c79db0291464c193de1b532ae890c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/cd6c79db0291464c193de1b532ae890c_720w.jpg?source=54b3c3a5\"></figure><br>以汉字“好”为例，“好”对应的Unicode是597D，对应的区间是0000 0800--0000 FFFF，因此它用UTF-8表示时需要用3个字节来存储，597D用二进制表示是： <a href=\"tel:0101100101111101\">0101100101111101</a>，填充到1110xxxx 10xxxxxx 10xxxxxx得到<a href=\"tel:11100101\">11100101</a><a href=\"tel:10100101\">10100101</a><a href=\"tel:10111101\">10111101</a>，转换成16进制：e5a5bd，因此“好”的Unicode\"597D\"对应的UTF-8编码是\"E5A5BD\"<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>    中文        好\n    unicode         0101   100101   111101\n    编码规则     1110xxxx 10xxxxxx 10xxxxxx\n                --------------------------\n    utf-8       111001011010010110111101\n                --------------------------\n    16进制utf-8     e   5    a   5    b   d\n</code></pre></div><br><b>PYTHON字符编码</b><p>现在总算把理论说完了。再来说说Python中的编码问题。Python的诞生时间比Unicode要早很多，Python的默认编码是ASCII</p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; import sys\n&gt;&gt;&gt; sys.getdefaultencoding()\n'ascii'\n</code></pre></div><p>所以在Python源代码文件中如果不显示地指定编码的话，将出现语法错误    </p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#test.py\nprint \"你好\"\n</code></pre></div><p>上面是test.py脚本，运行 python test.py 就会包如下错误：</p><blockquote><p><em>File “test.py”, line 1 yntaxError: Non-ASCII character ‘\\xe4′ in file test.py on line 1, but no encoding declared; see <a href=\"https://link.zhihu.com/?target=http%3A//www.python.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Welcome to Python.org</a> ps/pep-0263.html for details</em></p></blockquote><p>为了在源代码中支持非ASCII字符，必须在源文件的第一行或者第二行显示地指定编码格式：  </p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># coding=utf-8\n</code></pre></div><p>或者是：</p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#!/usr/bin/python\n# -*- coding: utf-8 -*-\n</code></pre></div><p>在python中和字符串相关的数据类型,分别是<strong>str</strong>、<strong>unicode</strong>两种，他们都是basestring的子类，可见str与unicode是两种不同类型的字符串对象。</p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>    basestring\n      /  \\ \n     /    \\\n   str    unicode\n</code></pre></div><p>对于同一个汉字“好”，用str表示时，它对应的就是utf-8编码的'\\xe5\\xa5\\xbd'，而用unicode表示时，他对应的符号就是u'\\u597d'，与u\"好\"是等同的。需要补充一点的是，str类型的字符其具体的编码格式是UTF-8还是GBK，还是其他格式，根据操作系统相关。比如在Windows系统中，cmd命令行中显示的：  </p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># windows终端\n&gt;&gt;&gt; a = '好'\n&gt;&gt;&gt; type(a)\n&lt;type 'str'&gt;\n&gt;&gt;&gt; a\n'\\xba\\xc3'\n</code></pre></div><p>而在Linux系统的命令行中显示的是：</p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># linux终端\n&gt;&gt;&gt; a='好'\n&gt;&gt;&gt; type(a)\n&lt;type 'str'&gt;\n&gt;&gt;&gt; a\n'\\xe5\\xa5\\xbd'\n\n&gt;&gt;&gt; b=u'好'\n&gt;&gt;&gt; type(b)\n&lt;type 'unicode'&gt;\n&gt;&gt;&gt; b\nu'\\u597d'\n</code></pre></div><p>不论是Python3x、Java还是其他编程语言，Unicode编码都成为语言的默认编码格式，而数据最后保存到介质中的时候，不同的介质可有用不同的方式，有些人喜欢用UTF-8，有些人喜欢用GBK，这都无所谓，只要平台统一的编码规范，具体怎么实现并不关心。 </p><figure><noscript><img src=\"https://pic4.zhimg.com/50/bc6669603ab2b498c78e857aece0996e_720w.jpg?source=54b3c3a5\" data-rawwidth=\"480\" data-rawheight=\"120\" class=\"origin_image zh-lightbox-thumb\" width=\"480\" data-original=\"https://pic4.zhimg.com/bc6669603ab2b498c78e857aece0996e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='480'%20height='120'&gt;&lt;/svg&gt;\" data-rawwidth=\"480\" data-rawheight=\"120\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"480\" data-original=\"https://pic4.zhimg.com/bc6669603ab2b498c78e857aece0996e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/bc6669603ab2b498c78e857aece0996e_720w.jpg?source=54b3c3a5\"></figure><b>str与unicode的转换</b><p>那么在Python中str和unicode之间是如何转换的呢？这两种类型的字符串类型之间的转换就是靠这两个方法decode和encode。</p><figure><noscript><img src=\"https://pic2.zhimg.com/50/8c0c80b57fbdce51e522823f3328dd32_720w.jpg?source=54b3c3a5\" data-rawwidth=\"480\" data-rawheight=\"120\" class=\"origin_image zh-lightbox-thumb\" width=\"480\" data-original=\"https://pic1.zhimg.com/8c0c80b57fbdce51e522823f3328dd32_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='480'%20height='120'&gt;&lt;/svg&gt;\" data-rawwidth=\"480\" data-rawheight=\"120\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"480\" data-original=\"https://pic1.zhimg.com/8c0c80b57fbdce51e522823f3328dd32_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/8c0c80b57fbdce51e522823f3328dd32_720w.jpg?source=54b3c3a5\"></figure><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#从str类型转换到unicode\ns.decode(encoding)   =====&gt;  &lt;type 'str'&gt; to &lt;type 'unicode'&gt;\n#从unicode转换到str\nu.encode(encoding)   =====&gt;  &lt;type 'unicode'&gt; to &lt;type 'str'&gt;\n\n&gt;&gt;&gt; c = b.encode('utf-8')\n&gt;&gt;&gt; type(c)\n&lt;type 'str'&gt;\n&gt;&gt;&gt; c\n'\\xe5\\xa5\\xbd'\n\n&gt;&gt;&gt; d = c.decode('utf-8')\n&gt;&gt;&gt; type(d)\n&lt;type 'unicode'&gt;\n&gt;&gt;&gt; d\nu'\\u597d'\n</code></pre></div><p>这个'\\xe5\\xa5\\xbd'就是unicode u'好'通过函数encode编码得到的UTF-8编码的str类型的字符串。反之亦然，str类型的c通过函数decode解码成unicode字符串d。</p><br><b>str(s)与unicode(s)</b><p>str(s)和unicode(s)是两个工厂方法，分别返回str字符串对象和unicode字符串对象，str(s)是s.encode(‘ascii’)的简写。实验：</p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; s3 = u\"你好\"\n&gt;&gt;&gt; s3\nu'\\u4f60\\u597d'\n&gt;&gt;&gt; str(s3)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 0-1: ordinal not in range(128)\n</code></pre></div><p>上面s3是unicode类型的字符串，str(s3)相当于是执行s3.encode(‘ascii’)因为“你好”两个汉字不能用ascii码来表示，所以就报错了，指定正确的编码：s3.encode(‘gbk’)或者s3.encode(\"utf-8\")就不会出现这个问题了。类似的unicode有同样的错误：</p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; s4 = \"你好\"\n&gt;&gt;&gt; unicode(s4)\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc4 in position 0: ordinal not in range(128)\n&gt;&gt;&gt;\n</code></pre></div><p>unicode(s4)等效于s4.decode(‘ascii’)，因此要正确的转换就要正确指定其编码s4.decode(‘gbk’)或者s4.decode(\"utf-8\")。</p><br><b>乱码</b><p>所有出现乱码的原因都可以归结为字符经过不同编码解码在编码的过程中使用的编码格式不一致，比如：</p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># encoding: utf-8\n\n&gt;&gt;&gt; a='好'\n&gt;&gt;&gt; a\n'\\xe5\\xa5\\xbd'\n&gt;&gt;&gt; b=a.decode(\"utf-8\")\n&gt;&gt;&gt; b\nu'\\u597d'\n&gt;&gt;&gt; c=b.encode(\"gbk\")\n&gt;&gt;&gt; c\n'\\xba\\xc3'\n&gt;&gt;&gt; print c\n��\n</code></pre></div><p>utf-8编码的字符‘好’占用3个字节，解码成Unicode后，如果再用gbk来解码后，只有2个字节的长度了，最后出现了乱码的问题，因此防止乱码的最好方式就是始终坚持使用同一种编码格式对字符进行编码和解码操作。</p><br><b>其他技巧</b><p>对于如unicode形式的字符串（str类型)：  </p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>s = 'id\\pythonu003d215903184\\u0026index\\u003d0\\u0026st\\u003d52\\u0026sid’\n</code></pre></div><p>转换成真正的unicode需要使用：  </p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>s.decode('unicode-escape')\n</code></pre></div><p>测试：  </p><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; s = 'id\\u003d215903184\\u0026index\\u003d0\\u0026st\\u003d52\\u0026sid\\u003d95000\\u0026i'\n&gt;&gt;&gt; print(type(s))\n&lt;type 'str'&gt;\n&gt;&gt;&gt; s = s.decode('unicode-escape')\n&gt;&gt;&gt; s\nu'id=215903184&amp;index=0&amp;st=52&amp;sid=95000&amp;i'\n&gt;&gt;&gt; print(type(s))\n&lt;type 'unicode'&gt;\n&gt;&gt;&gt;\n</code></pre></div><p>以上代码和概念都是基于Python2.x。</p><p>参考：  </p><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//www.python.org/dev/peps/pep-0263/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PEP 263 -- Defining Python Source Code Encodings</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.liaoxuefengcom/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">liaoxuefengcom/wiki/001</span><span class=\"invisible\">374738125095c955c1e6d8bb493182103fac9270762a000/001386819196283586a37629844456ca7e5a7faa9b94ee8000</span><span class=\"ellipsis\"></span></a></li></ul>"}{"有多少人按@萧井陌大神给出的Python+Flask路线找到工作了？": "<p>不知道算不算强答，零基础学了半年吧，没去找工作，只是接了些活儿，挣了些1000多的外快。</p><p>明天就要去北京回学校了，今天在家整理书籍，感慨良多，写个答案，算是整理一下半年的学习过程。</p><p>（写完了才发现这感慨确实有点多，这个答案是边整理书边写的，所以有点多，基本概括了我半年学习路线，不知道能不能对你有点帮助。）</p><br><p>父亲去年五月份查出肝癌晚期，暑假我向学校申请休学半年，九月份的时候父亲病逝，我一直在家忙后事。为了不在家浪费时间，加上我早就有建筑学弃坑的想法，九月底的时候正式开始学习编程。</p><br><p>不过需要说明的是我并非完全的零基础，去年年初就有心转学cs，只是没人教，学业也繁忙，大概就是看完了《笨办法学python》《think python》，《编码》这个样子吧。</p><p>后来就想着利用在家的这段时间试试水，编程学得下去就转cs，不行就老老实实去干我的建筑。所以那个时候学编程给自己定的目标就是寒假能去找份实习。然后在知乎上看到萧丼陌说python加flask是最快找工作的，就从那本《flask web 开发》狗书开始学起。</p><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/v2-9946f6d754286eee5c9f932c952da558_720w.jpg?source=54b3c3a5\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image\" width=\"293\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='293'%20height='520'&gt;&lt;/svg&gt;\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image lazy\" width=\"293\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-9946f6d754286eee5c9f932c952da558_720w.jpg?source=54b3c3a5\"></figure><br><p>开始的时候简直学这本书痛不欲生，一天啃个一两章，看不懂就先跳过去，咬牙坚持到第七章的时候就崩了，完全不知道该怎么继续学下去。因为学《think python》的时候非常顺畅，书里代码也都敲完了，我居然就天真地以为自己就有了python基础。而且那个时候我没有学git，只是把作者最终代码下载下来，对照着敲，怎么可能看得懂。</p><p>后来就开始回头补python基础，因为离开了学校，所有的书都需要我自己买。补基础这段时间我看的是《python基础教程 第二版》，手头还备着一本《python核心编程 第二版》翻阅，也是在这段时间里学了爬虫，爬了赶集网几万条数据吧，写爬虫的时候，看着屏幕上翻滚着一条条的数据，特别有成就感。</p><figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-7d22b039ffe9b96488b46470a2d4126d_720w.jpg?source=54b3c3a5\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image\" width=\"293\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='293'%20height='520'&gt;&lt;/svg&gt;\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image lazy\" width=\"293\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7d22b039ffe9b96488b46470a2d4126d_720w.jpg?source=54b3c3a5\"></figure><br><p>用python写了一个2048，总算是积累了一些代码，通过写这个项目开始知道了什么是类，什么是面向对象编程。</p><p>十月份重新去撸狗书，这次学乖了，从目录前言开始一字不落。他要我学Git，就老老实实把廖雪峰的Git看完，学完了Git才知道，原来每章都有对应的源码，不懂git，初学者是不可能通过这本书学会Flask的，后来别人问我怎么学Flask的时候我都会再三跟他强调，先学git和github，不然别学这本书。</p><p>十月二十六号的时候，那天我生日，敲完了狗书，上传到github。有人可能觉得我速度太慢了，二十多天近一个月才学完这本书。因为我为了学这本书，同时还学了很多本其他书····</p><p>网络基础知识缺乏，就去买了《图解http》（看完了）、《图解tcp/ip》（看完了第一章基础知识）、《计算机网络自顶向下方法》（看完了第一章）。</p><figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-0b7823602d69db869c7403f58c56e44e_720w.jpg?source=54b3c3a5\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image\" width=\"293\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='293'%20height='520'&gt;&lt;/svg&gt;\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image lazy\" width=\"293\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0b7823602d69db869c7403f58c56e44e_720w.jpg?source=54b3c3a5\"></figure><br><br><p>我的经验就是这样，如果你对某一个章节的知识点不懂的话，不如索性把挂着知识点的那棵树都给挖出来，效率还要高得多。</p><p>数据库那部分代码跑倒是跑通了，就是不太理解原理，看完了《python基础知识》、《python核心编程第二版》、《python核心编程第三版》所有关于数据库的章节，代码也敲了好几遍还是不太明白，后来买了一本《SQL必知必会》看完了一下子就懂了。</p><p>Bootstrap框架不知道什么意思，买了一本《Bootstrap实战》，没想到书还是看不懂，就去过了一遍html和css常识，知道Bootstrap基本就是把已经做好的css引入就结束了，没再深究。因为这类知识有太多的细节，暂时没打算学，逻辑上弄懂是个什么东西就好了。</p><br><figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-e32c551d98e52f0226d2bfb4cc766060_720w.jpg?source=54b3c3a5\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image\" width=\"293\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='293'%20height='520'&gt;&lt;/svg&gt;\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image lazy\" width=\"293\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e32c551d98e52f0226d2bfb4cc766060_720w.jpg?source=54b3c3a5\"></figure><br><p>也顺便学了JS，买了三本书《JS DOM编程艺术》、《JS语言精粹》、《JS高程》，撸完了第一本，写得很好，第二本翻翻，不太习惯，第三本主要拿来查疑，翻阅的。说实在的，习惯了python的优雅简洁，再去看JS没完没了的大括号、分号，很不适应。</p><figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-46b77984da30940fbc6de70e8f7e21e9_720w.jpg?source=54b3c3a5\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image\" width=\"293\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='293'%20height='520'&gt;&lt;/svg&gt;\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image lazy\" width=\"293\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-46b77984da30940fbc6de70e8f7e21e9_720w.jpg?source=54b3c3a5\"></figure><br><p>撸完了狗书之后就有点迷茫了，不知道该干啥，在家打了一个星期的lol，十一月份的时候去找武汉的小伙伴们玩耍，小伙伴们要么在准备即将到来的考研，要么在忙者找工作。我拉着他们一个一个聊天，看着他们在人生岔口上或迷茫、或失意、或焦虑、或安然，有了些想法。</p><p>武汉浪了一个星期后回家买了本董伟明的《python web开发实战》继续学flask。这本书很有意思，与其说是讲flask的，不如说是列了一个提纲，告诉你flask开发要用到什么什么，我学习方式基本就是这本书上提到了一个什么什么我就去把相关的文档过一下。通过这样学习了解了一些网站开发架构的常识。这本书我只看到第六章，后面的需要很多实际工程经验，我看不了。</p><p>学习的过程中我给狗书的网站写了一个上传图片，并将图片处理成头像的功能。自己设计编写代码要比照着别人的敲有意思多了。</p><figure><noscript><img src=\"https://pic2.zhimg.com/50/v2-1e1486e853a08295ad7978394e903369_720w.jpg?source=54b3c3a5\" data-rawwidth=\"520\" data-rawheight=\"293\" class=\"origin_image zh-lightbox-thumb\" width=\"520\" data-original=\"https://pic1.zhimg.com/v2-1e1486e853a08295ad7978394e903369_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='520'%20height='293'&gt;&lt;/svg&gt;\" data-rawwidth=\"520\" data-rawheight=\"293\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"520\" data-original=\"https://pic1.zhimg.com/v2-1e1486e853a08295ad7978394e903369_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-1e1486e853a08295ad7978394e903369_720w.jpg?source=54b3c3a5\"></figure><br><p>同时还买了《python cookbook》，强力推荐，很好的一本书。最大的作用是改变了我对python的看法，原来代码还可以这么写，当然是不可能看完的，印象里看了几十页吧。</p><p>因为我的学习都是自己闷在屋子里，自己敲代码，代码只跑给机器看，所以我的代码很不规范，命名注释什么的都很混乱，自己也知道这一点，所以买了本《编写高质量代码 python》来看。后来发现代码本身没改善多少，对python内部机制的了解深入了一些。</p><figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-129b344f66c38c075e52b9e80429533a_720w.jpg?source=54b3c3a5\" data-rawwidth=\"520\" data-rawheight=\"293\" class=\"origin_image zh-lightbox-thumb\" width=\"520\" data-original=\"https://pic2.zhimg.com/v2-129b344f66c38c075e52b9e80429533a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='520'%20height='293'&gt;&lt;/svg&gt;\" data-rawwidth=\"520\" data-rawheight=\"293\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"520\" data-original=\"https://pic2.zhimg.com/v2-129b344f66c38c075e52b9e80429533a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-129b344f66c38c075e52b9e80429533a_720w.jpg?source=54b3c3a5\"></figure><br><p>那个时候感觉技术陷入了一个瓶颈，学习好像变成了拼积木，学习了某个模块，知道了怎么用然后就没了。所以就尝试着学底层，去读flask源码，用python写一个web应用框架，突然间，难度TM地暴涨，就好像我魂斗罗小米加步枪一直打得蛮顺，突然给我刷出一个CF里的僵尸。当时就蒙蔽了</p><p>根据之前的经验，我知道，我该去撸真正的基础了。去了一趟武汉之后对于找实习这件事也不怎么执着了，就准备去啃那些科班书了。</p><p>买了一本《C Primer Plus》和一本《C程序设计语言》跟着网易云课堂上的翁凯老师把c语言过了一遍，主要是把指针这一块儿弄明白，不求掌握c语言，只求能看明白。</p><p>这两本书都没看完，主要用来对照的。老师讲什么，就把对应的章节看了，主要看的是《c plus》，觉得写得详细些。</p><p>然后买了《大话数据结构》、《数据结构与算法分析 C语言》开始撸数据结构，把《大话数据结构》撸到“树”这一章之后在翻《数据结构与算法分析》发现这玩意需要很长时间才能啃下来。我在家的时间很自由，但也很有限，主要是为了大致了解CS到底是个什么玩意儿，把时间全花在这里不太值当。况且我这专业不学数学，“学完建筑之后就只会三位数以内的加减法了·····”（我老师说的）所以我还得回学校把数学这个前置技能给点了才好过来继续撸算法。</p><figure><noscript><img src=\"https://pic2.zhimg.com/50/v2-4e577de6a285faabb5090ae1f4d9149c_720w.jpg?source=54b3c3a5\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image\" width=\"293\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='293'%20height='520'&gt;&lt;/svg&gt;\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image lazy\" width=\"293\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-4e577de6a285faabb5090ae1f4d9149c_720w.jpg?source=54b3c3a5\"></figure><br><p>在知乎上听人吹《深入理解计算机系统》已经听得够多了，再加上自己以前就看过《编码》，早就对计算机的内部运行好奇地要死，就选择了这本书来学习。</p><figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-007d1c4435081449b35dbc34a7adb514_720w.jpg?source=54b3c3a5\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image\" width=\"293\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='293'%20height='520'&gt;&lt;/svg&gt;\" data-rawwidth=\"293\" data-rawheight=\"520\" class=\"content_image lazy\" width=\"293\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-007d1c4435081449b35dbc34a7adb514_720w.jpg?source=54b3c3a5\"></figure><br><p>第一章，good，nice！很顺畅。</p><p>第二章，我擦，好难哟，咬着牙啃了。</p><p>第三章，马勒戈壁，不会要先去学个汇编再来撸这本书吧·········</p><p>在这里卡住了之后，我就绕道而行，选择了国内的教材，唐朔飞老师的《计算机组成原理》和配套的习题跟着网易公开课上的配套课程学习。基本就是学完了计算机组成原理之机器章节，就回过头来把《深入》这本书的第六章存储器给撸一边，学完了计算机组成原理之数字，就回过头来把《深入》的第二章再复习一遍。</p><p>同时学习两套教材，确实感觉风格很不一样。《深入》这本书重视知识的融汇与广度，什么东西都会给你提一下，在原理深度上不如《计算机组成原理》。《计算机组成原理》的课后习题基本是在问我上课讲的东西你记住了没？而《深入》这本书则是在问我刚刚说的东西你知道怎么用了吗？当然，两本书我都没学完，认知可能会有偏颇，总体来说，各有千秋。</p><p>学到这儿的时候就已经到了2016年基本就过去了，再后来家里的事情增多，爷爷也病重，小伙伴们放了寒假来找我玩，所以2017年的时候基本就没怎么学了，代码也不怎么敲了，到现在已经生疏了很多。</p><p>回首这半年，大概可能敲了五千行左右的代码，编程是我的生活主流，但并非全部，还打了500多场lol，刷了几百集电视剧动漫（以前从来不看电视剧的），几十部电影，不定时锻炼，写作练字，偶尔去驾校客串教练，刷知乎。因为没有社交，基本长期都闷在自己的卧室里，懒得出门，倒是硬盘里的片子换了一部又一部········</p><p>自己感觉最大的收获除了俯卧撑从原来的5个到了30个之外就是学习能力提高了不少。自学嘛，各种各样稀奇古怪的问题，全靠自己克服。</p><p>前天心血来潮，撸了一个微信小程序，是专门给一个妹子定制的日历程序。虽然基本不会js，当初只花了两三天撸了一遍《JS DOM艺术》，但还是只花了两个下午搞定了这个小程序，一个下午用来申请资质、读小程序的文档，搜集资料以及解决为什么我死活改代码，小程序TM的就是没反应的操蛋问题。一个下午用来边学js边写后台逻辑，边查css边写前台页面。当然，程序并不完善，算个Demo吧，还有很多想要的功能，设计的彩蛋都没写，去北京之后补上。因为腾讯爸爸并不接受个人开发者，得想法子绕过去，所以暂时没有上线，希望能在月底上线。</p><br><figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-6626a776d5c2a4d3e1afc7397fc52e22_720w.jpg?source=54b3c3a5\" data-rawwidth=\"512\" data-rawheight=\"910\" class=\"origin_image zh-lightbox-thumb\" width=\"512\" data-original=\"https://pic1.zhimg.com/v2-6626a776d5c2a4d3e1afc7397fc52e22_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='512'%20height='910'&gt;&lt;/svg&gt;\" data-rawwidth=\"512\" data-rawheight=\"910\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"512\" data-original=\"https://pic1.zhimg.com/v2-6626a776d5c2a4d3e1afc7397fc52e22_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-6626a776d5c2a4d3e1afc7397fc52e22_720w.jpg?source=54b3c3a5\"></figure><br><p>以上基本就是我这半年的学习经历。我并没有完全按照萧丼陌大神推荐的学习路线来学习，全部都是自己搞，不过学完了之后对照一看，路线基本差不太多。</p><p>其实我还想再写写，写写自学过程中一点经验。</p><p>例如怎么学习安装各种各样的框架、环境、包、工具？（初学者都知道，安装这些稀奇古怪的东西是多么痛苦耗费时间的事。）</p><p>怎么样搜集和选择学习资源，学习资料？（我其实不太懂为什么有人要花好几千去培训公司看视频。那些达内全套前端视频，麦子学院的全套python培训视频等等等，我硬盘这里都一套一套的。）</p><p>怎么样在实力还很水的时候忽悠别人挣点外快？（我挣的1000多基本全都拿去买书了。其实没有刻意去挣钱，主要是给自己一点动力。）</p><p>如何降低自学的难度？</p><p>········</p><p>不过不能再写了，在这个答案写完发布后，我就得把这台电脑给拆了送到快递店打包发到北京去，再写下去，人家就关门下班了······况且写了这么多废话，肯看完的人估计也没几个········</p><br><p>最后来一张这半年买的书籍合影</p><figure><noscript><img src=\"https://pic2.zhimg.com/50/v2-5aedceeac7295b5686a5c40cae7d857a_720w.jpg?source=54b3c3a5\" data-rawwidth=\"4160\" data-rawheight=\"2340\" class=\"origin_image zh-lightbox-thumb\" width=\"4160\" data-original=\"https://pic2.zhimg.com/v2-5aedceeac7295b5686a5c40cae7d857a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='4160'%20height='2340'&gt;&lt;/svg&gt;\" data-rawwidth=\"4160\" data-rawheight=\"2340\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"4160\" data-original=\"https://pic2.zhimg.com/v2-5aedceeac7295b5686a5c40cae7d857a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-5aedceeac7295b5686a5c40cae7d857a_720w.jpg?source=54b3c3a5\"></figure><p>没错，我就是来晒书的！(◔◡◔)</p>", "用 Python 进行数据分析，不懂 Python，求合适的 Python 书籍或资料推荐？": "<p></p><p>Python的零基础入门书籍，更易上手：</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><ul><li>《Python编程：从入门到实践》<b>（<a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/26829016/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">豆瓣评分：9.1</a>）</b>，知识和内容更系统。</li></ul><blockquote>全书分两部分：第一部分介绍用Python 编程所必须了解的基本概念，包括matplotlib、NumPy 和Pygal 等强大的Python 库和工具介绍，以及列表、字典、if 语句、类、文件与异常、代码测试等内容；第二部分将理论付诸实践，讲解如何开发三个项目，包括简单的Python 2D 游戏开发如何利用数据生成交互式的信息图，以及创建和定制简单的Web 应用，并帮读者解决常见编程问题</blockquote><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><ul><li>《利用Python进行数据分析》（<b><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/25779298/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">豆瓣评分：8.6</a></b>）：</li></ul><blockquote>本书含有大量的实践案例，你将学会如何利用各种Python库（包括NumPy、pandas、matplotlib以及IPython等）高效地解决各式各样的数据分析问题。</blockquote><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><ul><li>最后，学好编程还要懂一些数据结构与算法，这本基于Python实现的数据结构与算法很适合初学者：</li></ul><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p>（收藏5.3k，点赞1.4k，觉得有用点个赞吧！！！）</p><p>=====原答案=====</p><p>1、首先你要了解Python语言的整个架构和一些基本概念，也就是所说的Python入门，这里推荐资料：<a href=\"https://link.zhihu.com/?target=http%3A//www.kuqin.com/abyteofpython_cn/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">简明 Python 教程</a>，很适合初学者，概念的讲解简单明了。还有大量的练习，跟着做会有很快的提高。<br>2、基本了解了python后，还要学习一些用于数据分析的工具，也就是一些基于python的科学计算库。</p><ul><li>赞同 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/928affb05b0b70a2c12e109d63b6bae5\" data-hash=\"928affb05b0b70a2c12e109d63b6bae5\" data-hovercard=\"p$b$928affb05b0b70a2c12e109d63b6bae5\">@杜客</a>答案中提到的<a href=\"https://link.zhihu.com/?target=http%3A//scipy.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">SciPy</a>系列工具，尤其是<a href=\"https://link.zhihu.com/?target=http%3A//www.numpy.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">NumPy</a>工具包，可以说是用Python进行数据分析的最常用的。另外对于数据分析，少不了数据的可视化（也就是画图），首选<a href=\"https://link.zhihu.com/?target=http%3A//matplotlib.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">matplotlib: python plotting</a>，在Linux下非常好用，画出来的图很漂亮。</li><li>还有一个工具包<a href=\"https://link.zhihu.com/?target=http%3A//scikit-learn.org/stable/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">scikit-learn: machine learning in Python</a>，这个工具包主要针对机器学习领域进行数据分析的，里面大量的实例。几乎各种数据分析方法在里面都能找到相应的实现，一些程序有针对性的修改一下就可以了。</li></ul><p>3、以下是一些不错的参考资料：</p><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//www.tuicool.com/articles/r2yyei\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">NumPy的详细教程</a>，官方文档的中文翻译，适合快速入门；</li><li><a href=\"https://link.zhihu.com/?target=http%3A//reverland.org/python/2012/09/07/matplotlib-tutorial/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Matplotlib Tutorial(译)</a>，适合matplotlib快速入门；</li><li><a href=\"https://link.zhihu.com/?target=https%3A//pythonprogramming.net/data-analysis-tutorials/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Programming Tutorials</a>，这个人手把手教你用python做Data  Analysis；有视频（只不过视频是放在YouTube上的，需要梯子），有代码，<b>强烈推荐。</b></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python教程 - 廖雪峰的官方网站</a>，<a href=\"https://link.zhihu.com/?target=http%3A//docspy3zh.readthedocs.io/en/latest/tutorial/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 入门教程</a>，另外两个Python教程。</li></ul><p><br></p><blockquote>风变编程Python小课是专为0基础小白设计的Python免费体验课，课程内容包含4节Python实操课+2节直播课+4节人工智能认知课</blockquote><a data-draft-node=\"block\" data-draft-type=\"ad-link-card\"></a><a data-draft-node=\"block\" data-draft-type=\"ad-link-card\"></a><a data-draft-node=\"block\" data-draft-type=\"ad-link-card\"></a><p><br>---------------------------7月11日更---------------------------</p><ol><li>考虑到numpy的重要性，然而学习的时候，光看一些文档真的很难记住和理解一些对象的操作方法，这里提供给大家一个练习numpy的资料：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/rougier/numpy-100\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">100 numpy exercises (83/100 actually)</a>，一共80多个小例子，常见的数组操作和一些编程小技巧，这里都会涉及到，跟着做能学到很多。</li><li>安利给大家一个学习Python的网站：<a href=\"https://link.zhihu.com/?target=https%3A//www.codecademy.com/learn\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Learn | Codecademy</a>。这是一个在线学习编程知识的网站（不光可以学Python），有了它，即使你没有在电脑上配置Python环境，仍然可以学习Python编程，很方便。重要的是它的交互做的也很好，概念的讲解和配套的联系都有。它的界面是这样：</li></ol><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/f27a4852b9984915d7e92c1e554022b2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1363\" data-rawheight=\"655\" class=\"origin_image zh-lightbox-thumb\" width=\"1363\" data-original=\"https://pic4.zhimg.com/f27a4852b9984915d7e92c1e554022b2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1363'%20height='655'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1363\" data-rawheight=\"655\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1363\" data-original=\"https://pic4.zhimg.com/f27a4852b9984915d7e92c1e554022b2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/f27a4852b9984915d7e92c1e554022b2_720w.jpg?source=54b3c3a5\"></figure><p></p>"}{"全职学python,几周才能在上海找到一个很普通很普通的数据方面的实习(实习不是兼职)？": "<p>我按照题主的意思捋了捋数据方面的实习，大概有以下的三个方向可能符合题主的需求：<b>爬虫、商业分析、数据分析</b></p><p><br></p><p>想要时间短能快速学习并且找到工作的话，就暂时排除Python爬虫和数据分析岗位了。</p><p>为什么呢？</p><p>Python爬虫岗位需要掌握最基本的计算机基础知识，包括数据结构、算法，除此之外你还要掌握Python的一些高阶技巧、了解HTML/JavaScript、当然要想做好爬虫你还要有一些后端开发的经验，这样有助于你去了解爬虫与反爬虫。</p><p>数据分析岗需要你有非常牢固的统计学基础知识、相关算法知识、建模经验等等，这些也不是能在短时间内能学会的，需要一个比较长期的积攒过程。</p><p><br></p><p>剩下的你能选择的方向大概就是商业分析了，当然也有很多公司把商业分析称为：<b>数据运营、电商分析、数据分析。</b>怎么知道公司到底是要的什么样的岗位呢？答案是看职位描述。</p><p>一般来说商业分析的工作能力要求如下：熟悉Excel、SQL；制作报告；善于从数据中发现有价值的信息；细分到每个领域还有可能有每个领域更加具体些的能力要求。</p><p><br></p><p>那么你发现没有，Python几乎不会出现在招聘需求中，所以其实会Python是可有可无的事情，可能是加分项，但是如果是商业分析以后几乎用不到Python.</p><p>所以听我一句劝，如果你真的是想在较多时间内去找到一份数据方面的工作的话。<b>那么毫不犹豫的丢下现在正在学习的Python，用一个月时间专心学Excel、专心学SQL，再用半个月时间了解你感兴趣的或者想去的公司所在行业，然后做一份关于这个行业或者公司的报告。</b></p><p><br></p><p>以上忠告来自一个阅读过上千个数据分析岗位招聘信息的小男孩，你的赞是他写作的动力。</p><p><br></p><p><b>很多人问我如何学习Python爬虫，为此我整理编写了一本Python爬虫相关的电子书，主要包括Python入门、Python爬虫入门到进阶、Python爬虫面试总结等等。可以在微信公众号【路人甲TM】后台回复关键词【1】获取这本电子书。</b></p>", "如何看待 Python 之父关于帮助中国程序员应对 996 工作制的讨论？": "<p>看到这个新闻，我第一个感想就是——还是程序员心疼程序员！这是一个老程序员跨越国界对另一个世界程序员的关怀，可比当年的白求恩，但是，作为一个熟悉程序员江湖的老兵，我也很清楚，他并帮不上什么忙。</p><p>果然，现在Guido已经申请关闭那个讨论了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-076da1f8b3ea0ae156a58d41262b2d1d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1592\" data-rawheight=\"302\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-598bf474addc1be7d727c03f9c95abdb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1592\" data-original=\"https://pic1.zhimg.com/v2-076da1f8b3ea0ae156a58d41262b2d1d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1592'%20height='302'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1592\" data-rawheight=\"302\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-598bf474addc1be7d727c03f9c95abdb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1592\" data-original=\"https://pic1.zhimg.com/v2-076da1f8b3ea0ae156a58d41262b2d1d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-076da1f8b3ea0ae156a58d41262b2d1d_720w.jpg?source=54b3c3a5\"></figure><p>我翻译一下：<b>我会请管理员关闭这个讨论，我感谢所有的反馈，但是，到现在为止，我没有看到任何新的观点，也没有任何人真正回答这个问题，如何让更多人关注这个问题呢，我要想一想接下来我能做什么</b>。</p><p>很明显，Guido很失望，因为讨论没有带来他想要的答案，大家都在BBB，但是一个建设性可行方案都没有提出。</p><p>我们来看Guido本来的“问题”是什么：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-0b9e25bfbb1e0eef5a77c2c316c51f9f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1620\" data-rawheight=\"628\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-97619ed615c904aa8c89e2a0ee02bb67_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1620\" data-original=\"https://pic1.zhimg.com/v2-0b9e25bfbb1e0eef5a77c2c316c51f9f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1620'%20height='628'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1620\" data-rawheight=\"628\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-97619ed615c904aa8c89e2a0ee02bb67_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1620\" data-original=\"https://pic1.zhimg.com/v2-0b9e25bfbb1e0eef5a77c2c316c51f9f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-0b9e25bfbb1e0eef5a77c2c316c51f9f_720w.jpg?source=54b3c3a5\"></figure><p>划红线部分，就是Guido说的原本的问题：<b>我们怎么才能帮助这些人呢？我们泽阳才能让西方媒体和政府来关注这件事呢？</b></p><p>这里我需要说一下，我非常尊重Guido，我也非常钦佩他对我国程序员的关怀，但是，这件事情上可以看出大家思维方式上的差别，Guido在想到如何帮助中国程序员之后，接着想到的就是如何让西方媒体来关注这件事。</p><p><b>西方媒体关注这件事就解决了吗？或者说，西方媒体关注就可以解决这件事吗？</b></p><p>如果能够真的施加外在影响让我国废止996，那么西方媒体早就办了呀，用不着Guido说，那些媒体都抢着要做的。他们对此不关注，不就是知道这么搞既搞不成，对他们也没什么好处嘛，还不如关注其他事情好了。</p><p>看了看那个讨论下的留言，真的是没有什么建设性意见，全都是发泄，这也是人家Guido很失望的原因之一吧，人家提了一个问题，那就真的是一个问题，并不是让大家来扯淡发泄，你需要真的有可行的方案才来说一说吧，不然就是灌水。</p><p>中国程序员也是中国人，所以也容易有一种思维习惯，觉得总是盼着会有一个青天大老爷出来解救自己。</p><p>不会有这样的青天大老爷的！</p><p><b>如果有一天你获得了解救，那是因为你付出了抗争，或者有人为你付出了抗争</b>。</p><p>996表面上是某些企业的制度问题，其实，是一个社会经济学问题，我国现阶段的经济现状，注定了996是不可能被消灭的，我国的人力资源结构，也决定了996将会长期存在。</p><p>不管Guido怎么说也好、老兵我怎么扯也好、各路大V怎么宣传也好，最后该996的还是996。</p><p>但是，作为社会个体，你还是有办法摆脱996的，那就是努力提高自己的技能水平，争取去没有996的工作环境，如果一个行业根本找不到可以让你平衡工作和生活的职业，这个职业，也不值得你去奋斗。</p><p><b>不要相信996是你唯一的救赎，不要相信996是你的福报，你要相信的是，不996也可以过得好，而且要比996的过得更好，气死他们</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-af7cf05bee9058127e329a96d2f491d9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"474\" data-rawheight=\"339\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-db31bbbf5e6e45bc092cefaad445bfd6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"474\" data-original=\"https://pic2.zhimg.com/v2-af7cf05bee9058127e329a96d2f491d9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='474'%20height='339'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"474\" data-rawheight=\"339\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-db31bbbf5e6e45bc092cefaad445bfd6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"474\" data-original=\"https://pic2.zhimg.com/v2-af7cf05bee9058127e329a96d2f491d9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-af7cf05bee9058127e329a96d2f491d9_720w.jpg?source=54b3c3a5\"></figure><p>要创造自己的幸福，全靠我们自己！</p>", "学习 Python 很吃力，我是不是可以放弃编程了？": "<p>题主使用的教材不对。请看我给我老婆写的教材：</p><p>《<b>教老婆学python》</b></p><p>什么是code：<br>code就就是一种语言，一种计算机能读懂的语言。计算机是一个傻逼，他理解不了默认两可的任何东西。比如，你让你老公去买个西瓜，你老公会自己决定去哪里买，买几个，找个搞活动打折的买，总之，你给他钱，他就给你买回来让你吃到爽的西瓜。但是，你想让计算机买一个西瓜？你要告诉他：去门口的鲜丰水果店买，买沙瓤无子西瓜，若旁边的店打折，就去旁边的店买。总之，你不能让计算机做任何决定，你要清楚的告诉他所有情况下的所有的行为。而code，就是你和计算机交流的语言，或者说是对计算机的命令。</p><p>我们就把计算机理解为一个人，这个人很死板，只能按照你给他的详细命令进行工作。而这个人工作速度特别特别快，并且保证工作结果都是正确的。</p><p>编程语言其实不重要，重要的是要明白如何和计算机交流，明白了这个也就能看懂代码了。</p><p>python就是一种和计算机交流的语言，这种语言单词（关键字）不多，规则也少。下面所有的内容都基于python。</p><h2><b>判断</b></h2><p>当你命令计算机做一件事情的时候，这件事情可能分一些情况进行处理。<br>判断通常涉及到的关键字有：if , else, elseif, and, or，&lt;, &gt;,=,&lt;=,&gt;=，==</p><p>比如，你让计算机买西瓜，希望买到打折的西瓜，不打折的话你就不吃了。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>if  水果店打折：\n    买西瓜\nelse:\n    不买了\n</code></pre></div><p>通过这个命令，计算机变得更智能了一些，他可以根据情况执行你的命令。</p><p>水果店不打折你就吃不到西瓜，你不开心。那么，我们让计算机更智能一些。假如西瓜打折，就买西瓜；不打折的话让计算机跟老板讲价，老板同意打折，就买西瓜；不同意，不吃了；</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>if  水果店打折：\n    买西瓜\nelse:\n    与老板讲价\n    if 讲价成功：\n        买西瓜\n    else:\n        不吃了。\n</code></pre></div><p>虽然和老板讲价一般都能讲成功，但是有的老板给力给打五折，有的老板只给打九折。你就想了，若老板打五折，我就买两个，今天吃一个，明天吃一个。若老板不给力，打折不到五折，就买一个，今天先吃，明天再说。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>if  水果店打折：\n    买西瓜\nelse:\n    与老板讲价\n    if 打折成功 and 打折力度&lt;=5：\n        买两个西瓜\n    elseif 打折成功 and 打折力度 &gt; 5：\n        买一个西瓜\n    else:\n        不吃了。\n</code></pre></div><p>此外，有没有发现，打着成功这段代码其实也可以写成：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>if 打折成功:\n        if 打折力度&lt;=5：\n            买两个西瓜\n        else:\n            买一个西瓜\n    else:\n        不吃了。\n</code></pre></div><p>由此可见，计算机也不是完全的一成不变，只要你给他的命令他能理解并且不会默认两可，他都可以完成工作。</p><p>and的意思代表且，or的意思代表或。and和or的顺序不同，结果也不同，可以通过括号来说明判断条件的优先级。</p><p>a==b是比较a和b是否相等的意思，而=代表赋值。赋值的含义，我在下面的<b>变量章节</b>介绍。</p><h2><b>循环</b></h2><p>python中涉及到循环的关键字包括：for...in... ,while,break,continue</p><p>上面的例子我们已经让电脑成功的可以根据不同的情况去水果店买西瓜了，但是若老板不打折，你就吃不到西瓜了。这时，你就想了，咱们小区门口有三家水果店，分别是鲜丰水果、四季水果和路边摊，一家不打折不代表三家都不打折啊，所以你希望电脑可以去三家都去看看，挑一家打折的店买西瓜。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>for 水果店 in (鲜丰水果、四季水果和路边摊):\n    if 水果店 打折：\n        买西瓜\n        break(循环结束)\n    else:\n        啥都不做\n带西瓜回家\n</code></pre></div><p>循环的意义在于，可以用电脑对不同的对象执行相同的命令。</p><p>介绍下break，break的意思就是结束循环。比如，这段代码中的break表示，我们一旦买了西瓜，那么就带西瓜回家。</p><h2><b>变量</b></h2><p>现在是时候介绍'变量'这个重要的东西了。</p><p>我们依然把电脑理解为帮我们工作的一个人，那么作为一个人，他需要有记忆力，而我们就可以通过变量去控制、利用计算机的记忆力。</p><p>变量可以理解为计算机的一个记忆单元，计算机拥有极好的记忆力，所以，可以随心所欲的使用，用完了就扔，需要了就要。（当然，说随心所欲是不严谨的，但是你可以理解为随心所欲）</p><p>那为什么叫变量呢，就是因为可以改变。为什么要改变呢？比如我们都有自己的年龄，我今年18，明年就19了。所以，'年龄'在我的记忆里是每年改变的。</p><p>变量对应的一个东西叫常量，在我的记忆力，我的老婆是江江同学。而这个'老婆'这个记忆单元在我的脑子里是不会变的，她永远都是江江同学。常量你现在可以不用理解，我写主要是为了秀恩爱。</p><p>现在，计算机又要去买西瓜了。不过这次，你希望计算机可以在三个水果店中，找到一个打折力度最大的水果店去买水果。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>之前所有水果店的最大折扣 = None\n之前给最大折扣的水果店 = None\nfor 水果店 in (鲜丰水果、四季水果和路边摊):\n    当前水果店折扣 = 老板给的折扣\n    if 当前水果店折扣 &lt; 之前所有水果店的最大折扣:#4折比5折力度大\n        之前所有水果店的最大折扣 = 当前水果店折扣\n        之前给最大折扣的水果店 = 水果店\n\n去 之前给最大折扣的水果店 买一个西瓜\n</code></pre></div><p>以上有以下几个记忆单元：</p><ul><li>之前所有水果店的最大折扣</li><li>之前给最大折扣的水果店</li><li>当前水果店折扣</li><li>水果店 注意，for a in b，a也是一个变量，他在每次执行的时候都是b中的当前执行的一个元素。</li></ul><p>这里需要介绍一些概念：</p><ul><li>None 在python中表示空，表示这个记忆单元现在啥都没有。比如在我情窦初开时，脑海中就已经有了情人这个记忆单元，我一直在寻找，但遇到你之前一直没有找到，所以那段时间这个记忆单元里面一直是空。</li><li>赋值符号：=。 注意，在计算机语言里面，一个'='号表示赋值，两个等号'=='表示比较前后元素。赋值的意思是，把后面的元素，放到前面的变量里面。</li></ul><p><b>变量的作用域</b></p><p>作用域这个东西非常重要，但是真心不想讲，因为没办法结合现实的例子，不过还是大体说明下。</p><p>还是刚才的例子，我加了行号，并且我使用-代表空格，表示代码的缩进。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>1 之前所有水果店的最大折扣 = None\n2 之前给最大折扣的水果店 = None\n3 for 水果店 in (鲜丰水果、四季水果和路边摊):\n4 ---当前水果店折扣 = 老板给的折扣\n5 ---if 当前水果店折扣 &lt; 之前所有水果店的最大折扣:#4折比5折力度大\n6 ------之前所有水果店的最大折扣 = 当前水果店折扣\n7 ---之前给最大折扣的水果店 = 水果店\n8 去 之前给最大折扣的水果店 买一个西瓜\n</code></pre></div><p>你看这个例子可能纳闷，为什么要先给'之前所有水果店的最大折扣'、'之前给最大折扣的水果店'这两个变量赋值为None呢。就是因为作用域问题。</p><p>你看这个程序，每行代码的缩进都是不一样的。变量作用域可以理解为：一个变量，只有在其第一次出现的地方的缩进，以及缩进更多的代码里面，才有效。我们第1、2行的变量，就可以用于3-8行，因为这些代码的缩进都在1、2行的后面。而第四行的变量'当前水果店折扣'，只在5、6、7行有效</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>1  A = None\n2  ————B = None\n3  ————..\n4  ————————C = None\n5  ————————..\n6  ————D = None\n7  ————..\n8  ————————..\n9  ————————..\n10 ..\n11 ..\n</code></pre></div><p>再举个例子，ABCD是变量，..代表某些代码。A的作用域就是1-11行，即1-11行都可以使用A。B的作用域是2-9行，C的作用域只有4-5行，<i>注意，8-9行就不能再使用C了，虽然他的缩进和4、5行一样</i>，作用域遇到第一个不能用缩进行代码即结束。D的作用域就是6-9行。</p><h2><b>函数和模块</b></h2><p>看懂以上几节，大概应该明白计算机如何执行代码的了。</p><p>而函数和模块，和之前的介绍不太一样。之前是介绍如何让计算机工作，是面向计算机的。而这一节，是面向人的，是如何让我们写给计算机的代码看起来更加简洁、明了。函数和模块都是对代码结构的优化，否则一个稍微大点的项目，一大坨代码，计算机看得懂人看不懂，不利于管理和交流。</p><p>首先说函数。函数是一系列代码的集合，用函数一般是有几个原因：<br>1.给一段代码起个名字。<br>2.这段代码和使用它的代码关系不大，所以可以抽出来，抽出来后代码更简洁。关系不大的意思就是：使用函数的代码通过传给函数几个参数，函数就可以执行。<br>3.代码集合起来就可以在代码的不同地方使用。</p><p>依然我们去买西瓜，不过我们希望电脑可以今天买完西瓜明天再买一个。按照之前的方式，这个逻辑应该写成这样：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>for 水果店 in (鲜丰水果、四季水果和路边摊):\n    if  水果店打折：\n        买西瓜\n    else:\n        与老板讲价\n        if 打折成功 and 打折力度&lt;=5：\n            买两个西瓜\n        elseif 打折成功 and 打折力度 &gt; 5：\n            买一个西瓜\n        else:\n            不吃了。\n\n休息一天。\n\nfor 水果店 in (鲜丰水果、四季水果和路边摊):\n    if  水果店打折：\n        买西瓜\n    else:\n        与老板讲价\n        if 打折成功 and 打折力度&lt;=5：\n            买两个西瓜\n        elseif 打折成功 and 打折力度 &gt; 5：\n            买一个西瓜\n        else:\n            不吃了。\n</code></pre></div><p>上面的代码可以实现我们的要求，但是买西瓜的代码其实是重复的，对于重复代码，管理起来比较麻烦，比如你想改一点，那么就要去各个地方都改一次。</p><p>那么，我们把买西瓜的代码弄成一个函数，代码就可以整理为：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>def 买西瓜_函数():\n    for 水果店 in (鲜丰水果、四季水果和路边摊):\n        if  水果店打折：\n            买西瓜\n        else:\n            与老板讲价\n            if 打折成功 and 打折力度&lt;=5：\n                买两个西瓜\n            elseif 打折成功 and 打折力度 &gt; 5：\n                买一个西瓜\n            else:\n                不吃了。\n\n买西瓜_函数()\n休息一天。\n买西瓜_函数()\n</code></pre></div><p>这一次，代码整洁多了，而且，我们每次想修改买西瓜的代码，都只需要改这个函数一处代码都可以。</p><p>在python中，使用def function_name():定义函数，函数下面所有的缩进都属于这个函数，叫函数体。</p><p>使用function_name()调用函数。</p><p><b>函数参数</b></p><p>现在你又不满足与电脑只会买西瓜了，你又想吃柚子。怎么办呢，那么是不是我们又要写一个买柚子的函数呢。</p><p>当然可以再写一个买柚子函数，但是买柚子函数的逻辑和买西瓜函数的逻辑都是一样的，命令也一样，唯一的区别就是之前是卖西瓜，现在是买柚子。如果再写一个类似的买柚子函数，那么又出现刚才说的问题，每次修改买水果的逻辑，都需要同时去修改买西瓜、买柚子函数，如果柚子吃腻了，又要买香蕉、苹果、梨，岂不是要写非常多的函数？</p><p>为了解决这个问题，其实有一个更好的方法，就是使用函数参数。</p><p>由于我们买水果（无论是西瓜、还是柚子）的功能都是一样的，所以我们可以写一个买水果函数，买水果函数定义了买一个水果的流程，当我们使用这个函数的时候，我们只要告诉这个函数我们要买什么水果，函数就可以根据你告诉他的水果名，去买对应的水果。</p><p>买水果函数的代码如下：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>def 买水果函数(水果名):\n    for 水果店 in (鲜丰水果、四季水果和路边摊):\n        if  水果店打折：\n            买[水果名]\n        else:\n            与老板讲价\n            if 打折成功 and 打折力度&lt;=5：\n                买两个[水果名]\n            elseif 打折成功 and 打折力度 &gt; 5：\n                买一个[水果名]\n            else:\n                不吃了。\n\n\n买水果函数(西瓜)#让电脑去买西瓜\n买水果函数(柚子)#让电脑去买柚子\n</code></pre></div><p>在python中想使用函数参数，只需要在函数定义的时候，在括号里面加上参数即可，我们这里的参数就是'水果名'。在函数体中代码可以使用函数参数。</p><p>在调用函数的时候，把一个变量或者常量写在函数名后面的括号里面，传给函数。</p><p>注意，若是存在多个参数，函数定义和调用函数的参数顺序一定要一致。</p><p>在python中，还存在默认参数、关键字参数等稍微高级一点的使用方式，举个例子，不详细说明了。</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>def sum(a, b = 0,c = 1):#b/c是默认参数\n  return a+b+c\n\nfunc(1,0,1)\nfunc(1)\nfunc(1,c=1)\n</code></pre></div><p>这三个func调用的结果都是一样的。</p><p><br></p><p>未完待续....</p>"}{"要学 Python 需要怎样的基础？": "<p>人生苦短，很高兴你选择了python，这是我比较喜欢的语言。如果你是想做python web相关的话，可以看看这个指南<a href=\"https://link.zhihu.com/?target=http%3A//python-web-guide.readthedocs.io/zh/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python web 入坑指南 - python-web-guide 0.1 文档</a>,都是根据我的工作经(cai)验(keng)总结的。主要涉及python网站和爬虫相关的开发，还有一些工程性的东西。入行不久，经验有限，希望能给你指条路。下边列举了计算机基础、开发工具、代码规范、软件工程相关的东西，恕我没法像李笑来老师那样让你俩月速成，不过这些知识都掌握（或者大部分入个门）找个工作应该是没问题的。笔者基本就是靠自学 Python web 入职知乎的。最近又录了一门面试的课程（可以加入课程群一起讨论技术和面经）。</p><p>电子书：</p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/PegasusWang/python-web-guide\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-832a96e772eb43e98406c20da437341d_l.jpg?source=54b3c3a5\" data-image-width=\"400\" data-image-height=\"400\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PegasusWang/python-web-guide</a><a href=\"https://link.zhihu.com/?target=https%3A//coding.imooc.com/class/318.html\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-3e6cb08f03397d62cf9b16c8c7afd9dd_l.jpg?source=54b3c3a5\" data-image-width=\"216\" data-image-height=\"216\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python服务端工程师面试指导-慕课网实战</a><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-61a959de47693550d6bcf10a63e8844d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1500\" data-rawheight=\"2668\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-6a0a08ec74393f8731a4eb463c1c1fdb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1500\" data-original=\"https://pic4.zhimg.com/v2-61a959de47693550d6bcf10a63e8844d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1500'%20height='2668'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1500\" data-rawheight=\"2668\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-6a0a08ec74393f8731a4eb463c1c1fdb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1500\" data-original=\"https://pic4.zhimg.com/v2-61a959de47693550d6bcf10a63e8844d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-61a959de47693550d6bcf10a63e8844d_720w.jpg?source=54b3c3a5\"></figure><p>看到有同学觉得我写得又臭又长（实际上缓存优化和网站安全都没涉及到），我就大致总结一下吧，因为很多东西都是我工作中慢慢记录的，所以可能多了些，新手一下子消化不完。其实我只是偷懒复制粘贴了下我之前记录的博客。简单总结来说就是：</p><p>python语法：《python核心编程》</p><p>算法和数据结构： 随便一本参考书，了解基础概念，帮你写出高效程序</p><p>http协议：做web http协议是基础，推荐个入门的《图解HTTP》</p><p>linux：《鸟哥的linux私房菜》，因为项目部署一般用linux系统，所以需要了解linux</p><p>mysql：随便一本参考书都可以。做后端项目肯定需要数据库</p><p>版本控制：git，目前最流行的版本控制工具</p><p>代码风格：pep8标准</p><p>测试：pytest，正规项目需要单元测试</p><p>开发工具：Pycharm等。</p><p>web框架：django/flask/tornado等。实际上如果可以参照flask文档教程独立写个博客就算入门了，至少基本的知识都涉及了。数据库什么的最好亲自安装，善用google、stackoverflow、github。就算去培训班估计知识点也不会超过我以上列举的这些，这些都是工作中最紧密相关的部分。我之前练习tornado写了个简单的小网站<a href=\"https://link.zhihu.com/?target=http%3A//weiyuedu.me/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">微阅读</a>，专门阅读我感兴趣的微信号，爬虫和网站都涉及到了。学有所用就是最好的练习方式。初学者一开始不要害怕，我列举的很多也是我工作中才慢慢学到的，一开始学python的时候我sql语句都不怎么会，随着你的学习做出成果了会不断给你正反馈，入门可能会有一段困难期需要你克服（比方说编码问题、包导入问题、性能问题）。python相对其他语言入门算是容易的，而且生产力高，又能干很多事（自动化、web开发、爬虫、数据分析等等），算是性价比很高的一门语言，号称伪代码语言（易读）和黑客语言（黑客工具），随着大数据和人工智能火起来，python再次展现出活力。</p><p><br></p><p>上面这些列举我觉得这已经是一个合格开发者比较基础的东西了，如果这个你还觉得掌握不了，那我觉得你可能不太适合入行（这些知识至少要有入门级的水平）。说python很简单的人可能只是把它当个玩具或者业余用用，而我是要靠它吃饭的。如果你希望深入学习，下边我引用了很多书籍和参考资料。正像很多知乎技术牛人说的，语言只是个工具，你要掌握的是相关技术栈（数据、后端、运维、爬虫等），而不是仅仅会使用一些python语法糖。另外我只是个技术一般的python后端（工作一年多点的初级工程师），我不是技术牛人，我的优点在于我持续学习总结吧。我觉得编程有时候不需要特殊的天赋，但是兴趣和学习能力还是很重要的。除非你天赋异禀，不然没有捷径（要靠持续看书和针对性练习），这一行里牛人、聪明人、勤奋者太多了，你要怎么与他们协作or竞争？公司里的也不都是技术牛人，很多是靠编程手艺混个饭吃（所以要靠规范、流程、测试、codereview防止程序员捅娄子）。我发现现在python慢慢火了，很多人开始学习，但是业余选手太多，正规军比较少，而目前关于python工程实践方面的资料并不多，我记录了很多工程相关的东西只是希望国内的python学习者可以越来越专业，有越来越多有才智的人为python社区贡献力量。<a href=\"https://link.zhihu.com/?target=http%3A//ningning.today/2016/04/11/python/python-web%25E5%2585%25A5%25E9%2597%25A8%25E4%25B8%2580%25E5%25B9%25B4/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python web入门一年(附python web入坑指南)</a>最后这个是我大四开始学习python找工作的经历和一些学习方法论，有兴趣的可以看看。</p><p><br></p><p>以下是长文，慎入，高手请无视。没毅力或没兴趣的建议还是跟着轮子哥看看美胸和大腿吧，程序员可能不适合你：</p><p><br></p><p>入门基础</p><p>编程语言: Python</p><p>Python入门相对容易又可以干很多事(网站,运维,数据,爬虫等），是一门方便的工具语言。2016年TIOBE排名显示Python已经名列第四，成为脚本语言之首。 国外的Youtube，Instagram，Pinterest，Reddit， Quora等知名应用一开始都是基于Python构建，国内的豆瓣，知乎，果壳，饿了么等也是Python应用的典型。这也给了国内Python开发者一阵强心剂，Python的生态环境可以支撑起重量级的 产品。这里不想挑起语言之争，php，nodejs，java，ruby等都有丰富的生态环境。不过目前来看，技术选型用Python在招聘、学习、培训、敏捷开发等方面还是一个比较折中的选择（主要在于人，而不是语言）。 python，ruby之类的语言优势在于其生产力，你能在极短时间内就搭建出原型从而赢得产品竞争。当然python也有其缺点，比如python2编码问题，性能问题，易开发，难维护，python3激进地舍去了很多语言不好的特性导致无法兼容python2等。 推荐一下几本个人认为比较好的Python书籍:</p><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//docs.python-guide.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《python-guide》</a> requests作者写的guide</li><li><a href=\"https://link.zhihu.com/?target=http%3A//python.swaroopch.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《A Byte of Python》</a> 一百多页的小书，可以快速熟悉Python语言。</li><li><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/26801374/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Python核心编程》</a> 比较全面的Python书籍，介绍了Python语言的方方面面。</li><li><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/26278021/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Fluent Python》</a> Python进阶，涉及了很多Python高级主题。</li><li><a href=\"https://link.zhihu.com/?target=http%3A//python3-cookbook.readthedocs.io/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Python3 Cookbook》</a> Python进阶读物。</li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.dongwm.com/archives/fen-xiang-%255B%253F%255D-ge-zhun-bei-gei-gong-si-jiang-pythongao-ji-bian-cheng-de-slide/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Python高级编程》</a> 小明明的python高级编程</li></ul><p>当然还有Python的官方文档作为参考，不过有些文档有些地方比较晦涩，还是推荐书籍入门。网上目前也可以搜到很多免费的电子书。 如果有时间可以看看国内廖学峰写的Python教程。</p><p><br></p><p>算法与数据结构</p><p>编写良好的代码需要了解常用的算法和数据结构，虽然你可能很少会自己实现，但是对于Python语言中一些常用数据结构如list, tuple, set, frozenset, dict和collections模块中的OrderedDict, defaultdict, deque, namedtuple, Counter等应该知道什么时候用。最主要的还是了解算法中递归，二分等常用思想，写出高效易用的代码。如果你想在线练习，可以做一些Acm基础题或者去leetcode等网站刷题。 推荐书籍:</p><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/20432061/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《算法导论》</a> 你可以挑选感兴趣的章节啃一啃，也可以去网易公开课看下视频教程。如果不是计算机专业的可以看下《计算机科学导论》这门公开课，正好也是以Python语言讲解的。</li></ul><p>计算机网络</p><p>对于应用开发者来说大部分时间可能不太会接触特别底层的问题，但是了解网络的运行原理还是必要的。网上有个面试题 <a href=\"https://link.zhihu.com/?target=http%3A//fex.baidu.com/blog/2014/05/what-happen/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">从输入URL 到页面加载完成的过程中都发生了什么事情？</a> 如果对其中大部分的概念都了解就算是入门了。网络相关书籍可以随便找一本看看。Http协议对于web开发者来说比较重要，需要深入了解。推荐书籍:</p><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/25863515/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《图解Http》</a> 一本小白入门Http协议的好书，有大量图片示例。</li><li><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/10746113/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Http权威指南》</a> Http协议最权威的讲解，大部头著作，可以看看最基础的部分。</li></ul><p>Linux系统</p><p>大部分Python应用都是跑在Linux服务器上的，大部分开源软件使用的也是linux系统，即使日常工作不使用linux，一些基本的linux命令也要了解。 比如常用的文件操作，目录操作，进程操作等。你可以使用类unix系统mac或者linux版本ubuntu作为学习环境。 推荐：</p><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//linuxtools-rst.readthedocs.io/zh_CN/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Linux工具快速教程》</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//conqueringthecommandline.com/book/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《CONQUERING THE COMMAND LINE》</a> 掌握这上面的命令基本就可以满足日常需求了。</li><li><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/4889838/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《鸟哥的Linux私房菜.基础学习篇》</a> 浅显易懂，入门Linux命令的好书。</li></ul><p>数据库</p><p>现在用得比较多的有三种类型的数据库，关系型数据库（mysql等），文档型数据库（mongodb等），和内存型数据库（redis等）。三种数据库各有优势和特色，后端程序员需要了解下不同类型数据库的使用方法和应用场景，灵活应用到后端代码中。关于各种数据库网上已经有不少资料，读者可以自行搜索学习。</p><p><br></p><p>版本控制</p><p>目前最流行的应该就是git了。版本控制工具是多人协作必不可少的工具，入门的程序员需要掌握基本的git命令，可以把github作为个人练习的工具。</p><p><br></p><p>专业性</p><p>公司做项目不是自己过家家，需要你具备写文档，注释，单元测试的能力。如果你现在还不了解一个正规python项目都有哪些组件构成，请去github克隆一份知名的代码仓库，花点时间仔细分析下它的项目结构和源代码。github上很多优秀资源你可以自己去探索。</p><p><br></p><p>软技能</p><p>程序员和计算机打交道比较多，我在大学的时候就喜欢一个人闷头啃书。但是工作了你会和很多人交流协作，你的同事（前端、测试、运维、产品经理、客户等）、上司甚至老板，你要学会如何有效沟通和表达，抛弃一些学生思维，从一个学生转到职场人士，这其实是一次很好的锻炼。笔者刚入职场的时候就不太会表达协作，而且情绪易激动，甚至一意孤行导致项目延误过，这些亏我都是吃过的。希望后来人吸取教训，代码之外还有很多需要学习的。</p><p><br></p><p>后端技术栈</p><p>对于技能需求可以在拉勾上搜一下Python的职位，看看各个公司对Python的要求。或者你可以写个拉勾网的爬虫，对数据做一个简单的统计，笔者当初找工作就是这么干的。 另外，真正做项目还需要你熟悉python的各种库和框架，比如django/flask/tornado/requests/sqlalchemy/unittest/pytest/celery等等，掌握了合适的工具才能快速上手做东西，公司恨不得你第一天入职第二天就能写项目。 所以，在你入了门以后请尽快熟悉python web的技术栈。公司不管你会什么算法，只在乎你的生产力。 推荐一些文章供参考:</p><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/phodal/growth-ebook\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《全栈增长工程师指南》</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//skill.phodal.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《web开发路线图》</a></li><li><a href=\"https://www.zhihu.com/question/24952874\" class=\"internal\">《后端都要学习什么？》</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.wklken.me/posts/2013/12/21/python-jd.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《PYTHON招聘需求与技能体系》</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.wklken.me/posts/2014/07/26/python-tech-stack.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《PYTHON后端相关技术/工具栈》</a></li></ul><p>代码风格</p><p>不一致的开发风格会给协作开发带来困难，同时也妨碍代码阅读，读代码的时间是多于写代码的，所以有必要统一编码规范。推荐使用pep8或者其子集作为代码规范，使用vim插件python-mode开启pep8和pylint对代码就行检测。如果使用其他编辑器或者IDE工具最好也使用相关插件使代码符合规范。工程上的代码应该尽可能保持清晰易懂，推荐看看requests等优秀的开源库学习下。强烈建议新手看看以下参考写出格式规范的代码，强烈建议打开pep8和pylint，pylint可以帮助你干掉很多低级错误。建议使用py的公司都指定好自己的代码规范并且严格遵守，同时做好code review，防止造成以后的维护噩梦。</p><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//pep8.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《PEP8.org》</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.python.org/dev/peps/pep-0008/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《PEP 8 – Style Guide for Python Code》</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/contents/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Google开源项目风格指南-Python风格指南》</a> google风格的docstring比较赞</li><li><a href=\"https://link.zhihu.com/?target=http%3A//deeplearning.net/software/pylearn/v2_planning/API_coding_style.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《API_coding_style》</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《code-example》</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//www.kancloud.cn/kancloud/sina-boot-camp/64003\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《编写优雅代码》</a> 新浪微博的培训课程，可以学习一下</li><li><a href=\"https://link.zhihu.com/?target=http%3A//blog.2baxb.me/archives/1343\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《烂代码的那些事》</a> Axb的自我修养，大神的文章</li><li><a href=\"https://link.zhihu.com/?target=http%3A//bwanamarko.alwaysdata.net/napoleon/format_exception.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《三种docstring示例》</a></li></ul><p>一个简洁的代码规范：</p><ul><li>格式请遵守pep8,务必开启编辑器的pylint和pep8检测。vim请试试python-mode插件。</li><li>模块、类和函数请使用docstring格式注释，除显而易见的代码，每个函数应该简洁地说明函数作用，函数参数说明和类型，返回值和类型。对于复杂的传入参数和返回值最好把示例附上。如有引用，可以把jira，github，stackoverflow，需求文档地址附上。 良好的文档和注释很考验人的判断（何时注释）和表达能力（注释什么）。</li><li>动态语言的变量命名尽量可以从名称就知道其类型，比如url_list, info_dict_list，降低阅读和理解的难度。(我的感觉就是动态语言易编写，写不好后期更难维护)。比如经常用date命名，有时它是个datetime.date对象，有时候是个字符串，还有人喜欢用info结尾，有时候是个dict，时候是个string，看得我晕头转向，总不能所有地方都用instance判断吧，怪不得python3加上了type hint。没有注释和文档看得我想骂人。命名在动态语言里头十分考究，希望你可以注意。</li><li>风格上衡量不了请参考知名开源项目的做法。以可读性和维护性作为标准。</li></ul><p>编程范式</p><p>Python支持多重编程范式，过程式(Procedural)，面向对象(OOP)，简单函数式(Functional)编程。不同人，不同语言转过来的人，Python老鸟和菜鸟等写出来的代码风格迥异。笔者之前的同事有对OOP挖掘较深的，一般习惯写OOP风格的，但现在的项目却很少用类，之前的代码都是用一个个函数来实现各种功能。对个人风格喜好不予评判，但是个人感觉还是需要深挖一些Python的特性，虽然Python容易入门，但是有些语言特性还是需要一段时间才能了解深入的。使用各种风格的时候要酌情判断，比如一个过程需要维护大量的中间状态时，单纯的使用函数会写得很冗长，这时候可以用类和子函数的形式简化它。当你无法判断哪种方式比较好的时候，请在解释器里边 import this看看。当可以实现一样的功能时，往往简单易懂的方式就是最好的。一些参考:</p><ul><li><a href=\"https://link.zhihu.com/?target=https%3A//github.com/kennethreitz/requests\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《requests》</a> requests库是接口设计的典范，可以参考参考。</li><li><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/26468916/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Python3 面向对象编程》</a> 关于Python面向对象和一些设计模式。</li><li><a href=\"https://link.zhihu.com/?target=http%3A//stackoverflow.com/questions/552336/oop-vs-functional-programming-vs-procedural\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《OOP vs Functional Programming vs Procedural》</a></li></ul><p>何谓Pythonic?</p><p>Python的世界里你会听到这个词”Pythonic”，大概就是指代码符合Python的惯用法，使用的都是Python的语法糖。比如从其他语言转到Python 的写出来的代码很可能受到以前思维方式的影响，写出来的代码不够Pythonic: 比如:</p><p><br></p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># 不够Pythonic\nif a &lt; b and a &gt; c:\n    pass\n\n# python里却可以这么写\nif c &lt; a &lt; b:\n    pass\n\n# bad\ni = 0\nwhile i &lt; mylist_length:\n    do_something(mylist[i])\n    i += 1\n\n# good\nfor element in mylist:\n   do_something(element)\n\n# bad, 不要使用默认可变对象作为默认参数\ndef f(a, b=[])\n    pass\n\n# good\ndef f(a, b=None):\n    if b is None:\n        b = []\n</code></pre></div><p>Python有一些语法上的坑，比如默认参数只计算一次，不要使用可变类型作为默认参数等，看多了写多了就知道了。尤其是可变类型作为函数参数传入后被改变的情况（函数尽量不要有副作用），尤其要注意。 一些参考帮助写出Pythonic的代码:</p><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//blog.csdn.net/gzlaiyonghao/article/details/2762251\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Pythonic到底是什么玩意儿？》</a> 赖勇浩的博客</li><li><a href=\"https://link.zhihu.com/?target=http%3A//docs.python-guide.org/en/latest/writing/style/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《python-guide Code Style》</a> python-guide关于代码风格的介绍</li><li><a href=\"https://link.zhihu.com/?target=https%3A//www.cs.cmu.edu/%7Esrini/15-441/F11/lectures/r04-python.pdf\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Learning the Pythonic Way》</a> 一个cmu的课件</li><li><a href=\"https://link.zhihu.com/?target=http%3A//share.sm3.su/writing_idiomatic_python_3.pdf\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Writing Idiomatic Python3》</a> 一本免费小书</li><li><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/25910544/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《编写高质量代码：改善Python程序的91个建议》</a> 给国人的书捧捧场^_^，类似《Effective python》</li><li><a href=\"https://link.zhihu.com/?target=http%3A//python-web-guide.readthedocs.io/zh/latest/codingstyle/%25E5%25A5%25BD%25E5%25A5%25BD%25E5%2586%2599%25E4%25BB%25A3%25E7%25A0%2581\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《好好写代码》</a> 豆瓣工程师董伟明的文章</li></ul><p>敏捷与TDD</p><p>笔者非计算机科班出身，对于软件工程的东西也不是很懂，最近扫了一本《敏捷软件开发-原则、模式与实践》，感觉有些东西还是挺有启发的。在这里稍微提一下敏捷中的TDD(Test-driven development)吧。因为Python是动态类型语言，不像静态语言可以编译期检查，很多问题运行时暴露出来，而且动态语言语法灵活也容易刨坑。用TDD是可以提升代码质量的，虽然有时候完全用TDD可能有些死板，但是TDD的一些思想还是很值得借鉴：</p><ul><li>测试最重要的是对架构和设计的影响，不是为了测试而测试。一般难以测试的代码往往是设计不好，耦合严重的代码。没有测试的代码同时也给重构带来压力和隐患。</li></ul><p>编码的时候想着如何测试它，甚至都可以改善设计。对于动态语言，一直有『动态语言一时爽，代码重构火葬场』这种说法，说明动态语言如果没有良好的设计和测试，以后是会埋下不少隐患的。 当你发现debug的时间甚至比写代码长很多的时候，当你发现总是返工对代码修修补补的时候，或者可尝试下TDD。 你可以学习使用下python的unittest或者pytest等进行单元测试，以保证代码质量。个人工作经验也表明，难以测试的代码往往是设计不太好的代码。 update: 经验表明，TDD未必是必要的，但是单元测试是很必要的。如果是新项目建议为所有的复杂函数写单元测试，为项目质量保证。 下边是一些参考书籍:</p><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//web2.0coder.com/archives/92\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《Tips for agile developers》</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//pytest.org/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《pytest: helps you write better programs》</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/5442024/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《代码整洁之道》</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/10797189/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《编写可读代码的艺术》</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/4262627/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《重构-改善既有代码设计》</a></li><li><a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/6398127/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《软件调试修炼之道》</a> 了解下调试和跟踪技术</li><li>《<a href=\"https://link.zhihu.com/?target=https%3A//book.douban.com/subject/2208626/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">代码大全 (豆瓣)</a>  》板砖书，从小白快速迈入职业程序员</li><li><a href=\"https://link.zhihu.com/?target=http%3A//blog.thedigitalcatonline.com/blog/2015/05/13/python-oop-tdd-example-part1/%23.WDb_xWR962w\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">A simple example of Python OOP development (with TDD) - Part 1</a> </li></ul><p><br></p><p>开发工具（很多只列举个名字，具体使用请自行google）<a href=\"https://link.zhihu.com/?target=http%3A//python-web-guide.readthedocs.io/zh/latest/codingtools/codingtools.html%23google\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">开发和编程工具 - python-web-guide 0.1 文档</a></p><ul><li>Pycharm。专业的python ide，功能很强大，特别喜欢它的代码merge工具，不想被编辑器折腾死的推荐直接使用。</li><li>vim。本人比较喜欢，配上各种插件编辑效率很高。<a href=\"https://link.zhihu.com/?target=http%3A//vimawesome.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Vim Awesome</a> 可以到这个上面安装排名靠前的那些插件，能够大大提高编辑效率，替代IDE。其他编辑器sublime，atom，vscode，emacs等不熟，根据个人喜好来吧。(在google搜索python awesome等可以在github上搜索到一些awesome项目，总结了该语言很多技术工具)。炫酷的效果图：<a href=\"https://link.zhihu.com/?target=http%3A//7ktuty.com1.z0.glb.clouddn.com/vim_tmux_tdd.gif\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">7ktuty.com1.z0.glb.clouddn.com</span><span class=\"invisible\">/vim_tmux_tdd.gif</span><span class=\"ellipsis\"></span></a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//ningning.today/2016/11/09/tools/vim-tmux-zsh-autojump/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用vim+tmux+zsh+autojump高效工作</a></li><li>tmux。比screen好用，可以用来分屏等，ubuntu下基本就不用使用terminator之类的分屏工具了</li><li>zsh。替代原生的bash shell，提供了好多方便的特性。linux/mac下vim+tmux+zsh简直是绝配，甚至可以直接在服务器上方便地撸代码。</li><li>item2(mac)。替代原生的终端。</li><li>brew(mac)。类似ubuntu下的apt-get，可以方便安转各种软件和工具。</li><li>autojump。方便在命令行里来回跳转。</li></ul><p>日志收集工具</p><ul><li>Sentry.</li><li>Fluentd</li></ul><p>管理及运维工具</p><ul><li>Supervisor.进程管理</li><li>Fabric.应用部署</li><li>docker.最近比较火的容器技术</li><li>SaltStack和Ansible. 配置管理</li><li>StatsDGraphite等web监控</li></ul><p>调试工具</p><ul><li>curl</li><li>http</li><li>postman</li></ul><p><br></p><p><br></p><p>一些常见原则</p><p>对于什么是好代码，什么是坏代码我现在还没有太多经验，但是最近工作接手别人的代码感觉困难重重，还是too naive啊。每个人实力不同，风格不同，一起协作的时候确实会遇到很多问题和分歧。感觉code review啥的还是很有必要的，可以让菜鸟学习下老鸟的经验，也可以让老鸟指导下菜鸟的失误，同时避免过于个人化的糟糕风格（比如让人想立马离职的高达成百上千行的复杂函数，比如上来一堆不知道干啥的幻数，比如上来就 form shit import * 导致俺的编辑工具找不到定义，比如整个项目没有一行测试代码，比如不知道用logger，全用print+眼珠子瞅，一个bug找半天，比如没有pep8检测导致你的环境打开别人的代码彪了一堆警告......)。说好的规范呢，说好的设计模式呢，说好的高内聚低耦合呢？说好的KISS原则呢？说好的DYR原则呢？其实俺只是想多活几年，至少不要到三十岁头发掉光。啥设计模式的可以不用，能干活的代码就行，牢记几个原则，没事的时候对复杂的东西重构下，代码不能自解释的搞搞文档，不被队友坑同时不坑队友，俺就心满意足了。最后还是列举一下常用原则、思想和注意事项吧(最好import this看看python之禅，很多思想是通用的):</p><ul><li>KISS原则，Keep It Simple, Stupid。能简单的绝对不要复杂，不要炫耀代码技巧，简单可读最重要，后人会感谢你的。</li><li>DRY原则。就算咱不懂设计模式，只要代码复杂重复了就及时抽取出来，至少不会碰到大问题。</li><li>YAGNI(You Aren’t Gonna Need It)，不要猜测性编码。</li><li>快速失败，灵活使用断言。契约式编程(先验条件和后置条件)</li><li>及时清理技术债务，防止『破窗』。</li><li>一次只做一件事。尽量避免复杂度过高的逻辑，尽量做到代码简单，意图明确。</li><li>高内聚，低耦合。意义相近的东西应该放到同一个地方。写代码的时候想着怎么测试它就能避免过度复杂，耦合严重的代码。</li><li>代码应当易于理解。 《代码大全》、《编写可读代码的艺术》、《代码整洁之道》啥的都是告诉你代码最好自解释，好理解。记住代码首先是给人看的，其次才是让机器执行的，不要过度设计。</li><li>不要过早优化，最小可用原则。先测量，后优化。根据二八定律，大部分性能瓶颈只在20%的部分，这些才是真正需要优化的地方。</li><li>不要炫技，可读性最重要。合适的地方使用合适的技巧，不要过度炫耀语法糖导致维护和理解困难。</li><li>Think about future, design with flexibility, but only implement for production. 尽量设计良好，避免繁杂和冗余。好的架构和设计都是不断演进的。</li><li>文档化。哪些东西该文档化，哪些该注释需要做好，以便新手可以尽快上手。尽量做到代码即文档，tornado的文档和代码就是典范。</li><li>不要直接吞掉任何错误和异常，一定要做好记录。血泪教训，使用Sentry或其他工具记录好异常发生的信息，为定位bug提供便利，web端的bug一般不好复现。</li><li>......还有的大家可以自己补充</li></ul><p>还有OOP那一套:</p><ul><li>开闭原则(Open-Closed Principle)</li><li>依赖倒置原则(Dependence Inversion Principle)</li><li>接口隔离原则(Interface Segregation Principle)</li><li>里氏代换原则(Liskov Substitution Principle)</li><li>迪米特原则(Law of Demeter)</li><li>合成复用原则(Composite/Aggregate Reuse Principle)</li><li>单一职责原则(Single-Responsibility Principle)</li></ul><p>python代码坏味道(新手经常犯的错误)</p><ul><li>不pythonic，写得很业余，真就信了半天学会python</li><li>上来就整一个不知道啥意思的magic number，大学老师没教你不要滥用幻数？</li><li>上来就from shit import *</li><li>复杂函数没有docstring，传入了一个嵌套字典都不注释，娘来</li><li>变量名乱起，看不出类型，加重理解负担。我在想是不是动态语言用匈牙利命名法要好一些</li><li>不遵守pep8，没有pylint检测，打开代码一堆语法警告，老子的编辑器满眼都是warnning，编辑器用不好就老老实实用pycharm，用编辑器就老老实实装好语法检测和pylint检测插件，没有插件请考虑换一个editor</li><li>没有单元测试，不知道怎么写测试（print大法好？）</li><li>超长函数，没有复用和拆分，我智商低，不能理解好几屏都翻不完的，见谅。这么长居然还tm能工作，牛逼</li><li>到处print，debug的时候加上，上线再删除（累不累亲？），logging模块很受冷落</li><li>上来就try/except了，把异常都捕获了，吞掉异常导致排错困难</li><li>没注意可变类型和非可变类型，传入可变类型并在函数里修改了参数，坑。。。</li><li>没有逻辑分块，没有美感（这个就算了），就算不限制一行超过80列，也不能写一行写几百列吧，左右转头脑瓜子疼</li></ul><p>嗯，一开始就开启pep8和pylint检测能显著提升代码质量（各种错误警告逼着你写出高质量代码）。咱写不了诗一样的代码，也不能写shǐ 一样的代码。 可能很多东西对老鸟来说都是显而易见的，不过菜鸟和高级菜鸟们还是需要多多练习积累经验。慢慢摸索吧骚年。。。。。。</p><p><br></p><p>小白的踩坑记录</p><p>文档化</p><p>很多程序员是懒得写文档的，仿佛牛逼的程序员不需要写。但是看人家真正牛逼的开源项目比如flask和tornado等，无论是代码还是文档都做得相当棒。对于一些项目，有些东西如部署步骤；常用命令等还是可以记录下来的，可以使用wiki或者readthedoc，gitbooks等文档工具记录一下，方便新人上手。如果不知道记录啥，就把你发现不止一次会用到的东西文档化。个人认为需求文档也应该有历史记录，方便接手的人可以快速了解业务和需求变更。数据库字段的含义也应该及时记录和更新。</p><p><br></p><p>注释</p><p>有经验的人都知道看别人的代码是一件很痛苦的事情，尤其是没有任何注释的代码。代码除了完成需求外，最重要的就是维护和协作，除非你觉得你做的项目活不过仨月(或你自己玩玩的项目随便你怎么艹)，否则就一定要重视代码质量，防止代码腐化(破窗)以至难以协作和维护。有时候比写注释更难的是知道何时写，写什么注释？python里有规范的docstring用来给类和函数进行注释，除了说明功能外，关于github,stackoverflow链接、复杂的传入传出参数（比如嵌套字典作为参数这种你都不注释就很不合适了)，类型说明、需求文档和bug的jira地址等都可以注释。凡是你回头看代码一眼看不出来干啥的，都应该有适当的注释，方便自己也方便别人。当然，最重要的是代码清晰易读，好的命名和编写风格的代码往往是自解释的，看代码大致就可以看出功能。建议就是给所有的模块、类和函数都加上注释，除非一眼能看出来这个东西干啥，否则都应该简洁注释下，让别人不用一行行看你的代码就大概知道你这个东西是干啥的。最后注意的就是一旦函数更改及时更新注释。qiniu的sdk写得就不错，可以去github看看。总之，”Explicit is better than implicit.”, 代码里不要有隐晦的东西，一时偷懒将来可能会付出几倍的维护代价，请对将来的自己和他人负责。</p><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//bwanamarko.alwaysdata.net/napoleon/format_exception.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《python docstring》</a></li></ul><p>Code Review</p><p>笔者认为code review是一件非常重要的事情，可以有效防止代码腐化，同时方便同事了解业务。可以在公司搭建Phabricator（facebook在用）类似工具进行代码review。</p><p><br></p><p>日志与异常记录</p><p>一定要有良好的日志记录习惯。良好的日志对于记录问题至关重要。python有方便的日志模块帮助我们记录，日志输出的代价是比较小的，python的日志模块尽量做到对函数功能没有性能影响，可以在线上和开发环境设置不同的log等级，方便开发调试。注意别再日志语句里引入了bug或异常。 对于异常，一定『不要吞掉任何异常』，常有新手上来就try/except，也不区分非退出异常，也没有日志记录(坑啊......)。请先阅读python文档的异常机制，可以使用Sentry等工具记录异常。同时发生异常时候的时间，调用点，栈调用信息，locals()变量等要注意记录，给排查错误带来便利。有些错误的复现是比较困难的，这时候日志和异常的作用就凸显出来了。</p><p><br></p><p><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzA4MjEyNTA5Mw%3D%3D%26mid%3D2652564362%26idx%3D1%26sn%3Df33910af004f276bbef7ae52e0757bcb%26chksm%3D8464c3c0b3134ad617bcffd865894344367fdd2995a0d5ff9c4da30e0c158b3d02b3d616f615%26mpshare%3D1%26scene%3D23%26srcid%3D1124K7Ht1FP2A1Fnvi3HTBE5%23rd\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">每个 Python 程序员都要知道的日志实践</a></p><p><br></p><p>调试</p><p>调试也是个很重要的问题，不可能保证代码没bug，要命的是有时候写代码完成功能的时间还没调试的时间多。注意复现是排错的第一步，之后通过各种方式确定原因（访问日志、邮件报的异常记录）等，通过走查代码、断点调试（二分法等）确定错误位置，确定好错误原因了就好改了。修复后最好反思下问题的原因、类型等，哪些地方可以改进，争取下次不犯一样的错。</p><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//www.wklken.me/posts/2015/11/29/debugging-9-rules.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《调试九法》</a></li></ul><p>尽量写出对自己也对其他人负责的代码，上边费了牛劲都是在阐述这个显而易见但是没多少人严格遵守的东西。我之所以这么重视质量就是因为我踩过难以维护的坑。用动态语言写大型项目维护起来要稍麻烦， 很多新手写代码不注重可维护性，甚至自己写的代码回头自己看都一脸懵逼，问了一句这代码TM是干啥的？ 一开始的负责会为以后协作和维护带来极大便利（当然你想干两天就走让其他人擦屁股就当我没说）。 最后，很多东西我也在摸索，上面的玩意你就当小白的踩坑记录，随着理解和经验的加深我会不定期更新本篇内容。</p><p><br></p><p>最后：如果我的鼓动能让国内出现更多优秀的python工程师，也算做了一件大好事吧哈哈哈 。觉得有用的请在github给个star吧。</p>"}{"一行 Python 能实现什么丧心病狂的功能？": "<figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-ae2d2bb3f9fe786fc84e95c13c4a2705_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"703\" data-rawheight=\"258\" class=\"origin_image zh-lightbox-thumb\" width=\"703\" data-original=\"https://pic1.zhimg.com/v2-ae2d2bb3f9fe786fc84e95c13c4a2705_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='703'%20height='258'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"703\" data-rawheight=\"258\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"703\" data-original=\"https://pic1.zhimg.com/v2-ae2d2bb3f9fe786fc84e95c13c4a2705_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-ae2d2bb3f9fe786fc84e95c13c4a2705_720w.jpg?source=54b3c3a5\"></figure><p>下面这些用一行 Python 代码实现的功能，可能称不上丧心病狂，但是也很强大了。</p><p>当然了我们在最后会放一个大杀器。</p><p><br></p><h2><b>解码一个 base64 编码格式的文件</b></h2><p><br></p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"kn\">import</span> <span class=\"nn\">base64</span><span class=\"o\">,</span> <span class=\"nn\">sys</span><span class=\"p\">;</span> <span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s2\">\"rb\"</span><span class=\"p\">),</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"s2\">\"wb\"</span><span class=\"p\">))</span>\n</code></pre></div><p><br></p><h2><b>打印出输入文件中的每行代码，但移除前两个字段</b></h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s2\">\"import sys;[sys.stdout.write(' '.join(line.split(' ')[2:])) for line in sys.stdin]\"</span> <span class=\"o\">&lt;</span> <span class=\"nb\">input</span><span class=\"o\">.</span><span class=\"n\">txt</span>\n</code></pre></div><p><br></p><h2><b>将正则表达式应用到来自 Stdin 的代码行</b></h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"p\">[</span><span class=\"n\">another</span> <span class=\"n\">command</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s2\">\"import sys,re;[sys.stdout.write(re.sub('PATTERN', 'SUBSTITUTION', line)) for line in sys.stdin]\"</span>\n</code></pre></div><p><br></p><h2><b>使用映射修改来自 Stdin 的代码行</b></h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s2\">\"import sys; tmp = lambda x: sys.stdout.write(x.split()[0]+'</span><span class=\"se\">\\t</span><span class=\"s2\">'+str(int(x.split()[1])+1)+'</span><span class=\"se\">\\n</span><span class=\"s2\">'); map(tmp, sys.stdin);\"</span>\n</code></pre></div><p><br></p><h2><b>显示所有用 Unix 一类系统的用户列表</b></h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">print</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">\":\"</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"/etc/passwd\"</span><span class=\"p\">))</span>\n</code></pre></div><p><br></p><h2><b>将 CSV 文件转换为 json 文件</b></h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s2\">\"import csv,json;print json.dumps(list(csv.reader(open('csv_file.csv'))))\"</span>\n</code></pre></div><p><br></p><h2><b>压缩 CSS 文件</b></h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s1\">'import re,sys;print re.sub(\"\\s*([{};,:])\\s*\", \"</span><span class=\"se\">\\\\</span><span class=\"s1\">1\", re.sub(\"/\\*.*?\\*/\", \"\", re.sub(\"\\s+\", \" \", sys.stdin.read())))'</span>\n</code></pre></div><p><br></p><h2><b>检索来自 HTTP 数据中的内容文本</b></h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s2\">\"import sys; print sys.stdin.read().replace('</span><span class=\"se\">\\r</span><span class=\"s2\">','').split('</span><span class=\"se\">\\n\\n</span><span class=\"s2\">',2)[1]\"</span><span class=\"p\">;</span>\n</code></pre></div><p><br></p><h2><b>计算一列数字的和</b></h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">print</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1001</span><span class=\"p\">))</span>\n</code></pre></div><p><br></p><h2><b>祝你生日快乐</b></h2><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">print</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"s2\">\"Happy Birthday to \"</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"s2\">\"you\"</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">!=</span> <span class=\"mi\">2</span> <span class=\"k\">else</span> <span class=\"s2\">\"dear Name\"</span><span class=\"p\">),</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n</code></pre></div><p><br></p><p>最后介绍一行真正称得上“丧心病狂”的 Python 代码。不过这个要借助 Python 库实现，它可以让你只需一行代码就能可视化你的神经网络。</p><p><br></p><p>这个 Python 库叫 ANN Visualizer，同 Keras 一起使用。有了它，我们就可以<b>给自己正在搭建的神经网络创建出简洁漂亮的可视化图形</b>。</p><p><br></p><p>可以用如下命令安装该程序库：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">ann_visualizer</span>\n</code></pre></div><p><br></p><p>如果想为神经网络生成可视化图形，执行如下命令结构：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">ann_viz</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">view</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"err\">”</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">gv</span><span class=\"err\">”</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"err\">”</span><span class=\"n\">MyNeural</span> <span class=\"n\">Network</span><span class=\"err\">”</span><span class=\"p\">)</span>\n</code></pre></div><p><br></p><p>其中：</p><li>Model——你的 Keras 序列模型</li><li>View——如果设为 True，它会在命令执行后打开图形预览</li><li>Filename——图形的保存位置（保存为 .gv 文件格式）</li><li>Title——被可视化的神经网络的名字</li><p><br></p><p>下图是用 ANN Visualizer 为一个神经网络生成的可视化图形：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-bea09794ff3937713a94b4cb7123eac0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"744\" class=\"origin_image zh-lightbox-thumb\" width=\"1268\" data-original=\"https://pic4.zhimg.com/v2-bea09794ff3937713a94b4cb7123eac0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1268'%20height='744'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"744\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1268\" data-original=\"https://pic4.zhimg.com/v2-bea09794ff3937713a94b4cb7123eac0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-bea09794ff3937713a94b4cb7123eac0_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>看着还可以吧？</p><p><br></p><p>将模型可视化有很多用途，比如教学目的，可以在无需运行大量代码的情况下，向学生解释你搭建的神经网络。目前该 Python 库仅能可视化深层神经网络，但很快就能可视化卷积神经网络和 LSTM 网络。</p><p><br></p><p>ANN Visualizer 地址：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/Prodicode/ann-visualizer\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/Prodicode/an</span><span class=\"invisible\">n-visualizer</span><span class=\"ellipsis\"></span></a></p><hr><blockquote><i><b>参考资料：</b></i><br><i><b><a href=\"https://link.zhihu.com/?target=https%3A//www.analyticsvidhya.com/blog/2018/04/python-library-visualizes-artificial-neural-networks/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">analyticsvidhya.com/blo</span><span class=\"invisible\">g/2018/04/python-library-visualizes-artificial-neural-networks/</span><span class=\"ellipsis\"></span></a></b></i></blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-9ef80eb7cae45c49b7f5d34e29d1543b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-9ef80eb7cae45c49b7f5d34e29d1543b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-9ef80eb7cae45c49b7f5d34e29d1543b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-9ef80eb7cae45c49b7f5d34e29d1543b_720w.jpg?source=54b3c3a5\"></figure>", "对 Quant 而言 Python 的需求高吗，除 C++ 外还有哪些流行的编程语言？": "谢邀。很抱歉这个问题我三天前有看到，当时欲答又止，因为我发现我可以两行答完这个问题：<blockquote>1、高<br>2、还有：Python, Java, Matlab, R, Q和某些公司内部自有语言（如高盛的自有语言）</blockquote>但是我不希望敷衍了事，如果回答就展开了说，说说我心中最重要的五类语言。这不仅仅是对于一个Quant必须的，而是一个丰满的程序员所必备的。在艺术中，艺永远比术重要；在Quant相关知识中，intuition永远比纯technique更加重要。<br><br>两年前在Princeton，我和一位研究计算机语言的PhD两人吃饭聊天。他的主要研究方向就是新的计算机语言，及相关的逻辑学。大神如他一顿饭下来80%的时间处于放空状态，基本没在关注我，但我得到了我自以为深刻的理念：一种计算机语言是一种对应哲学的体现。<br><br>因此，在我看来，有五类语言构建了一个丰满的编程能力强的Quant的一切，它们分别是：效率类语言（C、C++、Java等）、胶水类语言（Python、Ruby等）、科学类语言（Matlab、R、S等）、Alpha演算类语言（Lisp、Clojure等）、查询类语言（SQL、Q等）。这是基于我理解浅薄的分类，完全与计算机科学的规范化分类（如面对对象语言、函数类语言）不相容。持不同意见者大可付之一笑。<br><br>1、效率类语言（C、C++、Java等）：老派的Quant很多都是C++高手，特别是80年代涌入华尔街的那帮MIT的高能物理博士们。在那个年代，可以选择的语言不多。要么就Fortan，要么就C/C++了。所以在当时基本上这些语言同时充当着基础架构（infrastructure）和数值计算（比如Monte Carlo）的双重目的。但是现在各种胶水类语言、科学类语言多了起来，而且由于单机性能越发强悍，效率再也不是唯一的诉求了，因此目前C++、Java大量应用于金融系统级的开发，和对于效率要求极高的实时定价等领域。从一个Quant的角度来看，这类语言最大的特点是快，编程复杂度高，维护难，同时原生语言普遍不支持向量运算。<br><br>2、胶水类语言（Python、Ruby等）：我必须承认，这些语言是新世代Quant的福音。在国内工作的时候我目睹并参与了一个将原有的C++框架全部用Python重写的项目，而现在JP Morgan这边利率类产品的定价软件也在从Java像Python转移。实现同样的代码，Python、Ruby的实现速度比效率类语言快很多，而且在机器速度越来越快的今天，差距已经不是不可接受。这些语言最大的特点是比较快，编程复杂度高，维护相对简单，同时大量的包（比如Numpy+Scipy）可以轻松实现向量运算。<br><br>3、科学类语言（Matlab、R、S等）：一般而言，科学类语言最大的特点是支持向量运算，同时各种附加数学、统计包极其丰富，但运算速度无法与前两类相比。在一个具体的投资/交易策略、模型投入实际使用前，你需要快速的去实现（Implement）和验证（Back-testing）你的想法。这个时候，科学类语言就有绝对的优势。验证思路有效后，再用效率类语言或胶水类语言开发成系统级组件。你可以理解为科学类语言是用来造概念车的，而前两类语言是用来量产的。而在具体的职业角度，造概念车的这帮人一般是Pure Quant，而实现量产的很多是Quant Developer。当然也有两者合一的集大成者。<br><br>4、Alpha演算类语言（Lisp、Clojure等）：我第一次对这类语言感兴趣，是12年冬天接触硅谷一家科技公司时（Prismatic，人工智能新闻App），发现他们在用Clojure，也极力向我推荐Clojure。Clojure是基于Java封装的语言，可以用Java虚拟机执行。但归根结底，Clojure是Lisp这类语言。之前我长期沉迷于过程编程与面对对象等概念之中，第一次接触Lisp很不习惯，但后面开始感叹于这类语言之美。我个人感觉目前Quant界用这种语言偏少，但是不排除以后流行的可能。<br><br>5、查询类语言（SQL、Q等）：SQL就不必说了，金融公司很多时候都是使用Oracle等关系型数据库，SQL是基础。而我之前几次面试也遇到了SQL的问题。Q是Morgan Stanley为了应对金融中的海量数据而采用的一种非关系型查询语言，特点是极快，有SQL的基础可以很快掌握。<br><br>全面的说：如果你是做Pure Quant，整天与交易策略和模型睡觉，那么2、3是必须的；如果你是开发为主，或者是Quant Developer，那么1、2、5是必须的；如果你立志让编程不成为你做Quant的障碍，那么1-5全都是必须掌握或至少了解其思想的。<br><br>不管是作为Quant还是Coder，都不可拘泥于语言。语言只是其背后设计哲学的体现。这就等同一个数量金融从业者不可拘泥于产品一样。数量金融的根基永远是供给需求、金钱时间价值这些基本的经济学理论以及现金流的相关概率这些基本的统计学思想。如果拘泥于术而非艺，那路就会越走越窄。"}{"作为一个程序员，怎样在国内寻找到一个有良知，把员工当人看的公司？": "<p><i><b>微信公众号：行走的汉堡</b></i></p><p>根据本人的<b>多年观察</b>和<b>分析</b>，得出以下结论，乍一看可能有点奇怪，但请您<b>读完细品</b>：</p><p>去一个已经<b>开始衰败的昔日巨头</b>公司，会比较轻松，氛围比较nice，钱给的也不少。</p><p>比如曾经的<b>某虎</b>，比如现在的<b>某度</b>。</p><p>反倒那些<b>看似蒸蒸日上的、老板欲望无穷大的公司</b>，会比较累，比如<b>某福报厂</b>、<b>某舞蹈厂</b>。</p><p>当然，同等级别下，那些强势的大厂会比颓势的大厂给的<b>薪资</b>高一点，不过也不会有太大差距。</p><p>就<b>性价比</b>来讲，还是<b>夕阳巨头</b>更高一些。</p><p>而且，还有<b>更重要的</b>一点......</p><p>不知道你们有没有观察过，某度今年<b>晋升通过概率</b>极高，</p><p>虽然<b>公司是走下坡路</b>的，但里面很多<b>人的薪资和级别却在不停攀升</b>。</p><p>这是为什么呢？其实道理和<b>房价</b>一样，<b>逆周期调节</b>，放水刺激呀，嘿嘿。</p><p><b>你品，你细品。</b></p><p>有人可能会说，最后崩了怎么办？你别买公司的<b>股票</b>就行了呀。</p><p>而且，工作和房子是完全不一样的，房子是你自己的，而公司是资本家的...</p><p>崩之前再<b>跳槽</b>拿更高的薪资，再找下一个<b>即将走下坡路的巨头</b>就好了。</p><p>反正<b>公司不是你的</b>，你只是个打工的。</p><p>在投资领域，有一个著名的交易策略就叫做<b>捡烟蒂</b>。</p><p>如果你非要选择去那些所谓蒸蒸日上的大厂，可能就中了资本家的<b>洗脑</b>圈套了。</p><p>资本家没有义务让员工<b>发财</b>，公司蒸蒸日上通常和员工关系不大，顶多<b>镀金</b>效应强点。</p><p>单论镀金，夕阳大厂也不会比蒸蒸日上厂差多少吧。</p><p>而指望着靠公司<b>股票和期权</b>发大财的，不如去买双色球，阿里的造富神话只是<b>小概率事件</b>。</p><p>而且<b>时代也不同</b>了，现在很难再出一个阿里。更多的是某蘑菇疯狂玩儿<b>稀释</b>的骗局。</p><p>对蒸蒸日上厂有<b>执念</b>的，可以自己买点日上厂的股票啊。</p><p>这个世界，总是<b>选择比努力更重要。</b></p><p>捡一捡<b>烟蒂</b>，沾点资本家的小便宜也挺好。</p><p>但是，捡<b>烟头</b>，可是会烫手的哦。</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p></p>", "为什么很多人喜欢 Python？": "<p>大概是因为实在太友好了吧。</p><h2>一. 可以制作一些有趣的小玩意</h2><p>比如仿制抖音之前很火的表白小软件，效果如下：</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/1013539038300684288\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic2.zhimg.com/80/v2-70294241dd6a3811763ff66be5cb8bf1_b.jpg\" data-lens-id=\"1013539038300684288\">              <img class=\"thumbnail\" src=\"https://pic2.zhimg.com/80/v2-70294241dd6a3811763ff66be5cb8bf1_b.jpg\">              <span class=\"content\">                <span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/1013539038300684288</span>              </span>            </a>            <p>介绍：</p><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/yFH8rLM-YzE53DKzXQMaaA\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-fee92a308a24605f281370b7e686a4e1_bh.jpg?source=54b3c3a5\" data-image-width=\"456\" data-image-height=\"320\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python仿制抖音表白小软件</a><p>源代码如下：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># Python制作仿抖音表白神器\n# 作者: Charles\n# 公众号: Charles的皮卡丘\n# 代码仅供学习交流，不得用于其他\nimport os\nimport sys\nimport random\nimport pygame\nfrom pygame.locals import *\n\n\nWIDTH, HEIGHT = 640, 480\nBACKGROUND = (255, 255, 255)\nif getattr(sys, 'frozen', False):\n        # 打包音频等文件时\n        CurrentPath = sys._MEIPASS\n        # 不打包音频等文件时\n        # CurrentPath = os.getcwd()\nelse:\n        CurrentPath = os.path.dirname(__file__)\nFONTPATH = os.path.join(CurrentPath, 'simkai.ttf')\nMUSICPATH = os.path.join(CurrentPath, '1.mp3')\nIMGPATH = os.path.join(CurrentPath, '1.png')\n\n\n# 按钮\ndef button(text, x, y, w, h, color, screen):\n        pygame.draw.rect(screen, color, (x, y, w, h))\n        font = pygame.font.Font(FONTPATH, 20)\n        textRender = font.render(text, True, (0, 0, 0))\n        textRect = textRender.get_rect()\n        textRect.center = ((x+w/2), (y+h/2))        \n        screen.blit(textRender, textRect)\n\n\n# 标题\ndef title(text, screen, scale, color=(255, 0, 0)):\n        font = pygame.font.Font(FONTPATH, WIDTH//(len(text)*2))\n        textRender = font.render(text, True, color)\n        textRect = textRender.get_rect()\n        textRect.midtop = (WIDTH/scale[0], HEIGHT/scale[1])\n        screen.blit(textRender, textRect)\n\n\n# 生成随机的位置坐标\ndef get_random_pos():\n        x, y = random.randint(20, 620), random.randint(20, 460)\n        return x, y\n\n\n# 点击喜欢按钮后显示的页面\ndef show_like_interface(text, screen, color=(255, 0, 0)):\n        screen.fill(BACKGROUND)\n        font = pygame.font.Font(FONTPATH, WIDTH//(len(text)))\n        textRender = font.render(text, True, color)\n        textRect = textRender.get_rect()\n        textRect.midtop = (WIDTH/2, HEIGHT/2)\n        screen.blit(textRender, textRect)\n        pygame.display.update()\n        while True:\n                for event in pygame.event.get():\n                        if event.type == QUIT:\n                                pygame.quit()\n                                sys.exit()\n\n\n# 主函数\ndef main():\n        pygame.init()\n        screen = pygame.display.set_mode((WIDTH, HEIGHT), 0, 32)\n        pygame.display.set_caption('FROM一个喜欢你很久的小哥哥')\n        clock = pygame.time.Clock()\n        pygame.mixer.music.load(MUSICPATH)\n        pygame.mixer.music.play(-1, 30.0)\n        pygame.mixer.music.set_volume(0.25)\n        unlike_pos_x = 330\n        unlike_pos_y = 250\n        unlike_pos_width = 100\n        unlike_pos_height = 50\n        unlike_color = (0, 191, 255)\n        like_pos_x = 180\n        like_pos_y = 250\n        like_pos_width = 100\n        like_pos_height = 50\n        like_color = (0, 191, 255)\n        running = True\n        while running:\n                screen.fill(BACKGROUND)\n                img = pygame.image.load(IMGPATH)\n                imgRect = img.get_rect()\n                imgRect.midtop = int(WIDTH/1.3), HEIGHT//7\n                screen.blit(img, imgRect)\n                for event in pygame.event.get():\n                        if event.type == pygame.MOUSEBUTTONDOWN:\n                                mouse_pos = pygame.mouse.get_pos()\n                                if mouse_pos[0] &lt; like_pos_x+like_pos_width+5 and mouse_pos[0] &gt; like_pos_x-5 and\\\n                                        mouse_pos[1] &lt; like_pos_y+like_pos_height+5 and mouse_pos[1] &gt; like_pos_y-5:\n                                        like_color = BACKGROUND\n                                        running = False\n                mouse_pos = pygame.mouse.get_pos()\n                if mouse_pos[0] &lt; unlike_pos_x+unlike_pos_width+5 and mouse_pos[0] &gt; unlike_pos_x-5 and\\\n                        mouse_pos[1] &lt; unlike_pos_y+unlike_pos_height+5 and mouse_pos[1] &gt; unlike_pos_y-5:\n                        while True:\n                                unlike_pos_x, unlike_pos_y = get_random_pos()\n                                if mouse_pos[0] &lt; unlike_pos_x+unlike_pos_width+5 and mouse_pos[0] &gt; unlike_pos_x-5 and\\\n                                        mouse_pos[1] &lt; unlike_pos_y+unlike_pos_height+5 and mouse_pos[1] &gt; unlike_pos_y-5:\n                                        continue\n                                break\n                title('小姐姐，我观察你很久了', screen, scale=[3, 8])\n                title('做我女朋友好不好呀', screen, scale=[3, 4])\n                button('好呀', like_pos_x, like_pos_y, like_pos_width, like_pos_height, like_color, screen)\n                button('算了吧', unlike_pos_x, unlike_pos_y, unlike_pos_width, unlike_pos_height, unlike_color, screen)\n                pygame.display.flip()\n                pygame.display.update()\n                clock.tick(60)\n        show_like_interface('我就知道小姐姐你也喜欢我~', screen, color=(255, 0, 0))\n\n\nif __name__ == '__main__':\n        main()\n</code></pre></div><p>在Excel中生成小姐姐，效果如下：</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/1013058846654218240\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic2.zhimg.com/80/v2-5a3498d90915b32d9cc5eafab35b7369_b.jpg\" data-lens-id=\"1013058846654218240\">              <img class=\"thumbnail\" src=\"https://pic2.zhimg.com/80/v2-5a3498d90915b32d9cc5eafab35b7369_b.jpg\">              <span class=\"content\">                <span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/1013058846654218240</span>              </span>            </a>            <p>介绍：</p><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/UC6Yc2a_T6uGF3ji_BRhLQ\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-6cc884932b59f64347045af097352ff8_bh.jpg?source=54b3c3a5\" data-image-width=\"500\" data-image-height=\"375\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【Python+VBA】在Excel中生成小姐姐</a><h2>二. 可以写写爬虫为乐趣</h2><p>比如写个音乐下载器：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-a93c8589b62be2843df7dfda67334896_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"525\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-3e16851a89a6348e796fc653ca433379_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic1.zhimg.com/v2-a93c8589b62be2843df7dfda67334896_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='800'%20height='525'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"525\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-3e16851a89a6348e796fc653ca433379_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"800\" data-original=\"https://pic1.zhimg.com/v2-a93c8589b62be2843df7dfda67334896_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-a93c8589b62be2843df7dfda67334896_720w.jpg?source=54b3c3a5\"></figure><p>源代码：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/CharlesPikachu/musicdl\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/CharlesPikac</span><span class=\"invisible\">hu/musicdl</span><span class=\"ellipsis\"></span></a></p><p>视频下载器：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-dd56ab299541c2918e3c901b822602f0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"752\" data-rawheight=\"534\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d206191905cb5a516acb290ee3f863c4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"752\" data-original=\"https://pic1.zhimg.com/v2-dd56ab299541c2918e3c901b822602f0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='752'%20height='534'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"752\" data-rawheight=\"534\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d206191905cb5a516acb290ee3f863c4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"752\" data-original=\"https://pic1.zhimg.com/v2-dd56ab299541c2918e3c901b822602f0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-dd56ab299541c2918e3c901b822602f0_720w.jpg?source=54b3c3a5\"></figure><p>源代码：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/CharlesPikachu/Video-Downloader\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CharlesPikachu/Video-Downloader</a></p><p>分析分析知乎粉丝构成：</p><a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/hWUvMFIAMBrgR2Is9P5QXw\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-9be0cff71ab46f7ceb4041af5bdf5e1d_bh.jpg?source=54b3c3a5\" data-image-width=\"1280\" data-image-height=\"800\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python爬取并简单分析知乎用户粉丝构成</a><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-aefc7380da8908c89d1b1cd4d79b2ae1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8ce9ceb976e11945aeb2d48acfee004f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic2.zhimg.com/v2-aefc7380da8908c89d1b1cd4d79b2ae1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='800'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8ce9ceb976e11945aeb2d48acfee004f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"800\" data-original=\"https://pic2.zhimg.com/v2-aefc7380da8908c89d1b1cd4d79b2ae1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-aefc7380da8908c89d1b1cd4d79b2ae1_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-3665587c9ba7a65baeb7e62d0460d80f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"562\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-68c4f7b0e98b38a667dd760965b2d4a4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-3665587c9ba7a65baeb7e62d0460d80f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='562'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"562\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-68c4f7b0e98b38a667dd760965b2d4a4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-3665587c9ba7a65baeb7e62d0460d80f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-3665587c9ba7a65baeb7e62d0460d80f_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-78443fe44bbb6fd4017044911efc245e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a639181427f340d718387ed6efdb14eb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic1.zhimg.com/v2-78443fe44bbb6fd4017044911efc245e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='800'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a639181427f340d718387ed6efdb14eb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"800\" data-original=\"https://pic1.zhimg.com/v2-78443fe44bbb6fd4017044911efc245e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-78443fe44bbb6fd4017044911efc245e_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-50ecc4ab489fe7c165c1714453c192de_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-eb1d1b3d5004eb73c2497f1827edb2e7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic4.zhimg.com/v2-50ecc4ab489fe7c165c1714453c192de_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='800'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"400\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-eb1d1b3d5004eb73c2497f1827edb2e7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"800\" data-original=\"https://pic4.zhimg.com/v2-50ecc4ab489fe7c165c1714453c192de_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-50ecc4ab489fe7c165c1714453c192de_720w.jpg?source=54b3c3a5\"></figure><h2>三. 写写小游戏</h2><p>比如坦克大战：</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/1188977395741372416\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"坦克大战\" data-poster=\"https://pic3.zhimg.com/v2-b956b1a8faadbb75b24f7d2583370f82.jpg\" data-lens-id=\"1188977395741372416\">              <img class=\"thumbnail\" src=\"https://pic3.zhimg.com/v2-b956b1a8faadbb75b24f7d2583370f82.jpg\">              <span class=\"content\">                <span class=\"title\">坦克大战<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/1188977395741372416</span>              </span>            </a>            <p>FlappyBird：</p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/1013060715313315840\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic1.zhimg.com/80/v2-2132cdda2e30ca83978c87303acce060_b.jpg\" data-lens-id=\"1013060715313315840\">              <img class=\"thumbnail\" src=\"https://pic1.zhimg.com/80/v2-2132cdda2e30ca83978c87303acce060_b.jpg\">              <span class=\"content\">                <span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/1013060715313315840</span>              </span>            </a>            <p>源代码：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/CharlesPikachu/Games\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CharlesPikachu/Games</a></p><p><b><i>更多有趣好玩的Python项目：</i></b></p><p><b><i><a href=\"https://zhuanlan.zhihu.com/p/33245706\" class=\"internal\">Charles：Python的一些小项目~不定期更新</a></i></b></p><p><b><i>欢迎关注我的微信公众号：Charles的皮卡丘，不定期分享有趣好玩的Python项目以及大量的学习资源。</i></b></p>"}{"爬虫究竟是合法还是违法的？": "<p>诚邀回答。这个问题确实有些让人脊背发凉，只是简单的写了几行爬虫而已，却莫名其妙的进了局子，不知道还以为我们程序员是做军火生意的。但是你写的爬虫确定不违法吗？别慌~我感觉的出来你在颤抖……</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-762e3655fd3cbaecb9c0b20890f6ac82_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"664\" data-rawheight=\"133\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-ca61e209822c952f9ae4f4886ee16a7e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"664\" data-original=\"https://pic2.zhimg.com/v2-762e3655fd3cbaecb9c0b20890f6ac82_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='664'%20height='133'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"664\" data-rawheight=\"133\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-ca61e209822c952f9ae4f4886ee16a7e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"664\" data-original=\"https://pic2.zhimg.com/v2-762e3655fd3cbaecb9c0b20890f6ac82_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-762e3655fd3cbaecb9c0b20890f6ac82_720w.jpg?source=54b3c3a5\"><figcaption>此图来源某知乎网友回答截图</figcaption></figure><h2><b>所以，爬虫究竟是合法还是违法的？</b></h2><p><b>爬虫作为一种计算机技术就决定了它的中立性，因此爬虫本身在法律上并不被禁止，但是利用爬虫技术获取数据这一行为是具有违法甚至是犯罪的风险的。</b>所谓具体问题具体分析，正如水果刀本身在法律上并不被禁止使用，但是用来捅人，就不被法律所容忍了。</p><p>或者我们可以这么理解：爬虫是用来批量获得网页上的公开信息的，也就是前端显示的数据信息。因此，既然本身就是公开信息，其实就像浏览器一样，浏览器解析并显示了页面内容，爬虫也是一样，只不过爬虫会批量下载而已，所以是合法的。不合法的情况就是配合爬虫，利用黑客技术攻击网站后台，窃取后台数据（比如用户数据等）。</p><p><b>举个例子：</b></p><p>像谷歌这样的搜索引擎爬虫，每隔几天对全网的网页扫一遍，供大家查阅，各个被扫的网站大都很开心。这种就被定义为“善意爬虫”。但是像抢票软件这样的爬虫，对着 12306 每秒钟恨不得撸几万次，铁总并不觉得很开心，这种就被定义为“恶意爬虫”。</p><p><br></p><p><b>爬虫所带来风险主要体现在以下3个方面：</b></p><ol><li>违反网站意愿，例如网站采取反爬措施后，强行突破其反爬措施；</li><li>爬虫干扰了被访问网站的正常运营；</li><li>爬虫抓取了受到法律保护的特定类型的数据或信息。</li></ol><p><br></p><p><b>那么作为爬虫开发者，如何在使用爬虫时避免进局子的厄运呢？</b></p><ol><li>严格遵守网站设置的robots协议；</li><li>在规避反爬虫措施的同时，需要优化自己的代码，避免干扰被访问网站的正常运行；</li><li>在设置抓取策略时，应注意编码抓取视频、音乐等可能构成作品的数据，或者针对某些特定网站批量抓取其中的用户生成内容；</li><li>在使用、传播抓取到的信息时，应审查所抓取的内容，如发现属于用户的个人信息、隐私或者他人的商业秘密的，应及时停止并删除。</li></ol><p>可以说在我们身边的网络上已经密密麻麻爬满了各种网络爬虫，它们善恶不同，各怀心思。而越是每个人切身利益所在的地方，就越是爬满了爬虫。<b>所以爬虫是趋利的，它们永远会向有利益的地方爬行。</b>技术本身是无罪的，问题往往出在人无限的欲望上。因此爬虫开发者的道德自持和企业经营者的良知才是避免触碰法律底线的根本所在。</p>", "用 Python 进行数据分析，不懂 Python，求合适的 Python 书籍或资料推荐？": "<p>我是用Python做数据分析的，市场上python资料简直多如牛毛，真正值得看的没多少。人生苦短，少看垃圾。</p><p>先上最干的货，给大家分享一个免费的编程训练营！有<b>Python视频课程</b>和<b>代码实操课</b>等，对Python感兴趣，想要0基础入门的同学可以免费领取，能少走很多弯路！</p><a href=\"https://xg.zhihu.com/plugin/604fba1122c653ec3f1ff8b475784f02?BIZ=ECOMMERCE\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">知乎营销平台</a><p><br></p><p>补充：下面还有很多干货！！！</p><hr><p><b>正文开始</b></p><p>先看看python岗位概况：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-39992467e1ce319b55b27183b825d221_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"757\" data-rawheight=\"911\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-319a0ca025f75b15ba69fe9f806ac3fa_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"757\" data-original=\"https://pic4.zhimg.com/v2-39992467e1ce319b55b27183b825d221_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='757'%20height='911'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"757\" data-rawheight=\"911\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-319a0ca025f75b15ba69fe9f806ac3fa_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"757\" data-original=\"https://pic4.zhimg.com/v2-39992467e1ce319b55b27183b825d221_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-39992467e1ce319b55b27183b825d221_720w.jpg?source=54b3c3a5\"><figcaption>图片来源网络</figcaption></figure><p>针对数据分析岗位需要的python技能，这里分为三大块来讲。</p><p>1、数据分析需要用到那些python知识点；</p><p>2、Python数据分析最主要的工具库有哪些；</p><p>3、学习数据分析各阶段用到什么书籍或资料；</p><p>首先，python可以用作爬虫、web开发、AI、脚本、测试、数据分析等各个领域，每个领域对python的学习要求和深度不一样，数据分析不要求掌握很深的编程知识。</p><p>主要是以下内容，<b>数据类型和结构、变量、函数、逻辑语句（判断、循环）、匿名函数、错误处理、遍历和迭代、进程和线程、库的使用</b>。学习这些东西并不需要购买书籍，能省则省，网上很多教程。推荐<b>菜鸟教程</b>和<b>w3cschool</b>的python3教程，通俗易懂，非常适合初学者掌握基础语法，然后可以在<b>实验楼</b>这个网站练习编程，也可以自己搭建环境敲代码。</p><p>编程毕竟是抽象的，一开始理解诸如切片、迭代等概念比较吃力，只有多看多敲代码，后面自然而然就懂了。</p><p>学完python基础知识点，并有了一定的训练代码量（至少得<b>1000</b>行）之后，就可以开始学习数据分析工具了，也就是python的第三方数据分析库。按照我的使用经验和个人理解，有以下几个重点学习对象。</p><p><a href=\"https://link.zhihu.com/?target=https%3A//scipy.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">scipy</a><b>&amp;</b><a href=\"https://link.zhihu.com/?target=https%3A//www.numpy.org/devdocs/user/quickstart.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">numpy</a><b>：</b>它是一个由多维数组对象和用于处理数组的例程集合组成的库，里面包含了大量的计算函数，可以很轻松的进行科学计算。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-e97a4c69c7cdbfc694d58f34b3ccf36e_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1400\" data-rawheight=\"666\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0a6187da32332229f5338909e4c3dc31_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1400\" data-original=\"https://pic1.zhimg.com/v2-e97a4c69c7cdbfc694d58f34b3ccf36e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1400'%20height='666'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1400\" data-rawheight=\"666\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-0a6187da32332229f5338909e4c3dc31_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1400\" data-original=\"https://pic1.zhimg.com/v2-e97a4c69c7cdbfc694d58f34b3ccf36e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e97a4c69c7cdbfc694d58f34b3ccf36e_720w.jpg?source=54b3c3a5\"><figcaption>图片来源网络</figcaption></figure><p><a href=\"https://link.zhihu.com/?target=http%3A//pandas.pydata.org/pandas-docs/stable/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">pandas</a><b>：</b>是基于NumPy 的一种工具，该工具是为了解决数据分析任务而创建的，具备强大的数据展示功能。Pandas 纳入了大量库和一些标准的数据模型，提供了高效地操作大型数据集所需的工具。pandas提供了大量能使我们快速便捷地处理数据的函数和方法。你很快就会发现，它是使Python成为强大而高效的数据分析环境的重要因素之一。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-dd608cdd13aefe3939066a386981e7bf_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1177\" data-rawheight=\"934\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-3afe3def2164d31251fd0408fce6fec7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1177\" data-original=\"https://pic2.zhimg.com/v2-dd608cdd13aefe3939066a386981e7bf_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1177'%20height='934'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1177\" data-rawheight=\"934\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-3afe3def2164d31251fd0408fce6fec7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1177\" data-original=\"https://pic2.zhimg.com/v2-dd608cdd13aefe3939066a386981e7bf_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-dd608cdd13aefe3939066a386981e7bf_720w.jpg?source=54b3c3a5\"><figcaption>图片来源网络</figcaption></figure><p><b>matplotlib：</b>是一个Python 2D绘图库，可以生成各种硬拷贝格式和跨平台交互式环境的出版物质量数据。Matplotlib可用于Python脚本，Python和IPython shell，Jupyter笔记本，Web应用程序服务器和四个图形用户界面工具包。只需几行代码即可生成绘图，直方图，功率谱，条形图，误差图，散点图等。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d33fd6775d3244c920084e141080b439_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"951\" data-rawheight=\"510\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-6141e4a7e126c79c679386d002181daf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"951\" data-original=\"https://pic2.zhimg.com/v2-d33fd6775d3244c920084e141080b439_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='951'%20height='510'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"951\" data-rawheight=\"510\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-6141e4a7e126c79c679386d002181daf_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"951\" data-original=\"https://pic2.zhimg.com/v2-d33fd6775d3244c920084e141080b439_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d33fd6775d3244c920084e141080b439_720w.jpg?source=54b3c3a5\"><figcaption>图片来源网络</figcaption></figure><p><a href=\"https://link.zhihu.com/?target=https%3A//scikit-learn.org/stable/documentation.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">scikit-learn</a><b>：</b>是一个机器学习库，可以对数据进行分类，回归，无监督，数据降维，数据预处理等等，包含了常见的大部分机器学习方法。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-5b5bf0fd0ec5da58da671a2c1861a2ac_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1040\" data-rawheight=\"692\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-176abbdbe78611e813a1129dcd141e74_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1040\" data-original=\"https://pic1.zhimg.com/v2-5b5bf0fd0ec5da58da671a2c1861a2ac_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1040'%20height='692'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1040\" data-rawheight=\"692\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-176abbdbe78611e813a1129dcd141e74_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1040\" data-original=\"https://pic1.zhimg.com/v2-5b5bf0fd0ec5da58da671a2c1861a2ac_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-5b5bf0fd0ec5da58da671a2c1861a2ac_720w.jpg?source=54b3c3a5\"><figcaption>图片来源网络</figcaption></figure><p>上面五种工具<b>scipy</b>、<b>numpy、pandas、matplotlib、scikit-learn</b>，基本能解决90%以上的数据分析问题，建议初学者把这五个工具重点用。</p><p>至于教程，推荐<b>《利用python进行数据分析》</b>第二版，可以掌握numpy、pandas、matplotlib的许多实用用法。我基本把这本书看完了，也敲了里面大部分代码。学习scikit-learn最好选择看<a href=\"https://link.zhihu.com/?target=https%3A//scikit-learn.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">官方文档</a>，目前好像也有了<a href=\"https://link.zhihu.com/?target=http%3A//sklearn.apachecn.org/%23/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">中文版</a>，可以多跑跑里面的sample。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-9834e7c60382c92133b2e53dd2e69893_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"646\" data-rawheight=\"466\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-4357585044d08d29b1743127c61edde8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"646\" data-original=\"https://pic1.zhimg.com/v2-9834e7c60382c92133b2e53dd2e69893_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='646'%20height='466'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"646\" data-rawheight=\"466\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-4357585044d08d29b1743127c61edde8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"646\" data-original=\"https://pic1.zhimg.com/v2-9834e7c60382c92133b2e53dd2e69893_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-9834e7c60382c92133b2e53dd2e69893_720w.jpg?source=54b3c3a5\"><figcaption>sklearn文档案例（图片来源网络）</figcaption></figure><p>最后捎带提一下，还要学习SQL，这是数据分析最基础的能力，我用的是<b>《SQL学习指南》</b>这本书，很适合入门。</p><p><b>书上的知识结合实操才能达到有效的训练，可以参加这个免费的编程训练营，可以在线进行网页代码实操，无需安装任何软件，便捷好用！</b></p><a href=\"https://xg.zhihu.com/plugin/604fba1122c653ec3f1ff8b475784f02?BIZ=ECOMMERCE\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">知乎营销平台</a><p>梳理一下学习路径和教程，python基础语法（<b>菜鸟教程和w3cschool</b>）&gt;&gt;numpy、pandas、matplotlib（《<b>利用python进行数据分析</b>》）&gt;&gt;scikit-learn（<b>官方文档</b>）</p><p>我收集了一些python学习书籍</p><p>大家感兴趣的话可以关注我的公众号：pydatas，回复：python，会把python资料合集发给大家。</p><h2>增加部分参考书籍</h2><p><b>python基础：</b></p><ul><li>《Python基础教程》（<i>Beginning Python From Novice to Professional</i>）</li><li>《Python学习手册》（<i>Learning Python</i>）</li><li>《Python编程》（<i>Programming Python</i>）</li><li>《Python编程从入门到实践》（<i>Python Crash Course</i>）</li><li>《Python Cookbook》</li></ul><p><b>python数据分析 </b></p><ul><li>《利用Python进行数据分析》（<i>Python for Data Analysis</i>）</li><li>《Python数据科学手册》（<i>Python Data Science Handbook</i>）</li><li>《Python金融大数据分析》（<i>Python for Finance</i>）</li><li>《Python数据可视化编程实战》（<i>Python Data Visualization Cookbook</i>）</li><li>《Python数据处理》（<i>Data Wrangling with Python</i>）</li></ul><p><b>python机器学习</b></p><ul><li>《Python机器学习基础教程》（<i>Introduction to Machine Learning with Python</i>）</li><li>《Python机器学习实践指南》（<i>Python Machine Learning Blueprints</i>）</li><li>《Python机器学习实践：测试驱动的开发方法》（<i>Thoughtful Machine Learning with Python A Test Driven Approach</i>）</li><li>《Python机器学习经典实例》（<i>Python Machine Learning Cookbook</i>）</li><li>《TensorFlow：实战Google深度学习框架》</li></ul><h2><b>附 github大神开源的python数据科学速查小抄（仅供学习）</b></h2><p><b>python</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-563e4ccf060d663acfff8ed19d6820cd_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-bfa6016ec0f033614176025be80cdddb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2339\" data-original=\"https://pic4.zhimg.com/v2-563e4ccf060d663acfff8ed19d6820cd_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2339'%20height='1654'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-bfa6016ec0f033614176025be80cdddb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2339\" data-original=\"https://pic4.zhimg.com/v2-563e4ccf060d663acfff8ed19d6820cd_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-563e4ccf060d663acfff8ed19d6820cd_720w.jpg?source=54b3c3a5\"></figure><p><b>pandas</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-62550109c544eaa6394600fd2d10a155_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2c937ab624a27ecac42c536ccd4982bb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2339\" data-original=\"https://pic1.zhimg.com/v2-62550109c544eaa6394600fd2d10a155_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2339'%20height='1654'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2c937ab624a27ecac42c536ccd4982bb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2339\" data-original=\"https://pic1.zhimg.com/v2-62550109c544eaa6394600fd2d10a155_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-62550109c544eaa6394600fd2d10a155_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-ba4a4c92c583acc70c9c69772468eb56_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-797305c72bce550749f1e1ac49ac9d74_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2339\" data-original=\"https://pic1.zhimg.com/v2-ba4a4c92c583acc70c9c69772468eb56_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2339'%20height='1654'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-797305c72bce550749f1e1ac49ac9d74_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2339\" data-original=\"https://pic1.zhimg.com/v2-ba4a4c92c583acc70c9c69772468eb56_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-ba4a4c92c583acc70c9c69772468eb56_720w.jpg?source=54b3c3a5\"></figure><p><b>numpy</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-deb7e9d63e758e4077b6b6be94a7b63d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-034b2e4974ada83b5f7a4f683b8528fe_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2339\" data-original=\"https://pic1.zhimg.com/v2-deb7e9d63e758e4077b6b6be94a7b63d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2339'%20height='1654'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-034b2e4974ada83b5f7a4f683b8528fe_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2339\" data-original=\"https://pic1.zhimg.com/v2-deb7e9d63e758e4077b6b6be94a7b63d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-deb7e9d63e758e4077b6b6be94a7b63d_720w.jpg?source=54b3c3a5\"></figure><p><b>scipy</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-3071bf7a7fb25475a3c3eaf791d29590_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-bf5fa8b02abeed3ba0a7e6d1873f118e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2339\" data-original=\"https://pic2.zhimg.com/v2-3071bf7a7fb25475a3c3eaf791d29590_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2339'%20height='1654'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-bf5fa8b02abeed3ba0a7e6d1873f118e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2339\" data-original=\"https://pic2.zhimg.com/v2-3071bf7a7fb25475a3c3eaf791d29590_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-3071bf7a7fb25475a3c3eaf791d29590_720w.jpg?source=54b3c3a5\"></figure><p><b>sklearn</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-aaf30d71f166a74b4a99755c48fb7bc0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a0066ffa67ea14e2a6a64c732e8c3381_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2339\" data-original=\"https://pic1.zhimg.com/v2-aaf30d71f166a74b4a99755c48fb7bc0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2339'%20height='1654'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a0066ffa67ea14e2a6a64c732e8c3381_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2339\" data-original=\"https://pic1.zhimg.com/v2-aaf30d71f166a74b4a99755c48fb7bc0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-aaf30d71f166a74b4a99755c48fb7bc0_720w.jpg?source=54b3c3a5\"></figure><p><b>matplotlib</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-29ce1598c64f0fef73a3cdfd274f02c0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-75e3aa2684aba2c7cfbd5cd3442240b7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2339\" data-original=\"https://pic2.zhimg.com/v2-29ce1598c64f0fef73a3cdfd274f02c0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2339'%20height='1654'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2339\" data-rawheight=\"1654\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-75e3aa2684aba2c7cfbd5cd3442240b7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2339\" data-original=\"https://pic2.zhimg.com/v2-29ce1598c64f0fef73a3cdfd274f02c0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-29ce1598c64f0fef73a3cdfd274f02c0_720w.jpg?source=54b3c3a5\"></figure><p>推荐几本适合新手的书和这个免费的编程训练营</p><p>非常适合0基础小白的免费视频课，跟着Python大牛一行一行的敲代码。更多Python学习资料可以关注我不迷路！</p><a href=\"https://xg.zhihu.com/plugin/604fba1122c653ec3f1ff8b475784f02?BIZ=ECOMMERCE\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">知乎营销平台</a><p>python基础</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p>数据分析</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p>可视化</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p></p>", "学Python Django学得很迷茫，怎么办？": "很多程序员，在学习一门新技术的时候，都会陷入像题主你这样迷茫的状态。我也一样。而且不止陷入一次两次。比如学习新的框架的时候，学习新的语言的时候，学习移动开发的时候。<br><br>这事儿多了以后，我就在想。不对，肯定有哪里不对，看着StackOverflow也好，Github也好，上面那么多的高手，回答各种问题。而很多人居然还是在校的学生。我有种感觉，这肯定是我的方法出了问题，肯定是在某个很深很深的根源上出了问题。大家都是人，一天三餐吃喝拉撒，学生虽然自由时间多一些，但是我们毕竟也干了这么多年的程序员。新东西每天都在往出冒，不可能有人能那么快得全部掌握。而现实是确实出一种新技术，瞬间一堆高手就冒了出来。这事儿，有问题。<br><br>于是我就开始找问题的根源。其实这事儿没这么复杂，只要静下心来，不要看到一个新技术就急慌慌的去学，很快就能反映过来。根源其实就是两点：<br><br><b>1. 计算机技术的底层原理从来没有变过。</b><br><b>2. 任何一门新技术都是人为写成的。</b><br><br><br>这是我在迷茫了N次后，静下心来，制造出的自己在技术海洋上的指南针。对不对好不好不敢说，大家批判这看吧。<br><br>在学习任何一门新技术新框架新语言时，我会先把这两条引用到整个学习过程中去。<br><br><b>1. 计算机的底层原理从来没有变过。</b><br>网络需要通讯原理，编程需要数据结构与算法。一个列表的排序不管你是JAVA是C是PYTHON，哪怕你调用的函数名字千差万别，最后的算法其实疏通同归。你大可不去查文档自己写一个出来。一个一个网页上得表单，不管哪个框架哪个语言哪个MVC，最后都要归于一个HTTP的POST，最后都要连接上数据库，写进去存起来。<br><br>这就是原理不变。你要先把这个道理时时刻刻的记在心里。当遇到看不懂的东西，迷茫的时候，去想想这个函数到底做了什么，然后从那个不变得原理反推回来，大部分时候你会发现很多新技术不过是早已有的技术的重组与包装而已。<br><br>2. <b>任何一门新技术都是人为写成的。</b><br>这里的新技术主要指的是目前百花齐放的各种框架啊库啊类啊语言啊一类的。一开始我也很很多人一样，觉得哇好牛好酷好高大上。但是慢慢的，我有一种被欺骗的感觉，这种感觉类似于某类产品持续的营销，今天我们有这个口味，明天我们有哪个口味。区别只是一个加了蜂蜜一个没加。<br><br>因此在总结了第一个‘原理不变‘之后，很自然的我推出了第二个’人为写成‘。意思是不管看起来多么新潮，多么高大上的语言，它首先要遵循第一条原理不变的道理。而如果在使用它的过程中，发现了某些有违第一条的感觉函数，方法，逻辑。那么百分之百这个函数方法逻辑只是做了人为的包装而已。去看文档，不要纠结为什么，作者当时可能脑袋进水，不要跟着他一起跳坑。<br><br><b>简单说，什么Django, Flask, Web.py，CSS, HTML5, ...别被那些炫名词的给洗脑了。原理原理原理，本质本质本质！不要诚惶诚恐，就当它是烂泥巴搓圆弄扁踩两脚，抱着这种心态来学才对。</b><br><br><br>简单解释了一下我草草归纳的两条规律。回到答主的问题上来。<br><br>你的第一个问题是我该干什么？很简单，做第一个网站，做第二个网站，做第三个网站。做网站做吐了就去做做手机APP，做的无聊的就去玩玩爬虫。记得把你所有写得东西都扔到GITHUB上去，每天在SO上答问题问问题。就这样。<br><br>不要做到完美。记小时候玩泥巴么？就那么玩。堆个城堡起来，踢两脚，扔一边儿，再堆一个长城起来，再扔一边儿。玩的时候时刻记得我说的那两条规律。<br><br>2.在实际工作中，python工程师工作到底是做哪一块的？（尽可能的详细点）<br>亲，请先找到工作。<br><br>3.如果从事django开发，还需要哪些技能？要学前端么？<br><br>你学的不是Django开发，你学的应该是计算机科学中，网络应用方向的一部分。这才应该是学什么Php网站开发，Python开发真正应该叫的名字。 Django只是你工具箱里的一个工具而已，比方说它是把锯子。这个锯子的牌子叫做Django. 其他生产锯子的厂家包括但不限于Php, Flask, Java, Go....但是他们的本质都是锯子。都可以做一样的事情。有的厂家在锯子上安了个小手电，于是它的牌子的锯子也许多了一些功能。这就是框架与框架的区别。<br><br>所以，你需要的不是Django开发的技能，你需要的是网络开发与管理的技能。如果题主专注于做网站的话，相信我，<b>数据库数据库数据库！</b>一个设计良好，结构合理的数据库，是任何优秀网站的前提。<br><br>4.如果想去实习需要达到什么水平？<br>别想，别问，做吧。当你能按照上面说得，持续不断的更新你得个人项目，持续不断的在SO也好，V2EX也好上累积你的资历，持续不断的，抓住计算机科学的本质去学习。实习？这是个事儿么？", "学习python有什么好的视频教程?": "<p>同学，这是鹅厂内部员工总结的学习Python的一些方法可以提供你参考，具体的视频教程可以到我们腾讯云学院里看看哦，都是腾讯内部大神总结的课程：</p><p>《Python 基础和编码规范》<a href=\"https://link.zhihu.com/?target=https%3A//cloud.tencent.com/developer/edu/course-1109\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">cloud.tencent.com/devel</span><span class=\"invisible\">oper/edu/course-1109</span><span class=\"ellipsis\"></span></a></p><p>《从零开始学Python》</p><p><a href=\"https://link.zhihu.com/?target=https%3A//cloud.tencent.com/developer/edu/course-1020\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">cloud.tencent.com/devel</span><span class=\"invisible\">oper/edu/course-1020</span><span class=\"ellipsis\"></span></a></p><h2>1. 了解新语言产生的背景</h2><p>ABC 是专门为非专业程序员设计的一种教学语言，但是由于其封闭，并未取得成功。1989年的圣诞节期间，吉多·范罗苏姆开发了一个新的脚本解释器，并命名为 Python，作为 ABC 语言的一种继承。新的脚本解释器开放，完美结合了 Unix Shell 和 C 的使用习惯。</p><h2>2. 了解新语言应用的场景</h2><p>· 网站后台<br>有大量成熟的框架，如 Django，Flask，Tornado</p><p>· 网络爬虫<br>Python 写爬虫有很多库可用，如 Scrapy，Beautiful Soup</p><p>· 科学计算<br>可以替代 R 语言和 Matlab，如 NumPy, SciPy, Matplotlib, Pandas</p><p>· 数据挖掘，机器学习，大数据<br>Scikit-learn，Libsvm，TensorFlow</p><p>· 系统部署，运维脚本<br>Shell 适合简单的系统管理工作，但涉及复杂的自动化任务还是需要 Python。</p><h2>3. 了解新语言的特点</h2><p>Python 的设计哲学是：优雅、明确、简单。Python 的开发哲学是：用一种方法，最好是只有一种方法来做一件事，有些类似 Unix。与其他语言非常不一样的是，Python 以缩进来确定语句块。</p><p>Python 是一门面向对象的动态、解释型语言，具有出色的模块化特性。同时，Python 拥有大量的第三方开源包，可以直接使用，极大地提高了开发效率。Python 编写的代码，可读性强，特别适合多人大型项目的开发。但是 Python 的执行效率比不上 C/C++ 这类编译型语言。</p><h2>4. 学习新语言的数据结构</h2><p>Python 中内置类型有整型 int，浮点型 float，布尔型 bool，字符串 str，列表 list，元组 tuple，字典 dict，集合 set。与 C 不同的是，Python 并不依赖于关键字定义各种类型。Python 是动态强类型语言，是通过运行时，自动选择合适的数据类型。字符串、列表、元组、集合、字典等复杂数据类型，并不是 C 语言的内置类型。</p><h2>5. 学习新语言的逻辑结构</h2><p>if 条件判断结构</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span> <span class=\"n\">condition</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"k\">if</span> <span class=\"n\">condition</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span> <span class=\"mi\">1</span><span class=\"k\">elif</span> <span class=\"n\">condition</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span> <span class=\"mi\">2</span><span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span> <span class=\"mi\">3</span>\n</code></pre></div><p>for 循环结构</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'item1'</span><span class=\"p\">,</span> <span class=\"s1\">'item2'</span><span class=\"p\">,</span> <span class=\"s1\">'item3'</span><span class=\"p\">]</span><span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">items</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span> <span class=\"n\">item</span>\n</code></pre></div><p>while 循环结构</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"nb\">sum</span><span class=\"p\">,</span> <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"k\">while</span> <span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"nb\">sum</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span> <span class=\"o\">+</span> <span class=\"n\">n</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"k\">print</span> <span class=\"nb\">sum</span>\n</code></pre></div><p>Keywords: if; for; while;</p><h2>6. 学习定义一个独立模块</h2><p>定义函数</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">def</span> <span class=\"nf\">function_name</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"n\">x</span>\n</code></pre></div><p>定义类</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">class</span> <span class=\"nc\">ClassName</span><span class=\"p\">:</span>            <span class=\"c1\">#经典类、旧类</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n<span class=\"k\">class</span> <span class=\"nc\">NewClassName</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>    <span class=\"c1\">#新类</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span><span class=\"c1\"># 在多继承中，新式类采用广度优先搜索，而旧式类是采用深度优先搜索。</span>\n</code></pre></div><p>定义包：<br>Python 中定义一个包，只需要在文件夹里面，创建一个 <code>__init__.py</code>文件即可，如：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">mypackage</span><span class=\"o\">/</span><span class=\"fm\">__init__</span><span class=\"o\">.</span><span class=\"n\">py</span>\n<span class=\"n\">mypackage</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">py</span>\n<span class=\"n\">mypackage</span><span class=\"o\">/</span><span class=\"n\">views</span><span class=\"o\">.</span><span class=\"n\">py</span>\n</code></pre></div><p>那么在其他文件中，就可以通过<code>from mypackage import views</code>的语法，从 mypackage 这个包里面导入 views 。  </p><h2>7. 做一个小的项目</h2><p>尝试完成一次领域实践，是对这个领域最佳的入门方式。学习一门新的编程语言，成长最快的阶段在，利用这门编程语言完成项目需求期间。</p><p>Django 是一个十分优秀的 Python 写的 Web 程序框架，广泛用于数据驱动类的网站开发。Django 是一个大而全的开发框架，基本不需要额外的第三方配置，就可以快速地进行开发。</p><p>笔者的小项目需求是：利用二维码扫码，查看在线简历。</p><p>确定项目需求之后，会迎来一个手足无措的时期，不知道从哪里着手开始做项目。如果有一个过来人指导一下，那么很快就能开始编码了。不幸的是，笔者当时身边并没有这样一个人。在网上查阅资料后，最终选定了Jquery 、Foundation、Django 实现这个项目。</p><p>实际上，笔者在此之前一直在写 C++ 程序，并没有 Python 的编程基础，仅仅是因为这个小项目，选定的技术栈后台使用的是 Django ，才开始学习 Python。</p><p>除了掌握项目使用到的技术栈，在完成项目的过程中，还可以解锁调试技能、通过搜索引擎解决各种程序问题的能力。</p><p>为了完成这个小项目，需要走出舒适区，突破原有的技术栈，最终获得快速的技术成长。</p><h2>8. 学习使用库完成任务</h2><p>通常，发布者会将使用频率高、可以复用的功能，打包成库，提供给大家共同使用。</p><p>库可以分为两类：</p><p>· 一种是官方的库，通常质量比较高、会维护更新；</p><p>· 一种是第三方的库，质量参差不齐，需要自己甄别。</p><p>例如，Django 中提供了 <code>from django.views.decorators.http import require_POST</code> 装饰器用于确保 view 函数的请求方法是 POST。使用这个装饰器可以简化 view 函数中的条件判断，有利于编写简洁易读的代码。当然 ，Django 还有大量的第三方 App可以下载使用，直接提供一个完整功能。</p><p>在项目开发的过程中，合理地使用库会起到锦上添花的效果。</p><h2>9. 学习组织代码结构</h2><p>研究怎样更好的组织项目的代码是一门管理科学。笔者之前也写过相关的文章<br>讨论了 Django 工程的目录组织结构。</p><p>好的项目代码结构需要学习一些高关注度的开源项目的经验，也需要注意输出，成为大家共同的标准，共同维护，产生影响力。</p><h2>10. 学习让代码易维护</h2><p>代码维护分为两类：</p><p>· Bug 易修复，需要代码具有良好的命名习惯、注释、日志输出，实现相同的功能编写尽量少的代码</p><p>· 新功能的扩展，通常是在原有逻辑上，创建新的分支。这类分支又可以分为代码级别和常量级别。我们需要的是通过常量的配置扩展新功能，而减少代码级别的修改</p><h2>11. 提高代码复用率</h2><p>随着使用新语言年限的增长，参与项目的增多，会出现一个显而易见的问题：在不同的项目中，会有一些非常类似的功能。甚至在开发新项目时，有时还会去以前项目中拷贝代码。</p><p>这时，应该思考如何提高代码的复用率，如何提供公共组件。</p><p>代码的复用可以分为：</p><p>· 代码片段（Snippets）<br>维护一个 Snippets List 是个不错的注意</p><p>· 公共组件（Components）<br>公共组件需要从项目中分离，会有一定的工作量，但收益很大</p><p>从项目中分离公共组件的过程，需要关注模块内的高内聚，模块间的低耦合。在模块分离的过程中，我们会更加深入地去理解应用系统。这一过程的完成，又将极大地提高开发效率。</p><p>更重要的是，我们不仅仅从项目中分离出一个公共组件，在使用其他人提供的公共组件时，也会变得容易。</p><p>下一次项目开发时，需要一个新功能，你首先想到的可能不是编码，而是去公共组件库或 Github 搜索有没有类似的包，然后经过简单的改造就能在项目使用。</p><h2>12. 关注性能</h2><p>针对 Web 应用，高并发、高可用、高一致性始终是亘古不变的议题。在对应用系统不断发起挑战时，那些隐藏的曾经被忽略的问题才会逐渐显现。在这个过程中，不断地发现应用系统的瓶颈，解决这些瓶颈，循环往复，不断加深对业务、对应用系统的理解。</p><p>性能报告是性能测试输出的结果。性能报告就像质检报告一样，是让用户信任和使用产品的凭证。高并发、高可用、高一致，并不是口号，需要数据的举证，需要不断的优化性能。</p><p><b>搜索关注公众号「云加社区」，第一时间获取技术干货，关注后回复1024 送你一份技术课程大礼包！</b></p>", "数据分析为什么常用Jupyter而不是直接使用Python脚本或Excel?": "Jupyter Notebook 顾名思义，它的核心在于展示与快速迭代。所以与其回答这个问题，我觉得看看各路大神都用Jupyter Notebook写出了什么，就自然可以直观地得出这个问题的结论。<br><br><br><br><u><b>先来个萌萌的</b></u><br><br>1.<a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/url/jakevdp.github.com/downloads/notebooks/XKCD_plots.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">XKCD plots in Matplotlib</a><br><b>仿制XKCD式手写图标</b><br><br><br><b><u>各种用Notebook写出的Python教程</u></b><br><br>2.<a href=\"https://link.zhihu.com/?target=https%3A//github.com/yoavram/CS1001.py\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Introduction to Computer Science with Python as Tel-Aviv University</a><br>3.<a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/ehmatthes/intro_programming/blob/master/notebooks/index.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Introduction to Python</a><br>4.<a href=\"https://link.zhihu.com/?target=http%3A//mbakker7.github.io/exploratory_computing_with_python/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Exploratory computing with Python by Mark Bakker</a><br><br><br><b><u>数据分析机器学习篇</u></b><br><br>5.<a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/masinoa/machine_learning/blob/master/04_Neural_Networks.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Neural Networks</a><br><b>机器学习人工神经网络模型</b><br><br>6.<a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/phelps-sg/python-bigdata/blob/master/src/main/ipynb/spark-mapreduce.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Map-Reduce and Apache Spark</a><br><b>大规模并行计算框架Spark教程</b><br><br>7.<a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/phelps-sg/python-bigdata/blob/master/src/main/ipynb/pandas.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Analysing structured data using pandas</a><br><b>表格数据处理库Pandas教程</b><br><br>9.<a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/sanand0/ipython-notebooks/blob/master/Office.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Automating Microsoft Office with Python</a><br><b>Microsoft Office+Python自动化</b><br><br>10.<br><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/hugadams/twitter_play/blob/master/tweepy_tutorial.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Datamining Twitter with tweepy</a><br><b>Twitter数据挖掘入门</b><br><br><br><u><b>数学物理化学生物篇</b></u><br><br>11.<br><a href=\"https://link.zhihu.com/?target=http%3A//jckantor.github.io/CBE20255/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CBE20255 by jckantor</a><br><b>化学工程分析入门（圣母大学本科课程）</b><br><br>12.<br><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/gist/greglandrum/4316430\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Working with Reactions</a><br><b>化学反应模拟器</b><br><br>13.<br><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/pjpmarques/Julia-Modeling-the-World/blob/master/Three-Body%2520Problem.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Three-Body Problem</a><br><b>三体问题模拟器</b><br><br>14.<br><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/colour-science/colour-ipython/blob/master/notebooks/colour.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Color Science for Python</a><br><b>色彩学入门</b><br><br>15.<br><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/gocarli/RNA-Popgen-Notebook/blob/master/Population_Genetics.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Population Genetics in an RNA World</a><br><b>RNA种群遗传学</b><br><br><br><u><b>地球科学与地理科学</b><b>篇</b></u><br><br><br>16.<br><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/cossatot/lanf_earthquake_likelihood/blob/master/notebooks/lanf_manuscript_notebook.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Estimated likelihood of observing a large earthquake on a continental low‐angle normal fault and implications for low‐angle normal fault activity</a><br><b>大陆板块低斜率断层对地震的预测</b><br><i>（大概是这么翻译的吧...？）</i><br><br>17.<br><a href=\"https://link.zhihu.com/?target=https%3A//ocefpaf.github.io/python4oceanographers/blog/2015/10/26/007/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">NLTK, maps, and 007</a><br><b>007原著小说中詹姆斯邦德杀人地点的可视化</b><br><br><br>18.<br><a href=\"https://link.zhihu.com/?target=https%3A//ocefpaf.github.io/python4oceanographers/blog/2015/09/07/iris_outline/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Iris \"Hidden\" Features</a><br><b>美国国家海洋和大气管理局海洋天气信息采集点的可视化</b><br><br>19.<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/koldunovn/python_for_geosciences\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python for Geosciences</a><br><b>基于Python的地理科学入门</b><br><br><br><u><b>语言学与文字信息挖掘</b></u><u><b>篇</b></u><br><br><br>20.<br><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/ClickSecurity/data_hacking/blob/master/dga_detection/DGA_Domain_Detection.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Exercise to detect Algorithmically Generated Domain Names</a><br><b>机器生成域名的识别与分析</b><br><br><br>21.<br><a href=\"https://link.zhihu.com/?target=https%3A//rawgit.com/ptwobrussell/Mining-the-Social-Web-2nd-Edition/master/ipynb/html/Chapter%25201%2520-%2520Mining%2520Twitter.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Mining Twitter: Exploring Trending Topics, Discovering What People Are Talking About, and More</a><br><b>文字信息挖掘与分析 - Twitter热门话题</b><br><br>22.<br><a href=\"https://link.zhihu.com/?target=https%3A//rawgit.com/ptwobrussell/Mining-the-Social-Web-2nd-Edition/master/ipynb/html/Chapter%25202%2520-%2520Mining%2520Facebook.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Mining Facebook: Analyzing Fan Pages, Examining Friendships, and More</a><br><b>文字信息挖掘与分析 - Facebook粉丝页面，朋友关系</b><br><br>23.<br><a href=\"https://link.zhihu.com/?target=https%3A//rawgit.com/ptwobrussell/Mining-the-Social-Web-2nd-Edition/master/ipynb/html/Chapter%25203%2520-%2520Mining%2520LinkedIn.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Mining LinkedIn: Faceting Job Titles, Clustering Colleagues, and More</a><br><b>文字信息挖掘与分析 - LinkedIn职称，同事分组</b><br><br><br>24.<br><a href=\"https://link.zhihu.com/?target=https%3A//rawgit.com/ptwobrussell/Mining-the-Social-Web-2nd-Edition/master/ipynb/html/Chapter%25204%2520-%2520Mining%2520Google%2B.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Mining Google+: Computing Document Similarity, Extracting Collocations, and More</a><br><b>文字信息挖掘与分析 - Google+文章相似性，词组提取</b><br><br><br>25.<br><a href=\"https://link.zhihu.com/?target=https%3A//rawgit.com/ptwobrussell/Mining-the-Social-Web-2nd-Edition/master/ipynb/html/Chapter%25207%2520-%2520Mining%2520GitHub.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Mining GitHub: Inspecting Software Collaboration Habits, Building Interest Graphs, and More</a><br><b>文字信息挖掘与分析 - GitHub软件合作习惯，兴趣关系图</b><br><br><br><u><b>信号处理篇</b></u><br><br><br>26.<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/calebmadrigal/FourierTalkOSCON\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Presentation Materials for my \"Sound Analysis with the Fourier Transform and Python\" OSCON Talk.</a><br><b>对声波的傅里叶变换</b><br><br>27.<br><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/rlabbe/Kalman-and-Bayesian-Filters-in-Python/blob/master/table_of_contents.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Kalman and Bayesian Filters in Python</a><br><b>以卡尔曼和贝叶斯滤波器为基础的信号处理教程</b><br><br>28.<br><a href=\"https://link.zhihu.com/?target=http%3A//nbviewer.jupyter.org/github/markdregan/K-Nearest-Neighbors-with-Dynamic-Time-Warping/blob/master/K_Nearest_Neighbor_Dynamic_Time_Warping.ipynb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Timeseries Classification: KNN &amp; DTW</a><br>时间序列分类问题：用KNN和DTW算法对人体运动模式的识别<br><br>29.<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/spatialaudio/digital-signal-processing-lecture\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Lecture notes for the masters course Digital Signal Processing</a><br><b>电子信号处理（完整的硕士课程）</b><br><br>-----------------------我是工地分割线-------------------------<b><u><br>科学计算篇</u></b><br><b><u>社会科学数据处理篇</u></b><br><b><u>心理学与神经学篇</u></b><br><b><u>经济学与金融学篇</u></b><br><b><u>数据可视化篇</u></b><br><br><br><b>------------------------------------------------</b><br><i>点赞过20继续更...</i><br><i>10月11日已更：呦~居然过20赞了，怒更！</i><br><i>------------------------------------------------</i><br><i>点赞过40继续更...</i><br><i>10月14日已更：耶耶耶干货多的回答涨赞快~</i><br><i>------------------------------------------------</i><br><i>点赞过80继续更...</i><br><i><br>英语过关的童鞋可以直接去看source</i><br><br><br><i>sources:</i><br><i><a href=\"https://link.zhihu.com/?target=https%3A//github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">A gallery of interesting IPython Notebooks · ipython/ipython Wiki · GitHub</a><br></i><br><a href=\"https://link.zhihu.com/?target=http%3A//nb.bianp.net/sort/views/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Notebook Gallery</a>", "入门python有什么好的书籍推荐？": "<p>Python 越来越火爆，最近自己也在学习。整理下一些 Python 资料，和练手的项目。希望对你学习 Python 有所帮助。</p><p><b>如果大家想要文中 10G Python 编程视频，点击下面的卡片即可免费领取！</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-c220a07f6adf0f433265b0c7327cd15c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1864\" data-rawheight=\"1036\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d0cd7340963cda651112142d3772fcc0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1864\" data-original=\"https://pic3.zhimg.com/v2-c220a07f6adf0f433265b0c7327cd15c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1864'%20height='1036'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1864\" data-rawheight=\"1036\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d0cd7340963cda651112142d3772fcc0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1864\" data-original=\"https://pic3.zhimg.com/v2-c220a07f6adf0f433265b0c7327cd15c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-c220a07f6adf0f433265b0c7327cd15c_720w.jpg?source=54b3c3a5\"></figure><a data-draft-node=\"block\" data-draft-type=\"ad-link-card\"></a><h2><b>1、入门阶段</b></h2><p><b>1 Python 官网</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-a8c9a496df8d9145448aebc813b3e066_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"338\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-36e290981bb284a59cf676b535ee0e50_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-a8c9a496df8d9145448aebc813b3e066_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='338'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"338\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-36e290981bb284a59cf676b535ee0e50_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-a8c9a496df8d9145448aebc813b3e066_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-a8c9a496df8d9145448aebc813b3e066_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/2/tutorial/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">docs.python.org/2/tutor</span><span class=\"invisible\">ial/</span><span class=\"ellipsis\"></span></a><p>Python 官方文档，永远是最好的教程。当然需要你一定的英语水平。</p><p><b>2 Google 教程</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-8af8040788aa77302ff1f85c89fdbd19_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"305\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1aa0e40ab69dbfe6f3c10f656f70c890_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-8af8040788aa77302ff1f85c89fdbd19_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='305'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"305\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-1aa0e40ab69dbfe6f3c10f656f70c890_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-8af8040788aa77302ff1f85c89fdbd19_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-8af8040788aa77302ff1f85c89fdbd19_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//developers.google.com/edu/python/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">developers.google.com/e</span><span class=\"invisible\">du/python/</span><span class=\"ellipsis\"></span></a><p>Google Python 教程，Googel 出品，必须精品。</p><p><b>3 菜鸟教程</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-429753b427d816e2eaef712168630786_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"383\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-963b604a535ad1c42d885d372e9b093e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic4.zhimg.com/v2-429753b427d816e2eaef712168630786_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='383'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"383\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-963b604a535ad1c42d885d372e9b093e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic4.zhimg.com/v2-429753b427d816e2eaef712168630786_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-429753b427d816e2eaef712168630786_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=http%3A//www.runoob.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">菜鸟教程 - 学的不仅是技术，更是梦想！</a><p>如果英文不好，可以参考国内教程</p><p><b>4 网易云视频教程</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-32ce567218bc69796a86a383f6145dc1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"380\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d527ac48699fc126a69ce77d2b0929fb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-32ce567218bc69796a86a383f6145dc1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='380'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"380\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-d527ac48699fc126a69ce77d2b0929fb_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-32ce567218bc69796a86a383f6145dc1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-32ce567218bc69796a86a383f6145dc1_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=http%3A//study.163.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网易云课堂 - 专注职场与生活技能提升</a><p>当然如果你更习惯跟着视频学习，这里推荐免费的网易云课程。老师诙谐幽默，上手快。</p><h2><b>2、巩固基础</b></h2><p>当你把基础的知识都基本学了一遍，你就可以上手找些练习项目。进一步巩固你的基础。基础不牢，地动山摇。</p><p><b>1 实验楼</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-c98e559ee5d4629fadf59dd325aab7b2_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"358\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8e4e95d5f5d9253ee0b9c655a90a27b7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-c98e559ee5d4629fadf59dd325aab7b2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='358'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"358\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8e4e95d5f5d9253ee0b9c655a90a27b7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-c98e559ee5d4629fadf59dd325aab7b2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-c98e559ee5d4629fadf59dd325aab7b2_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=http%3A//www.shiyanlou.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-e0a05eb5e7b3beb61c1f10f5267f9c81_720w.jpg?source=54b3c3a5\" data-image-width=\"300\" data-image-height=\"300\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">实验楼 - 在线做实验，高效学编程</a><p>实验楼提供在线编程及在线实训学习平台，有些项目是免费的，但有些需要会员。</p><p><b>2 Django 教程</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-a21cf9dc165de8842b7e9d6d4b65ba1e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"285\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c75b162d0936f83a5f00e662b48c197a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-a21cf9dc165de8842b7e9d6d4b65ba1e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='285'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"285\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c75b162d0936f83a5f00e662b48c197a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-a21cf9dc165de8842b7e9d6d4b65ba1e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-a21cf9dc165de8842b7e9d6d4b65ba1e_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=http%3A//code.ziqiangxuetang.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-d9fa5ec0b94f08d901e6ac5c63201327_720w.jpg?source=54b3c3a5\" data-image-width=\"600\" data-image-height=\"200\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">自强学堂 - 在线教程 - w3c - 学习, 分享, 让你更强!</a><p>Django 最全面的中文教学，非常的良心。</p><p><b>3 爬虫博客</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-c36016006b3bf2ca522698980ee1a293_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"507\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a9e23d89a2c5f38b6029a9e5c850bede_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-c36016006b3bf2ca522698980ee1a293_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='507'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"507\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-a9e23d89a2c5f38b6029a9e5c850bede_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-c36016006b3bf2ca522698980ee1a293_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-c36016006b3bf2ca522698980ee1a293_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=http%3A//cuiqingcai.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-cdd45b164518ccc5968d916e35d54b14_720w.jpg?source=54b3c3a5\" data-image-width=\"330\" data-image-height=\"100\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">静觅丨崔庆才的个人博客</a><p>非常有名气的爬虫教学博客。</p><h2><b>3、实战演练</b></h2><p><b>1 开源中国</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-ccf888feb6bb46df66d6f21b96d57aa8_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"350\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9713db7ddfb61a1f7e4bfc2c5bf07595_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-ccf888feb6bb46df66d6f21b96d57aa8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='350'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"350\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9713db7ddfb61a1f7e4bfc2c5bf07595_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-ccf888feb6bb46df66d6f21b96d57aa8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-ccf888feb6bb46df66d6f21b96d57aa8_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=http%3A//www.oschina.net/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">开源中国 - 找到您想要的开源项目，分享和交流</a><p>开源中国社区的项目合集，里面还有福利项目，单身狗福利，不多说，有缘的你一定能找打。</p><p><b>2 经典教程</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-38c247b45c75e1ef5838976d4ed51f18_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"627\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-0be289194b480ab520a09473f03a790c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-38c247b45c75e1ef5838976d4ed51f18_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='627'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"627\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-0be289194b480ab520a09473f03a790c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-38c247b45c75e1ef5838976d4ed51f18_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-38c247b45c75e1ef5838976d4ed51f18_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=http%3A//www.liaoxuefeng.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-d762e0d1aa380edcd8c5fd1008a38fad_720w.jpg?source=54b3c3a5\" data-image-width=\"640\" data-image-height=\"360\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">廖雪峰的官方网站</a><p>廖雪峰老师的教程，非常经典，可以当做 Python 的百科全书来参考</p><h2><b>4、好用的 Python IDE</b></h2><p><b>1 PyCharm</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-2665ba704c2b5d2688290306198135a7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"393\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-ee5f6a7962ac88b7c534121dc3d76550_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-2665ba704c2b5d2688290306198135a7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='393'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"393\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-ee5f6a7962ac88b7c534121dc3d76550_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-2665ba704c2b5d2688290306198135a7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-2665ba704c2b5d2688290306198135a7_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=http%3A//www.jetbrains.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">www.jetbrains.com</a><p>PyCharm 是由 JetBrain 的人员制作的 IDE，该团队负责最着名的 Java IDE，IntelliJ IDEA之一。</p><p>PyCharm 的界面和功能对于那些有使用过其他 JetBrain 产品的人来说，是完美的。 此外，如果您喜欢 IPython 或 Anaconda 发行版，那么 PyCharm 可以将其工具和库（如NumPyMatplotlib）集成在一起，从而让您可以使用数组查看器和交互式图表。</p><p><b>2 Sublime Text</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f0d92f5f07a24fb45a065e8e570b7c19_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"376\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-090d5a2e98988e29db0f0fc4ac804c0c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-f0d92f5f07a24fb45a065e8e570b7c19_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='376'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"376\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-090d5a2e98988e29db0f0fc4ac804c0c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-f0d92f5f07a24fb45a065e8e570b7c19_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f0d92f5f07a24fb45a065e8e570b7c19_720w.jpg?source=54b3c3a5\"></figure><a href=\"https://link.zhihu.com/?target=http%3A//textwww.sublimetext.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Textwww.sublimetext.com</a><p>作为第三个替代选项，您还可以考虑强大的文本编辑器 Sublime Text。 大多数人喜欢用户界面，非凡的功能和性能。 就像上面提到的其他文本编辑器一样，您可以使用插件扩展 Sublime Text。 有关如何将 Sublime Text 设置为轻量级的一体化数据科学IDE的更多信息，请查看此页面。</p><p><b>3 Atom</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-0a426b746f1205263ff0d60ef9e6fbe0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"454\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-e3047e800a2b3df55e59eef92de675d8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic4.zhimg.com/v2-0a426b746f1205263ff0d60ef9e6fbe0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='720'%20height='454'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"454\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-e3047e800a2b3df55e59eef92de675d8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"720\" data-original=\"https://pic4.zhimg.com/v2-0a426b746f1205263ff0d60ef9e6fbe0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-0a426b746f1205263ff0d60ef9e6fbe0_720w.jpg?source=54b3c3a5\"></figure><p>Atom 官网<a href=\"https://link.zhihu.com/?target=http%3A//atom.io\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">atom.io</span><span class=\"invisible\"></span></a></p><h2><b>5、 2020 最新 Python 教程</b></h2><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-ab224804543e71c862ecdcf67cddb8a6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1876\" data-rawheight=\"1016\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9cd7401993a0a6e4c5c29b649f21f126_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1876\" data-original=\"https://pic1.zhimg.com/v2-ab224804543e71c862ecdcf67cddb8a6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1876'%20height='1016'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1876\" data-rawheight=\"1016\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9cd7401993a0a6e4c5c29b649f21f126_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1876\" data-original=\"https://pic1.zhimg.com/v2-ab224804543e71c862ecdcf67cddb8a6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-ab224804543e71c862ecdcf67cddb8a6_720w.jpg?source=54b3c3a5\"></figure><p><b>如果大家想要上面 10G Python 编程视频，点击下面的卡片即可免费领取！</b></p><a data-draft-node=\"block\" data-draft-type=\"ad-link-card\"></a><h2><b>6、Python 书籍推荐</b></h2><p>入门书籍</p><p> - 《Python学习手册》 </p><p>- 《Head First Python》 </p><p>- 《Learn Python The Hard Way》</p><p> - 《Python编程：入门到实践》 </p><p>- 《笨办法学Python》 </p><p>- 《简明Python教程》 </p><p> 进阶书籍 </p><p>- 《Python Cookbook（第三版）》</p><p> - 《流畅的Python》</p><p> - 《Python源码剖析》 </p><p>- 《Python进阶》 </p><p>- 《Flask Web开发:基于Python的Web应用开发实战》</p><p><b>如果大家想要下面 10G Python 编程视频，点击下面的卡片即可免费领取！</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-c220a07f6adf0f433265b0c7327cd15c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1864\" data-rawheight=\"1036\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d0cd7340963cda651112142d3772fcc0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1864\" data-original=\"https://pic1.zhimg.com/v2-c220a07f6adf0f433265b0c7327cd15c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1864'%20height='1036'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1864\" data-rawheight=\"1036\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d0cd7340963cda651112142d3772fcc0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1864\" data-original=\"https://pic1.zhimg.com/v2-c220a07f6adf0f433265b0c7327cd15c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-c220a07f6adf0f433265b0c7327cd15c_720w.jpg?source=54b3c3a5\"></figure><a data-draft-node=\"block\" data-draft-type=\"ad-link-card\"></a><p></p>"}{"掌握很多门计算机语言的人不会记串吗？": "<p>很多时候，当真的进入了这个领域，你会发现你原来操心的，其实根本不是问题，你原来觉得不是问题的，往往是大问题。</p><p>你操心掌握很多语言会不会记串，可能会，但是结合现代编辑器提示和文档查询可以快速纠正。</p><p>你操心当程序员需要不停的学习，但入了行你才会发现，假如程序员干熟练了就不需要学习了，那才是真的可怕，因为那和板砖无异，而学习新东西其实反而从来不是问题，也往往不是压力来源。</p><p>你操心学习多门语言太累内容太多，但入了行你才发现真正需要花时间学习的，根本不是语言，学习新语言的语法占用你的学习时间不会超过 5%。</p><p>没入行的你觉得 multitasking 这玩意儿也没什么大不了的，无非就是同时执行好多个任务，入了行后才发现，要搞明白 multitasking，你要搞明白 parallel 和 concurrence 的区别，怎么调度，共享数据的时候什么时候需要加锁，不加锁会出现什么问题...</p><p>没入行的你觉得浏览器这个东西复杂不到哪里去，市场上那么多浏览器，说明这玩意儿开发难度肯定不高，但实际上浏览器包含了复杂的渲染技术，编译技术，网络技术，若是没有开源内核，不会有那么多浏览器出现。</p><p>我小时候学习骑自行车之前，一度认为学会骑自行车是件不可能的事情，走在路上经常看骑自行车的人，心里想“那么细的轮子，怎么不会倒”，并且还为他们担心，担心他们摔倒。</p><p>但是我真正学习骑自行车了，会发现它并不难，我突然发现当车子运行起来的时候，平衡是很好保持的。</p><p>所以在当时，我不会骑自行车的时候，因为对它缺乏了解，我就对它的难度产生了错误的估计，<strong>把简单的事情看复杂了</strong>。</p><p>但庆幸的是，我没有因为高估骑自行车的难度，就放弃了尝试学习自行车。</p><p>外行由于各方面的不了解，很容易把 <strong>简单的东西看复杂，复杂的东西看简单</strong>，这没错，但是如果因为还没入行就被自己想象出来的困难吓倒，从而选择逃避进入这个行业，很可能会错过一些风景。</p><p>人对于未知很多时候需要尝试，尝试了之后，你或许会发现，它并不像你想的那样难，当然，也可能并不像你想的那样简单。</p>", "你用 Python 做过什么有趣的数据挖掘/分析项目？": "<figure><noscript><img src=\"https://pic1.zhimg.com/50/7c1f97c64efcbdcbcd6814ad3e3488c9_720w.png?source=54b3c3a5\" data-rawwidth=\"284\" data-rawheight=\"202\" class=\"content_image\" width=\"284\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='284'%20height='202'&gt;&lt;/svg&gt;\" data-rawwidth=\"284\" data-rawheight=\"202\" class=\"content_image lazy\" width=\"284\" data-actualsrc=\"https://pic1.zhimg.com/50/7c1f97c64efcbdcbcd6814ad3e3488c9_720w.png?source=54b3c3a5\"></figure><figure><noscript><img src=\"https://pic1.zhimg.com/50/0e6a63eb372bf96bf053a0dfc092508b_720w.png?source=54b3c3a5\" data-rawwidth=\"243\" data-rawheight=\"211\" class=\"content_image\" width=\"243\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='243'%20height='211'&gt;&lt;/svg&gt;\" data-rawwidth=\"243\" data-rawheight=\"211\" class=\"content_image lazy\" width=\"243\" data-actualsrc=\"https://pic1.zhimg.com/50/0e6a63eb372bf96bf053a0dfc092508b_720w.png?source=54b3c3a5\"></figure><br><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/f5e3e379a7642262056fb4af968f3528_720w.png?source=54b3c3a5\" data-rawwidth=\"291\" data-rawheight=\"141\" class=\"content_image\" width=\"291\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='291'%20height='141'&gt;&lt;/svg&gt;\" data-rawwidth=\"291\" data-rawheight=\"141\" class=\"content_image lazy\" width=\"291\" data-actualsrc=\"https://pic4.zhimg.com/50/f5e3e379a7642262056fb4af968f3528_720w.png?source=54b3c3a5\"></figure><br><br><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/85007b3686921b259f68c105b3e0e0c8_720w.png?source=54b3c3a5\" data-rawwidth=\"252\" data-rawheight=\"197\" class=\"content_image\" width=\"252\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='252'%20height='197'&gt;&lt;/svg&gt;\" data-rawwidth=\"252\" data-rawheight=\"197\" class=\"content_image lazy\" width=\"252\" data-actualsrc=\"https://pic4.zhimg.com/50/85007b3686921b259f68c105b3e0e0c8_720w.png?source=54b3c3a5\"></figure><br><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/f7c231d2651509745ce720c41ff9039a_720w.png?source=54b3c3a5\" data-rawwidth=\"289\" data-rawheight=\"189\" class=\"content_image\" width=\"289\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='289'%20height='189'&gt;&lt;/svg&gt;\" data-rawwidth=\"289\" data-rawheight=\"189\" class=\"content_image lazy\" width=\"289\" data-actualsrc=\"https://pic2.zhimg.com/50/f7c231d2651509745ce720c41ff9039a_720w.png?source=54b3c3a5\"></figure><br><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/4356b1407afae863adcd43a76fa3d046_720w.png?source=54b3c3a5\" data-rawwidth=\"300\" data-rawheight=\"214\" class=\"content_image\" width=\"300\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='300'%20height='214'&gt;&lt;/svg&gt;\" data-rawwidth=\"300\" data-rawheight=\"214\" class=\"content_image lazy\" width=\"300\" data-actualsrc=\"https://pic4.zhimg.com/50/4356b1407afae863adcd43a76fa3d046_720w.png?source=54b3c3a5\"></figure><br><br>对《还珠格格》进行词频统计<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/361f3eb99c795629e1b8ae8eac27a1df_720w.png?source=54b3c3a5\" data-rawwidth=\"159\" data-rawheight=\"243\" class=\"content_image\" width=\"159\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='159'%20height='243'&gt;&lt;/svg&gt;\" data-rawwidth=\"159\" data-rawheight=\"243\" class=\"content_image lazy\" width=\"159\" data-actualsrc=\"https://pic1.zhimg.com/50/361f3eb99c795629e1b8ae8eac27a1df_720w.png?source=54b3c3a5\"></figure><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/71913c402a857d57451970b2cbcb91d8_720w.png?source=54b3c3a5\" data-rawwidth=\"285\" data-rawheight=\"198\" class=\"content_image\" width=\"285\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='285'%20height='198'&gt;&lt;/svg&gt;\" data-rawwidth=\"285\" data-rawheight=\"198\" class=\"content_image lazy\" width=\"285\" data-actualsrc=\"https://pic2.zhimg.com/50/71913c402a857d57451970b2cbcb91d8_720w.png?source=54b3c3a5\"></figure><br><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/6df9a1a8da0314e7a0a2aa0cacaa2b68_720w.png?source=54b3c3a5\" data-rawwidth=\"280\" data-rawheight=\"237\" class=\"content_image\" width=\"280\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='280'%20height='237'&gt;&lt;/svg&gt;\" data-rawwidth=\"280\" data-rawheight=\"237\" class=\"content_image lazy\" width=\"280\" data-actualsrc=\"https://pic2.zhimg.com/50/6df9a1a8da0314e7a0a2aa0cacaa2b68_720w.png?source=54b3c3a5\"></figure><br><br>对《还珠格格》的词频统计生成词云标签<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/0e26ec89dcff3cc7da7d310ca4f41c59_720w.png?source=54b3c3a5\" data-rawwidth=\"495\" data-rawheight=\"216\" class=\"origin_image zh-lightbox-thumb\" width=\"495\" data-original=\"https://pic4.zhimg.com/0e26ec89dcff3cc7da7d310ca4f41c59_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='495'%20height='216'&gt;&lt;/svg&gt;\" data-rawwidth=\"495\" data-rawheight=\"216\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"495\" data-original=\"https://pic4.zhimg.com/0e26ec89dcff3cc7da7d310ca4f41c59_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/0e26ec89dcff3cc7da7d310ca4f41c59_720w.png?source=54b3c3a5\"></figure><br>将《2016年中国政府工作报告》变成词云是这样的<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/833189185c8c472c60a2aebea77bb5d9_720w.png?source=54b3c3a5\" data-rawwidth=\"491\" data-rawheight=\"215\" class=\"origin_image zh-lightbox-thumb\" width=\"491\" data-original=\"https://pic1.zhimg.com/833189185c8c472c60a2aebea77bb5d9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='491'%20height='215'&gt;&lt;/svg&gt;\" data-rawwidth=\"491\" data-rawheight=\"215\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"491\" data-original=\"https://pic1.zhimg.com/833189185c8c472c60a2aebea77bb5d9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/833189185c8c472c60a2aebea77bb5d9_720w.png?source=54b3c3a5\"></figure><br>然后是《小时代》<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/b13045baa629933dd99d0eef44810d09_720w.png?source=54b3c3a5\" data-rawwidth=\"495\" data-rawheight=\"214\" class=\"origin_image zh-lightbox-thumb\" width=\"495\" data-original=\"https://pic4.zhimg.com/b13045baa629933dd99d0eef44810d09_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='495'%20height='214'&gt;&lt;/svg&gt;\" data-rawwidth=\"495\" data-rawheight=\"214\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"495\" data-original=\"https://pic4.zhimg.com/b13045baa629933dd99d0eef44810d09_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/b13045baa629933dd99d0eef44810d09_720w.png?source=54b3c3a5\"></figure><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/9bd1298717c5f91272f144f8ab754a82_720w.png?source=54b3c3a5\" data-rawwidth=\"222\" data-rawheight=\"153\" class=\"content_image\" width=\"222\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='222'%20height='153'&gt;&lt;/svg&gt;\" data-rawwidth=\"222\" data-rawheight=\"153\" class=\"content_image lazy\" width=\"222\" data-actualsrc=\"https://pic2.zhimg.com/50/9bd1298717c5f91272f144f8ab754a82_720w.png?source=54b3c3a5\"></figure><br><br><figure><noscript><img src=\"https://pic1.zhimg.com/50/e4d1b0d3091aaf611998f6f6f925f4ca_720w.png?source=54b3c3a5\" data-rawwidth=\"309\" data-rawheight=\"205\" class=\"content_image\" width=\"309\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='309'%20height='205'&gt;&lt;/svg&gt;\" data-rawwidth=\"309\" data-rawheight=\"205\" class=\"content_image lazy\" width=\"309\" data-actualsrc=\"https://pic1.zhimg.com/50/e4d1b0d3091aaf611998f6f6f925f4ca_720w.png?source=54b3c3a5\"></figure><br><br><br>以小燕子照片为词云背景<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/2f4de87427572718ee30fee5ae619f57_720w.jpg?source=54b3c3a5\" data-rawwidth=\"450\" data-rawheight=\"632\" class=\"origin_image zh-lightbox-thumb\" width=\"450\" data-original=\"https://pic4.zhimg.com/2f4de87427572718ee30fee5ae619f57_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='450'%20height='632'&gt;&lt;/svg&gt;\" data-rawwidth=\"450\" data-rawheight=\"632\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"450\" data-original=\"https://pic4.zhimg.com/2f4de87427572718ee30fee5ae619f57_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/2f4de87427572718ee30fee5ae619f57_720w.jpg?source=54b3c3a5\"></figure><br><br>对《射雕英雄传》进行词频统计并以郭靖剧照作为词云背景<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/a11cf3a14f15027ade1e9f5a729d4bda_720w.jpg?source=54b3c3a5\" data-rawwidth=\"600\" data-rawheight=\"840\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/a11cf3a14f15027ade1e9f5a729d4bda_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='840'&gt;&lt;/svg&gt;\" data-rawwidth=\"600\" data-rawheight=\"840\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/a11cf3a14f15027ade1e9f5a729d4bda_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/a11cf3a14f15027ade1e9f5a729d4bda_720w.jpg?source=54b3c3a5\"></figure>有没有满满的即视感？<br><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/c93be023046aca4357696410f6cbdd38_720w.png?source=54b3c3a5\" data-rawwidth=\"297\" data-rawheight=\"114\" class=\"content_image\" width=\"297\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='297'%20height='114'&gt;&lt;/svg&gt;\" data-rawwidth=\"297\" data-rawheight=\"114\" class=\"content_image lazy\" width=\"297\" data-actualsrc=\"https://pic2.zhimg.com/50/c93be023046aca4357696410f6cbdd38_720w.png?source=54b3c3a5\"></figure><br><br><br><figure><noscript><img src=\"https://pic1.zhimg.com/50/bd7f70efcef4819ba984d0a7a40a88fa_720w.png?source=54b3c3a5\" data-rawwidth=\"235\" data-rawheight=\"228\" class=\"content_image\" width=\"235\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='235'%20height='228'&gt;&lt;/svg&gt;\" data-rawwidth=\"235\" data-rawheight=\"228\" class=\"content_image lazy\" width=\"235\" data-actualsrc=\"https://pic1.zhimg.com/50/bd7f70efcef4819ba984d0a7a40a88fa_720w.png?source=54b3c3a5\"></figure><br><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/6f85f00f4de906c859be097773a7918d_720w.png?source=54b3c3a5\" data-rawwidth=\"281\" data-rawheight=\"171\" class=\"content_image\" width=\"281\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='281'%20height='171'&gt;&lt;/svg&gt;\" data-rawwidth=\"281\" data-rawheight=\"171\" class=\"content_image lazy\" width=\"281\" data-actualsrc=\"https://pic4.zhimg.com/50/6f85f00f4de906c859be097773a7918d_720w.png?source=54b3c3a5\"></figure><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/dad589ea5388a8eb63b2775360e03388_720w.png?source=54b3c3a5\" data-rawwidth=\"254\" data-rawheight=\"257\" class=\"content_image\" width=\"254\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='254'%20height='257'&gt;&lt;/svg&gt;\" data-rawwidth=\"254\" data-rawheight=\"257\" class=\"content_image lazy\" width=\"254\" data-actualsrc=\"https://pic4.zhimg.com/50/dad589ea5388a8eb63b2775360e03388_720w.png?source=54b3c3a5\"></figure><br>一个Web端的电影数据库交互<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/f876387bfa79100ec97a1f745e73e515_720w.png?source=54b3c3a5\" data-rawwidth=\"1393\" data-rawheight=\"891\" class=\"origin_image zh-lightbox-thumb\" width=\"1393\" data-original=\"https://pic2.zhimg.com/f876387bfa79100ec97a1f745e73e515_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1393'%20height='891'&gt;&lt;/svg&gt;\" data-rawwidth=\"1393\" data-rawheight=\"891\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1393\" data-original=\"https://pic2.zhimg.com/f876387bfa79100ec97a1f745e73e515_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/f876387bfa79100ec97a1f745e73e515_720w.png?source=54b3c3a5\"></figure><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/721bae08d6ebeef75eb7c3e7ad5f411a_720w.png?source=54b3c3a5\" data-rawwidth=\"294\" data-rawheight=\"229\" class=\"content_image\" width=\"294\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='294'%20height='229'&gt;&lt;/svg&gt;\" data-rawwidth=\"294\" data-rawheight=\"229\" class=\"content_image lazy\" width=\"294\" data-actualsrc=\"https://pic2.zhimg.com/50/721bae08d6ebeef75eb7c3e7ad5f411a_720w.png?source=54b3c3a5\"></figure><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/af6d0b80d1d610867ba436aa8af28766_720w.png?source=54b3c3a5\" data-rawwidth=\"1657\" data-rawheight=\"813\" class=\"origin_image zh-lightbox-thumb\" width=\"1657\" data-original=\"https://pic1.zhimg.com/af6d0b80d1d610867ba436aa8af28766_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1657'%20height='813'&gt;&lt;/svg&gt;\" data-rawwidth=\"1657\" data-rawheight=\"813\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1657\" data-original=\"https://pic1.zhimg.com/af6d0b80d1d610867ba436aa8af28766_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/af6d0b80d1d610867ba436aa8af28766_720w.png?source=54b3c3a5\"></figure><br>可以了解整个香港电影史，从早期合拍上海片，到胡金栓的武侠片，到李小龙时代，然后是成龙，接着周星驰<br><br><figure><noscript><img src=\"https://pic1.zhimg.com/50/4b48ba21b76a23dc18fcf4a95a1518aa_720w.png?source=54b3c3a5\" data-rawwidth=\"257\" data-rawheight=\"214\" class=\"content_image\" width=\"257\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='257'%20height='214'&gt;&lt;/svg&gt;\" data-rawwidth=\"257\" data-rawheight=\"214\" class=\"content_image lazy\" width=\"257\" data-actualsrc=\"https://pic1.zhimg.com/50/4b48ba21b76a23dc18fcf4a95a1518aa_720w.png?source=54b3c3a5\"></figure><figure><noscript><img src=\"https://pic1.zhimg.com/50/25e13c6e8fbc16579396aacd26d86d93_720w.png?source=54b3c3a5\" data-rawwidth=\"801\" data-rawheight=\"418\" class=\"origin_image zh-lightbox-thumb\" width=\"801\" data-original=\"https://pic1.zhimg.com/25e13c6e8fbc16579396aacd26d86d93_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='801'%20height='418'&gt;&lt;/svg&gt;\" data-rawwidth=\"801\" data-rawheight=\"418\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"801\" data-original=\"https://pic1.zhimg.com/25e13c6e8fbc16579396aacd26d86d93_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/25e13c6e8fbc16579396aacd26d86d93_720w.png?source=54b3c3a5\"></figure><br>对职责要求的词频分析，提炼出必需技能<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/78a0ece1a63d48ede9f82526b29c90fe_720w.jpg?source=54b3c3a5\" data-rawwidth=\"400\" data-rawheight=\"600\" class=\"content_image\" width=\"400\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='600'&gt;&lt;/svg&gt;\" data-rawwidth=\"400\" data-rawheight=\"600\" class=\"content_image lazy\" width=\"400\" data-actualsrc=\"https://pic1.zhimg.com/50/78a0ece1a63d48ede9f82526b29c90fe_720w.jpg?source=54b3c3a5\"></figure><figure><noscript><img src=\"https://pic4.zhimg.com/50/3232e40e5a107659d2bd2c3a2a37ac10_720w.png?source=54b3c3a5\" data-rawwidth=\"278\" data-rawheight=\"215\" class=\"content_image\" width=\"278\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='278'%20height='215'&gt;&lt;/svg&gt;\" data-rawwidth=\"278\" data-rawheight=\"215\" class=\"content_image lazy\" width=\"278\" data-actualsrc=\"https://pic4.zhimg.com/50/3232e40e5a107659d2bd2c3a2a37ac10_720w.png?source=54b3c3a5\"></figure><br><br>用爬虫爬下上万知乎女神照片<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/07359fdefa430fb4e39a65e2ae2cc88e_720w.png?source=54b3c3a5\" data-rawwidth=\"695\" data-rawheight=\"447\" class=\"origin_image zh-lightbox-thumb\" width=\"695\" data-original=\"https://pic1.zhimg.com/07359fdefa430fb4e39a65e2ae2cc88e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='695'%20height='447'&gt;&lt;/svg&gt;\" data-rawwidth=\"695\" data-rawheight=\"447\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"695\" data-original=\"https://pic1.zhimg.com/07359fdefa430fb4e39a65e2ae2cc88e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/07359fdefa430fb4e39a65e2ae2cc88e_720w.png?source=54b3c3a5\"></figure><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/aded181b9e2a1dd6f90cdfb6ace80984_720w.png?source=54b3c3a5\" data-rawwidth=\"275\" data-rawheight=\"232\" class=\"content_image\" width=\"275\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='275'%20height='232'&gt;&lt;/svg&gt;\" data-rawwidth=\"275\" data-rawheight=\"232\" class=\"content_image lazy\" width=\"275\" data-actualsrc=\"https://pic4.zhimg.com/50/aded181b9e2a1dd6f90cdfb6ace80984_720w.png?source=54b3c3a5\"></figure><br>对于关注我的童鞋，谢谢你，代码拿去<br><br>词频统计和词云的代码<br><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"kn\">from</span> <span class=\"nn\">wordcloud</span> <span class=\"kn\">import</span> <span class=\"n\">WordCloud</span>\n<span class=\"kn\">import</span> <span class=\"nn\">jieba</span>\n<span class=\"kn\">import</span> <span class=\"nn\">PIL</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"kn\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">wordcloudplot</span><span class=\"p\">(</span><span class=\"n\">txt</span><span class=\"p\">):</span>\n    <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'d:/jieba/msyh.ttf'</span>\n    <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"nb\">unicode</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"s1\">'utf8'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'gb18030'</span><span class=\"p\">)</span>\n    <span class=\"n\">alice_mask</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">PIL</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'d:/jieba/she.jpg'</span><span class=\"p\">))</span>\n    <span class=\"n\">wordcloud</span> <span class=\"o\">=</span> <span class=\"n\">WordCloud</span><span class=\"p\">(</span><span class=\"n\">font_path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"p\">,</span> \n                          <span class=\"n\">background_color</span><span class=\"o\">=</span><span class=\"s2\">\"white\"</span><span class=\"p\">,</span>   \n                          <span class=\"n\">margin</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">1800</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">800</span><span class=\"p\">,</span><span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"n\">alice_mask</span><span class=\"p\">,</span><span class=\"n\">max_words</span><span class=\"o\">=</span><span class=\"mi\">2000</span><span class=\"p\">,</span><span class=\"n\">max_font_size</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span> \n    <span class=\"n\">wordcloud</span> <span class=\"o\">=</span> <span class=\"n\">wordcloud</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">txt</span><span class=\"p\">)</span>\n    <span class=\"n\">wordcloud</span><span class=\"o\">.</span><span class=\"n\">to_file</span><span class=\"p\">(</span><span class=\"s1\">'d:/jieba/she2.jpg'</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">wordcloud</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">axis</span><span class=\"p\">(</span><span class=\"s2\">\"off\"</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n    \n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"p\">[]</span>\n    <span class=\"n\">f</span><span class=\"o\">=</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'d:\\jieba\\book\\she.txt'</span><span class=\"p\">,</span><span class=\"s1\">'r'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n    <span class=\"n\">words</span><span class=\"o\">=</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">jieba</span><span class=\"o\">.</span><span class=\"n\">cut</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">))</span>\n    <span class=\"k\">for</span> <span class=\"n\">word</span> <span class=\"ow\">in</span> <span class=\"n\">words</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">word</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">word</span><span class=\"p\">)</span>\n    <span class=\"n\">txt</span><span class=\"o\">=</span><span class=\"sa\">r</span><span class=\"s1\">' '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n    <span class=\"n\">wordcloudplot</span><span class=\"p\">(</span><span class=\"n\">txt</span><span class=\"p\">)</span>\n    \n<span class=\"k\">if</span> <span class=\"vm\">__name__</span><span class=\"o\">==</span><span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div><br>爬知乎女神的代码<div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">import</span> <span class=\"nn\">urllib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'xxx'</span>\n    <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">xxx</span><span class=\"p\">}</span>\n    <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">925</span>\n    <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">xrange</span><span class=\"p\">(</span><span class=\"mi\">1020</span><span class=\"p\">,</span><span class=\"mi\">2000</span><span class=\"p\">,</span><span class=\"mi\">20</span><span class=\"p\">):</span>\n        <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'start'</span><span class=\"p\">:</span><span class=\"s1\">'1000'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'offset'</span><span class=\"p\">:</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">),</span>\n    <span class=\"s1\">'_xsrf'</span><span class=\"p\">:</span><span class=\"s1\">'a128464ef225a69348cef94c38f4e428'</span><span class=\"p\">}</span>\n        <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span><span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">,</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">text</span>\n        <span class=\"n\">imgs</span><span class=\"o\">=</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s1\">'&lt;img src=</span><span class=\"se\">\\\\\\\\\\\"</span><span class=\"s1\">(.*?)_m.jpg'</span><span class=\"p\">,</span><span class=\"n\">content</span><span class=\"p\">)</span>    \n        <span class=\"k\">for</span> <span class=\"n\">img</span> <span class=\"ow\">in</span> <span class=\"n\">imgs</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">img</span><span class=\"o\">=</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\\\</span><span class=\"s1\">'</span><span class=\"p\">,</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n                <span class=\"n\">pic</span><span class=\"o\">=</span><span class=\"n\">img</span><span class=\"o\">+</span><span class=\"s1\">'.jpg'</span>\n                <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'d:</span><span class=\"se\">\\\\</span><span class=\"s1\">bs4</span><span class=\"se\">\\\\</span><span class=\"s1\">zhihu</span><span class=\"se\">\\\\</span><span class=\"s1\">jpg4</span><span class=\"se\">\\\\</span><span class=\"s1\">'</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s1\">'.jpg'</span>\n                <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">urlretrieve</span><span class=\"p\">(</span><span class=\"n\">pic</span><span class=\"p\">,</span><span class=\"n\">path</span><span class=\"p\">)</span>\n                <span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s1\">'下载了第'</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"sa\">u</span><span class=\"s1\">'张图片'</span><span class=\"p\">)</span>\n                <span class=\"n\">i</span><span class=\"o\">+=</span><span class=\"mi\">1</span>\n                <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">uniform</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s1\">'抓漏1张'</span><span class=\"p\">)</span>\n                <span class=\"k\">pass</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">uniform</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n        \n<span class=\"k\">if</span> <span class=\"vm\">__name__</span><span class=\"o\">==</span><span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>     \n</code></pre></div>", "使用 Python 会降低程序员的编程能力吗？": "当土著拿到猎枪之后，他们射箭的技能退化严重，但因为食物更多了，厨艺有了长足的进展。<br>当你不再为一些问题担心之后，你就可以把注意力集中在另外一些问题上了。这就是选择不同的编程语言的根本差别。", "Python的哪个Web框架学习周期短，学习成本低？": "<p>不用学前端编程，你就能用 Python 简单高效写出漂亮的交互式 Web 应用，将你的数据分析成果立即展示给团队和客户。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-504b2367c9715b12f6b31c375cbaefa9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1620\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1620\" data-original=\"https://pic1.zhimg.com/v2-504b2367c9715b12f6b31c375cbaefa9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1620'%20height='1080'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1620\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1620\" data-original=\"https://pic1.zhimg.com/v2-504b2367c9715b12f6b31c375cbaefa9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-504b2367c9715b12f6b31c375cbaefa9_720w.jpg?source=54b3c3a5\"></figure><h2><b>痛点</b></h2><p>从我开始折腾数据分析工具的那一天，就没有想明白一件事儿 —— 我打算把数据分析的成果做成一个 Web 应用，为什么这么难？</p><p>我需要的核心功能，无非是在网页上接收用户输入，然后做分析处理，把分析结果反馈给用户，完事儿。</p><p>可是这谈何容易？</p><p>很多人都会微笑着告诉你，想做 Web 应用？这得学前端编程， HTML + Javascript 了解一下吧！</p><p>什么？你还需要在后台做数据分析？那你就得学 Web 框架了。</p><p>你说喜欢 Python ？那就学个 Django 或者 Flask 好了。</p><p>我也不是没有看过 Django 和 Flask 的教程，还曾经<b>付费学习</b>过。光是 Django 配置环境，就够写一章出来。</p><p>作为学习的中间成果，我还写了这篇《<a href=\"https://zhuanlan.zhihu.com/p/29098744\" class=\"internal\">如何用 Python 做 Web 开发？——Django 环境配置</a>》分享给你。</p><p>真正让我痛苦的，不是 Web 框架的操作有多么琐碎，而是教程里的<b>案例</b>，为什么都那么奇怪？</p><p>几乎所有的教程，都指向一个目标：</p><blockquote> 来，我教你做一个 blog 出来！  </blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7d1f99374732c79ca7103e03ae5731ab_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"540\" data-rawheight=\"623\" class=\"origin_image zh-lightbox-thumb\" width=\"540\" data-original=\"https://pic2.zhimg.com/v2-7d1f99374732c79ca7103e03ae5731ab_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='540'%20height='623'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"540\" data-rawheight=\"623\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"540\" data-original=\"https://pic2.zhimg.com/v2-7d1f99374732c79ca7103e03ae5731ab_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7d1f99374732c79ca7103e03ae5731ab_720w.jpg?source=54b3c3a5\"></figure><p>我用你教？！</p><p>我要是想用 blog ，可以直接注册一个免费的啊！为什么我要自己开发个 blog 出来？</p><p>为什么你就不能告诉我，该怎么把我目前的数据分析结果，迅速挪到 Web 页面上，跟用户实时交互？</p><p>虽然二者的结果，都是做一个 Web 应用出来。但是，它们关注的焦点，需要的功能，能一样吗？</p><p>但是人家写书和做教程的人，就是不疾不徐，<b>坚持一定要</b>教会你，如何做一个 blog 出来……</p><p>你不学，又能怎么办呢？你难道想只凭 Python 脚本，就做一个 Web 应用出来？</p><p>还真别说，最近，这个事儿从幻想，<b>变成了现实</b>。</p><h2><b>样例</b></h2><p>这不，我就用纯 Python 脚本写了个 Web 应用。</p><p>我编写的代码里，没有一丝半毫的 Web 框架，Javascript，甚至是 HTML 。</p><p>这玩意儿能用吗？</p><p>你自己来试试看。</p><p>请你打开浏览器，输入<a href=\"https://link.zhihu.com/?target=https%3A//helloworld-streamlit.herokuapp.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">以下链接</a>：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//helloworld-streamlit.herokuapp.com/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">helloworld-streamlit.herokuapp.com</span><span class=\"invisible\">/</span><span class=\"ellipsis\"></span></a></p><p>你会看到下面的初始化界面。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-96bad4a4afeab9ed45cb51c8ad436c4a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-96bad4a4afeab9ed45cb51c8ad436c4a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='1080'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-96bad4a4afeab9ed45cb51c8ad436c4a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-96bad4a4afeab9ed45cb51c8ad436c4a_720w.jpg?source=54b3c3a5\"></figure><p>初始化完毕之后，页面会分成左右两栏。左面是两个下拉候选框，分别让你指定需要分析的数据范围。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f2529a0d575451cf80e8e30faeadbd1b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-f2529a0d575451cf80e8e30faeadbd1b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='1080'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-f2529a0d575451cf80e8e30faeadbd1b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f2529a0d575451cf80e8e30faeadbd1b_720w.jpg?source=54b3c3a5\"></figure><p>上面一个，是事件类型；</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-dabbf746f2b4c1032bc2bced491aaa29_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"526\" data-rawheight=\"949\" class=\"origin_image zh-lightbox-thumb\" width=\"526\" data-original=\"https://pic1.zhimg.com/v2-dabbf746f2b4c1032bc2bced491aaa29_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='526'%20height='949'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"526\" data-rawheight=\"949\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"526\" data-original=\"https://pic1.zhimg.com/v2-dabbf746f2b4c1032bc2bced491aaa29_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-dabbf746f2b4c1032bc2bced491aaa29_720w.jpg?source=54b3c3a5\"></figure><p>下面一个，是事件发生归属地。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-05b78f12df5f0d4666a63edd6bb0d7e4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"501\" data-rawheight=\"924\" class=\"origin_image zh-lightbox-thumb\" width=\"501\" data-original=\"https://pic2.zhimg.com/v2-05b78f12df5f0d4666a63edd6bb0d7e4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='501'%20height='924'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"501\" data-rawheight=\"924\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"501\" data-original=\"https://pic2.zhimg.com/v2-05b78f12df5f0d4666a63edd6bb0d7e4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-05b78f12df5f0d4666a63edd6bb0d7e4_720w.jpg?source=54b3c3a5\"></figure><p>如果你看过《<a href=\"https://zhuanlan.zhihu.com/p/52188187\" class=\"internal\">如何用 Python 和循环神经网络预测严重交通拥堵？</a>》，应该对这个数据集很熟悉。</p><p>只不过，当时我们更注重的，是用循环神经网络搭建了一个严重拥堵事件预测模型。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e51464eea27c3e81208ac053edd35c54_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"487\" data-rawheight=\"345\" class=\"origin_image zh-lightbox-thumb\" width=\"487\" data-original=\"https://pic1.zhimg.com/v2-e51464eea27c3e81208ac053edd35c54_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='487'%20height='345'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"487\" data-rawheight=\"345\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"487\" data-original=\"https://pic1.zhimg.com/v2-e51464eea27c3e81208ac053edd35c54_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e51464eea27c3e81208ac053edd35c54_720w.jpg?source=54b3c3a5\"></figure><p>而今天，我们是要进行探索性数据分析，也就是根据我们感兴趣的目标，对数据进行整理操作，然后可视化显示。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-c3a4e79a658afde0c3ebfa3ce8255671_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"489\" data-rawheight=\"389\" class=\"origin_image zh-lightbox-thumb\" width=\"489\" data-original=\"https://pic1.zhimg.com/v2-c3a4e79a658afde0c3ebfa3ce8255671_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='489'%20height='389'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"489\" data-rawheight=\"389\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"489\" data-original=\"https://pic1.zhimg.com/v2-c3a4e79a658afde0c3ebfa3ce8255671_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-c3a4e79a658afde0c3ebfa3ce8255671_720w.jpg?source=54b3c3a5\"></figure><p>选定之后，你会看到右侧提示两个信息：</p><ul><li>你筛选之后，数据框包含行数；</li><li>在层叠地图上的可视化结果。</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-aa0ca5465aa6b0be724b4cf0c2d2702b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"858\" data-rawheight=\"599\" class=\"origin_image zh-lightbox-thumb\" width=\"858\" data-original=\"https://pic4.zhimg.com/v2-aa0ca5465aa6b0be724b4cf0c2d2702b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='858'%20height='599'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"858\" data-rawheight=\"599\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"858\" data-original=\"https://pic4.zhimg.com/v2-aa0ca5465aa6b0be724b4cf0c2d2702b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-aa0ca5465aa6b0be724b4cf0c2d2702b_720w.jpg?source=54b3c3a5\"></figure><p>怎么样？</p><p>麻雀虽小，五脏俱全。</p><p>虽然咱们这个 Web 应用很简单，不过交互分析该有的功能和流程，基本上都涵盖了。</p><p>你可能会问：</p><blockquote> 王老师，编这么一个应用出来，不简单吧？  </blockquote><p>让我带你到幕后，看看是不是很复杂。</p><h2><b>幕后</b></h2><p>我把这个应用的全部源代码，都为你存储到了 Github 上。请你访问<a href=\"https://link.zhihu.com/?target=https%3A//github.com/wshuyi/demo-helloworld-streamlit\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">这个网址</a>获取。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-6151b74002f9fe49b2633cf397073d2a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-6151b74002f9fe49b2633cf397073d2a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='1080'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-6151b74002f9fe49b2633cf397073d2a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-6151b74002f9fe49b2633cf397073d2a_720w.jpg?source=54b3c3a5\"></figure><p>可以看到，一共包含了 4 个文件。</p><p>有意思的是，其中 3 个，包括：</p><ul><li>Procfile</li><li>setup.sh</li><li>requirements.txt</li></ul><p>都只是部署到远程服务器时，需要用到的配置文件而已。</p><p>也就是说，只有最后一个 helloworld.py 是主角，它包含了实现咱们<b>全部交互式数据分析功能</b>的 Python 脚本文件。</p><p>这代码，少说也得有几百行吧？</p><p>别担心，打开来看看：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-51b5bd80fc7edf663792de371a7805b6_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-51b5bd80fc7edf663792de371a7805b6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='1080'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-51b5bd80fc7edf663792de371a7805b6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-51b5bd80fc7edf663792de371a7805b6_720w.jpg?source=54b3c3a5\"></figure><p>上面这张截图，就已经包含了实现交互数据分析功能的<b>全部代码</b>。</p><p>神奇吧？</p><h2><b>解读</b></h2><p>这么短的代码，为什么能有如此强大的功能？</p><p>这是因为它背后使用的一个软件包，叫做 <a href=\"https://link.zhihu.com/?target=https%3A//www.streamlit.io/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">streamlit</a> 。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-6bf08b5757e9abb975d37da06c8065ac_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-6bf08b5757e9abb975d37da06c8065ac_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='1080'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-6bf08b5757e9abb975d37da06c8065ac_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-6bf08b5757e9abb975d37da06c8065ac_720w.jpg?source=54b3c3a5\"></figure><p>它是干什么用的？</p><p>一言以蔽之，给你赋能，让你能够不去操心什么前端后端。只写 Python ，只关注功能，你就能写出一个交互式 Web 应用出来。</p><p>当然，既然最后是 Web 应用，那么实际上前后端的功能都是齐备的。</p><p>只不过，这些交由 Streamlit 来帮你费心操办。你根本不用管。</p><h2><b>爆发</b></h2><p>为什么会有人做了这么一款神器出来？</p><p>原因很简单，咱们前面提到的痛点，是大伙儿都有的。</p><p>咱们这些麻瓜（Muggle），遇到痛点只能忍着。</p><p>但是真正的魔法师（优秀程序员），是忍不了的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-5d17b509e7ec81439c578f47e489fe62_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1342\" data-rawheight=\"1016\" class=\"origin_image zh-lightbox-thumb\" width=\"1342\" data-original=\"https://pic2.zhimg.com/v2-5d17b509e7ec81439c578f47e489fe62_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1342'%20height='1016'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1342\" data-rawheight=\"1016\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1342\" data-original=\"https://pic2.zhimg.com/v2-5d17b509e7ec81439c578f47e489fe62_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-5d17b509e7ec81439c578f47e489fe62_720w.jpg?source=54b3c3a5\"></figure><p>在这段来自 PyData LA 2019 的视频里，Streamlit 的 CEO Adrien Treuille 谈及了他在数据智能企业中，长期遭遇的痛点。</p><p>最大的痛点，就是数据科学家训练好机器学习模型后，需要验证效果，和用户反馈沟通。</p><p>但是，做机器学习的工程师本身，并不掌握这一整套的工具栈。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-5f43f1879f83cac229223ce45aae1956_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-5f43f1879f83cac229223ce45aae1956_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='1080'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-5f43f1879f83cac229223ce45aae1956_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-5f43f1879f83cac229223ce45aae1956_720w.jpg?source=54b3c3a5\"></figure><p>所以，就得在把全部的数据分析和模型训练工作完成后，把这东西移交给一个<b>工具制作团队</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-8be3cfd73832a1986cea1ed469acc137_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-8be3cfd73832a1986cea1ed469acc137_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='1080'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-8be3cfd73832a1986cea1ed469acc137_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-8be3cfd73832a1986cea1ed469acc137_720w.jpg?source=54b3c3a5\"></figure><p>人家做完以后，就告诉数据科学团队说，做好了。但是注意，现在处于需求<b>冻结</b>阶段。这个应用你们可以随便用，<b>只是别乱改</b>。改坏了我们管不了。因为最近两个月，我们还得给其他若干数据分析团队做 app 。大概<b>几个月以后</b>，我们又能回来帮助你们了……</p><p>Adrien Treuille 很敏锐地捕捉到了这个长期痛点，于是在 2018 年， 创立了 streamlit 。</p><p>目标很简单，给数据科学团队提供简单的工具，让他们使用已经掌握的 Python 编程技能，就能直接做 Web 应用。</p><p>什么 “等上两三个月不许改”？！你们自己慢慢儿玩儿去吧，我们想怎么改，就怎么改！</p><p>至于做出来的东西嘛，可以是这样的：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-93c74d5e21ef307e195441e5c1cbddd7_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"360\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-93c74d5e21ef307e195441e5c1cbddd7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-93c74d5e21ef307e195441e5c1cbddd7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='360'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"360\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-93c74d5e21ef307e195441e5c1cbddd7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-93c74d5e21ef307e195441e5c1cbddd7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-93c74d5e21ef307e195441e5c1cbddd7_720w.gif?source=54b3c3a5\"></figure><h2><b>资源</b></h2><p>看到这里，是不是心动了？也打算学习一下 Streamlit ？</p><p>没问题，我前面给你提供的样例，就在 github 上，你可以<a href=\"https://link.zhihu.com/?target=https%3A//github.com/wshuyi/demo-helloworld-streamlit\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">直接查看源码</a>。</p><p>注意因为数据比较大，有接近 300 MB，github 免费空间放不下，所以我为你存到了<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1doYMn7-C2P08ggsC-hKSVQ\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">云盘</a>上，请从<a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1doYMn7-C2P08ggsC-hKSVQ\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">这个链接</a>下载，提取码为 ddpp 。</p><p>如果你希望重现这个小应用，并且一步步学习掌握 Streamlit 的基础知识和技能，我也已经为你写好了<b>一份手把手的教程</b>。地址在<a href=\"https://link.zhihu.com/?target=https%3A//sspai.com/post/58474\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">这里</a>。</p><p>它不仅教你如何设置环境，安装工具，写作代码，甚至连如何免费部署到 heroku 平台，让用户使用，都毫无保留地教给了你。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-882f0d9129aa5736441213c5f576b27a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-882f0d9129aa5736441213c5f576b27a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1920'%20height='1080'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-882f0d9129aa5736441213c5f576b27a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-882f0d9129aa5736441213c5f576b27a_720w.jpg?source=54b3c3a5\"></figure><p>那篇文章，我用于参加<a href=\"https://link.zhihu.com/?target=https%3A//sspai.com/a/NKEwYn\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">少数派年度征文活动</a>，所以就不能全文展示在这里了。</p><p>读完以后，如果你觉得有收获，欢迎在少数派平台上帮我点个赞。谢谢支持！</p><h2><b>思考</b></h2><p>尝试过之后，你应该不难发现，Streamlit 给你带来了什么。</p><p>如果你学过 Javascript 和 Flask, Django 等 Web 应用开发技术，Streamlit 可以加快你的 Web 应用开发与测试进程。</p><p>如果你还没有学过上述技术， Streamlit 可以给你<b>赋能</b>，让你一下子有了把数据分析结果<b>变成产品</b>的能力。</p><p>给你讲点儿更激进的。</p><p>有人已经希望能用它替代掉 Flask 用于产品发布了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-93f6196028b943fc719346c896d29f9a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"881\" data-rawheight=\"765\" class=\"origin_image zh-lightbox-thumb\" width=\"881\" data-original=\"https://pic1.zhimg.com/v2-93f6196028b943fc719346c896d29f9a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='881'%20height='765'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"881\" data-rawheight=\"765\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"881\" data-original=\"https://pic1.zhimg.com/v2-93f6196028b943fc719346c896d29f9a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-93f6196028b943fc719346c896d29f9a_720w.jpg?source=54b3c3a5\"></figure><p>还有人说，将来写技术文档，也应该充分使用 Streamlit 。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-da8415cb442f93f79e300c2c3703aff0_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"721\" data-rawheight=\"210\" class=\"origin_image zh-lightbox-thumb\" width=\"721\" data-original=\"https://pic1.zhimg.com/v2-da8415cb442f93f79e300c2c3703aff0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='721'%20height='210'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"721\" data-rawheight=\"210\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"721\" data-original=\"https://pic1.zhimg.com/v2-da8415cb442f93f79e300c2c3703aff0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-da8415cb442f93f79e300c2c3703aff0_720w.jpg?source=54b3c3a5\"></figure><p>甚至，还把它比作了数据科学界的 iPhone 。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-a07c0d797fecbcf2e7b69a25c5a3b7d4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"754\" data-rawheight=\"206\" class=\"origin_image zh-lightbox-thumb\" width=\"754\" data-original=\"https://pic4.zhimg.com/v2-a07c0d797fecbcf2e7b69a25c5a3b7d4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='754'%20height='206'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"754\" data-rawheight=\"206\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"754\" data-original=\"https://pic4.zhimg.com/v2-a07c0d797fecbcf2e7b69a25c5a3b7d4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-a07c0d797fecbcf2e7b69a25c5a3b7d4_720w.jpg?source=54b3c3a5\"></figure><p>这里，它是借喻 iPhone 开启智能手机时代，说明 Streamlit 的<b>划时代性</b>。</p><p>我<b>不希望</b>你也变得如此激进。</p><p>因为这里提到的每一种功用，现在还都有非常专业的工具做的更好，而且新的工具也在不断涌现。</p><p>例如说，我们在<a href=\"https://zhuanlan.zhihu.com/p/29564719\" class=\"internal\">多个教程</a>中一直使用 Jupyter Notebook 。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-f4d8e0f752ef6e03eef48f732d52e9e7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1946\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1946\" data-original=\"https://pic1.zhimg.com/v2-f4d8e0f752ef6e03eef48f732d52e9e7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1946'%20height='1080'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1946\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1946\" data-original=\"https://pic1.zhimg.com/v2-f4d8e0f752ef6e03eef48f732d52e9e7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-f4d8e0f752ef6e03eef48f732d52e9e7_720w.jpg?source=54b3c3a5\"></figure><p>现在凭借 Voila 扩展的加持，你也可以很轻松地把 Jupyter Notebook 变成 Web app ，而且可以<a href=\"https://zhuanlan.zhihu.com/p/36830594\" class=\"internal\">免费运行在 mybinder 上面</a>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-6f5b5b476e9b94ce3b5a210bc1193584_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb\" width=\"731\" data-original=\"https://pic4.zhimg.com/v2-6f5b5b476e9b94ce3b5a210bc1193584_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='731'%20height='578'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"578\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"731\" data-original=\"https://pic4.zhimg.com/v2-6f5b5b476e9b94ce3b5a210bc1193584_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-6f5b5b476e9b94ce3b5a210bc1193584_720w.jpg?source=54b3c3a5\"></figure><p>但是，你可以看到，一个新的工具，以一种简单，而不是更繁复的办法，解决一个功能痛点，是一件多么令人欣喜的事儿。</p><p>看了这篇文章，可能会给你一种误解，似乎 JavaScript 为代表的前端编程技术，再也不需要学了。</p><p>其实不是这样的。</p><p>可以想象，开发门槛降低以后，将来会有更多的人使用 Python 来做 Web 应用。</p><p>用 Streamlit 这样的方法，他们只是开发出了一个原型。</p><p>要是想打造精品，就必须精细调控很多细节。</p><p>这时候， 如果你精通 Javascript ，那你潜在的合作对象一下子就多了起来，你掌握的这门技术，也就有了更大的价值。</p><p>还记得吗？我不止一次给你强调过，比起一个工具自身的能力来，<b>协作网络更重要</b>。忘了的话，记得复习《<a href=\"https://zhuanlan.zhihu.com/p/53011746\" class=\"internal\">学 Python ，能提升你的竞争力吗？</a>》。</p><p>这就好像印刷术的发明，不是让会写字这件事儿变得失去价值，而是全社会都增大了对好作品的渴求。深刻的思考，加上有效的文字表达，会让你生存得更好。</p><p>当然，如果你不希望精通写作技艺，只是想做一个抄书匠糊口。那么印刷术就可能会替代你的工作，结果就不那么美妙了。</p><h2><b>小结</b></h2><p>这篇文章，我为你介绍了 Streamlit 这款有趣的工具。希望你读过之后，掌握了以下知识点：</p><ul><li>借助 Streamlit ，你可以用纯 Python 编制 Web 应用；</li><li>学 Web 设计依然很有前途，因为你的潜在合作群体正在迅速扩大；</li><li><b>不要惹魔法师</b>（优秀程序员）。他们的痛点需求会转化成无尽的战斗力，兴许会直接替掉你的日常工作。</li></ul><p>喜欢别忘了<b>点赞</b>，并及时写下你的感受与<b>评论</b>。</p><p>也欢迎你<b>转发</b>给亲朋好友，让他们也加入咱们的讨论中来。</p><p>别忘了<b>关注</b>我的专栏 “玉树芝兰”，以免错过更多的更新推送。</p><h2><b>延伸阅读</b></h2><p>你可能也会对以下话题感兴趣。点击链接就可以查看。</p><ul><li><a href=\"https://zhuanlan.zhihu.com/p/29631043\" class=\"internal\">如何高效学 Python ？</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/36830594\" class=\"internal\">如何用 iPad 运行 Python 代码？</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/90113374\" class=\"internal\">论文读不懂怎么办？</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/99201587\" class=\"internal\">如何不写 SQL ，探索和分析数据库？</a></li></ul><p><b>题图：</b>Photo by Luke Chesser on Unsplash</p>"}{"Python 有那么神吗？": "<p>看了大家的答案，我来分享一下使用Python十几年的经历和一些心得，喜欢就顺手点个赞吧！</p><p>1，大学阶段：从爱好者到工程师</p><p>我本科在北京大学并非计算机专业，但是对Linux和技术产生了浓厚的兴趣，一方面来自于室友（NOI参赛队员）的熏陶，一方面受到Linus Torvalds和开源理念影响，植下了技术和互联网能够改变世界的想法种子。</p><p>这一阶段，Python作为一个非常容易入门上手的脚本语言，让我可以更快的理解编程的很多思想，体会到通过编程来解决问题的快乐，而没有被复杂的语法，麻烦的编译过程和内存管理磨灭了兴趣。</p><p>下面就是一个例子（我用1个小时写出来的真实生活中解决实际的问题的例子）：<br><a href=\"https://www.zhihu.com/question/28661987/answer/111746342#\" class=\"internal\">想知道大家都用python写过哪些有趣的脚本? - 爱家的熊哥的回答</a></p><p>2，刚开始工作：从做爬虫到搜索服务的各种工具</p><p>06年第一份工作是在酷讯做搜索，刚开始的时候做爬虫，后面做了很多不同的工具来服务我们线上搜索的方方面面。</p><p>这时候Python对于我来说是一个非常快捷的工具语言，类库非常丰富，解决各种问题都有很多现成的工具和例子。当时我们的公司开始还有很多自己重建轮子的组件，包括web server等大家现在可能根本不会想到要自己开发的模块。在这样的环境中，用Python带来了很多便利和方便，产品的很多功能和验证可以更快的实现，大大的提高了生产力。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/635949e5b2633e32d210ea931637be1d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"299\" data-rawheight=\"281\" class=\"content_image\" width=\"299\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='299'%20height='281'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"299\" data-rawheight=\"281\" class=\"content_image lazy\" width=\"299\" data-actualsrc=\"https://pic1.zhimg.com/50/635949e5b2633e32d210ea931637be1d_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><br></p><p>3，刚开始创业：2个小伙伴维护日活跃200多万的游戏</p><p>09年赶上社交游戏创业的风口，我们做的游戏赶上开心农场这波热潮，迅速在国内几个平台获得每天百万的用户，并且成功出海，去日本，美国，台湾，香港和越南等市场挣了些美金。</p><p>这个阶段，我们的后端整体是用的PHP框架，但是我们用了大量的Python脚步来做服务的部署和各种运维的工具，帮助我们可以在非常少的人手的情况下，可以管理多个地域的很多台服务器，轻松地实现上线部署和监控等任务。</p><p>4，国内社区电商独角兽：用最精炼的团队做出最棒的成绩</p><p>14年初以技术副总裁的身份加入魔都一家很有趣的创业团队，当时没有几个人也没有现在这么有名，但是团队很棒执行力高，做的是自己一直想做的社交和提升生活品质的事。</p><p>在短短一年多的时间，我们的整体后端技术栈是Python，nginx，mongodb，new relic加上云平台的各种服务，在重重招人难的环境下，用非常少的人手扛起了千万级的用户和峰值日百万单的订单量。做到同样的交易量，京东花了5年的时间，有的友商有几倍于我们的工程师数量。</p><p>5，创业路上再出发：寻找对技术和产品有追求的小伙伴加入，一起做一个伟大的事业。</p><p>去年离开上家公司开始现在的创业，希望能通过互联网的技术，帮助大家住的更好更有品质。</p><p>目前我们的后端技术栈也是Python的，主要考虑是：<br>1，创业早期更方便快速迭代<br>2，使用Python的小伙伴里很多是好学，对技术有追求，喜欢解决问题的产品型技术，这样的工程师在创业公司早期最需要</p><p>-----------------------分隔线--------------------</p>", "为什么C++没有Python那么多开源库？": "<p>c++的开源，就是一场绝地求生。你能看到的库，都已经成功吃鸡了，百里挑一。</p><p>c++的世界，只有最终生还者，剩下的都是盒子精、快递员。玩久了个个都是lyb，还有很多神仙，环境是很不友好的。</p><p>开发c++库，首先落地时间要早，落地晚的容易被落地早的当靶子打，翻翻stl和boost，已经覆盖了多少库了，再做是不是傻。</p><p>然后要落在好地方，周围资源要多。要是落在ia64、uwp、mips这种荒郊野外，基本穷困潦倒，死在跑毒。落到win城、L城、A城这种大城才有可能肥。</p><p>当然大城的竞争是非常激烈的，技术不好的，比如新手，一般直接落地成盒，一点机会也没有。</p><p>技术好的，也要经过一轮搏杀才能出城。像ace这种开局顺利的，也会被asio伏击。哪怕杀到城里只剩一队，也会有战斗减员，消耗过大，比如qt。更不要说有巨硬、从不作恶、果子这种神仙玩家了。</p><p>开源库的功能，就是一个个毒圈，大家功能越来越接近，毒圈就越来越小，最后就是你死我活。当然能进决赛圈的，都算是成功的。</p><p>别的语言，没这个现象。主要是c++追求zero overhead，别的语言不追求。c++写的不符合需求、质量不行、性能不好、用的不爽，就没人用了。</p><p>python不是吃鸡玩家。</p><p></p>", "现在为什么 Python 这么火？": "<p>以前只学数学的时候从来不写代码，只用过 C++ 写一些数值计算。</p><p>等后来接触到了 Python，发觉 Python + GItHub 社区的各种开源工具包就好比一个军火库，里面什么武器都有，完全取决于使用者怎么组装这些武器。例如：</p><ol><li>数值计算工具：NumPy，SciPy；</li><li>符号计算工具：SymPy；</li><li>机器学习工具：Scikit-Learn，XGBoost，lightGBM，catBoost，PySpark；</li><li>深度学习工具：TensorFlow，PyTorch；</li><li>时间序列工具：FbProphet；</li><li>数据分析工具：Pandas；</li><li>地图分析工具：folium；</li><li>web开发工具：Django，Flask；</li><li>可视化工具：matplotlib；</li><li>图计算工具：networkx。</li></ol><p>另外，各种数据库例如 Redis，MySQL，influxDB 等都有相应的 Python API。况且，Python 上手其实挺容易的。正所谓，“<b>人生苦短百般味，Python 编程不怕累</b>”。</p>", "Jupyter Notebook 有哪些奇技淫巧？": "<p><i>Towards Data Science</i>专栏的作者Parul Pandey总结了<b>七大Jupyter的进阶用法</b>：</p><h2><b>一、执行shell命令</b></h2><p>Shell是一种与计算机进行文本交互的方式。</p><p>一般来讲，当你正在使用Python编译器，需要用到命令行工具的时候，要在shell和IDLE之间进行切换。</p><p>但是，如果你用的是Jupyter，就完全不用这么麻烦了，你可以直接在命令之前放一个“!”，就能执行shell命令，完全不用切换来切换去，就能在IPython里执行任何命令行。</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"err\">!</span><span class=\"n\">ls</span>\n<span class=\"mi\">2</span> <span class=\"n\">example</span><span class=\"o\">.</span><span class=\"n\">jpeg</span> <span class=\"nb\">list</span> <span class=\"n\">tmp</span>\n<span class=\"mi\">3</span> <span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"err\">!</span><span class=\"n\">pwd</span>\n<span class=\"mi\">4</span> <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">Parul</span><span class=\"o\">/</span><span class=\"n\">Desktop</span><span class=\"o\">/</span><span class=\"n\">Hello</span> <span class=\"n\">World</span> <span class=\"n\">Folder</span><span class=\"s1\">'</span>\n<span class=\"mi\">5</span> <span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"err\">!</span><span class=\"n\">echo</span> <span class=\"s2\">\"Hello World\"</span>\n<span class=\"mi\">6</span> <span class=\"n\">Hello</span> <span class=\"n\">World</span>\n<span class=\"mi\">7</span>\n</code></pre></div><p>我们甚至可以将值传递给shell，像下面这样：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"n\">files</span><span class=\"o\">=</span> <span class=\"err\">!</span><span class=\"n\">ls</span>\n<span class=\"mi\">2</span> <span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">files</span><span class=\"p\">)</span>\n<span class=\"mi\">3</span> <span class=\"p\">[</span><span class=\"s1\">'example.jpeg'</span><span class=\"p\">,</span> <span class=\"s1\">'list'</span><span class=\"p\">,</span> <span class=\"s1\">'tmp'</span><span class=\"p\">]</span>\n<span class=\"mi\">4</span> <span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"n\">directory</span> <span class=\"o\">=</span> <span class=\"err\">!</span><span class=\"n\">pwd</span>\n<span class=\"mi\">5</span> <span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span> <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">)</span>\n<span class=\"mi\">6</span> <span class=\"p\">[</span><span class=\"s1\">'/Users/Parul/Desktop/Hello World Folder'</span><span class=\"p\">]</span>\n<span class=\"mi\">7</span> <span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]:</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">)</span>\n<span class=\"mi\">8</span> <span class=\"n\">IPython</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">SList</span>\n</code></pre></div><p>注意，返回结果的数据类型不是列表。</p><h2><b>二、给Jupyter换主题</b></h2><p>使用Jupyter主题，不仅能让你的Jupyter界面更好看、更舒服，还能让屏幕上的代码看起来更显眼。</p><p>比如<b>Chesterish</b>主题：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-5583f4d3a8ef530ee8bff65cd646d34b_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"634\" data-rawheight=\"720\" class=\"origin_image zh-lightbox-thumb\" width=\"634\" data-original=\"https://pic1.zhimg.com/v2-5583f4d3a8ef530ee8bff65cd646d34b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='634'%20height='720'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"634\" data-rawheight=\"720\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"634\" data-original=\"https://pic1.zhimg.com/v2-5583f4d3a8ef530ee8bff65cd646d34b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-5583f4d3a8ef530ee8bff65cd646d34b_720w.jpg?source=54b3c3a5\"></figure><p><b>solarizedl</b>主题：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-2726e4a2128107aed92b78f83f03cb36_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"616\" data-rawheight=\"722\" class=\"origin_image zh-lightbox-thumb\" width=\"616\" data-original=\"https://pic4.zhimg.com/v2-2726e4a2128107aed92b78f83f03cb36_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='616'%20height='722'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"616\" data-rawheight=\"722\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"616\" data-original=\"https://pic4.zhimg.com/v2-2726e4a2128107aed92b78f83f03cb36_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-2726e4a2128107aed92b78f83f03cb36_720w.jpg?source=54b3c3a5\"></figure><p>来看一下具体的操作方法：</p><p>第一步，安装：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">jupyterthemes</span>\n</code></pre></div><p>第二步，加载可用主题列表：<br></p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">jt</span> <span class=\"o\">-</span><span class=\"n\">l</span>\n</code></pre></div><p>第三步，选择你想要的主题：<br></p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"c1\"># selecting a particular theme</span>\n<span class=\"mi\">2</span> <span class=\"n\">jt</span> <span class=\"o\">-</span><span class=\"n\">t</span> <span class=\"o\">&lt;</span><span class=\"n\">name</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">theme</span><span class=\"o\">&gt;</span>\n<span class=\"mi\">3</span> <span class=\"c1\"># reverting to original Theme</span>\n<span class=\"mi\">4</span> <span class=\"n\">jt</span> <span class=\"o\">-</span><span class=\"n\">r</span>\n</code></pre></div><p>现在可用的主题有：<br></p><blockquote>chesterish<br>grade3<br>gruvboxd<br>gruvboxl monokai<br>oceans16<br>onedork<br>solarizedd<br>solarizedl</blockquote><p>把名字填进去就好啦。</p><p>不过，每次换主题的时候都要重新加载Jupyter，才能看到主题变化。</p><p>另外我们上面讲的在命令之前加“!”也一样可用。</p><h2><b>三、笔记本扩展</b></h2><p>笔记本扩展（nbextensions）是一种JavaScript模块，可以加载到笔记本前端页面上，可以大大提升用户体验。</p><p>比如下面这些扩展工具，简直能让效率提升10000倍。</p><h3><b>Hinterland</b></h3><p>Hinterland功能可以让你每敲完一个键，就出现下拉菜单，可以直接选中你需要的词汇。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-e28d18e962436e2e6a47ad3881fb3428_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"930\" data-rawheight=\"390\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-e28d18e962436e2e6a47ad3881fb3428_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"930\" data-original=\"https://pic4.zhimg.com/v2-e28d18e962436e2e6a47ad3881fb3428_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='930'%20height='390'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"930\" data-rawheight=\"390\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-e28d18e962436e2e6a47ad3881fb3428_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"930\" data-original=\"https://pic4.zhimg.com/v2-e28d18e962436e2e6a47ad3881fb3428_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e28d18e962436e2e6a47ad3881fb3428_720w.gif?source=54b3c3a5\"></figure><h3><b>Snippets</b></h3><p>Snippets在工具栏里加了一个下拉菜单，可以非常方便的直接插入代码段，完全不用手动敲。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-ea962728373dee3acf36db577aa7369b_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"353\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-ea962728373dee3acf36db577aa7369b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-ea962728373dee3acf36db577aa7369b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='353'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"353\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-ea962728373dee3acf36db577aa7369b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-ea962728373dee3acf36db577aa7369b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-ea962728373dee3acf36db577aa7369b_720w.gif?source=54b3c3a5\"></figure><h3><b>拆分单元格</b></h3><p>拆分笔记本中的单元格，改成相邻的模式，看起来就像分了两栏。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-a6b763f3a76709d91799d68d4bbd6e08_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"488\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-a6b763f3a76709d91799d68d4bbd6e08_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-a6b763f3a76709d91799d68d4bbd6e08_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='488'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"488\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-a6b763f3a76709d91799d68d4bbd6e08_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-a6b763f3a76709d91799d68d4bbd6e08_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-a6b763f3a76709d91799d68d4bbd6e08_720w.gif?source=54b3c3a5\"></figure><h3><b>目录</b></h3><p>这个功能可以自动找到所有的标题，生成目录。</p><p>并且这个目录还是移动的呦，你可以放在侧边栏，也可以拖动到任何你喜欢的地方悬浮起来。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-1ba5686d37b502b593c4194bd6b62d51_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"428\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-1ba5686d37b502b593c4194bd6b62d51_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1269\" data-original=\"https://pic1.zhimg.com/v2-1ba5686d37b502b593c4194bd6b62d51_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1269'%20height='428'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"428\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-1ba5686d37b502b593c4194bd6b62d51_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1269\" data-original=\"https://pic1.zhimg.com/v2-1ba5686d37b502b593c4194bd6b62d51_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-1ba5686d37b502b593c4194bd6b62d51_720w.gif?source=54b3c3a5\"></figure><h3><b>折叠一个标题下的全部内容</b></h3><p>如果你的代码太长，觉得滚动过去太麻烦，可以直接折叠掉。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-066526d8a71acaa577b986dc39a30b37_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"220\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-066526d8a71acaa577b986dc39a30b37_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-066526d8a71acaa577b986dc39a30b37_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='220'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"220\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-066526d8a71acaa577b986dc39a30b37_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-066526d8a71acaa577b986dc39a30b37_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-066526d8a71acaa577b986dc39a30b37_720w.gif?source=54b3c3a5\"></figure><h3><b>Autopep8</b></h3><p>一键美化代码，强迫症的福音。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-9de65b06bd26b03388f719c139b88505_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"356\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-9de65b06bd26b03388f719c139b88505_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-9de65b06bd26b03388f719c139b88505_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='356'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"356\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-9de65b06bd26b03388f719c139b88505_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-9de65b06bd26b03388f719c139b88505_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-9de65b06bd26b03388f719c139b88505_720w.gif?source=54b3c3a5\"></figure><h3><b>安装方法</b></h3><p>最后看一下怎么装，需要用到conda：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">conda</span><span class=\"o\">-</span><span class=\"n\">forge</span> <span class=\"n\">jupyter_nbextensions_configurator</span>\n</code></pre></div><p>或者用pip：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">jupyter_contrib_nbextensions</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">jupyter</span> <span class=\"n\">contrib</span> <span class=\"n\">nbextension</span> <span class=\"n\">install</span>\n<span class=\"mi\">2</span> <span class=\"c1\">#incase you get permission errors on MacOS,</span>\n<span class=\"mi\">3</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">jupyter_contrib_nbextensions</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">jupyter</span> <span class=\"n\">contrib</span> <span class=\"n\">nbextension</span> <span class=\"n\">install</span> <span class=\"o\">--</span><span class=\"n\">user</span>\n</code></pre></div><p>然后把Jupyter打开，你就可以看到<b>NBextensions</b>这个选项卡了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e26df7f9936771d8dcc11ae32f67232a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"880\" data-rawheight=\"620\" class=\"origin_image zh-lightbox-thumb\" width=\"880\" data-original=\"https://pic1.zhimg.com/v2-e26df7f9936771d8dcc11ae32f67232a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='880'%20height='620'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"880\" data-rawheight=\"620\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"880\" data-original=\"https://pic1.zhimg.com/v2-e26df7f9936771d8dcc11ae32f67232a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e26df7f9936771d8dcc11ae32f67232a_720w.jpg?source=54b3c3a5\"></figure><p>找不到的话就去菜单的<b>Edit</b>里面找。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-4063678e189d0cf7166ee0d52f285b17_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"251\" data-rawheight=\"633\" class=\"content_image\" width=\"251\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='251'%20height='633'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"251\" data-rawheight=\"633\" class=\"content_image lazy\" width=\"251\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-4063678e189d0cf7166ee0d52f285b17_720w.jpg?source=54b3c3a5\"></figure><p>搞定。</p><h2><b>四、Jupyter小工具</b></h2><p>还有一些Jupyter小工具，比如滑块、文本框之类的部分，可以做一些方便的交互。</p><h3><b>滑块</b></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-043ed41d0f0b054cfb1940c1a0f8b03e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"346\" data-rawheight=\"66\" class=\"content_image\" width=\"346\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='346'%20height='66'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"346\" data-rawheight=\"66\" class=\"content_image lazy\" width=\"346\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-043ed41d0f0b054cfb1940c1a0f8b03e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n<span class=\"mi\">2</span>     <span class=\"k\">return</span> <span class=\"n\">x</span>\n<span class=\"mi\">3</span> <span class=\"c1\"># Generate a slider </span>\n<span class=\"mi\">4</span> <span class=\"n\">interact</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,);</span>\n</code></pre></div><h3><b>布尔值生成复选框</b></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-57fa9f4b1eb6d08b797190f106cd50f5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"164\" data-rawheight=\"64\" class=\"content_image\" width=\"164\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='164'%20height='64'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"164\" data-rawheight=\"64\" class=\"content_image lazy\" width=\"164\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-57fa9f4b1eb6d08b797190f106cd50f5_720w.jpg?source=54b3c3a5\"></figure><p><br></p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"c1\"># Booleans generate check-boxes</span>\n<span class=\"mi\">2</span> <span class=\"n\">interact</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">);</span>\n</code></pre></div><h3><b>字符串生成文本区域</b></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-34d43318b4d96c918998b10954ebb82c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"366\" data-rawheight=\"69\" class=\"content_image\" width=\"366\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='366'%20height='69'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"366\" data-rawheight=\"69\" class=\"content_image lazy\" width=\"366\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-34d43318b4d96c918998b10954ebb82c_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"c1\"># Strings generate text areas</span>\n<span class=\"mi\">2</span> <span class=\"n\">interact</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"s1\">'Hi there!'</span><span class=\"p\">);</span>\n</code></pre></div><h3><b>播放器</b></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7c02a2b732fbacb3c6f711baef617da4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"55\" class=\"origin_image zh-lightbox-thumb\" width=\"521\" data-original=\"https://pic1.zhimg.com/v2-7c02a2b732fbacb3c6f711baef617da4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='521'%20height='55'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"55\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"521\" data-original=\"https://pic1.zhimg.com/v2-7c02a2b732fbacb3c6f711baef617da4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7c02a2b732fbacb3c6f711baef617da4_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-python\"><span></span> <span class=\"mi\">1</span> <span class=\"n\">play</span> <span class=\"o\">=</span> <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">Play</span><span class=\"p\">(</span>\n <span class=\"mi\">2</span>     <span class=\"c1\"># interval=10,</span>\n <span class=\"mi\">3</span>     <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\n <span class=\"mi\">4</span>     <span class=\"nb\">min</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n <span class=\"mi\">5</span>     <span class=\"nb\">max</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n <span class=\"mi\">6</span>     <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n <span class=\"mi\">7</span>     <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Press play\"</span><span class=\"p\">,</span>\n <span class=\"mi\">8</span>     <span class=\"n\">disabled</span><span class=\"o\">=</span><span class=\"bp\">False</span>\n <span class=\"mi\">9</span> <span class=\"p\">)</span>\n<span class=\"mi\">10</span> <span class=\"n\">slider</span> <span class=\"o\">=</span> <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">IntSlider</span><span class=\"p\">()</span>\n<span class=\"mi\">11</span> <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">jslink</span><span class=\"p\">((</span><span class=\"n\">play</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">slider</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">))</span>\n<span class=\"mi\">12</span> <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">HBox</span><span class=\"p\">([</span><span class=\"n\">play</span><span class=\"p\">,</span> <span class=\"n\">slider</span><span class=\"p\">])</span>\n</code></pre></div><h3><b>日历</b></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-9cda063a80e69e877fc3a473b24a9ec8_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"405\" data-rawheight=\"253\" class=\"content_image\" width=\"405\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='405'%20height='253'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"405\" data-rawheight=\"253\" class=\"content_image lazy\" width=\"405\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-9cda063a80e69e877fc3a473b24a9ec8_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">DatePicker</span><span class=\"p\">(</span>\n<span class=\"mi\">2</span>     <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'Pick a Date'</span><span class=\"p\">,</span>\n<span class=\"mi\">3</span>     <span class=\"n\">disabled</span><span class=\"o\">=</span><span class=\"bp\">False</span>\n<span class=\"mi\">4</span> <span class=\"p\">)</span>\n</code></pre></div><p>不过这个部件只能咋Chrome和Edge里用，Firefox和Safari不支持。</p><h3><b>调色盘</b></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-7f98bddd53ce5172e623ad76815848e9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"648\" data-rawheight=\"278\" class=\"origin_image zh-lightbox-thumb\" width=\"648\" data-original=\"https://pic2.zhimg.com/v2-7f98bddd53ce5172e623ad76815848e9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='648'%20height='278'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"648\" data-rawheight=\"278\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"648\" data-original=\"https://pic2.zhimg.com/v2-7f98bddd53ce5172e623ad76815848e9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-7f98bddd53ce5172e623ad76815848e9_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">ColorPicker</span><span class=\"p\">(</span>\n<span class=\"mi\">2</span>     <span class=\"n\">concise</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">,</span>\n<span class=\"mi\">3</span>     <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'Pick a color'</span><span class=\"p\">,</span>\n<span class=\"mi\">4</span>     <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'blue'</span><span class=\"p\">,</span>\n<span class=\"mi\">5</span>     <span class=\"n\">disabled</span><span class=\"o\">=</span><span class=\"bp\">False</span>\n<span class=\"mi\">6</span> <span class=\"p\">)</span>\n</code></pre></div><h3><b>标签</b><br></h3><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-c53dcb62a05e00eddc09125327f98942_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"811\" data-rawheight=\"111\" class=\"origin_image zh-lightbox-thumb\" width=\"811\" data-original=\"https://pic2.zhimg.com/v2-c53dcb62a05e00eddc09125327f98942_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='811'%20height='111'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"811\" data-rawheight=\"111\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"811\" data-original=\"https://pic2.zhimg.com/v2-c53dcb62a05e00eddc09125327f98942_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-c53dcb62a05e00eddc09125327f98942_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">tab_contents</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'P0'</span><span class=\"p\">,</span> <span class=\"s1\">'P1'</span><span class=\"p\">,</span> <span class=\"s1\">'P2'</span><span class=\"p\">,</span> <span class=\"s1\">'P3'</span><span class=\"p\">,</span> <span class=\"s1\">'P4'</span><span class=\"p\">]</span>\n<span class=\"mi\">2</span> <span class=\"n\">children</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">tab_contents</span><span class=\"p\">]</span>\n<span class=\"mi\">3</span> <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"n\">widgets</span><span class=\"o\">.</span><span class=\"n\">Tab</span><span class=\"p\">()</span>\n<span class=\"mi\">4</span> <span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">children</span> <span class=\"o\">=</span> <span class=\"n\">children</span>\n<span class=\"mi\">5</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">children</span><span class=\"p\">)):</span>\n<span class=\"mi\">6</span>     <span class=\"n\">tab</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n<span class=\"mi\">7</span> <span class=\"n\">tab</span>\n</code></pre></div><p>其他的小部件，可以在文末的传送门跳转到GitHub寻找。</p><h3><b>安装方法</b></h3><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"c1\"># pip</span>\n<span class=\"mi\">2</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">ipywidgets</span>\n<span class=\"mi\">3</span> <span class=\"n\">jupyter</span> <span class=\"n\">nbextension</span> <span class=\"n\">enable</span> <span class=\"o\">--</span><span class=\"n\">py</span> <span class=\"n\">widgetsnbextension</span>\n<span class=\"mi\">4</span> <span class=\"c1\"># Conda</span>\n<span class=\"mi\">5</span> <span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">conda</span><span class=\"o\">-</span><span class=\"n\">forge</span> <span class=\"n\">ipywidgets</span>\n<span class=\"mi\">6</span> <span class=\"c1\">#Installing ipywidgets with conda automatically enables the extension</span>\n</code></pre></div><p>使用“interact”功能自动创建UI控件，这是使用IPython最方便的方法。</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"c1\"># Start with some imports!</span>\n<span class=\"mi\">2</span> <span class=\"kn\">from</span> <span class=\"nn\">ipywidgets</span> <span class=\"kn\">import</span> <span class=\"n\">interact</span>\n<span class=\"mi\">3</span> <span class=\"kn\">import</span> <span class=\"nn\">ipywidgets</span> <span class=\"kn\">as</span> <span class=\"nn\">widgets</span>\n</code></pre></div><h2><b>五、Qgrid</b></h2><p>Qgrid也是一个Jupyter的小部件，不过它主要用于数据帧，装上之后，就可以像操作Excel里的筛选功能一样，方便的处理数据。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e7dc5a8924f6774bfc8b25e0cddd5f18_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"846\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-e7dc5a8924f6774bfc8b25e0cddd5f18_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"916\" data-original=\"https://pic1.zhimg.com/v2-e7dc5a8924f6774bfc8b25e0cddd5f18_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='916'%20height='846'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"846\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-e7dc5a8924f6774bfc8b25e0cddd5f18_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"916\" data-original=\"https://pic1.zhimg.com/v2-e7dc5a8924f6774bfc8b25e0cddd5f18_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e7dc5a8924f6774bfc8b25e0cddd5f18_720w.gif?source=54b3c3a5\"></figure><h3><b>安装方法</b></h3><p>用pip安装：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">qgrid</span>\n<span class=\"mi\">2</span> <span class=\"n\">jupyter</span> <span class=\"n\">nbextension</span> <span class=\"n\">enable</span> <span class=\"o\">--</span><span class=\"n\">py</span> <span class=\"o\">--</span><span class=\"n\">sys</span><span class=\"o\">-</span><span class=\"n\">prefix</span> <span class=\"n\">qgrid</span>\n<span class=\"mi\">3</span> <span class=\"c1\"># only required if you have not enabled the ipywidgets nbextension yet</span>\n<span class=\"mi\">4</span> <span class=\"n\">jupyter</span> <span class=\"n\">nbextension</span> <span class=\"n\">enable</span> <span class=\"o\">--</span><span class=\"n\">py</span> <span class=\"o\">--</span><span class=\"n\">sys</span><span class=\"o\">-</span><span class=\"n\">prefix</span> <span class=\"n\">widgetsnbextension</span>\n</code></pre></div><p>用conda安装：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"c1\"># only required if you have not added conda-forge to your channels yet</span>\n<span class=\"mi\">2</span> <span class=\"n\">conda</span> <span class=\"n\">config</span> <span class=\"o\">--</span><span class=\"n\">add</span> <span class=\"n\">channels</span> <span class=\"n\">conda</span><span class=\"o\">-</span><span class=\"n\">forge</span>\n<span class=\"mi\">3</span> <span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"n\">qgrid</span>\n</code></pre></div><h2><b>六、放PPT</b></h2><p>人在江湖飘，难免遇到要做PPT的时候。</p><p>但是，如果你的内容都已经放在Jupyter里了，再重新导入PPT，太麻烦了，我们自动转换吧。</p><p>一种方法是用Jupyter内置的PPT选项，依次点击菜单栏里的View → Cell Toolbar → Slideshow，之后每个单元格上面都会有一个灰色的横条，选<b>Sub-Slide</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-b8088581976642e67190d1872f5cd789_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"749\" data-rawheight=\"388\" class=\"origin_image zh-lightbox-thumb\" width=\"749\" data-original=\"https://pic4.zhimg.com/v2-b8088581976642e67190d1872f5cd789_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='749'%20height='388'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"749\" data-rawheight=\"388\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"749\" data-original=\"https://pic4.zhimg.com/v2-b8088581976642e67190d1872f5cd789_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-b8088581976642e67190d1872f5cd789_720w.jpg?source=54b3c3a5\"></figure><p>然后输入以下代码：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">jupyter</span> <span class=\"n\">nbconvert</span> <span class=\"o\">*.</span><span class=\"n\">ipynb</span> <span class=\"o\">--</span><span class=\"n\">to</span> <span class=\"n\">slides</span> <span class=\"o\">--</span><span class=\"n\">post</span> <span class=\"n\">serve</span>\n<span class=\"mi\">2</span> <span class=\"c1\"># insert your notebook name instead of *.ipynb</span>\n</code></pre></div><p>好了，现在就变成PPT样式的了，显示在端口8000，你也可以查看源代码找到PPT文件。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-af8775b777cb3233225467b7db89939c_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"968\" data-rawheight=\"538\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-af8775b777cb3233225467b7db89939c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"968\" data-original=\"https://pic4.zhimg.com/v2-af8775b777cb3233225467b7db89939c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='968'%20height='538'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"968\" data-rawheight=\"538\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-af8775b777cb3233225467b7db89939c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"968\" data-original=\"https://pic4.zhimg.com/v2-af8775b777cb3233225467b7db89939c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-af8775b777cb3233225467b7db89939c_720w.gif?source=54b3c3a5\"></figure><p>你也可以提前换好主题，比如onedork主题，然后再转换成PPT的的时候就是同一个主题风格的PPT了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-347f8630428dfbf28753a9b246e970c4_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"983\" data-rawheight=\"629\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-347f8630428dfbf28753a9b246e970c4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"983\" data-original=\"https://pic2.zhimg.com/v2-347f8630428dfbf28753a9b246e970c4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='983'%20height='629'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"983\" data-rawheight=\"629\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-347f8630428dfbf28753a9b246e970c4_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"983\" data-original=\"https://pic2.zhimg.com/v2-347f8630428dfbf28753a9b246e970c4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-347f8630428dfbf28753a9b246e970c4_720w.gif?source=54b3c3a5\"></figure><p>不过，用PyTorch默认方法生成的PPT代码不能编辑，这个时候就要用到<b>RISE</b>插件了。</p><p>RISE用到reveal.js来运行PPT，可以不退出PPT，直接运行代码。</p><p>先来安装RISE，推荐用conda：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">damianavila82</span> <span class=\"n\">rise</span>\n</code></pre></div><p>其实不太推荐pip：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">RISE</span>\n</code></pre></div><p>然后调用JS和CSS：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"n\">jupyter</span><span class=\"o\">-</span><span class=\"n\">nbextension</span> <span class=\"n\">install</span> <span class=\"n\">rise</span> <span class=\"o\">--</span><span class=\"n\">py</span> <span class=\"o\">--</span><span class=\"n\">sys</span><span class=\"o\">-</span><span class=\"n\">prefix</span>\n<span class=\"mi\">2</span> <span class=\"c1\">#enable the nbextension:</span>\n<span class=\"mi\">3</span> <span class=\"n\">jupyter</span><span class=\"o\">-</span><span class=\"n\">nbextension</span> <span class=\"n\">enable</span> <span class=\"n\">rise</span> <span class=\"o\">--</span><span class=\"n\">py</span> <span class=\"o\">--</span><span class=\"n\">sys</span><span class=\"o\">-</span><span class=\"n\">prefix</span>\n</code></pre></div><p>安装好啦，现在重新打开你的Jupyter Notebook，发现一个新的扩展，名叫“Enter/Exit RISE Slideshow”。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-eebcfdc5660b8c47a74ed4479a3e4fec_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"744\" data-rawheight=\"146\" class=\"origin_image zh-lightbox-thumb\" width=\"744\" data-original=\"https://pic1.zhimg.com/v2-eebcfdc5660b8c47a74ed4479a3e4fec_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='744'%20height='146'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"744\" data-rawheight=\"146\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"744\" data-original=\"https://pic1.zhimg.com/v2-eebcfdc5660b8c47a74ed4479a3e4fec_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-eebcfdc5660b8c47a74ed4479a3e4fec_720w.jpg?source=54b3c3a5\"></figure><p>戳一下，一个可以边演示边改的PPT就好了。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-63e5bba20c37427bf024f53fcf3a5e3e_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"538\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-63e5bba20c37427bf024f53fcf3a5e3e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"822\" data-original=\"https://pic2.zhimg.com/v2-63e5bba20c37427bf024f53fcf3a5e3e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='822'%20height='538'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"538\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-63e5bba20c37427bf024f53fcf3a5e3e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"822\" data-original=\"https://pic2.zhimg.com/v2-63e5bba20c37427bf024f53fcf3a5e3e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-63e5bba20c37427bf024f53fcf3a5e3e_720w.gif?source=54b3c3a5\"></figure><h2><b>七、嵌入链接和pdf</b></h2><p>扔链接再跳转实在是太麻烦了，不如直接把素材放进Jupyter里面。</p><h3><b>嵌入链接</b></h3><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"c1\">#Note that http urls will not be displayed. Only https are allowed inside the Iframe</span>\n<span class=\"mi\">2</span> <span class=\"kn\">from</span> <span class=\"nn\">IPython.display</span> <span class=\"kn\">import</span> <span class=\"n\">IFrame</span>\n<span class=\"mi\">3</span> <span class=\"n\">IFrame</span><span class=\"p\">(</span><span class=\"s1\">'https://en.wikipedia.org/wiki/HTTPS'</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">800</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">450</span><span class=\"p\">)</span>\n</code></pre></div><p>操作方式如下，当然你需要把链接换成你要放的链接：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e33137f598df1d3caeed35d47f6aea54_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"658\" data-rawheight=\"521\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-e33137f598df1d3caeed35d47f6aea54_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"658\" data-original=\"https://pic3.zhimg.com/v2-e33137f598df1d3caeed35d47f6aea54_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='658'%20height='521'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"658\" data-rawheight=\"521\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-e33137f598df1d3caeed35d47f6aea54_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"658\" data-original=\"https://pic3.zhimg.com/v2-e33137f598df1d3caeed35d47f6aea54_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e33137f598df1d3caeed35d47f6aea54_720w.gif?source=54b3c3a5\"></figure><h3><b>嵌入pdf</b></h3><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"mi\">1</span> <span class=\"kn\">from</span> <span class=\"nn\">IPython.display</span> <span class=\"kn\">import</span> <span class=\"n\">IFrame</span>\n<span class=\"mi\">2</span> <span class=\"n\">IFrame</span><span class=\"p\">(</span><span class=\"s1\">'https://arxiv.org/pdf/1406.2661.pdf'</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">800</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">450</span><span class=\"p\">)</span>\n</code></pre></div><p>同样，把pdf链接换成你需要用的pdf。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-afee8c7d2906816520a7a3fc6e84794a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"641\" data-rawheight=\"437\" class=\"origin_image zh-lightbox-thumb\" width=\"641\" data-original=\"https://pic4.zhimg.com/v2-afee8c7d2906816520a7a3fc6e84794a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='641'%20height='437'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"641\" data-rawheight=\"437\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"641\" data-original=\"https://pic4.zhimg.com/v2-afee8c7d2906816520a7a3fc6e84794a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-afee8c7d2906816520a7a3fc6e84794a_720w.jpg?source=54b3c3a5\"></figure><h2><b>传送门</b></h2><p>原文：<b>Bringing the best out of Jupyter Notebooks for Data Science</b><br>Parul Pandey, Towards Data Science<br><a href=\"https://link.zhihu.com/?target=https%3A//towardsdatascience.com/bringing-the-best-out-of-jupyter-notebooks-for-data-science-f0871519ca29\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">towardsdatascience.com/</span><span class=\"invisible\">bringing-the-best-out-of-jupyter-notebooks-for-data-science-f0871519ca29</span><span class=\"ellipsis\"></span></a></p><p>Jupyter主题<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/dunovank/jupyter-themes\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/dunovank/jup</span><span class=\"invisible\">yter-themes</span><span class=\"ellipsis\"></span></a></p><p>IPython小部件<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jupyter-widgets/ipywidgets\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/jupyter-widg</span><span class=\"invisible\">ets/ipywidgets</span><span class=\"ellipsis\"></span></a></p>", "如果在简历上这样写，能找到工作吗？": "<h2><b>不要光收藏不点赞好吗.....写那么辛苦...</b></h2><hr><p>首先说一下，你这份简历，估计市面上会有95的%的雷同率。既然雷同了，那么你就无法脱颖而出。纵观大部分的简历都是没有「干货」的简历，那么这些简历，基本上就是10秒钟就可以删进垃圾桶里的。</p><p><br></p><p>下面我就介绍一下，怎样的简历，最能吸引人。（针对的是比较新的小白</p><hr><h2><b>（一）简历面貌</b></h2><p>很多人的简历，毫无排版，字体乱七八糟，毫无艺术感。虽然说，你的简历是描述你这个人到底能干什么的东西，但是「样子好看，别人就会多看你几眼」。<b>你可以不搞样式，但是如果有一个人和你水平相同，他的简历弄了样式，那他被选择的几率就大很多。</b></p><p><br></p><p><b>我在这里直接给出一些干货「</b><a href=\"https://link.zhihu.com/?target=https%3A//github.com/salomonelli/best-resume-ever\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">salomonelli/best-resume-ever</a>」这个是github上的一个不错的模版，几天时间就获得了4000星。大家也可以自己去找找别的，都行。总之以下几点要注意：</p><ul><li>内容精致</li><li>样式完整统一</li><li>细节突出</li></ul><p><br></p><h2><b>（二）突出优点的方式</b></h2><p>你简历中的「熟悉各种xxxoo」其实就是突出优点的一种。但是目前的环境就是「不太足够」。</p><ul><li>学历：211/985直接写。其他的本科写本科，专科写专科。</li><li>作品：一定要有。<b>你说你熟练了，那么你拿点作品出来我看看？</b>这个非常重要，很多人的学习模式就是「<b>噢，这个我懂了，噢那个我懂了。噢，这个太简单了，不做</b>」。眼高手低的人，我相信是各个用人单位最不想看见的。因此，哪怕是你「<b>仿造别人，或者github的项目，做一个出来，部署展示</b>」那么你就能脱颖而出。</li><li>小作品，小demo：我给个标准，代码少于500行的「<b>一般都属于小demo</b>」，注意我说的是一般。类似这种小demo呢，就一笔带过，说一说用到什么技术，主要是什么想法，一笔带过，不用介绍太多。</li><li>一些额外的加分项：博客（自己搭建分稍微高点），文章，github项目（有星），参加比赛，实际工作经验（一般说的都是兼职类似）。</li></ul><p><br></p><h2><b>（三）内容基本构成</b></h2><h2><b>基本结构</b></h2><p><br></p><ul><li>姓，性，年纪，邮箱（qq,微信</li><li>学历、学校、专业（不是计算机专业可以不写，不要在简历中暴露自己的短处）</li><li><b>技能（重点介绍）</b></li><li>工作经历（如果有）</li><li>期待薪酬（谨慎写或者不写）</li><li><b>作品地址、博客地址、github地址（重点介绍）</b></li><li>学生时期成绩、比赛奖励</li></ul><p><br></p><h2><b>技能描述</b></h2><p><br></p><ul><li><b>精通</b>：有实际商用项目背景才能写（或者有非常厉害的开源项目）</li><li><b>掌握、熟练运用</b>：使用某种东西模仿了某种东西出来，并且能够顺利运行。那么你可以说你掌握了，熟练运用。</li><li><b>了解</b>：不怎么熟悉，听过名字，看过一些小demo</li></ul><p><br></p><h2><b>作品项目描述（重要）</b></h2><ul><li>从最牛逼的到最垃圾的</li><li>大项目5行左右的描述：1.干什么的，2.怎么实现的，3.用到了哪个技术栈，4.（遇到什么问题），5，预览地址（最好要有，因为起码告诉看你简历的人，你会部署）</li><li>小项目，demo类：可以用「关键词+技术栈」描述。</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>（假设招聘的是python web开发）\n\n1. LuyWeb (采用asyncio的web服务器）\n  a) 技术范畴：asyncio，socket，uwsgi(协议) or wsgi\n  b) 实现细节：一个实用asyncio的高性能服务器，支持django等众多web框架\n  c) 项目特色：asyncio...\n\n2. xx即时聊天平台\n  a) 技术范畴：xxxxxxx\n  b) 实现细节：xxxxxxx\n  c) 项目特色：xxxxxxx\n\n3. 分布式爬虫\n  a) 技术范畴：xxxxxxx\n  b) 实现细节：xxxxxxx\n  c) 项目特色：xxxxxxx\n\n4. 小项目(日常\n  a) xxx：xxxxxxx\n  b) xxx：xxxxxxx\n  c) xxx：xxxxxxx\n\ngithub or 博客地址\n</code></pre></div><p><br></p><h2><b>（四）题主简历修改的建议</b></h2><ul><li>熟悉python，熟练使用某某框架</li></ul><p>不要光说不练。不是你说熟悉就熟悉的，得上一些干货。如：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>熟悉python和django\n\n- 使用django开发了一个博客\n  a) 技术范畴：xxxxxxx\n  b) 实现细节：xxxxxxx\n  c) 项目特色：xxxxxxx\n\n预览地址....\n</code></pre></div><ul><li>熟悉某前端框架</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>熟悉vue.js\n\n- vue配合socket制作的在线聊天即时平台\n  a) 技术范畴：xxxxxxx\n  b) 实现细节：xxxxxxx\n  c) 项目特色：xxxxxxx\n\n预览地址....\n</code></pre></div><p><br></p><p><b>其实套路很简单：我熟练什么，我就有某个作品来告诉你，我熟练什么</b></p><p><br></p><h2><b>（五）简历细节</b></h2><ol><li>项目代码要好看，代码整齐，统一，最好有注释。预览界面也不要太烂，稍微做一下美工。这一点就很容易看出你的态度。</li><li>绝对不要有错别字。排版统一，字体风格统一。</li><li>投简历的时候，可以在「知乎」，「微博」，「掘金」，等一些网站搜索看看，有没有人招聘，有直接发邮箱。如果实在找不到，再去招聘网站。</li><li>招聘标题以这样的格式：名字+招聘职位+联系方式。（碰到过很多求职者，上来就是，你好xxxxxx，我怎么懂你要做什么？」</li><li>找工作前，一定要沉下心来，做一些作品。</li><li>招聘工作经验在1年的，如果你没经验还是可以投（那么你一定要有好作品了，github上最好有1个或者多个100星以上的作品</li></ol>", "你见过哪些令你瞠目结舌的爬虫技巧？": "<h2>周末写的小脚本，分享一下</h2><h2>Python3 实现自动点赞抖音小姐姐</h2><blockquote>Simple, Interesting | 简单，有趣</blockquote><h2>什么是抖音</h2><blockquote>抖音是2016年9月上线的一款音乐创意短视频社交软件，是一个专注年轻人的15秒音乐短视频社区。用户可以通过这款软件选择歌曲，拍摄15秒的音乐短视频，形成自己的作品。</blockquote><h2>效果</h2><p>抖音经常能刷到很多高质量的视频，特别是我们使用的越多，头条的算法给我们推荐的内容越精准。<b>那么我们可不可以写一个小型的程序，根据自己设置的特征筛选视频并且自动点赞存入我们的收藏夹中呢？比如漂亮的小姐姐，帅气的小哥哥或者是可爱的喵星人。。。</b></p><p><br></p><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/983073942659072000\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic2.zhimg.com/80/v2-67cc68932e01547ed74ab90ac95012e5_b.jpg\" data-lens-id=\"983073942659072000\">              <img class=\"thumbnail\" src=\"https://pic2.zhimg.com/80/v2-67cc68932e01547ed74ab90ac95012e5_b.jpg\">              <span class=\"content\">                <span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/983073942659072000</span>              </span>            </a>            <p><br></p><h2>原理说明</h2><h2>本程序与抖音无关，主要供学习用途</h2><ol><li>将手机打开抖音的推荐视频界面</li><li>用 ADB 工具获取当前手机截图，并用 ADB 将截图 pull 上来</li></ol><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>adb shell screencap -p /sdcard/autojump.png\nadb pull /sdcard/autojump.png .\n</code></pre></div><ol><li>将图片进行压缩,并调用<a href=\"https://link.zhihu.com/?target=http%3A//ai.baidu.com/tech/face\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">百度人脸识别API</a></li><li>获得百度返回的数据进行判断分析</li><li>如果满足要求，使用ADB点赞</li><li>上滑切换新视频</li></ol><h2>使用教程</h2><h2>1、获取源码</h2><p>github地址</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>https://github.com/tomxin7/DouYinFaceTech\n</code></pre></div><p>git命令</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>git clone https://github.com/tomxin7/DouYinFaceTech.git\n</code></pre></div><h2>2、依赖</h2><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>Python：3.6.1 \nADB下载：http://adbshell.com/downloads\n</code></pre></div><h2>3、准备</h2><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>使用数据线连接手机与电脑，并开启调试模式\n启动ADB，保证驱动安装（保证可以连接360手机助手等软件）\nFaceMain.py中替换token的host链接\n</code></pre></div><h2>4、运行</h2><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>手机打开抖音，PC退出手机助手等软件\nDouYinFaceTech目录下直接运行FaceMain.py\n</code></pre></div><p><br></p><h2>更多好玩的：</h2><p>【简单天气】坏天气主动提醒你的小工具：<a href=\"https://link.zhihu.com/?target=http%3A//domain.jiandan.live/weather.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">简单天气 - 天气推送</a></p><p>【简单找房】主动推送豆瓣合适的房源给你：<a href=\"https://link.zhihu.com/?target=http%3A//domain.jiandan.live/house.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">简单找房 - 实时推送，快人一步</a></p><p><br> </p>", "看自己几年前写的代码是怎样的一种感受？": "我在很早起就形成了稳定的风格和路数，到现在没怎么变，所以看老代码和新代码差不多。甚至早期会更多地用语言技巧，现在写的更朴实。<br><br>一次开会的时候，在阿凡达的渲染器PantaRay里看到了一段代码，越看越熟悉，这特么不是我N年前写给Halo的吗。<br><br>后来搞清楚了授权链，发现确实是我的。怪不得看阿凡达的时候发现连artifact都那么熟悉。"}{"Python 有哪些黑魔法？": "<figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-d6aa0a8ea85a6dc419ce881834f403e9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"703\" data-rawheight=\"258\" class=\"origin_image zh-lightbox-thumb\" width=\"703\" data-original=\"https://pic4.zhimg.com/v2-d6aa0a8ea85a6dc419ce881834f403e9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='703'%20height='258'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"703\" data-rawheight=\"258\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"703\" data-original=\"https://pic4.zhimg.com/v2-d6aa0a8ea85a6dc419ce881834f403e9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-d6aa0a8ea85a6dc419ce881834f403e9_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>还记得吗？去年冬天，在国外 AI 圈有个事情闹得很火：知名论坛 Reddit 上忽然出现一个叫 deepfakes 的大神，借助神经网络实现了<b>人脸替换</b>，让一些好莱坞女星“出演”了 AV。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-840f5bf3a6622594d62102557f8b4037_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"256\" class=\"content_image\" width=\"300\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='300'%20height='256'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"256\" class=\"content_image lazy\" width=\"300\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-840f5bf3a6622594d62102557f8b4037_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>后来根据这个项目又衍生了一个叫 FakeAPP 的桌面应用，可以让<b>尼古拉斯·凯奇</b>这样的明星随心所欲的“出演”任何电影，当然换成任何人的脸部都可以。我们曾详细分享过这些项目：</p><p><br></p><a href=\"https://zhuanlan.zhihu.com/p/31939255\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-d824a56fb36db5dd0eb85c5d3cb7f5e8_bh.jpg?source=54b3c3a5\" data-image-width=\"1200\" data-image-height=\"900\" class=\"internal\">景略集智：大意了！居然有人用AI技术制作假AV！</a><a href=\"https://zhuanlan.zhihu.com/p/33426037\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-b29562aae69cac8238eba5afb9733a9e_bh.jpg?source=54b3c3a5\" data-image-width=\"740\" data-image-height=\"407\" class=\"internal\">景略集智：AI已经决定了，ta就是未来每一届奥斯卡最佳男主。</a><p><br></p><p>怎么样，是不是被这种换脸的效果惊到了？其实即便是不借助神经网络，我们用 Python 和一些 Python 库也能实现换脸，只不过替换的是静态图像中的人脸，但凭此也足以显示出 Python 的“神秘力量”。</p><p><br></p><p>我们下面就传授一下这门 Python“换脸”大法。</p><hr><p>在本文，我们会介绍如何通过一段简短的 Python 脚本（200行）将一张图片中面部特征自动替换为另外一张图片中的面部特征。也就是实现下面这样的效果：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-642fbd6faa13c8f64961c3b13ac8b08d_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"965\" data-rawheight=\"312\" class=\"origin_image zh-lightbox-thumb\" width=\"965\" data-original=\"https://pic2.zhimg.com/v2-642fbd6faa13c8f64961c3b13ac8b08d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='965'%20height='312'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"965\" data-rawheight=\"312\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"965\" data-original=\"https://pic2.zhimg.com/v2-642fbd6faa13c8f64961c3b13ac8b08d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-642fbd6faa13c8f64961c3b13ac8b08d_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>具体过程分为四个步骤：</p><ul><li>检测面部标志；</li><li>旋转、缩放和平移图 2 以适应图 1；</li><li>调整图 2 的白平衡以匹配图 1；</li><li>将图 2 的特征融合到图 1 中；</li></ul><p><br></p><p>本脚本的完整代码地址见文末。</p><p><br></p><h2><b>使用dlib提取面部标志</b></h2><p><br></p><p>本脚本使用 dlib 的 Python bindings 来提取面部标志：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1c6f65ab91127e0b392eb25b3b834b65_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"881\" data-rawheight=\"462\" class=\"origin_image zh-lightbox-thumb\" width=\"881\" data-original=\"https://pic3.zhimg.com/v2-1c6f65ab91127e0b392eb25b3b834b65_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='881'%20height='462'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"881\" data-rawheight=\"462\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"881\" data-original=\"https://pic3.zhimg.com/v2-1c6f65ab91127e0b392eb25b3b834b65_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1c6f65ab91127e0b392eb25b3b834b65_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>dlib 实现了 Vahid Kazemi 和 Josephine Sullivan 所著论文《One Millisecond Face Alignment with an Ensemble of Regression Tree》一文中描述的算法。算法本身非常复杂，但是通过 dlib的接口实现它非常简单：</p><p><br></p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">PREDICTOR_PATH</span> <span class=\"o\">=</span> <span class=\"s2\">\"/home/matt/dlib-18.16/shape_predictor_68_face_landmarks.dat\"</span>\n\n<span class=\"n\">detector</span> <span class=\"o\">=</span> <span class=\"n\">dlib</span><span class=\"o\">.</span><span class=\"n\">get_frontal_face_detector</span><span class=\"p\">()</span>\n<span class=\"n\">predictor</span> <span class=\"o\">=</span> <span class=\"n\">dlib</span><span class=\"o\">.</span><span class=\"n\">shape_predictor</span><span class=\"p\">(</span><span class=\"n\">PREDICTOR_PATH</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_landmarks</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">):</span>\n   <span class=\"n\">rects</span> <span class=\"o\">=</span> <span class=\"n\">detector</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n   <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">rects</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n       <span class=\"k\">raise</span> <span class=\"n\">TooManyFaces</span>\n   <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">rects</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n       <span class=\"k\">raise</span> <span class=\"n\">NoFaces</span>\n\n<span class=\"k\">return</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">matrix</span><span class=\"p\">([[</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">predictor</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span> <span class=\"n\">rects</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">()])</span>\n</code></pre></div><p><br></p><p>get_landmarks() 函数 以 numpy 数组的形式接收图像，并返回一个 68x2 的元素矩阵。矩阵的每一行与输入图像中特定特征点的 x，y 坐标相对应。</p><p><br></p><p>特征提取器（predictor）需要一个大概的边界框作为算法的输入。这将由传统的面部检测器（detector）提供。该面部检测器会返回一个矩形列表，其中每一个矩形与图像中的一张人脸相对应。</p><p><br></p><p>生成 predictor 需要预先训练好的模型。该模型可在 dlib sourceforge repository 下载。</p><p><a href=\"https://link.zhihu.com/?target=https%3A//sourceforge.net/projects/dclib/files/dlib/v18.10/shape_predictor_68_face_landmarks.dat.bz2/download\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">sourceforge.net/project</span><span class=\"invisible\">s/dclib/files/dlib/v18.10/shape_predictor_68_face_landmarks.dat.bz2/download</span><span class=\"ellipsis\"></span></a></p><p><br></p><h2><b>用普氏分析法（Procrustes Analysis）实现人脸对齐</b></h2><p><br></p><p>现在我们已经有两个面部标志矩阵，其中的每一行都含有某个面部特征的坐标（如第 30 行给出了鼻尖的坐标）。我们现在只要弄明白如何旋转、平移和缩放第一个向量的所有点，使其尽可能匹配第二个向量中的点。同理，同样的变换可用于将第二张图叠加在第一张图上。</p><p><br></p><p>为使其更加数学化，我们设 T，s 和 R，并求如下等式最小值：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d6bc28d791bd944a665eba1f71935bf3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"276\" data-rawheight=\"94\" class=\"content_image\" width=\"276\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='276'%20height='94'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"276\" data-rawheight=\"94\" class=\"content_image lazy\" width=\"276\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d6bc28d791bd944a665eba1f71935bf3_720w.jpg?source=54b3c3a5\"></figure><p>其中，R 是一个 2x2 的正交矩阵，s 是一个标量，T 是一个二维向量，pi 和 qi 是之前计算出的面部标志矩阵行标和列标。</p><p><br></p><p>事实证明，这类问题用常规普氏分析法（Ordinary Procrustes Analysis）可以解决：</p><p><br></p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">def</span> <span class=\"nf\">transformation_from_points</span><span class=\"p\">(</span><span class=\"n\">points1</span><span class=\"p\">,</span> <span class=\"n\">points2</span><span class=\"p\">):</span>\n   <span class=\"n\">points1</span> <span class=\"o\">=</span> <span class=\"n\">points1</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">)</span>\n   <span class=\"n\">points2</span> <span class=\"o\">=</span> <span class=\"n\">points2</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">)</span>\n\n   <span class=\"n\">c1</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">points1</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n   <span class=\"n\">c2</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">points2</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n   <span class=\"n\">points1</span> <span class=\"o\">-=</span> <span class=\"n\">c1</span>\n   <span class=\"n\">points2</span> <span class=\"o\">-=</span> <span class=\"n\">c2</span>\n\n   <span class=\"n\">s1</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">(</span><span class=\"n\">points1</span><span class=\"p\">)</span>\n   <span class=\"n\">s2</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">(</span><span class=\"n\">points2</span><span class=\"p\">)</span>\n   <span class=\"n\">points1</span> <span class=\"o\">/=</span> <span class=\"n\">s1</span>\n   <span class=\"n\">points2</span> <span class=\"o\">/=</span> <span class=\"n\">s2</span>\n\n   <span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">Vt</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">svd</span><span class=\"p\">(</span><span class=\"n\">points1</span><span class=\"o\">.</span><span class=\"n\">T</span> <span class=\"o\">*</span> <span class=\"n\">points2</span><span class=\"p\">)</span>\n   <span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">U</span> <span class=\"o\">*</span> <span class=\"n\">Vt</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">T</span>\n\n   <span class=\"k\">return</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">([</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">(((</span><span class=\"n\">s2</span> <span class=\"o\">/</span> <span class=\"n\">s1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">R</span><span class=\"p\">,</span>\n                                      <span class=\"n\">c2</span><span class=\"o\">.</span><span class=\"n\">T</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">s2</span> <span class=\"o\">/</span> <span class=\"n\">s1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">R</span> <span class=\"o\">*</span> <span class=\"n\">c1</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)),</span>\n                        <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">matrix</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">])])</span>\n</code></pre></div><p><br></p><p>我们逐步分析一下代码：</p><ol><li>将输入矩阵转换为浮点型。这也是后续步骤的必要条件。</li><li>将每一个点集减去它的矩心。一旦为这两个新的点集找到了一个最佳的缩放和旋转方法，这两个矩心c1和c2就可以用来找到完整的解决方案。</li><li>同样，将每一个点集除以它的标准偏差。这消除了缩放偏差。</li><li>使用奇异值分解（singular value decomposition）计算旋转部分。请参阅维基百科有关Orthogonal Procrustes Problem的文章，以了解它的具体工作原理。</li><li>将整个变换过程以仿射变换矩阵形式返回。</li></ol><p><br></p><p>之后，返回结果可以插入 OpenCV 的 cv2.warpAffine 函数，将第二个图片映射到第一个图片上：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">def</span> <span class=\"nf\">warp_im</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">dshape</span><span class=\"p\">):</span>\n   <span class=\"n\">output_im</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">dshape</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">im</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">)</span>\n   <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">warpAffine</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span>\n                  <span class=\"n\">M</span><span class=\"p\">[:</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n                  <span class=\"p\">(</span><span class=\"n\">dshape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">dshape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span>\n                  <span class=\"n\">dst</span><span class=\"o\">=</span><span class=\"n\">output_im</span><span class=\"p\">,</span>\n                  <span class=\"n\">borderMode</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">BORDER_TRANSPARENT</span><span class=\"p\">,</span>\n                  <span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">WARP_INVERSE_MAP</span><span class=\"p\">)</span>\n<span class=\"k\">return</span> <span class=\"n\">output_im</span>\n</code></pre></div><p><br></p><h2><b>校正第二张图片的颜色</b></h2><p><br></p><p>如果此时我们试图直接叠加面部特征，很快会发现一个问题：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-c7edb13a94abfb94318bb0784a4c14b6_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"742\" data-rawheight=\"793\" class=\"origin_image zh-lightbox-thumb\" width=\"742\" data-original=\"https://pic2.zhimg.com/v2-c7edb13a94abfb94318bb0784a4c14b6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='742'%20height='793'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"742\" data-rawheight=\"793\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"742\" data-original=\"https://pic2.zhimg.com/v2-c7edb13a94abfb94318bb0784a4c14b6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-c7edb13a94abfb94318bb0784a4c14b6_720w.jpg?source=54b3c3a5\"><figcaption>这样肯定是没法儿看的...</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7718c39e2ccb414c53518a4cbbc20b2c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"225\" data-rawheight=\"224\" class=\"content_image\" width=\"225\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='225'%20height='224'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"225\" data-rawheight=\"224\" class=\"content_image lazy\" width=\"225\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7718c39e2ccb414c53518a4cbbc20b2c_720w.jpg?source=54b3c3a5\"></figure><p>两幅图像之间不同的<b>肤色</b>和<b>光线</b>造成了覆盖区域边缘的不连续。所以我们尝试修正它：</p><p><br></p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">COLOUR_CORRECT_BLUR_FRAC</span> <span class=\"o\">=</span> <span class=\"mf\">0.6</span>\n<span class=\"n\">LEFT_EYE_POINTS</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"mi\">48</span><span class=\"p\">))</span>\n<span class=\"n\">RIGHT_EYE_POINTS</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"mi\">42</span><span class=\"p\">))</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">correct_colours</span><span class=\"p\">(</span><span class=\"n\">im1</span><span class=\"p\">,</span> <span class=\"n\">im2</span><span class=\"p\">,</span> <span class=\"n\">landmarks1</span><span class=\"p\">):</span>\n   <span class=\"n\">blur_amount</span> <span class=\"o\">=</span> <span class=\"n\">COLOUR_CORRECT_BLUR_FRAC</span> <span class=\"o\">*</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span>\n                             <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">landmarks1</span><span class=\"p\">[</span><span class=\"n\">LEFT_EYE_POINTS</span><span class=\"p\">],</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">-</span>\n                             <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">landmarks1</span><span class=\"p\">[</span><span class=\"n\">RIGHT_EYE_POINTS</span><span class=\"p\">],</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n   <span class=\"n\">blur_amount</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">blur_amount</span><span class=\"p\">)</span>\n   <span class=\"k\">if</span> <span class=\"n\">blur_amount</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n       <span class=\"n\">blur_amount</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n   <span class=\"n\">im1_blur</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">GaussianBlur</span><span class=\"p\">(</span><span class=\"n\">im1</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">blur_amount</span><span class=\"p\">,</span> <span class=\"n\">blur_amount</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n   <span class=\"n\">im2_blur</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">GaussianBlur</span><span class=\"p\">(</span><span class=\"n\">im2</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">blur_amount</span><span class=\"p\">,</span> <span class=\"n\">blur_amount</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n   <span class=\"c1\"># Avoid divide-by-zero errors.</span>\n   <span class=\"n\">im2_blur</span> <span class=\"o\">+=</span> <span class=\"mi\">128</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">im2_blur</span> <span class=\"o\">&lt;=</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n   <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">im2</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">im1_blur</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">)</span> <span class=\"o\">/</span>\n                                               <span class=\"n\">im2_blur</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">))</span>\n</code></pre></div><p><br></p><p>现在效果怎么样？我们瞅瞅：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-0380669b42ee7f26f3d07a91ed4ac369_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"742\" data-rawheight=\"793\" class=\"origin_image zh-lightbox-thumb\" width=\"742\" data-original=\"https://pic2.zhimg.com/v2-0380669b42ee7f26f3d07a91ed4ac369_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='742'%20height='793'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"742\" data-rawheight=\"793\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"742\" data-original=\"https://pic2.zhimg.com/v2-0380669b42ee7f26f3d07a91ed4ac369_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-0380669b42ee7f26f3d07a91ed4ac369_720w.jpg?source=54b3c3a5\"><figcaption>这不是更奇怪了么...</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-2ebda9994d7518f2a3dd9f10ffd76bc3_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"150\" data-rawheight=\"150\" class=\"content_image\" width=\"150\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='150'%20height='150'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"150\" data-rawheight=\"150\" class=\"content_image lazy\" width=\"150\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-2ebda9994d7518f2a3dd9f10ffd76bc3_720w.jpg?source=54b3c3a5\"></figure><p>此函数试图改变图 2 的颜色来匹配图 1，也就是用 im2 除以 im2 的高斯模糊，然后乘以 im1 的高斯模糊。在这里我们使用了颜色平衡（ RGB scaling colour-correction），但不是直接使用全图的常数比例因子，而是采用每个像素的局部比例因子。</p><p><br></p><p>通过这种方法也只能在某种程度上修正两图间的光线差异。比如说，如果图 1 的光线来自某一边，但图 2 的光线非常均匀，校色后图 2 也会出现有一边暗一些的情况。</p><p><br></p><p>也就是说，<b>这是一个相当粗糙的解决方案</b>，而且关键在于大小适当的高斯内核。如果太小，图 2 中会出现图 1 的面部特征。如果太大，内核会跑到被像素覆盖的面部区域之外，并变色。这里的内核大小为瞳距的 0.6 倍。</p><p><br></p><h2><b>将图 2 的特征融合到图 1 中</b></h2><p><br></p><p>用一个蒙版（mask）来选择图 2 和图 1 应被最终显示的部分：</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-e22c43f4d45945f9d1e97cf481d4d553_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"742\" data-rawheight=\"793\" class=\"origin_image zh-lightbox-thumb\" width=\"742\" data-original=\"https://pic3.zhimg.com/v2-e22c43f4d45945f9d1e97cf481d4d553_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='742'%20height='793'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"742\" data-rawheight=\"793\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"742\" data-original=\"https://pic3.zhimg.com/v2-e22c43f4d45945f9d1e97cf481d4d553_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-e22c43f4d45945f9d1e97cf481d4d553_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>值为 1 (白色)的地方为图 2 应显示的区域，值为 0 (黑色)的地方为图 1 应显示的区域。值在 0 和 1 之间的地方为图 1 图 2 的混合区域。</p><p><br></p><p>这是生成上述内容的代码：</p><p><br></p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">LEFT_EYE_POINTS</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"mi\">48</span><span class=\"p\">))</span>\n<span class=\"n\">RIGHT_EYE_POINTS</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"mi\">42</span><span class=\"p\">))</span>\n<span class=\"n\">LEFT_BROW_POINTS</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">))</span>\n<span class=\"n\">RIGHT_BROW_POINTS</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">))</span>\n<span class=\"n\">NOSE_POINTS</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">))</span>\n<span class=\"n\">MOUTH_POINTS</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">48</span><span class=\"p\">,</span> <span class=\"mi\">61</span><span class=\"p\">))</span>\n<span class=\"n\">OVERLAY_POINTS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n   <span class=\"n\">LEFT_EYE_POINTS</span> <span class=\"o\">+</span> <span class=\"n\">RIGHT_EYE_POINTS</span> <span class=\"o\">+</span> <span class=\"n\">LEFT_BROW_POINTS</span> <span class=\"o\">+</span> <span class=\"n\">RIGHT_BROW_POINTS</span><span class=\"p\">,</span>\n   <span class=\"n\">NOSE_POINTS</span> <span class=\"o\">+</span> <span class=\"n\">MOUTH_POINTS</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n<span class=\"n\">FEATHER_AMOUNT</span> <span class=\"o\">=</span> <span class=\"mi\">11</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">draw_convex_hull</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">):</span>\n   <span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">convexHull</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">)</span>\n   <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">fillConvexPoly</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">color</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_face_mask</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span> <span class=\"n\">landmarks</span><span class=\"p\">):</span>\n   <span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[:</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">)</span>\n\n   <span class=\"k\">for</span> <span class=\"n\">group</span> <span class=\"ow\">in</span> <span class=\"n\">OVERLAY_POINTS</span><span class=\"p\">:</span>\n       <span class=\"n\">draw_convex_hull</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span>\n                        <span class=\"n\">landmarks</span><span class=\"p\">[</span><span class=\"n\">group</span><span class=\"p\">],</span>\n                        <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n   <span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">im</span><span class=\"p\">,</span> <span class=\"n\">im</span><span class=\"p\">,</span> <span class=\"n\">im</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n\n   <span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">GaussianBlur</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">FEATHER_AMOUNT</span><span class=\"p\">,</span> <span class=\"n\">FEATHER_AMOUNT</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">1.0</span>\n   <span class=\"n\">im</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">GaussianBlur</span><span class=\"p\">(</span><span class=\"n\">im</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">FEATHER_AMOUNT</span><span class=\"p\">,</span> <span class=\"n\">FEATHER_AMOUNT</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n   <span class=\"k\">return</span> <span class=\"n\">im</span>\n\n<span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">get_face_mask</span><span class=\"p\">(</span><span class=\"n\">im2</span><span class=\"p\">,</span> <span class=\"n\">landmarks2</span><span class=\"p\">)</span>\n<span class=\"n\">warped_mask</span> <span class=\"o\">=</span> <span class=\"n\">warp_im</span><span class=\"p\">(</span><span class=\"n\">mask</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">im1</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"n\">combined_mask</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">([</span><span class=\"n\">get_face_mask</span><span class=\"p\">(</span><span class=\"n\">im1</span><span class=\"p\">,</span> <span class=\"n\">landmarks1</span><span class=\"p\">),</span> <span class=\"n\">warped_mask</span><span class=\"p\">],</span>\n                         <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</code></pre></div><p><br></p><p>我们来分析一下：</p><ul><li>常规的 get_face_mask() 函数定义是：为一张图像和一个标志矩阵生成一个蒙版。蒙版会画出两个白色的凸多边形：一个是眼睛周围的区域，一个是鼻子和嘴部周围的区域。之后，蒙版的边缘区域向外羽化 11 个像素，这可以帮助消除剩下的不连续部分。</li><li>为图 1 图 2 生成面部蒙版。使用与步骤 2 中的转换，可以使图 2 的蒙版转换至图 1 的坐标空间。</li><li>之后，对所有元素取最大值操作，将这两个蒙版合二为一。这样做是为了保证图 1 的特征也能被覆盖的同时图 2 特征能显示出来。</li></ul><p><br></p><p>最后，将蒙版应用于最终图像：</p><p><br></p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">output_im</span> <span class=\"o\">=</span> <span class=\"n\">im1</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mf\">1.0</span> <span class=\"o\">-</span> <span class=\"n\">combined_mask</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">warped_corrected_im2</span> <span class=\"o\">*</span> <span class=\"n\">combined_mask</span>\n</code></pre></div><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-11110dbafd64116e1dae5d5c09d689e4_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"742\" data-rawheight=\"793\" class=\"origin_image zh-lightbox-thumb\" width=\"742\" data-original=\"https://pic4.zhimg.com/v2-11110dbafd64116e1dae5d5c09d689e4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='742'%20height='793'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"742\" data-rawheight=\"793\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"742\" data-original=\"https://pic4.zhimg.com/v2-11110dbafd64116e1dae5d5c09d689e4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-11110dbafd64116e1dae5d5c09d689e4_720w.jpg?source=54b3c3a5\"><figcaption>哈，换脸成功！</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-fedcd9be2f3f728dc3d1cc5368f0d1b8_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"119\" data-rawheight=\"129\" class=\"content_image\" width=\"119\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='119'%20height='129'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"119\" data-rawheight=\"129\" class=\"content_image lazy\" width=\"119\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-fedcd9be2f3f728dc3d1cc5368f0d1b8_720w.jpg?source=54b3c3a5\"></figure><p><b>附：本项目代码地址：</b></p><p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/matthewearl/faceswap/blob/master/faceswap.py\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/matthewearl/</span><span class=\"invisible\">faceswap/blob/master/faceswap.py</span><span class=\"ellipsis\"></span></a></p><hr><blockquote><b><i>参考资料：</i></b> <b><i><a href=\"https://link.zhihu.com/?target=https%3A//matthewearl.github.io/2015/07/28/switching-eds-with-python/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">matthewearl.github.io/2</span><span class=\"invisible\">015/07/28/switching-eds-with-python/</span><span class=\"ellipsis\"></span></a></i></b></blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-6f15913b6fabb96ba6b37b309a371754_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"514\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-6f15913b6fabb96ba6b37b309a371754_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='514'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"514\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-6f15913b6fabb96ba6b37b309a371754_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-6f15913b6fabb96ba6b37b309a371754_720w.jpg?source=54b3c3a5\"></figure>", "你用 Python 做过什么有趣的数据挖掘/分析项目？": "（注：本文部分回答来源于<a href=\"https://www.zhihu.com/question/24326030/answer/71813450?group_id=673910953531703296\" class=\"internal\">你是通过什么渠道获取一般人不知道的知识和信息的？ - 何明科的回答</a> 以及 <a href=\"https://www.zhihu.com/question/27621722/answer/51806082\" class=\"internal\">能利用爬虫技术做到哪些很酷很有趣很有用的事情？ - 何明科的回答</a>）从文中，大家也可以看到一个创业小团队艰辛的摸索过程。从一开始的一个想法，希望通过技术和科学改变世界，到碰巧能赚钱，到因为赚钱快而迷失了方向，到最后回归初心，做自己最喜欢的事情。<br><br><b>第零步：原点，大数据与价值</b><br>大概一年多以前，和几个小伙伴均认同一个趋势：觉得通过技术手段获取网上越来越丰富的数据，并基于这些数据做分析及可视化，必能产生有价值的结果，帮助大家改善生活。（大数据被叫烂了，所以用低调的方式来解释我们的初心）<br><br><b>第一步：开工，为基金服务</b><br>恰巧和几个基金的朋友（包括对冲基金和VC/PE基金）聊到这个趋势，他们非常认同这个观点并愿意付费，认为可以用这种实时且定量的方式来跟踪一些上市公司或者私有公司旗下的产品，来确定谁是有价值的投资目标。于是立马获得订单并促使我们开干，因为考虑到Python灵活及各类爬虫库的优势，最终选用Python来做数据获取的主体架构；也有新潮的小伙伴使用Go，同时用Go搭建了一个很酷的框架来制造分布式的智能爬虫，应对各种反爬策略。抓取数据主要来自于如下网站：<br><ul><li>各应用商店：获取App的下载量及评论</li><li>大众点评及美团网：餐饮及各类线下门店消费及评价情况</li><li>汽车之家及易车：汽车的相关数据</li><li>58及搜房；房屋租售数据</li><li>新浪微博：用户的各种发言及舆论</li><li>财经数据：雪球及各类财经网站</li><li>宏观数据网站：天气、12306火车、机票网站</li></ul><br>最初的产品纯粹是为基金服务。下图是在各个维度找出最有价值的App，各种量级范围内在30天/7天增长最快及评价最好榜单。（顺便吹一下牛，我们这个榜单很早就发现小红书App的快速增长趋势以及在年轻人中的极佳口碑）<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/977e2c068a8a4f7687ea5920c1683dfb_720w.png?source=54b3c3a5\" data-rawwidth=\"1469\" data-rawheight=\"741\" class=\"origin_image zh-lightbox-thumb\" width=\"1469\" data-original=\"https://pic1.zhimg.com/977e2c068a8a4f7687ea5920c1683dfb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1469'%20height='741'&gt;&lt;/svg&gt;\" data-rawwidth=\"1469\" data-rawheight=\"741\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1469\" data-original=\"https://pic1.zhimg.com/977e2c068a8a4f7687ea5920c1683dfb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/977e2c068a8a4f7687ea5920c1683dfb_720w.png?source=54b3c3a5\"></figure><br>下图是对某个App的下载量跟踪，帮着基金做尽职调查。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/413b9d83cc0ec56319adffb69e9c78b3_720w.png?source=54b3c3a5\" data-rawwidth=\"600\" data-rawheight=\"525\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/413b9d83cc0ec56319adffb69e9c78b3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='525'&gt;&lt;/svg&gt;\" data-rawwidth=\"600\" data-rawheight=\"525\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/413b9d83cc0ec56319adffb69e9c78b3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/413b9d83cc0ec56319adffb69e9c78b3_720w.png?source=54b3c3a5\"></figure><br>下图是某上市公司的门店变化情况，帮着基金跟踪TA的增长情况。<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/a58b99a5278404d22b93fd63768cd578_720w.png?source=54b3c3a5\" data-rawwidth=\"600\" data-rawheight=\"340\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic2.zhimg.com/a58b99a5278404d22b93fd63768cd578_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='340'&gt;&lt;/svg&gt;\" data-rawwidth=\"600\" data-rawheight=\"340\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic2.zhimg.com/a58b99a5278404d22b93fd63768cd578_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/a58b99a5278404d22b93fd63768cd578_720w.png?source=54b3c3a5\"></figure><br>下图是国内各个机场的实时流量，帮着基金跟踪国内出行的实时情况，或许能从一个侧面反映经济是否正在走入下行通道。<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/096b0c891066885a2476a3bbe71fe600_720w.png?source=54b3c3a5\" data-rawwidth=\"600\" data-rawheight=\"375\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/096b0c891066885a2476a3bbe71fe600_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='375'&gt;&lt;/svg&gt;\" data-rawwidth=\"600\" data-rawheight=\"375\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic4.zhimg.com/096b0c891066885a2476a3bbe71fe600_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/096b0c891066885a2476a3bbe71fe600_720w.png?source=54b3c3a5\"></figure><br><br><b>第二步：扩展思路，开源和分享</b><br>为基金服务，虽然给钱爽快，但是也让方向越走越窄。首先，基金希望信息是独享的和封闭的，投资就是投资人之间的零和博弈，公开的信息就迅速会一钱不值，基金最在乎的就是信息的独享及提前量，所以各个基金都希望我们呈现的数据及分析结果能够独家。这样迅速让我们的方向收窄以及工作的趣味性降低，其次，毕竟对于基金而言，能分析的投资对象及方向是非常有限的。而且现阶段，大部分对冲基金里面的分析员的数据分析能力其实很弱：这些分析员里面能用VBA或者能在Excel里面使用矩阵及向量乘法的人几乎可以惊为天人；能写offset函数的人，就应该直接提拔了；大部分人停留在一个个数网页找数据的阶段。所以和他们起来十分费劲，除了提供一些粗暴的数据，并不能产生太有价值的结果。<br><br>在这段迷茫期，本来充满激情的数据分析工作，让大家味如爵蜡，感觉自己变成了一个外包公司。不过互联网大法好，做技术做互联网的核心思路是分享和开源，我们很快回归到这一点。并且这一点最终让我们做出了改变。有些分析虽然基金不买单，但是对一般的老百姓、对一般的媒体是有价值的，于是我们试着把这些数据分析及结果写出来，发布到知乎上供大家参考。<br><br>知乎是个好平台，坚持创作好内容迟早就会被发掘出来。很快一篇用数据分析黄焖鸡米饭为什么火遍全国的回答（<a href=\"https://www.zhihu.com/question/24331936/answer/48616123\" class=\"internal\">黄焖鸡米饭是怎么火起来的？ - 何明科的回答</a>）被知乎日报采用了。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/3ed7cad0af2372b1b72006f6216f5569_720w.png?source=54b3c3a5\" data-rawwidth=\"600\" data-rawheight=\"354\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/3ed7cad0af2372b1b72006f6216f5569_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='354'&gt;&lt;/svg&gt;\" data-rawwidth=\"600\" data-rawheight=\"354\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/3ed7cad0af2372b1b72006f6216f5569_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/3ed7cad0af2372b1b72006f6216f5569_720w.png?source=54b3c3a5\"></figure><br>这次被“宠幸”让团队兴奋不已，从而坚定了决心，彻底调整了整个思路，回到初心：不以解决基金关注的问题为核心，而以解决用户最关注的生活问题为核心。坚持以数据说话的套路，创作了许多点赞很多的文章并多次被知乎日报采用（<a href=\"https://www.zhihu.com/question/21134037/answer/73462815\" class=\"internal\">所答内容被「知乎日报」选用是什么感觉？ - 何明科的回答</a>），并专注在如下的领域：<br><ul><li><b>汽车</b>。比如：<a href=\"https://www.zhihu.com/question/30086195/answer/47825568\" class=\"internal\">一年当中买车的最佳时间为何时？ - 何明科的回答</a>，<a href=\"https://www.zhihu.com/question/25399510/answer/81538284\" class=\"internal\">什么样的车可以被称为神车？ - 何明科的回答</a><br></li><li><b>餐饮</b>。比如：<a href=\"https://www.zhihu.com/question/29447372/answer/48726632\" class=\"internal\">为什么麦当劳和肯德基都开始注重现磨咖啡的推广，其优势与星巴克等传统咖啡行业相比在哪里？ - 何明科的回答</a></li><li><b>消费品。</b>比如：口罩（<a href=\"http://zhuanlan.zhihu.com/hemingke/20391296\" class=\"internal\"><span class=\"invisible\">http://</span><span class=\"visible\">zhuanlan.zhihu.com/hemi</span><span class=\"invisible\">ngke/20391296</span><span class=\"ellipsis\"></span></a>），尿不湿（<a href=\"http://zhuanlan.zhihu.com/hemingke/20385894\" class=\"internal\"><span class=\"invisible\">http://</span><span class=\"visible\">zhuanlan.zhihu.com/hemi</span><span class=\"invisible\">ngke/20385894</span><span class=\"ellipsis\"></span></a>）</li><li><b>招聘。</b>比如：互联网人士年底怎么找工作（<a href=\"http://zhuanlan.zhihu.com/hemingke/20450600\" class=\"internal\"><span class=\"invisible\">http://</span><span class=\"visible\">zhuanlan.zhihu.com/hemi</span><span class=\"invisible\">ngke/20450600</span><span class=\"ellipsis\"></span></a>）</li><li><b>房地产</b>，这个虐心的行业。比如：深圳的房地产走势（<a href=\"http://zhuanlan.zhihu.com/hemingke/20135185\" class=\"internal\"><span class=\"invisible\">http://</span><span class=\"visible\">zhuanlan.zhihu.com/hemi</span><span class=\"invisible\">ngke/20135185</span><span class=\"ellipsis\"></span></a>）</li><li><b>投融资</b>。比如：用Python抓取投资条款的数据并做NLP以及数据分析：<a href=\"http://zhuanlan.zhihu.com/hemingke/20514731\" class=\"internal\"><span class=\"invisible\">http://</span><span class=\"visible\">zhuanlan.zhihu.com/hemi</span><span class=\"invisible\">ngke/20514731</span><span class=\"ellipsis\"></span></a></li></ul><br>还共享了一些和屌丝青年生活最相关的分析及数据。下图是深圳市早晨高峰时段某类人群出行的热点图，通过热点分析，试图找出这类人群的居住和上班的聚集区。<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/2cf34a338d9ec724a5f4d666b7059de3_720w.png?source=54b3c3a5\" data-rawwidth=\"600\" data-rawheight=\"248\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/2cf34a338d9ec724a5f4d666b7059de3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='248'&gt;&lt;/svg&gt;\" data-rawwidth=\"600\" data-rawheight=\"248\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/2cf34a338d9ec724a5f4d666b7059de3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/2cf34a338d9ec724a5f4d666b7059de3_720w.png?source=54b3c3a5\"></figure><br>下图反映了在各时间段在深圳科技园附近下车的人群密度。<br><figure><noscript><img src=\"https://pic3.zhimg.com/50/d686f5be9afc02efb890e86dee3873e6_720w.png?source=54b3c3a5\" data-rawwidth=\"1318\" data-rawheight=\"443\" class=\"origin_image zh-lightbox-thumb\" width=\"1318\" data-original=\"https://pic1.zhimg.com/d686f5be9afc02efb890e86dee3873e6_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1318'%20height='443'&gt;&lt;/svg&gt;\" data-rawwidth=\"1318\" data-rawheight=\"443\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1318\" data-original=\"https://pic1.zhimg.com/d686f5be9afc02efb890e86dee3873e6_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/d686f5be9afc02efb890e86dee3873e6_720w.png?source=54b3c3a5\"></figure><br><br>写这些报告，团队没有挣到一分钱，但是整个成就感和满意度大大上升。同时，在Python及各种技术上的积累也提高颇多，数据量级的积累也越发丰富，数据相关的各项技术也在不断加强。同时，顺势扩大了数据源：京东、淘宝等数据也纳入囊中。<br><br><b>第三步：扩展客户</b><br>在知乎上写这些报告，除了收获知名度，还收获意外之喜，一些知名品牌的消费品公司、汽车公司及互联网公司，主动找我们做一些数据抓取及分析。整个团队没有一个BD，也从来不请客户吃饭。<br><br>于是我们顺势做了如下的网站以及一个成熟的Dashboard框架（开发数据监控的Dashboard超有效率），目前主要监控和分析母婴、白酒、汽车及房地产四大行业，都是一些愿意花钱进行深度了解用户以及行业趋势的公司。收入自动上门，很开心！<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/0ba0b7d27026528a51e8b6a9bd2de47f_720w.png?source=54b3c3a5\" data-rawwidth=\"1861\" data-rawheight=\"803\" class=\"origin_image zh-lightbox-thumb\" width=\"1861\" data-original=\"https://pic4.zhimg.com/0ba0b7d27026528a51e8b6a9bd2de47f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1861'%20height='803'&gt;&lt;/svg&gt;\" data-rawwidth=\"1861\" data-rawheight=\"803\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1861\" data-original=\"https://pic4.zhimg.com/0ba0b7d27026528a51e8b6a9bd2de47f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/0ba0b7d27026528a51e8b6a9bd2de47f_720w.png?source=54b3c3a5\"></figure><br>下图是抓取汽车之家的数据，做出BBA（奔驰宝马奥迪）这三大豪华品牌的交叉关注度，帮助品牌及4A公司了解他们用户的忠诚度以及品牌之间迁移的难度。<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/9c1c2a043a99350e2fbb07828bc5cb2e_720w.png?source=54b3c3a5\" data-rawwidth=\"1509\" data-rawheight=\"519\" class=\"origin_image zh-lightbox-thumb\" width=\"1509\" data-original=\"https://pic1.zhimg.com/9c1c2a043a99350e2fbb07828bc5cb2e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1509'%20height='519'&gt;&lt;/svg&gt;\" data-rawwidth=\"1509\" data-rawheight=\"519\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1509\" data-original=\"https://pic1.zhimg.com/9c1c2a043a99350e2fbb07828bc5cb2e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/9c1c2a043a99350e2fbb07828bc5cb2e_720w.png?source=54b3c3a5\"></figure><br>下图是抓取新浪微博的数据，分析广东白酒的消费场所<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/b664529d9601349cdd374066cc16e386_720w.png?source=54b3c3a5\" data-rawwidth=\"1403\" data-rawheight=\"639\" class=\"origin_image zh-lightbox-thumb\" width=\"1403\" data-original=\"https://pic1.zhimg.com/b664529d9601349cdd374066cc16e386_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1403'%20height='639'&gt;&lt;/svg&gt;\" data-rawwidth=\"1403\" data-rawheight=\"639\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1403\" data-original=\"https://pic1.zhimg.com/b664529d9601349cdd374066cc16e386_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/b664529d9601349cdd374066cc16e386_720w.png?source=54b3c3a5\"></figure><br>下图是抓取新浪微博的数据，分析广东白酒和各类食品的相关度。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/5bbaa4973588b9015a4be1c64a89607d_720w.png?source=54b3c3a5\" data-rawwidth=\"1251\" data-rawheight=\"717\" class=\"origin_image zh-lightbox-thumb\" width=\"1251\" data-original=\"https://pic1.zhimg.com/5bbaa4973588b9015a4be1c64a89607d_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1251'%20height='717'&gt;&lt;/svg&gt;\" data-rawwidth=\"1251\" data-rawheight=\"717\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1251\" data-original=\"https://pic1.zhimg.com/5bbaa4973588b9015a4be1c64a89607d_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/5bbaa4973588b9015a4be1c64a89607d_720w.png?source=54b3c3a5\"></figure><br>除去为以上的品牌合作，我们数据风的文章也越来越受欢迎，曾经一周上了四次知乎日报（不知道 <a data-hash=\"6733f12c60e7e98ea7491f20de46f79e\" href=\"https://www.zhihu.com/people/6733f12c60e7e98ea7491f20de46f79e\" class=\"member_mention\" data-editable=\"true\" data-title=\"@周源\" data-hovercard=\"p$b$6733f12c60e7e98ea7491f20de46f79e\">@周源</a><a data-hash=\"b6f80220378c8b0b78175dd6a0b9c680\" href=\"https://www.zhihu.com/people/b6f80220378c8b0b78175dd6a0b9c680\" class=\"member_mention\" data-editable=\"true\" data-title=\"@黄继新\" data-hovercard=\"p$b$b6f80220378c8b0b78175dd6a0b9c680\">@黄继新</a> 两位大大是否考虑给我们颁发个知乎日报大奖）。另外也有越来越多的知名媒体及出版社找到我们，虽然告知他们我们不写软文而只坚持按照数据结果来发表文章，他们依然表示欢迎。原来非五毛独立立场的数据风也能被媒体喜欢。自此，我们不断成为易车首页经常推荐的专栏。<br><br><br><b>第四步：尝试功能化平台化产品</b><br>降低与高大上基金的合作强度，转而与更接地气的各类品牌合作，让我们团队更贴近客户、更贴近真实需求。于是基于这些需求，我们开始尝试将之前在数据方面的积累给产品化，特别是能做出一些平台级的产品，于是我们开发出两款产品：<br><br><b>第一款：选址应用</b><br>选址是现在许多公司头疼的难题，以前完全是拍脑袋。因此我们开发出这样一套工具，帮助公司能够更理性更多维度得选址。<br><br>下图，我们抓取多个数据源并完成拼接，根据用户的快递地址，勾画出某时尚品牌用户的住址，帮助其选址在北京开门店。<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/6ff5943bdd69d316d7cfd843102394fa_720w.png?source=54b3c3a5\" data-rawwidth=\"1383\" data-rawheight=\"618\" class=\"origin_image zh-lightbox-thumb\" width=\"1383\" data-original=\"https://pic2.zhimg.com/6ff5943bdd69d316d7cfd843102394fa_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1383'%20height='618'&gt;&lt;/svg&gt;\" data-rawwidth=\"1383\" data-rawheight=\"618\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1383\" data-original=\"https://pic2.zhimg.com/6ff5943bdd69d316d7cfd843102394fa_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/6ff5943bdd69d316d7cfd843102394fa_720w.png?source=54b3c3a5\"></figure><br>下图，我们抓取多个数据源并完成拼接，根据大型超市及便利店与某类型餐馆在广州地区的重合情况，帮助某饮料品牌选定最应该进入的零售店面。<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/74ac6a67e01f1887f3e52e0ebc4ba65c_720w.png?source=54b3c3a5\" data-rawwidth=\"1456\" data-rawheight=\"569\" class=\"origin_image zh-lightbox-thumb\" width=\"1456\" data-original=\"https://pic4.zhimg.com/74ac6a67e01f1887f3e52e0ebc4ba65c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1456'%20height='569'&gt;&lt;/svg&gt;\" data-rawwidth=\"1456\" data-rawheight=\"569\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1456\" data-original=\"https://pic4.zhimg.com/74ac6a67e01f1887f3e52e0ebc4ba65c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/74ac6a67e01f1887f3e52e0ebc4ba65c_720w.png?source=54b3c3a5\"></figure><br><b>第二款：数据可视化</b><br>我们在工作中也深刻觉得以前制作图表和展示数据的方式太low、太繁琐，我们希望去改变这个现状，于是开发了一套基于Web来制作图表的工具<a href=\"https://link.zhihu.com/?target=http%3A//wentu.io/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文图</a>。远有Excel/Powerpoint对标，近有Tableau对标。<br><br>下图是文图丰富的案例库及模板库。<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/8eeebbbdcaf08202a86ff5abf27c0a7b_720w.png?source=54b3c3a5\" data-rawwidth=\"1803\" data-rawheight=\"795\" class=\"origin_image zh-lightbox-thumb\" width=\"1803\" data-original=\"https://pic1.zhimg.com/8eeebbbdcaf08202a86ff5abf27c0a7b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1803'%20height='795'&gt;&lt;/svg&gt;\" data-rawwidth=\"1803\" data-rawheight=\"795\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1803\" data-original=\"https://pic1.zhimg.com/8eeebbbdcaf08202a86ff5abf27c0a7b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/8eeebbbdcaf08202a86ff5abf27c0a7b_720w.png?source=54b3c3a5\"></figure><br>下图是简单的使用界面及丰富的图表类型。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/fc6982098b72d68d06fba11361e4a7d8_720w.png?source=54b3c3a5\" data-rawwidth=\"1473\" data-rawheight=\"715\" class=\"origin_image zh-lightbox-thumb\" width=\"1473\" data-original=\"https://pic1.zhimg.com/fc6982098b72d68d06fba11361e4a7d8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1473'%20height='715'&gt;&lt;/svg&gt;\" data-rawwidth=\"1473\" data-rawheight=\"715\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1473\" data-original=\"https://pic1.zhimg.com/fc6982098b72d68d06fba11361e4a7d8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/fc6982098b72d68d06fba11361e4a7d8_720w.png?source=54b3c3a5\"></figure><br>下一步的工作：<br><ul><li>与微信的整合，一键生成适合于微信传播的截图以及公众号格式文章，便于在社交媒体的传播</li><li>收集更多数据，目前已经覆盖40多家网站，涵盖衣食住行等多个方面</li><li>将数据SaaS化和开源，便于各类公司及用户使用。（咨询投行等Professional Service人士一定会懂的，你们每年不知道要重复多少遍更新各类宏观微观的经济和行业数据，现在只需要调用KPI）</li></ul><br>最后，希望有一天它能部分替代已经在江湖上混迹二三十年的PowerPoint及Excel。<br><br><br><br><br><b>第五步：……</b><br>不可知的未来才是最有趣的。借用并篡改我们投资人的一句话：technology is fun, data is cool and science is sexy。初心未变，希望用数据用技术帮助更多的人生活得更美好。<br><br>—————————————————————————————————————<br>更多文章及分享请关注我的专栏，数据冰山：<a href=\"http://zhuanlan.zhihu.com/hemingke\" class=\"internal\"><span class=\"invisible\">http://</span><span class=\"visible\">zhuanlan.zhihu.com/hemi</span><span class=\"invisible\">ngke</span><span class=\"ellipsis\"></span></a>"}{"Python 爬虫学到什么样就可以找工作了？": "<p>前段时间快要毕业，而我又不想找自己的老本行Java开发了，所以面了很多Python爬虫岗位。因为我在南京上学，所以我一开始只是在南京投了简历，我一共面试了十几家企业，其中只有一家没有给我发offer，其他企业都愿意给到10K的薪资，不要拿南京的薪资水平和北上深的薪资水平比较，结合面试常问的问题类型说一说我的心得体会。</p><p><br></p><p>第一点：Python</p><p>因为面试的是Python爬虫岗位，面试官大多数会考察面试者的基础的Python知识，包括但不限于：</p><ul><li>Python2.x与Python3.x的区别</li><li>Python的装饰器</li><li>Python的异步</li><li>Python的一些常用内置库，比如多线程之类的</li></ul><p>-----</p><p>如果你想通过Python去找工作，我把我自己的学习经验总结成了一本Python以及爬虫电子书，保证非常的通俗易懂帮助你学会Python，目前这本书帮助了数十万的人从零开始学会了Python，点击下方链接就能拿到。</p><a href=\"https://link.zhihu.com/?target=https%3A//t.1yb.co/7HXS\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-b84d1bb91953c1ee544f5077b1bf4cb8_bh.jpg?source=54b3c3a5\" data-image-width=\"531\" data-image-height=\"227\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">路人甲分享的：Python爬虫电子书和数据分析电子书</a><p><br></p><p>第二点：数据结构与算法</p><p>数据结构与算法是对面试者尤其是校招生面试的一个很重要的点，当然小公司不会太在意这些，从目前的招聘情况来看对面试者的数据结构与算法的重视程度与企业的好坏成正比，那些从不问你数据结构的你就要当心他们是否把你当码农用的，当然以上情况不绝对，最终解释权归面试官所有。</p><p><br></p><p>第三点：Python爬虫</p><p>最重要也是最关键的一点当然是你的Python爬虫相关的知识与经验储备，这通常也是面试官考察的重点，包括但不限于：</p><ul><li>你遇到过的反爬虫的策略有哪些？</li><li>你常用的反反爬虫的方案有哪些？</li><li>你用过多线程和异步吗？除此之外你还用过什么方法来提高爬虫效率？</li><li>有没有做过增量式抓取？</li><li>对Python爬虫框架是否有了解？</li></ul><p><br></p><p>第四点：爬虫相关的项目经验</p><p>爬虫重在实践，除了理论知识之外，面试官也会十分注重爬虫相关的项目：</p><ul><li>你做过哪些爬虫项目？如果有Github最好</li><li>你认为你做的最好的爬虫项目是哪个？其中解决了什么难题？有什么特别之处？</li></ul><p><br></p><p>以上是我在面试过程中，会碰到的一些技术相关的问题的总结，当然面试中不光是技术这一点，但是对于做技术的，过了技术面基本上就是薪资问题了。</p><p><br></p><p>也许有人问我现在在哪家公司做爬虫开发？很抱歉，最终我放弃了南京的所有机会到了上海做我更喜欢的岗位：数据工程师。</p><p>------</p><p>如果你想简单点，我把我自己的学习经验总结成了一本Python以及爬虫电子书，保证非常的通俗易懂帮助你学会Python，目前这本书帮助了数十万的人从零开始学会了Python，点击下方链接就能拿到。</p><a href=\"https://link.zhihu.com/?target=https%3A//t.1yb.co/7HXS\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-b84d1bb91953c1ee544f5077b1bf4cb8_bh.jpg?source=54b3c3a5\" data-image-width=\"531\" data-image-height=\"227\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">路人甲分享的：Python爬虫电子书和数据分析电子书</a><p></p>", "Python 应该怎么去练习和使用？": "建议翻阅并订阅 <a href=\"https://link.zhihu.com/?target=http%3A//www.pycoders.com/archive/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Pycoder's Weekly</a>，看看全球其他 Pythonista 在做什么，有没有你感兴趣的东西，根据兴趣学习是最轻松也最有成效的方法。一些现成的建议：<br><ul><li>折腾好 iPython，搭配 NumPy / SciPy / pandas 之类可以迈向高收入低竞争行业：数据分析师，或者只是简单地满足你对数学或者统计学方面的兴趣，if any；<br></li><li>Python Imaging Library 可以学图像处理，进一步用 SimpleCV / OpenCV 可以做视觉识别，玩摄像头或者 Kinect；</li><li>买一只 Raspberry Pi，可以做个小传感器、机器人什么的；<br></li><li>喜欢研究底层，可以去学 Cython 做扩展；<br></li><li>喜欢语言学，可以去摸摸 NLTK；<br></li><li>其实很多需要批量处理的苦功可以用 Python 自动化——比如把一批 PDF 里面的水印去掉，或者把数据从一堆报告里提出来转化为另一种格式；</li><li>最后实在是不争气对 web 感了兴趣，那 Django 可以让你「看书搭站继续学」，嫌重可以用 Flask，甚至从这里出发把前端的东西弄清楚也不是不可能的，但人活一世，何必堕落至此……</li></ul><br>单纯「练习」的话可以找一些「编程 kata」。", "如何看待知乎、饿了么后端的招聘纷纷由 Python 渐渐转向 Java？": "<p>因为python在渐渐衰落，而Java才是未来。至于为什么python莫名其妙就衰落了——因为大部分生物信息学工具软件是python编写的，这门语言不幸被“生命科学”污染了，莫名其妙就走了“衰”运，被“衰”的气场连累了。这年头，生命科学就像个衰运的flag。凡是跟生物沾边的基础研究学科，都变得又累又难毕业又找不到工作。凡是跟生物技术沾边的创业公司，都很难避免亏损倒闭。甚至你是身处高位、被寄予厚望的未来政治新星，但是你大学专业是农学(一种广义生物)，莫名其妙就被拿下了，还有牢狱之灾。生物这个东西，有的时候就是这么奇妙，哪怕跟它发生点间接联系，也能被它的衰运影响到。这是玄学，没有科学道理可讲，但是很灵验。甚至有的时候你感觉自己最近怎么那么背，只是因为楼下新搬来一个学生物的邻居，而你根本没意识到……所以，珍惜生命，远离生物，不要跟它发生哪怕一丁点联系。</p><p>很多从生物转行计算机的，从python开始迈出了转行的第一步，打破了对编程的畏难心理，从实验生物科学转到生物统计、生物信息学，然后开始学习更多编程语言，最终转行计算机。虽然从生物转行，已经比留在生物里面好得多了，但是“曾经学过生物专业”的诅咒犹如埃及法老的诅咒一样，仍然像影子一样跟随人一生，跟“从来没学过生物”的优秀运势条件没法比。这不，第一个中招的就是python。作为学生物的，尽快脱离生物是最要紧的事。但是作为HR，接受从生物转来的人真的很需要勇气、很伟大，等于在用公司未来的气运和风水作赌注，去打捞落水的人。</p>"}{"随着python的崛起，Java是否会在未来几年没落？": "<p>Python崛起这已经是一个不争的事实，并且已经成为人工智能时代的第一语言。Python的优势就是在任何方面都非常强大。Java地位稳固有很大一部分原因是基于安卓的兴起，当然Java在web后端也有着非常强大的市场。</p><p>在这里小编想说的是，Java和Python并不是厚此薄彼的关系，两种主流编程语言的应用领域不同决定了大家选择的不同。简单来说，Python的应用领域主要在游戏开发、搜索引擎、图形图像处理、脚本开发等领域，而Java更擅长服务器开发，web开发和安卓开发等。</p><p>Python的优势就是应用方面非常广，在web领域也非常成熟，可以同Java形成竞争，有很多知名的互联网公司也是用Python开发，比如知乎，果壳，豆瓣等……。在爬虫方向，Python的优势非常明显，Python做爬虫模块比较多，需要的代码量少，语法干净，开发效率快，这些优点是Java不能可以比拟的。着眼数据分析领域，Python有着强大的科学计算类库。面对海量的数据，Python只要调用若干个Python库：NumPy（存储和处理大型矩阵），pandas（处理数据的函数和方法），matplotlib（数据操作、聚合和可视化）和scipy（高效的数学运算）就能高效准确地解决大量的数据分析难题，而Java在这些领域是无法和Python进行竞争的。自动化运维方面、机器学习Python优势都很明显。但这些并不能证明Python会在短期取代Java，Java在短时间内不会快速衰落，毕竟java在web领域的地位还是非常稳定的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-0ebbb60552a735e50e2ddf83413028fc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"293\" data-rawheight=\"219\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7d359b00c192443a75098a9a4ce2ef4b_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"293\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='293'%20height='219'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"293\" data-rawheight=\"219\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-7d359b00c192443a75098a9a4ce2ef4b_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"293\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-0ebbb60552a735e50e2ddf83413028fc_720w.jpg?source=54b3c3a5\"></figure><p>说到此，我猜大家一定想问：代码不精、封装无力、架构松散、Debug迟缓的二把刀程序员到底能不能学习Python，follow me。</p><p><b> 在此奉上Python学习线路图，请自动对号入座(*￣︶￣)</b></p><p><br></p><h2> ▶▶▶<b>Python初级开发工程师，胜任基本的python开发工作，平均薪资8K：</b></h2><p><b>1、python语言基础</b></p><p>Python3入门，数据类型，字符串</p><p>判断/循环语句，函数，命名空间，作用域</p><p>类与对象，继承，多态</p><p>tkinter界面编程</p><p>文件与异常，数据处理简介</p><p>Pygame实战飞机大战，2048</p><p><b>2、Python语言高级</b></p><p>Python常见第三方库与网络编程</p><p>Python正则表达式</p><p>邮箱爬虫，文件遍历，金融数据爬虫，</p><p>多线程爬虫</p><p>Python线程、进程</p><p>Python MySQL数据库，协程，jython</p><p><b>3、Python全栈工程师前端</b></p><p>CSS</p><p>CSS3</p><p>网页界面设计实战</p><p>javaScript</p><p>jquerry</p><p>jquerry EasyUI, Mobile简介，photoshop</p><p>Bootstrap</p><p><b>4、Python全栈工程师后端</b></p><p>Django入门</p><p>Django高级</p><p>Django实战</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-1b514dba76044654184ab7c18e10f990_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"424\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2d5294abbfbaff801ebbbda95756607a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"883\" data-original=\"https://pic4.zhimg.com/v2-1b514dba76044654184ab7c18e10f990_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='883'%20height='424'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"883\" data-rawheight=\"424\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-2d5294abbfbaff801ebbbda95756607a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"883\" data-original=\"https://pic4.zhimg.com/v2-1b514dba76044654184ab7c18e10f990_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-1b514dba76044654184ab7c18e10f990_720w.jpg?source=54b3c3a5\"></figure><p>▶▶▶<b>Python高级开发工程师，胜任web全栈开发工作，平均薪资10K：</b></p><p><b>1、python全栈工程师后端高级</b></p><p>Flask开发原理</p><p>Flask开发项目实践</p><p>Tornado开发原理</p><p>Tornado开发项目实践</p><p><b>2、Linux基础</b></p><p>文件处理命令</p><p>权限管理命令</p><p>帮助命令</p><p>文件搜索命令</p><p>压缩解压命令</p><p>命令使用技巧</p><p>VIM使用</p><p>软件包管理</p><p>用户和用户组管理</p><p>Linux Shell开发</p><p><b>3、Linux运维自动化开发</b></p><p>Python开发Linux运维</p><p>Linux运维报警工具开发</p><p>Linux运维报警安全审计开发</p><p>Linux业务质量报表工具开发</p><p>Kali安全检测工具检测</p><p>Kali密码破解实战</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-6ed8702a4da66d0e4404ffcf42db0bf1_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"898\" data-rawheight=\"264\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b79996bc1de3d6d6484f2cc8eb4807c3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"898\" data-original=\"https://pic4.zhimg.com/v2-6ed8702a4da66d0e4404ffcf42db0bf1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='898'%20height='264'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"898\" data-rawheight=\"264\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-b79996bc1de3d6d6484f2cc8eb4807c3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"898\" data-original=\"https://pic4.zhimg.com/v2-6ed8702a4da66d0e4404ffcf42db0bf1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-6ed8702a4da66d0e4404ffcf42db0bf1_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>▶▶▶<b>Python大神级数据分析师，胜任数据分析和人工智能，平均薪资15K：</b></p><p><b>一、python数据分析</b></p><p>numpy数据处理</p><p>pandas数据分析</p><p>matplotlib数据可视化</p><p>scipy数据统计分析</p><p>python 金融数据分析</p><p><b>二、python大数据</b></p><p>Hadoop HDFS</p><p>python Hadoop MapReduce</p><p>python Spark core</p><p>python Spark SQL</p><p>python Spark MLlib</p><p><b>三、python机器学习</b></p><p>机器学习基础知识简介</p><p>KNN算法</p><p>线性回归</p><p>逻辑斯蒂回归算法</p><p>决策树算法</p><p>朴素贝叶斯算法</p><p>支持向量机</p><p>聚类k-means算法</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-db7b2a2c2658b23fe60b4d97c4dc3a84_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"847\" data-rawheight=\"313\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7096c072c80eaa3d22a8d36cc1304cb3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"847\" data-original=\"https://pic2.zhimg.com/v2-db7b2a2c2658b23fe60b4d97c4dc3a84_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='847'%20height='313'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"847\" data-rawheight=\"313\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-7096c072c80eaa3d22a8d36cc1304cb3_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"847\" data-original=\"https://pic2.zhimg.com/v2-db7b2a2c2658b23fe60b4d97c4dc3a84_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-db7b2a2c2658b23fe60b4d97c4dc3a84_720w.jpg?source=54b3c3a5\"></figure><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-7bf081f09eef022d84b8ed7771d53a68_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"226\" data-rawheight=\"226\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-fff2f815b3f1ba6698184af8f3db53ed_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"226\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='226'%20height='226'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"226\" data-rawheight=\"226\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-fff2f815b3f1ba6698184af8f3db53ed_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"226\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-7bf081f09eef022d84b8ed7771d53a68_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><b>确认过眼神，你就是伸手党！</b></p><p><b>全套Python视频教程等你不劳而获(*￣︶￣)</b></p><p>评论区回复<b>“Python视频教程”</b>，小编将火速前往奉上，呱唧呱唧！！！</p><p><br></p><h2>----------------------<b>华丽的分割线，帅气的你一定要看到</b>-------------------</h2><p><br></p><p><b>5月10日，小编卒</b></p><p><b>今天后台回复到手指抽筋，明天公司团建</b></p><p><b>为了让大家能及时领取到Python视频教程</b></p><p><b>小编决定多一些真诚，少一些套路，直接献上福利~</b></p><p><br></p><h2><b><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1i5kvG5f\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">小白看过来：python基础视频教程</a>   </b></h2><h2><b><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1htJW4KG\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">进阶请留步：python课程晋级视频</a>  </b></h2><h2><b><a href=\"https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1nvf3NOt\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">大牛跪请：python高级视频教程</a></b></h2><p><br></p><p><b>懒癌症晚期的我拯救了伸手党的你们，和平万岁~</b></p>", "Lua 的速度为什么比 Python 快？": "有几个答案用指令集基于栈还是寄存器来解释，错了。Python主要不是慢在这里。<br><br>我们做个实验。最简单的整数循环：<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>Python 3.5.1 (default, Mar  3 2016, 09:29:07)  \n[GCC 5.3.0] on linux \nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; def f(n): \n...     i=0 \n...     while i&lt;n: \n...         i+=1 \n...  \n&gt;&gt;&gt; import timeit\n&gt;&gt;&gt; timeit.timeit('f(100*1000*1000)', number=1, globals=globals())\n13.05189818800136\n&gt;&gt;&gt; import dis \n&gt;&gt;&gt; dis.dis(f) \n 2           0 LOAD_CONST               1 (0) \n             3 STORE_FAST               1 (i) \n\n 3           6 SETUP_LOOP              26 (to 35) \n       &gt;&gt;    9 LOAD_FAST                1 (i) \n            12 LOAD_FAST                0 (n) \n            15 COMPARE_OP               0 (&lt;) \n            18 POP_JUMP_IF_FALSE       34 \n\n 4          21 LOAD_FAST                1 (i) \n            24 LOAD_CONST               2 (1) \n            27 INPLACE_ADD \n            28 STORE_FAST               1 (i) \n            31 JUMP_ABSOLUTE            9 \n       &gt;&gt;   34 POP_BLOCK \n       &gt;&gt;   35 LOAD_CONST               0 (None) \n            38 RETURN_VALUE\n</code></pre></div>和未优化的C比较一下：<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>$ cat test.c\nint main() {\n    int n=100*1000*1000;\n    int i=0;\n    while (i&lt;n)\n        i++;\n    return 0;\n}\n$ gcc -O0 test.c\n$ time ./a.out\n\nreal    0m0.445s\nuser    0m0.443s\nsys     0m0.000s\n$ gcc -O0 -S test.c\n$ cat test.s\n        .file   \"test.c\"\n        .text\n        .globl  main\n        .type   main, @function\nmain:\n.LFB0:\n        .cfi_startproc\n        pushq   %rbp\n        .cfi_def_cfa_offset 16\n        .cfi_offset 6, -16\n        movq    %rsp, %rbp\n        .cfi_def_cfa_register 6\n        movl    $100000000, -8(%rbp)\n        movl    $0, -4(%rbp)\n        jmp     .L2\n.L3:\n        addl    $1, -4(%rbp)\n.L2:\n        movl    -4(%rbp), %eax\n        cmpl    -8(%rbp), %eax\n        jl      .L3\n        movl    $0, %eax\n        popq    %rbp\n        .cfi_def_cfa 7, 8\n        ret\n        .cfi_endproc\n.LFE0:\n        .size   main, .-main\n        .ident  \"GCC: (GNU) 6.1.1 20160602\"\n        .section        .note.GNU-stack,\"\",@progbits\n</code></pre></div><br>首先看到，Python速度真的是相当慢。最简单的整数循环耗时是<u>未优化</u>C程序的近30倍。<br><br>然后我们看Python版本的循环体：<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>       &gt;&gt;    9 LOAD_FAST                1 (i) \n            12 LOAD_FAST                0 (n) \n            15 COMPARE_OP               0 (&lt;) \n            18 POP_JUMP_IF_FALSE       34 \n\n 4          21 LOAD_FAST                1 (i) \n            24 LOAD_CONST               2 (1) \n            27 INPLACE_ADD \n            28 STORE_FAST               1 (i) \n            31 JUMP_ABSOLUTE            9 \n</code></pre></div><ol><li>Python编译器还真是很少进行优化，比如明显的对i反复LOAD_FAST和STORE_FAST，可以改为一直在栈上操作。然而在Python里尝试做这种优化，和把基于栈的指令集改成基于寄存器一样，是没有关注到重点。</li><li>如果是基于寄存器的指令集，那么最好情况下所有LOAD_FAST, LOAD_CONST, STORE_FAST指令可以去掉，指令数由9条减少到4条，看起来是很大的进步。然而“数指令数估计时间”这种思路并不适用于Python VM。</li><li>所有指令都没有类型，或者说都是“抽象”操作。这与JVM形成了鲜明对比：JVM内置了多种基本类型，并且指令都指定了类型，比如iload, iadd。为了效率，Java甚至把这些类型在语言层面暴露出来，哪怕基本类型和对象类型语义不一致给初学者带来了困惑。</li></ol><br>接下来我们来看Python VM实现这些指令的代码。字节码解释器的主体是ceval.c里一个巨大的switch。先看其中的LOAD_FAST:<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/8a64803352b8f2eec297fde73cb96406_720w.png?source=54b3c3a5\" data-rawwidth=\"1677\" data-rawheight=\"860\" class=\"origin_image zh-lightbox-thumb\" width=\"1677\" data-original=\"https://pic1.zhimg.com/8a64803352b8f2eec297fde73cb96406_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1677'%20height='860'&gt;&lt;/svg&gt;\" data-rawwidth=\"1677\" data-rawheight=\"860\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1677\" data-original=\"https://pic1.zhimg.com/8a64803352b8f2eec297fde73cb96406_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/8a64803352b8f2eec297fde73cb96406_720w.png?source=54b3c3a5\"></figure>我把执行路径上的宏和函数都加进来了。所以图中出现的就是在前面的例子里，LOAD_FAST要经过的全部代码。其中TARGET和FAST_DISPATCH是每条字节码都有的纯解释开销，而中间的代码是实际干活的部分。如果没有开tracing，最后会用computed goto直接跳到下一条指令的处理代码。<br>希望读者对LOAD_FAST这样一条比较简单的指令的工作量有了感性认识。<br><br>接着看STORE_FAST:<br><figure><noscript><img src=\"https://pic3.zhimg.com/50/85a1f1234e3dc9360bbe5c1157bedd3a_720w.png?source=54b3c3a5\" data-rawwidth=\"1747\" data-rawheight=\"1391\" class=\"origin_image zh-lightbox-thumb\" width=\"1747\" data-original=\"https://pic4.zhimg.com/85a1f1234e3dc9360bbe5c1157bedd3a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1747'%20height='1391'&gt;&lt;/svg&gt;\" data-rawwidth=\"1747\" data-rawheight=\"1391\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1747\" data-original=\"https://pic4.zhimg.com/85a1f1234e3dc9360bbe5c1157bedd3a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/85a1f1234e3dc9360bbe5c1157bedd3a_720w.png?source=54b3c3a5\"></figure>前面出现过的宏/函数我就不再次重复了。STORE_FAST需要把变量原来的值的引用计数减一，所以多出了Py_XDEFREF这一串代码，比LOAD_FAST要复杂些。注意右下角，如果引用计数减到0，就要调用对象的tp_dealloc方法来释放对象。这里具体调用的函数取决于对象的类型，在上面的例子里是int，所以会调用long_dealloc。所以我把这个函数标成红色，表示这条字节码不是一定调用这个函数，而是取决于对象的类型。<br><br>接下来是LOAD_CONST:<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/9180125c5ab68cfbd1f49fe80b48338c_720w.png?source=54b3c3a5\" data-rawwidth=\"1587\" data-rawheight=\"827\" class=\"origin_image zh-lightbox-thumb\" width=\"1587\" data-original=\"https://pic1.zhimg.com/9180125c5ab68cfbd1f49fe80b48338c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1587'%20height='827'&gt;&lt;/svg&gt;\" data-rawwidth=\"1587\" data-rawheight=\"827\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1587\" data-original=\"https://pic1.zhimg.com/9180125c5ab68cfbd1f49fe80b48338c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/9180125c5ab68cfbd1f49fe80b48338c_720w.png?source=54b3c3a5\"></figure>由于常量没有像局部变量那样用C数组存放，需要调用tuple的方法去拿，稍微比LOAD_FAST复杂一点。<br><br>顺便看几个典型的栈操作指令：<br><figure><noscript><img src=\"https://pic2.zhimg.com/50/45691d7f75980c1c4e4f1c3230490981_720w.png?source=54b3c3a5\" data-rawwidth=\"154\" data-rawheight=\"328\" class=\"content_image\" width=\"154\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='154'%20height='328'&gt;&lt;/svg&gt;\" data-rawwidth=\"154\" data-rawheight=\"328\" class=\"content_image lazy\" width=\"154\" data-actualsrc=\"https://pic2.zhimg.com/50/45691d7f75980c1c4e4f1c3230490981_720w.png?source=54b3c3a5\"></figure><br>实现都相当简单。<br><br>如果把基于栈的虚拟机改为基于寄存器，理论上可以节省的就是上面这些代码。但是要注意LOAD/STORE系指令里实际干活的部分（比如Py_XDECREF）很可能省不掉。确定能省掉的是TARGET和FAST_DISPATCH这种纯解释开销和POP_TOP/ROT_THREE这种栈操作指令（但是又要增加寄存器间复制的指令）。<br><br>看完了可以省掉的指令，来看看真正干活的，无论如何不可能通过单纯把指令集改成基于寄存器就省掉的指令吧。INPLACE_ADD:<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/a1b71bf474d17332c4b9886ca8398356_720w.png?source=54b3c3a5\" data-rawwidth=\"2500\" data-rawheight=\"2146\" class=\"origin_image zh-lightbox-thumb\" width=\"2500\" data-original=\"https://pic4.zhimg.com/a1b71bf474d17332c4b9886ca8398356_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2500'%20height='2146'&gt;&lt;/svg&gt;\" data-rawwidth=\"2500\" data-rawheight=\"2146\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2500\" data-original=\"https://pic4.zhimg.com/a1b71bf474d17332c4b9886ca8398356_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/a1b71bf474d17332c4b9886ca8398356_720w.png?source=54b3c3a5\"></figure>真是一图胜千言...<br><br>跟一遍这个执行过程，你还觉得前面那些LOAD_FAST/STORE_FAST省不省的，重要吗？对比LOAD_FAST和INPLACE_ADD的图，你还认同“这个循环指令集A要9条指令，指令集B只要4条，所以B一定比A快很多”这种思路吗？<br>还是解释一下：<br><ol><li>前面说了，Python字节码都是抽象的，所以INPLACE_ADD并不知道操作数能不能作inplace（不产生新对象）的加法，所以binary_iop1要去判断操作数是否支持。恰好int因为是immutable type，不支持inplace操作（nb_inplace_add=NULL），那么就要用普通的加法（nb_add）。</li><li>由于不能inplace，每次n+=1要new一个新的int对象，还要free掉原来的对象。</li><li>另外还要处理一大堆情况，比如加法既可以由左操作数定义也可以由右操作数定义；如果两边都定义了，而一个是另一个的子类，还要优先用子类的方法。</li><li>和前面一样，最终实际干活的函数是由对象类型动态决定的。在我们的例子里对象是int，所以调用了long_add。由于int支持任意精度整数，long_add实现很长；由于例子里n不会超过32位，我截取了针对这种情况快速处理的代码。</li><li>“实际干活”的指令最后会用DISPATCH而不是FAST_DISPATCH，区别是前者会检查是否需要释放GIL给别的线程。这里需要原子地读一个标志，所以比FAST_DISPATCH慢不少。LOAD/STORE等指令用FAST_DISPATCH的原因是 1) 它们总是围绕着实际干活的指令，没必要这么频繁地检查 2) 实际干活的指令由于会调用用户代码，执行时间可以任意长，所以如果每几条指令才检查一次标志，线程切换延迟可能会很大；而LOAD等指令执行时间比较短，不检查标志也不会给线程切换带来很大延迟。</li></ol>和Lua对比的话，我没看过Lua VM的代码，引用别的答案里的代码：<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>      vmcase(OP_ADD) { \n        TValue *rb = RKB(i);\n        TValue *rc = RKC(i);\n        lua_Number nb; lua_Number nc;\n        if (ttisinteger(rb) &amp;&amp; ttisinteger(rc)) {\n          lua_Integer ib = ivalue(rb); lua_Integer ic = ivalue(rc);\n          setivalue(ra, intop(+, ib, ic));\n        }\n</code></pre></div>和上图对比一下。<br><br>所以Python为什么慢？一个整数加法，用C就是一条机器指令，Lua大概十几行C代码，而Python需要经过近百行C代码。这些代码都干啥了？<br><ol><li>Lua VM的指令集虽然也是抽象的，但对应的数据类型是确定的几种，因此不像Python对所有指令都要dynamic dispatch。</li><li>Python的加法语义设计得非常灵活，可以定义在左操作数/右操作数/两边同时定义... 进一步增加了dynamic dispatch的逻辑。</li><li>Python的int没有使用机器native整型，而是自己定义的任意精度整型格式。因此即使数据范围可以被native整型支持，整数运算逻辑仍然较复杂。</li></ol><br>我们再做个profile实测一下。Python VM的源代码用configure --enable-profiling配置，就会在编译时加入gprof的测量代码。下面是运行测试代码的结果：<br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>  %   cumulative   self              self     total           \n time   seconds   seconds    calls   s/call   s/call  name    \n 43.37      2.68     2.68     2262     0.00     0.00  PyEval_EvalFrameEx\n 10.52      3.33     0.65 100001314     0.00     0.00  PyObject_RichCompare\n  8.90      3.88     0.55 100000589     0.00     0.00  long_richcompare\n  6.15      4.26     0.38 100002461     0.00     0.00  PyLong_FromLong\n  5.99      4.63     0.37 100000052     0.00     0.00  PyNumber_InPlaceAdd\n  5.58      4.98     0.35 100027904     0.00     0.00  _PyObject_Malloc\n  5.58      5.32     0.35 100023539     0.00     0.00  _PyObject_Free\n  5.26      5.65     0.33 100000294     0.00     0.00  long_add\n  2.51      5.80     0.16 100001636     0.00     0.00  long_dealloc\n  1.46      5.89     0.09 100022850     0.00     0.00  PyObject_Free\n  1.21      5.97     0.08 100027904     0.00     0.00  PyObject_Malloc\n...\n</code></pre></div>PyEval_EvalFrameEx是字节码解释器循环所在，耗时43%。我们前面分析过，把指令集从基于栈改为基于寄存器，循环体最多能省一半指令，而且由于FAST_DISPATCH和DISPATCH的差别，这一半指令的解释开销较低。因此我们可以粗略地估计这种“优化”改进空间的上限是20%。<br>而其后10个耗时最多的函数里，PyObject_RichCompare和long_richcompare用来实现COMPARE_OP，其它的都属于INPLACE_ADD（和其后的STORE_FAST里必然发生的long_dealloc）。这两条指令就占用了54%的时间。<br><br>实际上不只是整数运算，作为面向对象语言最核心的“调用方法”和“访问对象自身属性”两个操作，Python也是非常慢。这个我有空再补充。<br><br>总的来说，Python性能为什么这么差？性能好的语言大体分两类：<br><ol><li>被设计成高性能。如C，Java。这类语言在设计之初就把性能放在优先位置，愿意为之作各种牺牲，比如前面提到的，Java作为面向对象语言而为基本类型搞特殊规则；而后面加新功能时，往往首先问的也是这是否会使现有程序变慢。</li><li>设计时不重视性能，后期被强烈的性能需求和砸钱搞成高性能。如Javascript。</li></ol>而对Python设计者来说，有太多因素排在性能之前：易学，灵活性（比如加法的各种定义方法），概念简单（比如把int/long合并成一个任意精度整数类型）。即使有人愿意砸钱，设计者也不见得配合你，比如提出各种与性能优化相悖的向后兼容要求...", "为什么人工智能用 Python？": "<p>这属于一种误解，人工智能的核心算法是完全依赖于C/C++的，因为是计算密集型，需要非常精细的优化，还需要GPU、专用硬件之类的接口，这些都只有C/C++能做到。所以某种意义上其实C/C++才是人工智能领域最重要的语言。</p><p>Python是这些库的API binding，使用Python是因为CPython的胶水语言特性，要开发一个其他语言到C/C++的跨语言接口，Python是最容易的，比其他语言的ffi门槛要低不少，尤其是使用Cython的时候。其他语言的ffi许多都只能导入C的函数入口点，复杂的数据结构大多只能手工用byte数组拼起来，如果还需要回调函数输入那就无计可施了。而CPython的C API是双向融合的，可以直接对外暴露封装过的Python对象，还可以允许用户通过继承这些自定义对象来引入新特性，甚至可以从C代码当中再调用Python的函数（当然，也有一定的条件限制）。不过这也是PyPy这样的JIT解释器的一个障碍。</p><p>而且Python历史上也一直都是科学计算和数据分析的重要工具，有numpy这样的底子，因为行业近似所以选择API binding语言的时候会首选Python，同时复用numpy这样的基础库既减少了开发工作量，也方便从业人员上手。</p>", "深度学习有哪些好玩的且易于实现的论文？": "不知不觉已经超过400赞了，最近终于有点时间来进一步增加点好玩的东西了，后面的内容不再歪楼了……（非深度学习的东西不放了……）<br><br>-1. 一个日文的博客——<a href=\"https://link.zhihu.com/?target=http%3A//bohemia.hatenablog.com/entry/2016/08/13/132314\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ディープラーニングで新しいポケモン作ろうとしたら妖怪が生まれた</a><br>讲如何通过利用DCGAN生成Pockmon Go的宠物形象的文章。因为全是日文，我也不是特别懂日文，所以在这里就不班门弄斧了。感兴趣的自己看看吧눈 눈...<br><br>0.  <a href=\"https://link.zhihu.com/?target=https%3A//github.com/Rochester-NRT/RocAlphaGo\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub - Rochester-NRT/RocAlphaGo: An independent, student-led replication of DeepMind's 2016 Nature publication, \"Mastering the game of Go with deep neural networks and tree search\" (Nature 529, 484-489, 28 Jan 2016), details of which can be found on their website https://deepmind.com/publications.html.</a><br><br>这个项目火遍大江南北啊，就是第三方根据AlphaGo的论文给出的实现。最近工作太忙没空去看具体细节，底层用的是keras，具体的细节大家可以看看paper。另外今天发现了一个不错的slide: <a href=\"https://link.zhihu.com/?target=http%3A//www.slideshare.net/ShaneSeungwhanMoon/how-alphago-works\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">slideshare.net/ShaneSeu</span><span class=\"invisible\">ngwhanMoon/how-alphago-works</span><span class=\"ellipsis\"></span></a><br><br>当初和李世石大战的时候有很多”专家“都出来讲过这篇paper，包括在下……简单来说，AlphaGo的架构和传统的围棋AI相比并没有传统的创新，传统的机器博弈的架构包括三部分：<br><br><ul><li>主体：AlphaBeta树<br></li><li>走子策略：某一步走哪最好<br></li><li>局面静态评估：当前谁更厉害<br></li></ul><br>每当对方走出一步棋，我方就开始用走子策略判断一批优秀的候选着法，然后我们开始YY对方，针对我方的每一着，给对方选出一批优秀的着法进行对抗，以深入分析我方走子的可行性。然而由于棋局的复杂性，我们无法演绎到比赛结束，于是到达一定深度后，我们对当前的局势进行估计，然后根据这个分数反推回去，得到我们最好的招数，也就是下棋人常说的”下棋要多看几步“。<br><br>那么AlphaGo的厉害之处就在于，它把其中的第二、三项换成了CNN，CNN一来我们就得到了两个好处：1）它有强大的非线性映射能力，算出来的招数很厉害；2）CNN的深度学习能力使得搞围棋不用像过去搞围棋的人一样得花大量时间学围棋了！这点也是当初DeepMind在介绍Atari时说过的，一招CNN，搞定无数领域的难题。曾几何时，我们做博弈的写评估函数，都得对某种棋有很深的认识，基本上得做到业余中的佼佼者；现在有了CNN，你还是可以成为佼佼者，但是这方面的作用明显没有过去那么有用了。<br><br>实际上现在大环境是什么都可以拿深度学习的东西试试，所以用CNN搞围棋不奇怪，但是能搞成这个事还是很牛的，而在这其中，训练数据就很关键了。个人认为这其中最厉害的还是用增强学习训练policy的部分，实际上这种完全信息的博弈天生就可以看作马尔可夫决策过程（MDP）,而增强学习又是解决MDP的一把好手。将AlphaBeta树中的对手想象成Environment中一种看不见的力量，一个Agent的决策模型就自然形成了。至于后续的增强学习的细节，可以看论文中的介绍。<br><br>1. <a href=\"https://link.zhihu.com/?target=https%3A//github.com/jisungk/deepjazz\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub - jisungk/deepjazz: Deep learning driven jazz generation using Keras &amp; Theano!</a><br><br>这个是用LSTM写jazz风格的旋律，也是蛮厉害的！跑起来很容易，库用的是Theano，python人民的老朋友！相对比较简单。<br><br>[我准备最近把它啃下来把一些细节分享到这里！]<br><br>首先是music21这个库，一个很强大的为音乐人士准备的库（我以前怎么没发现这个库，真心很赞！）<br><br>2. 最近AlphaGo太火了，于是乎推荐一个增强学习玩Flappy Bird的代码：<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/yenchenlin1994/DeepLearningFlappyBird\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub - yenchenlin1994/DeepLearningFlappyBird: Flappy Bird hack using Deep Reinforcement Learning (Deep Q-learning).</a><br><br>亲测有效，很有意思，相信它足够好玩，也能激发大家的兴趣<br><br>由于我之前用keras和caffe多一些，所以对tensorflow了解不多，这里贴个中文的文档供大家参考源代码：<br><a href=\"https://link.zhihu.com/?target=http%3A//wiki.jikexueyuan.com/project/tensorflow-zh/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">TensorFlow官方文档中文版_TensorFlow中文教程_TensorFlow开发中文手册[PDF]下载</a><br><br>[这里补上小鸟的一些代码总结]<br>flappy bird的程序主题上有两个部分，一部分可以算作“预测”，就是根据模型指示具体的操作，一部分是“学习”，就是根据对局的信息调整模型。<br><br>整个项目的根基就是这个游戏本身，在增强学习中可以看作是“Environment”，也就是能接收Action并反馈Next State和Reward的。作者使用了别人写好的现成的程序，不过还是在此基础上做了一定的修改，使游戏能够返回这两个信息。对于Next State，则是下一个时刻的图画信息，对于Reward，主要就是能分了，穿过一对管子得一分，死掉得负分。<br><br>预测部分：作者采用了E&amp;E的策略，除了以模型进行判定之外，还以一定概率随机操作。<br><br>学习部分：当数据集收集到一定数量后开始学习，对于非完结的状态，要根据Bellman Equation进行Return的计算（Return和Reward有一定的差别）。然后将(state,action,return)扔给模型学习。<br><br>模型：CNN，具体的参数README讲得很清楚。<br><br>总体来看这就是一个模仿Atari实现的项目，不过他一板一眼地把把Atari的经验借鉴了过来，也做到不错的智能效果，所以值得一赞。<br><br>我仔细地看了关于这个项目的介绍，发现他的思想和Deep Mind的另一个增强学习的项目很相近，那就是Atari游戏。我找到了一个Github项目，没有亲测，后面有时间会做一下实验：<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/kuz/DeepMind-Atari-Deep-Q-Learner\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub - kuz/DeepMind-Atari-Deep-Q-Learner: The original code from the DeepMind article + my tweaks</a><br><br>两个项目都是用CNN代替增强学习中的state-action-table，项目中的state就是当前的图像（4帧），action就是用户的操作（Flappy Bird就是点一下，昨天和同事聊同事还在说真正游戏里每点一下的轻重是有区别的，我想这个AI应该没有考虑这一点），由于这个空间十分大，我们用CNN来表示它，而学习的关键，也就是把这个表（模型）学习出来。<br><br>先简单写一下，回头详细地谢谢。<br><br>3.深度学习的在github有一个合集：<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/kjw0612/awesome-deep-vision\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub - kjw0612/awesome-deep-vision: A curated list of deep learning resources for computer vision</a><br>推荐一下，感兴趣的话可以过一过<br><br>＝＝＝＝＝＝＝<br>乱七八糟的在下面，不删了留着。。。<br>===========<br>感谢大家，超过了200赞，决定清明的时候再好好整理下这个回答！<br>1）增加了之前写的水粉铅笔画的代码（要代码的朋友你们久等了……）<br>2）增加了一点关于增强学习的介绍……（基本上是懂的人一看就懂，不懂的……以后我看能不能写个通俗的介绍）<br>＝＝＝＝＝＝＝＝＝＝＝＝<br>终于有一个超过100赞的回答，成就感满满的，于是更新一下：<br>＝＝＝＝＝<br>以下是老回答<br>＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝<br>谢邀。<br>推荐一个自己前段时间看过的：<br><a href=\"https://link.zhihu.com/?target=http%3A//www.cse.cuhk.edu.hk/%7Eleojia/projects/pencilsketch/pencil_drawing.htm\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Combining Sketch and Tone for Pencil Drawing Production</a><br>把一副图像变成铅笔水粉画。绝对好玩，而且有代码。<br>而且……我相信看懂这个项目会比一个深度学习的项目收获更多。<br>另外，这一着也许可以拿来泡妹子……<br><br>非常抱歉没有仔细看下面的评论，上面的网站里面确实没有代码……<br>一个非官方的实现在这里：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/fumin/pencil\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub - fumin/pencil: implementation of http://www.cse.cuhk.edu.hk/~leojia/projects/pencilsketch/npar12_pencil.pdf</a><br>希望之前没找到的同学能够看到我的修改。<br><br>＝＝＝＝＝ 关于原问题的分割线 ＝＝＝＝＝", "python精通后能赚多少？平均情况。普通智商，刚毕业朝九晚五工作，每天4到5小时学多久精通？": "<p>这些问题之前题主应该先了解的是：</p><ul><li><b>Python掌握了什么是精通？</b></li><li>因为学习这些知识要用多久能学会是自己的学习能力决定的。</li><li><b>掌握Python后是找工作的职业发展是什么？掌握Python自由职业可以做什么？</b></li><li>因为要先知道，你是要做的是什么才能大概知道以后能挣多少钱。</li></ul><p><b>那就上述的问题一个一个说，先来一个懒人目录：</b></p><ul><li>Python职业发展以及自由职业可以做什么</li><li>根据职业发展找出当下学习重点</li><li>优质的Python学习资源分享 </li></ul><h2>一、Python的职业发展以及自由职业可以做什么</h2><p>先看一个职业发展路径：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-1a090b91398df3f8a20f3dae2bc102df_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1216\" data-rawheight=\"655\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9217ce8a1b0a1afab19cf6405c3f0d60_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1216\" data-original=\"https://pic1.zhimg.com/v2-1a090b91398df3f8a20f3dae2bc102df_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1216'%20height='655'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1216\" data-rawheight=\"655\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-9217ce8a1b0a1afab19cf6405c3f0d60_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1216\" data-original=\"https://pic1.zhimg.com/v2-1a090b91398df3f8a20f3dae2bc102df_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-1a090b91398df3f8a20f3dae2bc102df_720w.jpg?source=54b3c3a5\"></figure><p>根据这样清晰的路线图才可以知道未来的职业发展方向是什么，知道职业发展方向的话才能知道当下的学习重点是什么。也可以先看一下某些企业招聘Python的要求是什么，招聘信息上写的技能掌握后就可以找到工作了。</p><p><b>一般企业招聘Python相关工程师的要求是：</b></p><ul><li>正规本科学历</li><li>2年开发经验，精通Python开发</li><li>精通Django框架，有实际项目经验</li><li>熟悉HTML5，JavaScript，Json，熟悉Mysql，熟练使用SQL。</li><li>有websocket server开发经验者优先</li><li>有Redis开发部署经验者优先</li><li>了解HTTP协议，微服务，以及Restful API</li><li>熟悉云服务平台（Google，ali），了解服务器部署和监控，了解负载平衡</li><li>了解敏捷开发熟悉软件设计模式</li></ul><p><b>偏爬虫相关的招聘要求一般是：</b></p><ol><li>有1-3年的抓取经验，有咨询新闻企业信息相关的抓取经验</li><li>有较强的网站分析能力，熟知各种反爬措施以及相关解决办法</li><li>熟练使用eventel，gevent，requests，selenium等技术实现高并发稳定抓取</li><li>熟练使用消息队列（MQ）、celery等异步框架红丝线分布式任务处理</li><li>熟知HTTP、TCP、Socket等底层知识</li><li>熟练掌握Fiddler、Http debugger等抓捕工具</li><li>熟练Mysql、MongoDB的基本使用；</li></ol><h2>Python自由职业可以做什么：</h2><p><b>1.爬虫</b></p><ul><li>很多人入门Python的必修课之一就是web开发和爬虫。但是这两项想要赚钱的话，就必须知道开发什么爬什么数据才能赚钱。如果你都不知道的话问题也不大的，可以开个网店，或者猪八戒做服务外包。</li><li>这里呢，还是需要找到好的项目，举个舒服的例子就是：帮一些证券大佬抓取一些财经新闻或者是舆情相关的数据，开发玩了之后每个月要保证爬虫不挂的话基本上可以收入3-5k。自己买个云主机的话，一个月要两三百的成本，自己还能做别的事情。</li></ul><p><b>2.量化交易</b></p><ul><li>用python来完成量化交易是很方便的，方然不涉及到高频交易，对于新手来说，这边比较推荐的JionQuant，新手教程和在线Python策略开发环境我个人认为都是比较优化的，做Quant其实就是一个做数据挖掘的过程。不同的策略就是你手中能用的模型，选股，择时，资金管理就是你所要做的特征工程。不需要纠结是用均线策略或者是BOLL，找到策略适应的股和择时才是关键。</li><li>要追求稳定的收益的话，可以去考虑各种虚拟币交易市场搬砖，编程能力较弱的朋友可以考虑一下bots，统计逃离虽然也能稳定盈利但显然不合适个人了，一般需要HFT支持。</li></ul><p><b>3.代写程序或者是外包</b></p><ul><li>某宝上有不少的代写程序的，物美价廉，几百块就能搞定一套基于LAMP的xx管理系统，看看买家评论就会知道，绝大部分都是学生的大作业或者是毕设。</li><li>这些能转多少钱呢？首先是不要帮别人写论文，这是吃力不讨好的事情，基本上后期你就会处于一直改稿的阶段。一般本科毕设都是偏工程研发的，这类门槛低，通用的代码很多，基本上找到开源的改一改就能完成任务。硕士毕业的有很多偏机器学习的，实现一个overfitting的算法实现，基本上也就是1-2天的功夫，前者1-2K，后者2-3k。</li></ul><p><b>4.白帽</b></p><ul><li>python是黑客的第一语言，还用多说吗？这边灰产不说了。只要爬虫公里足够强的话，刷个阅读排名点赞都是可以的。毕竟说透了都是模拟请求，只不过是有些简单HTTP Get请求。有些是通过Ajax提交的Post请求，还有就是写Socket请求，然后顺一下时间中不同请求的时间和依赖关系。</li></ul><p><b>起码题主要知道Python如何可以挣钱，用什么挣钱，才能知道挣多少钱哈。</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb\" width=\"4096\" data-original=\"https://pic1.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='4096'%20height='419'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"4096\" data-original=\"https://pic1.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></figure><h2>二、根据职业发展找出当下学习重点 </h2><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2161\" data-rawheight=\"2143\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-e3b31af19a8e6d9cff5f30cfdd79007e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2161\" data-original=\"https://pic2.zhimg.com/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2161'%20height='2143'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2161\" data-rawheight=\"2143\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-e3b31af19a8e6d9cff5f30cfdd79007e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2161\" data-original=\"https://pic2.zhimg.com/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\"></figure><p>我觉得仅仅对于小白来说，最重要的事情不是学完基础就继续。而是找到职业发展路径。知道发展了以后在去找重点去学习。</p><ul><li>如果未来发展是web方面：那么我们需要主要学的是python的基础、python的进阶、前端开发以及web开发；</li><li>如果未来的发展是爬虫工程师：那么我们需要学的除了上面这四中还要加上爬虫。</li><li>如果未来发展是数据工程师：那么还要掌握自动化运维、数据挖掘和分析以及</li><li>那么未来发展是人工智能的话：就要学习机器学习人工智能相关知识；</li></ul><p>上面这样的知识点可能会说懵大家，直接看各个阶段的相关知识拆解：<br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2161\" data-rawheight=\"2143\" class=\"origin_image zh-lightbox-thumb\" width=\"2161\" data-original=\"https://pic4.zhimg.com/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2161'%20height='2143'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2161\" data-rawheight=\"2143\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2161\" data-original=\"https://pic4.zhimg.com/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-92a14014a3ff1dfb550494fdfb6bd27c_720w.jpg?source=54b3c3a5\"></figure><h2><b>第一阶段、Python基础</b></h2><p><b>知识点：</b></p><ul><li><b>计算机组成原理：</b>计算机组成部分、操作系统分类、B/S和C/S架构、理解软件与硬件的区别</li><li><b>Python变量以及开发环境：</b>字符串、数字、字典、列表、元祖等</li><li><b>流程控制语句：</b>程序的执行顺序，顺序执行、循环执行、选择执行</li><li><b>函数：</b>定义函数、调用函数、函数的嵌套、递归函数</li><li><b>文件的基本操作：</b>文件的打开、编辑、关闭</li><li><b>面向对象编程：</b>类对象、实例对象、定义类、实例化对象</li><li><b>异常处理：</b>学会捕捉异常、自定义异常</li><li><b>模块和包：</b>理解模块和包的概念并学会使用</li><li><b>飞机大战游戏制作：</b>自己独立完成飞机大战游戏</li></ul><h2><b>第二阶段、Python和Linux高级</b></h2><p><b>知识点：</b></p><ul><li><b>Linux系统应用：</b>Linux发行版系统的使用、基本的操作语句</li><li><b>网络编程：</b>TCP/IP协议、服务器工作过程</li><li><b>并发编程：</b>线程、进程、协程</li><li><b>函数高级应用：</b>熟练使用函数的调用等</li><li><b>正则表达式：</b>熟练舒勇re模块的各种方法</li><li><b>数据库：</b>关系型数据库、非关系型数据库、MySQL</li><li><b>Python语法进阶：</b>闭包、装饰器、生成器、迭代器</li><li><b>mini-web服务器：</b>根据网络服务的过程写出简易的web服务器</li><li><b>mini-web框架：</b>可以编写简易的web服务器框架 </li></ul><h3>第三阶段：前端开发</h3><ul><li><b>HTML的学习：</b>HTML的文档结构、快速创建HTML方法</li><li><b>CSS：</b>CSS的使用</li><li><b>PS的简单应用：</b>Photoshop的基本使用、取色、图层</li><li><b>JavaScript的学习：</b>JavaScript的基本语法</li><li><b>jQuery的学习：</b>jQuery的使用</li><li><b>Vue框架：</b>框架的使用以及注意点</li></ul><h3><b>第四阶段：Web开发</b></h3><ul><li><b>Flask web框架的使用：</b>模板与表单、数据库的使用、单元测试、第三方扩展与部署、Redis缓存使用、GIT版本控制、云服务器的使用、验证码的收发、网站项目开发实战</li><li><b>Django web框架的使用：</b>框架的使用方法、模型介绍、ORM以及数据库操作、视图以及模板、Django中间件、Django REST Framework、网站项目开发实战</li></ul><h3>第五阶段：爬虫开发</h3><ul><li><b>爬虫开发的知识体系与相关工具：</b>网络爬虫的原理以及相关爬虫工具</li><li><b>MongoDB数据库：</b>数据库的增删改查</li><li><b>Scrapy框架：</b>框架的原理以及使用</li><li><b>定制化爬虫采集系统：</b>数据的采集、分析</li><li><b>爬虫实战项目：</b>实用型综合爬虫应用</li></ul><p>后面有需要整理出来的知识的，可以留言告诉我，码字不义；</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb\" width=\"4096\" data-original=\"https://pic1.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='4096'%20height='419'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4096\" data-rawheight=\"419\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"4096\" data-original=\"https://pic1.zhimg.com/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f69551cec08a319f33c1b3bae6a16b66_720w.jpg?source=54b3c3a5\"></figure><h2>三、Python学习的优质资源</h2><p><b>文章相关：</b></p><ul><li><a href=\"https://www.zhihu.com/question/316967015/answer/632665427\" class=\"internal\">为什么要学习Python编程语言？哪些人适合学习Python？</a></li><li><a href=\"https://www.zhihu.com/question/319968526/answer/659335793\" class=\"internal\">非计算机专业想学一门编程语言，选什么好？</a></li><li><a href=\"https://www.zhihu.com/question/323460473/answer/681740736\" class=\"internal\">python和java自学哪个好？</a></li><li><a href=\"https://zhuanlan.zhihu.com/p/61719800\" class=\"internal\">2019年最新web前端开发入门知识点</a></li></ul><p><b>Python自学课程视频：</b></p><ul><li><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/401.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python6天摇身一变成大神</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/course/273.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python入门教程完整版（懂中文就能学会）</a></li><li><a href=\"https://link.zhihu.com/?target=http%3A//yun.itheima.com/open/71.html%3Faoe\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python网络爬虫第一天</a> </li></ul><p><b>上述是课程学习均有网盘的资源，就是含有课件、课程笔记以及源码的资源。但是放网盘的话就会被和谐。有需要的留言或者私信我吧。</b></p><p><b>关注一下呗，码字不易，后续会有更多精彩。</b></p>", "如何优雅地使用 Jupyter？": "<p>相信大家都很熟悉在 Jupyter Notebook 上面用 Matplotlib 了，但是不知道大家看到画出来那一坨糊糊的东西会不会跟我一样浑身难受。实际上，只要多加一行配置，就能够让 Matplotlib 在 Jupyter Notebook 上面输出矢量图了：</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"kn\">import</span> <span class=\"nn\">matplotlib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"o\">%</span><span class=\"n\">matplotlib</span> <span class=\"n\">inline</span>\n<span class=\"o\">%</span><span class=\"n\">config</span> <span class=\"n\">InlineBackend</span><span class=\"o\">.</span><span class=\"n\">figure_format</span> <span class=\"o\">=</span> <span class=\"s1\">'svg'</span>\n</code></pre></div><p>上面的最后一行指定了输出的格式是 svg，这样浏览器就能为你渲染矢量图了。下面上两张比较图：</p><figure data-size=\"small\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-ec4b631485789f4e0e4c99e88e5a2c2c_720w.gif?source=54b3c3a5\" data-size=\"small\" data-rawwidth=\"640\" data-rawheight=\"406\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-ec4b631485789f4e0e4c99e88e5a2c2c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-ec4b631485789f4e0e4c99e88e5a2c2c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='406'&gt;&lt;/svg&gt;\" data-size=\"small\" data-rawwidth=\"640\" data-rawheight=\"406\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-ec4b631485789f4e0e4c99e88e5a2c2c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-ec4b631485789f4e0e4c99e88e5a2c2c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-ec4b631485789f4e0e4c99e88e5a2c2c_720w.gif?source=54b3c3a5\"><figcaption>默认输出png，不用放大就可以看出糊糊一片了。</figcaption></figure><figure data-size=\"small\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-3f74394b01c58b3ad8dfbdec79e07a69_720w.gif?source=54b3c3a5\" data-size=\"small\" data-rawwidth=\"640\" data-rawheight=\"374\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-3f74394b01c58b3ad8dfbdec79e07a69_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-3f74394b01c58b3ad8dfbdec79e07a69_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='640'%20height='374'&gt;&lt;/svg&gt;\" data-size=\"small\" data-rawwidth=\"640\" data-rawheight=\"374\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-3f74394b01c58b3ad8dfbdec79e07a69_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-3f74394b01c58b3ad8dfbdec79e07a69_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-3f74394b01c58b3ad8dfbdec79e07a69_720w.gif?source=54b3c3a5\"><figcaption>改成输出svg，放大放大再放大，每一根毛都看得清清楚楚！</figcaption></figure><p>顺带一提，其实 Jupyter Notebook 上面输出的是不是矢量图还无所谓，最重要的是生成的插图不能糊啊。savefig 只要指定文件名后缀是 .pdf 或者 .eps 就能生成能方便地插入 latex 的图片了！</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>plt.savefig('tmp.pdf', bbox_inches='tight')\nplt.show()\n</code></pre></div>", "为什么看不懂廖雪峰的Python学习教程？": "<p>廖雪峰的Python教程已经很友好了，接近于把饭喂到嘴边了。</p><p>这不是廖雪峰教程的问题，而是一个基础代码技能和实际应用需求的代码技能差距太远导致的。</p><p>如果是新手，只学会了廖雪峰Python教程，那约等于什么都写不出来。除了课后习题，什么都写不出来。</p><p>就以知乎上泛滥的Python爬虫教程来看。</p><p>在你掌握了Python基础语法之后，你还需要：简单的网络基础，包括套接字，HTTP是什么，为什么有这个东西，怎么用；一点前端知识的皮毛，知道HTML和CSS，还有JS是干什么的，怎么简单的提取需要的内容；正则表达式的简单使用；为了编写效率高一些的爬虫，还需要知道常见的IO模型和简单的并发编程。</p><p><br></p><p>这样你才可以写出能解决实际问题的爬虫程序。</p><p><b>但是，上面讲的每一个都不难，只要勤于百度，搞懂这些只是时间问题（最多几周而已）。</b></p><p>为什么这对于新手来说，还是太难了呢？</p><p>新手缺乏经验，缺乏能动性。因为他们遇到问题是，无法判断这个问题到底有多么困难，可能是一个两分钟就能解决的小问题，也可能是困扰业界多年的难题。<b>这样的畏惧心理才是新手最大的敌人。</b></p><p>所以，最重要的问题在于调整心态，勤于应对问题。<b>遇到问题，具体的，有针对性的求助，而不是陷入“我是不是没天赋？”“我是不是太蠢？连这都解决不了”的自我怀疑怪圈。</b></p><p>比如，“为什么看不懂廖雪峰python？”就不是一个好问题，你不是在提问，你只是在自我怀疑，这样一点帮助都没有。你试试把你教程中看不懂的某一章，某行代码发上来提问，这才有进步。</p><p>廖雪峰教程是新手红利，也是新手蜜糖，他在教程里解决了新手学Python会遇到的一切问题。然而，对于任何一个在IT行业混的人来说，最难的是学习解决问题的方法这项技能，不是技术本身的难度。</p><p><br></p><p>新手另一个最大的敌人就是：</p><p><b>低估长时间学习的成果，又高估短时间学习的成果。</b></p><p><br></p><p><b>举例：</b></p><p><b>时不时的热血上头，踌躇满志，立誓XX天搞定XXX技术。</b></p><p><b>时不时的自我怀疑“大牛那么多，比不过，学十年估计也学不出什么名堂”</b></p><p><br></p><p>没几个人是天才，你花一个小时学的内容，不可能顶别人三个小时。反过来，你觉得自己笨，觉得自己学的慢，一个月才入门Python，实际上，对于和你同水平的其他人，也差不多要花这个时间，再少也少不到哪里去。</p><p><br></p><p><b>立誓XX天搞定XXX技术的人最后基本都没实现。</b></p><p><b>细水长流每天都抽时间学习的人最后基本都成了高手。</b></p><p><br></p><p><b>与其踌躇满志硬逼自己今天不学十小时不罢休，还不如想想怎么能坚持在接下来的两个月里，每天都至少花两小时来学习。</b></p>"}{"请教下 Python 高手，如何用 Python 自动化操作 Excel？": "<p>选择 VBA 还是 Python 取决于你的需求。</p><p>如果你只在 Excel 里做，并且数据量不超过它的限制的话，可以用 VBA 或 Excel 自有的功能。</p><p>如果你想把 Excel 与数据库、爬虫、微信、邮件等连接，或者要处理的数据量比较大的话，那用 Python 是更合适的，在 Excel 里面处理可能会“卡成 PPT“……</p><p>用 Python 处理 Excel 可以试下这几个库，我们整理了常用的功能，给学员做了速查表，也给你看下</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-0645498e19b813a106ec77b6cda5cb2a_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1952\" data-rawheight=\"1651\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c2a093fb096623dd7f550dfc969b9ae0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1952\" data-original=\"https://pic1.zhimg.com/v2-0645498e19b813a106ec77b6cda5cb2a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1952'%20height='1651'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1952\" data-rawheight=\"1651\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-c2a093fb096623dd7f550dfc969b9ae0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1952\" data-original=\"https://pic1.zhimg.com/v2-0645498e19b813a106ec77b6cda5cb2a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-0645498e19b813a106ec77b6cda5cb2a_720w.jpg?source=54b3c3a5\"></figure><p>就像玩积木一样，用这些基本的功能去组合，就可以实现很多事情。</p><p>今天大促比较忙，先写到这里了，回头我来更新几个案例，看能不能启发到你。</p><p>另外我们另一个回答下，不少学员分享了自己做的事情，可以先看看。</p><a href=\"https://www.zhihu.com/question/313671299/answer/608296494\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-e9e35c336ef19b93ae2eb7d1d51b303b_l.jpg?source=54b3c3a5\" data-image-width=\"1596\" data-image-height=\"1646\" class=\"internal\">用Python自动化办公能做到哪些有趣或有用的事情？</a><p> 文档链接：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//xlrd.readthedocs.io/en/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">xlrd documentation</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//xlwt.readthedocs.io/en/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">xlwt documentation</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//xlutils.readthedocs.io/en/latest/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">xlutils.readthedocs.io/</span><span class=\"invisible\">en/latest/</span><span class=\"ellipsis\"></span></a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//xlwt.readthedocs.io/en/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">xlwt documentation</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//xlutils.readthedocs.io/en/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">xlutils documentation</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//xlsxwriter.readthedocs.io/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Creating Excel files with Python and XlsxWriter</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//openpyxl.readthedocs.io/en/stable/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">openpyxl - A Python library to read/write Excel 2010 xlsx/xlsm files - openpyxl 2.6.1 documentation</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.xlwings.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">xlwings - Python For Excel. Free &amp; Open Source.</a></p><p><a href=\"https://link.zhihu.com/?target=https%3A//pandas.pydata.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Data Analysis Library</a></p><hr><p>学 Python ≠ 100G 视频资料</p><p>学 Python ≠ 傻瓜式的在线填空题</p><p>只有多写实操项目，才能学的高效。只有建立自己的知识体系，才能学的踏实。</p><p>这是我们一直在强调的学习方法，试过的人都学成了，没听进去的人都吃亏了。于是这一次，我们把学习方法做进了课程体系里。</p><p>学习顺序按照「学习-测评-实操」进行，强制你多写代码多练习，让你学的高效。</p><p>课程按照「建立知识模型-用法必知必会-上手项目案例-系统学习脑图」的知识体系，逐个模块系统递进，既有完整实操项目从零到上线，又有系统脑图的体系化，让你学的踏实。</p><p>这是只在「Python 后端工程师培养计划」才有的学习体验。</p><p>查看课程目录、免费试听：</p><a href=\"https://link.zhihu.com/?target=https%3A//www.mugglecode.com/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-d60440d4a0bbebb2e390169393ae6ff8_bh.jpg?source=54b3c3a5\" data-image-width=\"986\" data-image-height=\"748\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python 后端工程师培养计划</a><hr><p>之前就有很多学员希望我们可以开直播，所以我们来了！</p><p>如果你需要用 Python 解决工作中的问题，想要实现办公软件自动化、数据处理自动化、人工智能自动化。</p><p>关注一下我们的直播：<b>6 月 5 日，晚上 8 点</b>，侯爵老师和神秘大神现场教学，带你玩转 Python 。 点击下方链接</p><p><a href=\"https://link.zhihu.com/?target=https%3A//video.mugglecode.com/Lark20200605-163200.png\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">快速上手 Python 自动化机器人直播间</a></p>", "为什么C++没有Python那么多开源库？": "<p>看了好多回答，还是觉得有更本质的原因的，根源还是在C++这个语言特性上</p><p>为什么C++没有Python之类语言这样活跃的生态？我觉得根本原因在于C++没有解决好一个问题：<b>菱形依赖</b></p><p>什么叫菱形依赖呢？就是说A依赖B，A也依赖C，但是B和C同时依赖D，并且我们限定D并不是STL这样的标准库，BCD都是开源库。为了限定到C++，我们这里BCD都是C++库，采用源码的方式发布。</p><p>这种情况在生态活跃的语言中则是非常常见的。</p><p>在C++当中会怎样呢？</p><ol><li>B和C中至少一个将D的源码合并到了自己的源码里面，放到thirdparty之类的目录里面。A将两份源代码加自己的一起放到thirdparty里面，<b>编译，符号冲突，爆炸</b>。</li><li>B和C在install说明中提到，必须把依赖放到某个地方，然后修改Makefile/CMAKE/Bazel配置，将D的源码目录加进来。结果B和C编译出来的.a里面还是带着D的全部符号，A尝试二进制链接，<b>符号冲突，爆炸</b>。</li><li>B和C在install说明中提到，需要将D的依赖放在某个地方，先编译成.a，设置好参数直接链接.a。但是B和C要求的D的编译参数不一样，<b>链接不到一起，爆炸</b>。</li><li>把所有的依赖都一个一个放在独立的位置上，设置好include目录，每个都用自己的Makefile独自编译成.a，编译参数用同一套，最后再一个一个指定起来链接到一起——<b>人工成本爆炸</b>。</li><li>A希望B和C通过动态链接方式连接，方便升级。动态链接库里面链接了D的符号，<b>加载起来符号冲突，爆炸</b>。B和C一个动态链接了D，一个静态链接了D，<b>还是符号冲突，爆炸</b>。</li><li>D把自己改成了header only的库，终于不需要单独编译了。B和C在引用D的时候设置的宏不一样，导致<b>编译出的弱符号不兼容，链接完运行崩溃，爆炸</b>。</li></ol><p>以上种种，最后对于C++库的作者来说，就变成了这样一个结果：</p><p><b>如果我要提供一个好用、好编译、不给我天天找事情的库，那么我不能引用其它的开源库</b></p><p>没有比这更矛盾的事情了，要造轮子，第一件事情是不能用别人的轮子。但是如果你要正经开发一个系统，你能保证自己不会有一天需要把这个代码重构成一个通用的库吗？<b>那你就得从第一天开始避免用第三方开源库……</b></p><p>在Linux上面唯一有点生态的意思的做法，是引用yum/apt源里面的xxx-dev这样的库，这些库通过pkgconfig的方式组织，而且通过包管理系统保证大家下载到的都是相同且兼容而且编译好了的二进制库，引用起来很方便。但是，只有把接口限定到纯C才能发布确保二进制兼容的库，那折腾了半天，就算内部是C++开发的，一到库的边界上还得转成纯C，也就失去了C++语言的优势了。</p>", "「8 万行的 Python 程序用 4 万行 Java 重写了」，说明了什么？": "我来说说一个不一样的观点：其实吧，这与语言没有太大关系，反过来也很可能会得到一样的效果。<br><br>这相当于把代码重新写一遍，而重写代码通常能够得到更好的架构。无论是用 python 换成 java 还是 java 换成 python，对整个程序的性能可能都会有提升。<br><br>为什么代码要重写，甚至换一种语言重写才能提升效率？因为只有换一种语言，才能迫使你把原先的代码全部抛弃，你不能复用，不能 copy 任何的旧代码，那么新代码必然是全新的，通常是更好的设计。<br><br>为什么新代码常常可能是更好的设计？因为：<br><ol><li>写新代码的时候，你知道了更多的需求，写旧代码的时候，往往还根本不明确需求，是在边写代码边探索的过程中，代码很可能有很多补丁，最后的业务逻辑与当初第一版设计代码的时候已经大相径庭。新代码是站在最终对业务逻辑更好的理解的高度上的。</li><li>写新代码的时候你是个有丰富经验的老程序员，写旧代码的时候你很可能是个新手。你升级了，理应写出更优秀的代码。<br></li></ol><br>当然，如果有足够的纪律，就算不换语言的重构也可以得到不错的效果。只是，如果不换语言，以现有的管理水平以及大多数程序员的自律程度，很难真正实现重构的目的而已。<br><br>因此，这件事情本身再正常不过，只是因为他涉及到切换语言，而造成了语言间的纷争，但在我看来这种纷争并无必要。以程序员的惰性，不更换语言的重构确实难以达到理想效果。至于具体更换为什么语言，在这里并不是那么的重要。", "Python 能写游戏吗？有没有什么开源项目？": "<p>首先当然是能的，Github上面有个项目，里面集合了不少的Python开发的小游戏，能玩，也适合新手用来练练手，另外 <a href=\"https://link.zhihu.com/?target=https%3A//www.pygame.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PyGame</a> 这个网站里面里面集合了很多Python开发的小游戏。</p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/grantjenks/free-python-games\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-6cfb88e0ac5b7bdc27d4ff6eedef3e35_l.jpg?source=54b3c3a5\" data-image-width=\"400\" data-image-height=\"400\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">grantjenks/free-python-games</a><ul><li>Python版本的Flapy Bird，简化版，但是感觉更加难玩了。当然你也可以尝试用Python开发原版的Flapy Bird，涵盖了颜色图像等：<a href=\"https://link.zhihu.com/?target=https%3A//www.pygame.org/project/3436/5499\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Flappy Block - 1.0</a></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-b18b184fe7aae369a6c6beee348ca295_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"400\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-b18b184fe7aae369a6c6beee348ca295_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"400\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"400\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-b18b184fe7aae369a6c6beee348ca295_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"400\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-b18b184fe7aae369a6c6beee348ca295_720w.gif?source=54b3c3a5\"></figure><ul><li>小时候经常在手机上玩的一个游戏，也是一款经典的街机游戏，这款游戏进化之后其实就是一个打乒乓的小游戏，这里同样有一个进化版本，图形设计的更加好看：<a href=\"https://link.zhihu.com/?target=https%3A//www.pygame.org/project/1070\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Ping Pong</a></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-387fc157d4ee29bb4fcb899bef5b9d30_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"400\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-387fc157d4ee29bb4fcb899bef5b9d30_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"400\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"400\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-387fc157d4ee29bb4fcb899bef5b9d30_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"400\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-387fc157d4ee29bb4fcb899bef5b9d30_720w.gif?source=54b3c3a5\"></figure><ul><li>以前初高中在学校很无聊的时候跟同桌或者前后桌玩的游戏，你还记得么</li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-e71923611ac1aeb828d37bcffdfc59f0_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"400\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-e71923611ac1aeb828d37bcffdfc59f0_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"400\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"400\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-e71923611ac1aeb828d37bcffdfc59f0_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"400\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e71923611ac1aeb828d37bcffdfc59f0_720w.gif?source=54b3c3a5\"></figure><ul><li>同样一款小时候在小霸王上玩的游戏：<a href=\"https://link.zhihu.com/?target=https%3A//www.pygame.org/project/585\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Junk Jungle</a></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-3f2fc1eecc5fd049839af6cf5227185c_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"400\" class=\"content_image\" width=\"400\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='400'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"400\" class=\"content_image lazy\" width=\"400\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-3f2fc1eecc5fd049839af6cf5227185c_720w.jpg?source=54b3c3a5\"></figure><ul><li>除此之外，一款比较有名基于Pyhton的战争的游戏：<a href=\"https://link.zhihu.com/?target=https%3A//www.taleworlds.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Home - TaleWorlds Entertainment</a></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-74107bbdd8bd4f120b7dd5bdcbc93ade_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"575\" data-rawheight=\"290\" class=\"origin_image zh-lightbox-thumb\" width=\"575\" data-original=\"https://pic4.zhimg.com/v2-74107bbdd8bd4f120b7dd5bdcbc93ade_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='575'%20height='290'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"575\" data-rawheight=\"290\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"575\" data-original=\"https://pic4.zhimg.com/v2-74107bbdd8bd4f120b7dd5bdcbc93ade_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-74107bbdd8bd4f120b7dd5bdcbc93ade_720w.jpg?source=54b3c3a5\"></figure><ul><li>一款看起来非常有趣的3D游戏：<a href=\"https://link.zhihu.com/?target=http%3A//www.galcon.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Galcon</a></li></ul><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-9c054b6635e5a46a7ebaedd430ac07be_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"518\" data-rawheight=\"330\" data-thumbnail=\"https://pic3.zhimg.com/50/v2-9c054b6635e5a46a7ebaedd430ac07be_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"518\" data-original=\"https://pic4.zhimg.com/v2-9c054b6635e5a46a7ebaedd430ac07be_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='518'%20height='330'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"518\" data-rawheight=\"330\" data-thumbnail=\"https://pic3.zhimg.com/50/v2-9c054b6635e5a46a7ebaedd430ac07be_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"518\" data-original=\"https://pic4.zhimg.com/v2-9c054b6635e5a46a7ebaedd430ac07be_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-9c054b6635e5a46a7ebaedd430ac07be_720w.gif?source=54b3c3a5\"></figure><ul><li>据说是能与Pyhton搭上边最有名的一款游戏，但好像他的客户端是用的C++，我试了一下很炸裂：<a href=\"https://link.zhihu.com/?target=https%3A//www.eveonline.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">EVE Online - One community. Countless journeys.</a></li></ul><a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/961364497680773120\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic4.zhimg.com/80/v2-66cb6c5fc5ed29158be862fff87529fb_b.jpg\" data-lens-id=\"961364497680773120\">              <img class=\"thumbnail\" src=\"https://pic4.zhimg.com/80/v2-66cb6c5fc5ed29158be862fff87529fb_b.jpg\">              <span class=\"content\">                <span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span>                <span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/961364497680773120</span>              </span>            </a>            <ul><li>当然还是有很多你想不到的，这里有一个Python Game长长的列表，欢迎品尝：<a href=\"https://link.zhihu.com/?target=https%3A//wiki.python.org/moin/PythonGames\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PythonGames - Python Wiki</a></li></ul><p>收藏顺手点个赞嘛！</p>"}{"请教下 Python 高手，如何用 Python 自动化操作 Excel？": "<p>excel已经成为必不可少的数据处理软件，几乎天天在用。python有很多支持操作excel的第三方库，<code>xlwings</code>是其中一个。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-6b754a8b51ca58fd45af303cc2783190_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"639\" data-rawheight=\"346\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-6b754a8b51ca58fd45af303cc2783190_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"639\" data-original=\"https://pic1.zhimg.com/v2-6b754a8b51ca58fd45af303cc2783190_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='639'%20height='346'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"639\" data-rawheight=\"346\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-6b754a8b51ca58fd45af303cc2783190_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"639\" data-original=\"https://pic1.zhimg.com/v2-6b754a8b51ca58fd45af303cc2783190_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-6b754a8b51ca58fd45af303cc2783190_720w.gif?source=54b3c3a5\"></figure><h3>关于xlwings</h3><p><code>xlwings</code>开源免费，能够非常方便的读写Excel文件中的数据，并且能够进行单元格格式的修改。</p><p><code>xlwings</code>还可以和matplotlib、numpy以及pandas无缝连接，支持读写numpy、pandas数据类型，将matplotlib可视化图表导入到excel中。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-dcb5acebdf0f185a6ba3518dcdc0bc78_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0ce9bcb2021e53cd50f9a6906762a0e6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1200\" data-original=\"https://pic1.zhimg.com/v2-dcb5acebdf0f185a6ba3518dcdc0bc78_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1200'%20height='500'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"500\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0ce9bcb2021e53cd50f9a6906762a0e6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1200\" data-original=\"https://pic1.zhimg.com/v2-dcb5acebdf0f185a6ba3518dcdc0bc78_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-dcb5acebdf0f185a6ba3518dcdc0bc78_720w.jpg?source=54b3c3a5\"></figure><p>最重要的是<code>xlwings</code>可以调用Excel文件中VBA写好的程序，也可以让VBA调用用Python写的程序。</p><p>话不多说，我们开始练一练吧！</p><h3>xlwings安装和导入</h3><p>本文python版本为3.6，系统环境为windows，在jupyter notebook中进行实验。<br><code>xlwings</code>库使用<code>pip</code>安装：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>pip install xlwings\n</code></pre></div><p>xlwings导入：</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>import xlwings as xw\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8438bfddf05f9544cdf8ffabf28ed71e_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"325\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-02169d01f32e5f300ca5fcd5befb3bf9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-8438bfddf05f9544cdf8ffabf28ed71e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='325'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"325\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-02169d01f32e5f300ca5fcd5befb3bf9_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-8438bfddf05f9544cdf8ffabf28ed71e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8438bfddf05f9544cdf8ffabf28ed71e_720w.jpg?source=54b3c3a5\"></figure><p><br></p><h3>xlwings实操</h3><ul><li>建立excel表连接</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>wb = xw.Book(\"e:\\example.xlsx\")\n</code></pre></div><ul><li>实例化工作表对象</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht = wb.sheets[\"sheet1\"]\n</code></pre></div><ul><li>返回工作表绝对路径</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>wb.fullname\n</code></pre></div><ul><li>返回工作簿的名字</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.name\n</code></pre></div><ul><li>在单元格中写入数据</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').value = \"xlwings\"\n</code></pre></div><ul><li>读取单元格内容</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').value\n</code></pre></div><ul><li>清除单元格内容和格式</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').clear()\n</code></pre></div><ul><li>获取单元格的列标</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').column\n</code></pre></div><ul><li>获取单元格的行标</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').row\n</code></pre></div><ul><li>获取单元格的行高</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').row_height\n</code></pre></div><ul><li>获取单元格的列宽</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').column_width\n</code></pre></div><ul><li>列宽自适应</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').columns.autofit()\n</code></pre></div><ul><li>行高自适应</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').rows.autofit()\n</code></pre></div><ul><li>给单元格上背景色，传入RGB值</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').color = (34,139,34)\n</code></pre></div><ul><li>获取单元格颜色，RGB值</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').color\n</code></pre></div><ul><li>清除单元格颜色</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').color = None\n</code></pre></div><ul><li>输入公式，相应单元格会出现计算结果</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').formula='=SUM(B6:B7)'\n</code></pre></div><ul><li>获取单元格公式</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A1').formula_array\n</code></pre></div><ul><li>在单元格中写入批量数据，只需要指定其实单元格位置即可</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A2').value = [['Foo 1', 'Foo 2', 'Foo 3'], [10.0, 20.0, 30.0]]\n</code></pre></div><ul><li>读取表中批量数据，使用expand()方法</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A2').expand().value\n</code></pre></div><ul><li>其实你也可以不指定工作表的地址，直接与电脑里的活动表格进行交互</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span># 写入\nxw.Range(\"E1\").value = \"xlwings\"# 读取\nxw.Range(\"E1\").value\n</code></pre></div><h3>xlwings与numpy、pandas、matplotlib互动</h3><ul><li>支持写入numpy array数据类型</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>import numpy as np\nnp_data = np.array((1,2,3))\nsht.range('F1').value = np_data\n</code></pre></div><ul><li>支持将pandas DataFrame数据类型写入excel</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>import pandas as pd\ndf = pd.DataFrame([[1,2], [3,4]], columns=['a', 'b'])\nsht.range('A5').value = df\n</code></pre></div><ul><li>将数据读取，输出类型为DataFrame</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>sht.range('A5').options(pd.DataFrame,expand='table').value\n</code></pre></div><ul><li>将matplotlib图表写入到excel表格里</li></ul><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>import matplotlib.pyplot as plt\n%matplotlib inline\nfig = plt.figure()\nplt.plot([1, 2, 3, 4, 5])\nsht.pictures.add(fig, name='MyPlot', update=True)\n</code></pre></div><h3>xlwings与VBA互相调用</h3><p>xlwings与VBA的配合非常完美，你可以在python中调用VBA，也可以在VBA中使用python编程，这些通过xlwings都可以巧妙实现。这里不对该内容做详细讲解，感兴趣的童鞋可以去xlwings官网学习。</p><h3>总结</h3><p>xlwings操作excel语法简单，功能强大，又很好结合了pandas、numpy、matplotlib等分析库，非常适合奔波于python和excel之间的童鞋，让你更轻松地分析数据！</p><p>更多Python操作excel办公可以看我的Live</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p></p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p></p>", "如何看待知乎、饿了么后端的招聘纷纷由 Python 渐渐转向 Java？": "一开始会觉得php很快，python很灵活，Ruby很拽，c很高深，nodejs很装逼，JAVA又笨重又麻烦又严格又死板。<br><br><br><br><br>维护三到五年的大型项目之后才会懂得JAVA的好啊。<br><br><br><br>还有人说我项目小的时候无所谓，大了之后重新开发一遍都来得及，说这种话的基本上都是不懂技术听别人瞎叨叨几句的门外汉，遗留系统处理起来能让人抓狂，带来的成本损失几乎无法估量。<br><br><br>更何况大部分时间都是被运营和pm赶鸭子上架的，哪里比得上刚开始就做好架构设计，可扩张，易扩容，能稳定来的方便？<br><br>还跟团队大小有关系，几个人的团队随便你玩儿，能半个月写出来别人2个月的代码量，等团队规模到了20人左右的时候，你会发线，除了那些nb的人，大部分都是2个月的时间才写出来2周的代码量，还得让你再花2周改一遍，随心所欲真不是普通程序员能hold住的，特别是交接。<br><br><br>而JAVA，难就难在架构，赢也赢在架构。你最初架构设计好了，填充内容很方便，初级程序员犯错的自由度也没那么高。开始大部分的团队刚开始哪敢请年薪60万以上的架构师？<br><br><br><br>所以往往就是用了JAVA，又因为没找到核心的架构师资源，又笨重又麻烦，会有人觉得还不如用python简单灵活。<br><br><br><br>用初级的JAVA程序员开发&lt;用初级的Python等程序员开发&lt;用高级的python等程序员开发&lt;用高级的JAVA程序员开发<br><br><br><br><br>虽然不是很准确但大概就是这个意思了，而且一个明显的趋势就是JAVA架构能力在向下渗透和普及，以前可能5年才能做架构，现在3年左右就能摸点门槛了，保证系统能比公司后死了~", "你是如何开始能写 Python 爬虫？": "看了大部分回答不禁叹口气，主要是因为看到很多大牛在回答像“如何入门爬虫”这种问题的时候，一如当年学霸讲解题目，跳步无数，然后留下一句“不就是这样推嘛”，让一众小白菜鸟一脸懵逼。。作为一个0起步（之前连python都不会），目前总算掌握基础，开始向上进阶的菜鸟，深知其中的不易，所以我会在这个回答里，尽可能全面、细节地分享给大家从0学习爬虫的各种步骤，如果对你有帮助，请点赞~<br><br>-------------------------------------------------------------------------------------------------<br><b>#我要写爬虫！</b><br><b>#Ver.1.2 </b><br><b>#Based on: Python 2.7<br>#Author:高野良</b><br>#<b>原创内容，转载请注明出处</b><br><br><b><u>首先！你要对爬虫有个明确的认识，这里引用毛主席的思想：</u></b><br><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/4098627230457e1171b9ec2051772837_720w.jpg?source=54b3c3a5\" data-rawwidth=\"164\" data-rawheight=\"220\" class=\"content_image\" width=\"164\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='164'%20height='220'&gt;&lt;/svg&gt;\" data-rawwidth=\"164\" data-rawheight=\"220\" class=\"content_image lazy\" width=\"164\" data-actualsrc=\"https://pic2.zhimg.com/50/4098627230457e1171b9ec2051772837_720w.jpg?source=54b3c3a5\"></figure><br><blockquote><b>在战略上藐视：</b><br><ul><li><b>“所有网站皆可爬”：</b>互联网的内容都是人写出来的，而且都是偷懒写出来的（不会第一页是a，下一页是8），所以肯定有规律，这就给人有了爬取的可能，可以说，天下没有不能爬的网站<br></li><li><b>“框架不变”：</b>网站不同，但是原理都类似，大部分爬虫都是从 <b>发送请求——获得页面——解析页面——下载内容——储存内容</b> 这样的流程来进行，只是用的工具不同</li></ul><br><b><u>在战术上重视：</u></b><br><ul><li><b>持之以恒，戒骄戒躁：</b>对于初学入门，不可轻易自满，以为爬了一点内容就什么都会爬了，爬虫虽然是比较简单的技术，但是往深学也是没有止境的（比如搜索引擎等）！只有不断尝试，刻苦钻研才是王道！（为何有种小学作文即视感）</li></ul></blockquote>                                ||<br>                                ||<br>                                V<br><br><b><u>然后，你需要一个宏伟的目标，来让你有持续学习的动力（没有实操项目，真的很难有动力）</u></b><br><blockquote>我要爬整个豆瓣！...<br>我要爬整个草榴社区！<br>我要爬知乎各种妹子的联系方式*&amp;^#%^$#<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/9264555e01047baf9f88b1919d21c5ab_720w.jpg?source=54b3c3a5\" data-rawwidth=\"580\" data-rawheight=\"287\" class=\"origin_image zh-lightbox-thumb\" width=\"580\" data-original=\"https://pic3.zhimg.com/9264555e01047baf9f88b1919d21c5ab_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='580'%20height='287'&gt;&lt;/svg&gt;\" data-rawwidth=\"580\" data-rawheight=\"287\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"580\" data-original=\"https://pic3.zhimg.com/9264555e01047baf9f88b1919d21c5ab_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/9264555e01047baf9f88b1919d21c5ab_720w.jpg?source=54b3c3a5\"></figure></blockquote>                                ||<br>                                ||<br>                                V<br><br><b><u>接着，你需要扪心自问一下，自己的python基本功吼不吼啊？</u></b><br><blockquote><b>吼啊！</b>——OK，开始欢快地学习爬虫吧 ！<br><b>不吼？</b><b>你还需要学习一个！</b>赶紧回去看廖雪峰老师的教程，<br>2.7的。至少<u>这些功能和语法</u>你要有基本的掌握 ：<br><ul><li><b>list，dict：</b>用来序列化你爬的东西</li><li><b>切片：</b>用来对爬取的内容进行分割，生成</li><li><b>条件判断（if等）：</b>用来解决爬虫过程中哪些要哪些不要的问题</li><li><b>循环和迭代（for while ）：</b>用来循环，重复爬虫动作</li><li><b>文件读写操作：</b>用来读取参数、保存爬下来的内容等</li></ul></blockquote>                                ||<br>                                ||<br>                                V<br><br><b><u>然后，你需要补充一下下面几个内容，作为你的知识储备：</u></b><br>（注：这里并非要求“掌握”，下面讲的两点，只需要先了解，然后通过具体项目来不断实践，直到熟练掌握）<br><br><b><u>1、网页的基本知识：</u></b><br><blockquote>基本的HTML语言知识（知道href等大学计算机一级内容即可）<br>理解网站的发包和收包的概念（POST GET）<br>稍微一点点的js知识，用于理解动态网页（当然如果本身就懂当然更好啦）</blockquote><br><b><u>2、一些分析语言，为接下来解析网页内容做准备</u></b><br><blockquote>NO.1  正则表达式：扛把子技术，总得会最基础的：<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/69c995e57e29ab383d0717211e8f1c8e_720w.png?source=54b3c3a5\" data-rawwidth=\"799\" data-rawheight=\"1719\" class=\"origin_image zh-lightbox-thumb\" width=\"799\" data-original=\"https://pic2.zhimg.com/69c995e57e29ab383d0717211e8f1c8e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='799'%20height='1719'&gt;&lt;/svg&gt;\" data-rawwidth=\"799\" data-rawheight=\"1719\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"799\" data-original=\"https://pic2.zhimg.com/69c995e57e29ab383d0717211e8f1c8e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/69c995e57e29ab383d0717211e8f1c8e_720w.png?source=54b3c3a5\"></figure><br><br>NO.2  XPATH：高效的分析语言，表达清晰简单，掌握了以后基本可以不用正则<br>参考：<a href=\"https://link.zhihu.com/?target=http%3A//www.w3school.com.cn/xpath/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">XPath 教程</a><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/83020a6e8bfc4d3c38f7c36377da0d46_720w.png?source=54b3c3a5\" data-rawwidth=\"612\" data-rawheight=\"255\" class=\"origin_image zh-lightbox-thumb\" width=\"612\" data-original=\"https://pic1.zhimg.com/83020a6e8bfc4d3c38f7c36377da0d46_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='612'%20height='255'&gt;&lt;/svg&gt;\" data-rawwidth=\"612\" data-rawheight=\"255\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"612\" data-original=\"https://pic1.zhimg.com/83020a6e8bfc4d3c38f7c36377da0d46_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/83020a6e8bfc4d3c38f7c36377da0d46_720w.png?source=54b3c3a5\"></figure><br>NO.3  Beautifulsoup：<br>美丽汤模块解析网页神器,一款神器，如果不用一些爬虫框架（如后文讲到的scrapy），配合request，urllib等模块（后面会详细讲），可以编写各种小巧精干的爬虫脚本<br>官网文档：<a href=\"https://link.zhihu.com/?target=http%3A//beautifulsoup.readthedocs.org/zh_CN/latest/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Beautiful Soup 4.2.0 文档</a><br><b>参考案例：</b><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/5d5b7de4dcaf69fa89ab4f5ef8bdbf3f_720w.png?source=54b3c3a5\" data-rawwidth=\"734\" data-rawheight=\"267\" class=\"origin_image zh-lightbox-thumb\" width=\"734\" data-original=\"https://pic4.zhimg.com/5d5b7de4dcaf69fa89ab4f5ef8bdbf3f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='734'%20height='267'&gt;&lt;/svg&gt;\" data-rawwidth=\"734\" data-rawheight=\"267\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"734\" data-original=\"https://pic4.zhimg.com/5d5b7de4dcaf69fa89ab4f5ef8bdbf3f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/5d5b7de4dcaf69fa89ab4f5ef8bdbf3f_720w.png?source=54b3c3a5\"></figure><br><figure><noscript><img src=\"https://pic4.zhimg.com/50/4a1f7a23745479544a88a42f20748856_720w.png?source=54b3c3a5\" data-rawwidth=\"737\" data-rawheight=\"551\" class=\"origin_image zh-lightbox-thumb\" width=\"737\" data-original=\"https://pic2.zhimg.com/4a1f7a23745479544a88a42f20748856_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='737'%20height='551'&gt;&lt;/svg&gt;\" data-rawwidth=\"737\" data-rawheight=\"551\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"737\" data-original=\"https://pic2.zhimg.com/4a1f7a23745479544a88a42f20748856_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/4a1f7a23745479544a88a42f20748856_720w.png?source=54b3c3a5\"></figure></blockquote>                                ||<br>                                ||<br>                                V<br><b><u>接着，你需要一些高效的工具来辅助</u></b><br><b>（同样，这里先了解，到具体的项目的时候，再熟悉运用）</b><br><blockquote><b>NO.1   F12 开发者工具：</b><br><ul><li>看源代码：快速定位元素<br></li><li>分析xpath：1、此处建议谷歌系浏览器,可以在源码界面直接右键看</li></ul><figure><noscript><img src=\"https://pic4.zhimg.com/50/8be689bc054b6fc2077feca4b99d056e_720w.png?source=54b3c3a5\" data-rawwidth=\"861\" data-rawheight=\"449\" class=\"origin_image zh-lightbox-thumb\" width=\"861\" data-original=\"https://pic1.zhimg.com/8be689bc054b6fc2077feca4b99d056e_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='861'%20height='449'&gt;&lt;/svg&gt;\" data-rawwidth=\"861\" data-rawheight=\"449\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"861\" data-original=\"https://pic1.zhimg.com/8be689bc054b6fc2077feca4b99d056e_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/8be689bc054b6fc2077feca4b99d056e_720w.png?source=54b3c3a5\"></figure><br><br><b>NO.2  抓包工具：</b><br><ul><li>推荐httpfox，火狐浏览器下的插件,比谷歌火狐系自带的F12工具都要好，可以方便查看网站收包发包的信息</li></ul><figure><noscript><img src=\"https://pic2.zhimg.com/50/e1c9d44b06a3b9d199c62f0c0e84c3b8_720w.png?source=54b3c3a5\" data-rawwidth=\"893\" data-rawheight=\"627\" class=\"origin_image zh-lightbox-thumb\" width=\"893\" data-original=\"https://pic1.zhimg.com/e1c9d44b06a3b9d199c62f0c0e84c3b8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='893'%20height='627'&gt;&lt;/svg&gt;\" data-rawwidth=\"893\" data-rawheight=\"627\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"893\" data-original=\"https://pic1.zhimg.com/e1c9d44b06a3b9d199c62f0c0e84c3b8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/e1c9d44b06a3b9d199c62f0c0e84c3b8_720w.png?source=54b3c3a5\"></figure><br><br><b>NO.3  XPATH CHECKER (火狐插件）：</b><br>非常不错的xpath测试工具，但是有几个坑，都是个人踩过的，，在此告诫大家：<br>     1、xpath checker生成的是绝对路径，遇到一些动态生成的图标（常见的有列表翻页按钮等），飘忽不定的绝对路径很有可能造成错误，所以这里建议在真正分析的时候，只是作为参考<br>     2、记得把如下图xpath框里的“x:”去掉，貌似这个是早期版本xpath的语法，目前已经和一些模块不兼容（比如scrapy），还是删去避免报错<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/87c0ab00e3397e0bf8418b0fd693c298_720w.png?source=54b3c3a5\" data-rawwidth=\"700\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"700\" data-original=\"https://pic3.zhimg.com/87c0ab00e3397e0bf8418b0fd693c298_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='700'%20height='408'&gt;&lt;/svg&gt;\" data-rawwidth=\"700\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"700\" data-original=\"https://pic3.zhimg.com/87c0ab00e3397e0bf8418b0fd693c298_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/87c0ab00e3397e0bf8418b0fd693c298_720w.png?source=54b3c3a5\"></figure><br><br><b>NO.4  正则表达测试工具：</b><br><a href=\"https://link.zhihu.com/?target=http%3A//tool.oschina.net/regex/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">在线正则表达式测试</a> ，拿来多练练手，也辅助分析！里面有很多现成的正则表达式可以用，也可以进行参考！</blockquote>                                ||<br>                                ||<br>                                V<br><b><u>ok！这些你都基本有一些了解了，现在开始进入抓取时间，上各种模块吧！python的火，很大原因就是各种好用的模块，这些模块是居家旅行爬网站常备的——</u></b><br><blockquote>urllib<br>urllib2<br>requests</blockquote>                                ||<br>                                ||<br>                                V<br><b><u>不想重复造轮子，有没有现成的框架？</u></b><br><blockquote>华丽丽的scrapy(这块我会重点讲，我的最爱）<br></blockquote>||<br>||<br>V<br><b><u>遇到动态页面怎么办？</u></b><br><blockquote>selenium（会了这个配合scrapy无往不利，是居家旅行爬网站又一神器，下一版更新的时候会着重安利，因为这块貌似目前网上的教程还很少）<br>phantomJS（不显示网页的selenium）</blockquote>||<br>||<br>V<br><b><u>遇到反爬虫策略验证码之类咋整？（不想折腾的直接第四个）</u></b><br><blockquote>PIL<br>opencv<br>pybrain<br>打码平台</blockquote>||<br>||<br>V<br><br><b><u>然后是数据库，这里我认为开始并不需要非常深入，在需要的时候再学习即可</u></b><br><blockquote>mysql<br>mongodb<br>sqllite</blockquote><b>||<br>||<br>V<br><br><u>爬来的东西怎么用？</u></b><br><blockquote>numpy 数据分析，类似matlab的模块<br>pandas（基于numpy的数据分析模块，相信我，如果你不是专门搞TB级数据的，这个就够了）</blockquote><b>||<br>||<br>V</b><br><b><u>进阶技术</u></b><br><blockquote>多线程、分布式</blockquote>———————————— 乱入的分割线 —————————————<br><br>然后学习编程关键的是学以致用，天天捧一本书看不如直接上手操练，下面我通过实际的例子来讲解爬虫——<br>比如最近，楼主在豆瓣上认识了一个很可爱的妹子，发现她一直会更新签名和日志，所以没事就会去她主页看看，但一直没有互相加好友（作为一只高冷的天蝎，怎么可以轻易加好友嘛！而且加了好友，你更新什么都会收到推送，那多没意思啊！一点神秘感都没有了！），可还是想及时获得妹子的最新动态，怎么办？<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/dd6fd1c0cb91ebad9bacd7d11a56bd09_720w.jpg?source=54b3c3a5\" data-rawwidth=\"400\" data-rawheight=\"400\" class=\"content_image\" width=\"400\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='400'&gt;&lt;/svg&gt;\" data-rawwidth=\"400\" data-rawheight=\"400\" class=\"content_image lazy\" width=\"400\" data-actualsrc=\"https://pic4.zhimg.com/50/dd6fd1c0cb91ebad9bacd7d11a56bd09_720w.jpg?source=54b3c3a5\"></figure>于是我就写了个70几行的python脚本，包含爬虫+邮件模块，跑在家里的一台闲置笔记本上，通过计划任务每准点抓取妹子的签名和最新文章一次，发送到我的邮箱。。嗯，其实是很简单的技术，，代码如下所示：<br><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>#-*-coding:utf-8-*- #编码声明，不要忘记！\nimport requests  #这里使用requests，小脚本用它最合适！\nfrom lxml import html    #这里我们用lxml，也就是xpath的方法\n\n#豆瓣模拟登录，最简单的是cookie，会这个方法，80%的登录网站可以搞定\ncookie = {} \n\nraw_cookies = ''#引号里面是你的cookie，用之前讲的抓包工具来获得\n\nfor line in raw_cookies.split(';'):\nkey,value = line.split(\"=\", 1)\ncookie[key] = value #一些格式化操作，用来装载cookies\n\n#重点来了！用requests，装载cookies，请求网站\npage = requests.get('#妹纸的豆瓣主页#',cookies=cookie)\n\n#对获取到的page格式化操作，方便后面用XPath来解析\ntree = html.fromstring(page.text)\n\n#XPath解析，获得你要的文字段落！\nintro_raw = tree.xpath('//span[@id=\"intro_display\"]/text()')\n\n#简单的转码工作，这步根据需要可以省略\nfor i in intro_raw:\nintro = i.encode('utf-8')\n\nprint intro #妹子的签名就显示在屏幕上啦\n\n#接下来就是装载邮件模块，因为与本问题关联不大就不赘述啦~\n</code></pre></div>怎么样~是不是很简单~<br><br><br><br><br><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>V1.2更新日志：\n修改了一些细节和内容顺序\n</code></pre></div>", "python如何画出漂亮的地图？": "<p>Python地图可视化库有大家熟知的pyecharts、plotly、folium，其他回答都有介绍，还有稍低调的bokeh、basemap、geopandas，也是地图可视化的利器。</p><h2>首先介绍下bokeh</h2><p>bokeh擅长制作交互式图表，当然在地图展示方面也毫不逊色。</p><p>Bokeh支持google地图、geojson数据的地理可视化展示，关键是可以动态交互。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f311b4d9f47ff5426ced37ca6ee5136b_720w.gif?source=54b3c3a5\" data-rawwidth=\"886\" data-rawheight=\"668\" data-size=\"normal\" data-caption=\"\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-f311b4d9f47ff5426ced37ca6ee5136b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"886\" data-original=\"https://pic1.zhimg.com/v2-f311b4d9f47ff5426ced37ca6ee5136b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='886'%20height='668'&gt;&lt;/svg&gt;\" data-rawwidth=\"886\" data-rawheight=\"668\" data-size=\"normal\" data-caption=\"\" data-thumbnail=\"https://pic1.zhimg.com/50/v2-f311b4d9f47ff5426ced37ca6ee5136b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"886\" data-original=\"https://pic1.zhimg.com/v2-f311b4d9f47ff5426ced37ca6ee5136b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f311b4d9f47ff5426ced37ca6ee5136b_720w.gif?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-01da51322267ee4d2fad103810c7f482_720w.gif?source=54b3c3a5\" data-rawwidth=\"886\" data-rawheight=\"668\" data-size=\"normal\" data-caption=\"\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-01da51322267ee4d2fad103810c7f482_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"886\" data-original=\"https://pic4.zhimg.com/v2-01da51322267ee4d2fad103810c7f482_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='886'%20height='668'&gt;&lt;/svg&gt;\" data-rawwidth=\"886\" data-rawheight=\"668\" data-size=\"normal\" data-caption=\"\" data-thumbnail=\"https://pic4.zhimg.com/50/v2-01da51322267ee4d2fad103810c7f482_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"886\" data-original=\"https://pic4.zhimg.com/v2-01da51322267ee4d2fad103810c7f482_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-01da51322267ee4d2fad103810c7f482_720w.gif?source=54b3c3a5\"></figure><p>Bokeh官网提供了详细的地图可视化方案，感兴趣的把示例代码拉出来跑一跑。</p><p><a href=\"https://link.zhihu.com/?target=https%3A//docs.bokeh.org/en/latest/docs/user_guide/geo.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">docs.bokeh.org/en/lates</span><span class=\"invisible\">t/docs/user_guide/geo.html</span><span class=\"ellipsis\"></span></a> </p><h2>basemap是专业的地理信息可视化库 </h2><p><b>可以毫不夸张的说，basemap是python地图可视化最牛逼的第三方库，没有之一。</b></p><p>basemap基于matplotlib开发，所以它具有创建数据可视化的所有功能，必须配合matplotlib使用。</p><p>只需要几行代码就可以画一张世界地图：</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"kn\">from</span> <span class=\"nn\">mpl_toolkits.basemap</span> <span class=\"k\">import</span> <span class=\"n\">Basemap</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"nb\">map</span> <span class=\"o\">=</span> <span class=\"n\">Basemap</span><span class=\"p\">()</span>\n\n<span class=\"nb\">map</span><span class=\"o\">.</span><span class=\"n\">drawcoastlines</span><span class=\"p\">()</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">'test.png'</span><span class=\"p\">)</span>\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-1948fdcac5414a9d780d935f1eb6f7ac_720w.jpg?source=54b3c3a5\" data-rawwidth=\"707\" data-rawheight=\"361\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f80cea057228c39ce88368c3d639e0ad_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"707\" data-original=\"https://pic4.zhimg.com/v2-1948fdcac5414a9d780d935f1eb6f7ac_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='707'%20height='361'&gt;&lt;/svg&gt;\" data-rawwidth=\"707\" data-rawheight=\"361\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f80cea057228c39ce88368c3d639e0ad_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"707\" data-original=\"https://pic4.zhimg.com/v2-1948fdcac5414a9d780d935f1eb6f7ac_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-1948fdcac5414a9d780d935f1eb6f7ac_720w.jpg?source=54b3c3a5\"></figure><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>from mpl_toolkits.basemap import Basemap\nimport matplotlib.pyplot as plt\n\nmap = Basemap(projection='ortho', \n              lat_0=0, lon_0=0)\n\n#Fill the globe with a blue color \nmap.drawmapboundary(fill_color='aqua')\n#Fill the continents with the land color\nmap.fillcontinents(color='coral',lake_color='aqua')\n\nmap.drawcoastlines()\n\nplt.show()\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-d3518eb46c8741be310623b50388c35a_720w.jpg?source=54b3c3a5\" data-rawwidth=\"616\" data-rawheight=\"590\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-3544ff49ebd872a3b31f7fa15bf28cac_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"616\" data-original=\"https://pic1.zhimg.com/v2-d3518eb46c8741be310623b50388c35a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='616'%20height='590'&gt;&lt;/svg&gt;\" data-rawwidth=\"616\" data-rawheight=\"590\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-3544ff49ebd872a3b31f7fa15bf28cac_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"616\" data-original=\"https://pic1.zhimg.com/v2-d3518eb46c8741be310623b50388c35a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-d3518eb46c8741be310623b50388c35a_720w.jpg?source=54b3c3a5\"></figure><p>由于basemap无所不能的绘图能力，你还可以画：</p><p><b>风勾图</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-7ce14057359283e0c2ef54470b32e2b1_720w.jpg?source=54b3c3a5\" data-rawwidth=\"676\" data-rawheight=\"549\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8f45b0fee8742df1733e9b5c300411ee_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"676\" data-original=\"https://pic1.zhimg.com/v2-7ce14057359283e0c2ef54470b32e2b1_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='676'%20height='549'&gt;&lt;/svg&gt;\" data-rawwidth=\"676\" data-rawheight=\"549\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-8f45b0fee8742df1733e9b5c300411ee_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"676\" data-original=\"https://pic1.zhimg.com/v2-7ce14057359283e0c2ef54470b32e2b1_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-7ce14057359283e0c2ef54470b32e2b1_720w.jpg?source=54b3c3a5\"></figure><p><b>轮廓图</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-30c743376ad8591ccb2535e183bd9c8a_720w.jpg?source=54b3c3a5\" data-rawwidth=\"637\" data-rawheight=\"561\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-ae5f24824f07164838ea921bba04500a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"637\" data-original=\"https://pic4.zhimg.com/v2-30c743376ad8591ccb2535e183bd9c8a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='637'%20height='561'&gt;&lt;/svg&gt;\" data-rawwidth=\"637\" data-rawheight=\"561\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-ae5f24824f07164838ea921bba04500a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"637\" data-original=\"https://pic4.zhimg.com/v2-30c743376ad8591ccb2535e183bd9c8a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-30c743376ad8591ccb2535e183bd9c8a_720w.jpg?source=54b3c3a5\"></figure><p><b>填充轮廓图</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-6d425c36ec7693f5a2038b6a8ea856ef_720w.jpg?source=54b3c3a5\" data-rawwidth=\"619\" data-rawheight=\"539\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-a45bd161d705d6359b8b785a8c7316bd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"619\" data-original=\"https://pic2.zhimg.com/v2-6d425c36ec7693f5a2038b6a8ea856ef_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='619'%20height='539'&gt;&lt;/svg&gt;\" data-rawwidth=\"619\" data-rawheight=\"539\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-a45bd161d705d6359b8b785a8c7316bd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"619\" data-original=\"https://pic2.zhimg.com/v2-6d425c36ec7693f5a2038b6a8ea856ef_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-6d425c36ec7693f5a2038b6a8ea856ef_720w.jpg?source=54b3c3a5\"></figure><p><b>伪彩色图</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-ad010f255b941708f8a8ae3497d3647b_720w.jpg?source=54b3c3a5\" data-rawwidth=\"631\" data-rawheight=\"542\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-6ca8c849b81a118148262f20756f61dd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"631\" data-original=\"https://pic1.zhimg.com/v2-ad010f255b941708f8a8ae3497d3647b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='631'%20height='542'&gt;&lt;/svg&gt;\" data-rawwidth=\"631\" data-rawheight=\"542\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-6ca8c849b81a118148262f20756f61dd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"631\" data-original=\"https://pic1.zhimg.com/v2-ad010f255b941708f8a8ae3497d3647b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-ad010f255b941708f8a8ae3497d3647b_720w.jpg?source=54b3c3a5\"></figure><p><b>地理标记</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-aed8bae442b44418a7c947f7bb17eddb_720w.jpg?source=54b3c3a5\" data-rawwidth=\"603\" data-rawheight=\"577\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-44516b31e3a020d4a535f5477ecec0be_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"603\" data-original=\"https://pic1.zhimg.com/v2-aed8bae442b44418a7c947f7bb17eddb_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='603'%20height='577'&gt;&lt;/svg&gt;\" data-rawwidth=\"603\" data-rawheight=\"577\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-44516b31e3a020d4a535f5477ecec0be_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"603\" data-original=\"https://pic1.zhimg.com/v2-aed8bae442b44418a7c947f7bb17eddb_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-aed8bae442b44418a7c947f7bb17eddb_720w.jpg?source=54b3c3a5\"></figure><p><b>矢量场流线图</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-90c0678b53f4d30335c44cbe2e86d7f3_720w.jpg?source=54b3c3a5\" data-rawwidth=\"680\" data-rawheight=\"559\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e254aa761987f3539fe38dd6892be029_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"680\" data-original=\"https://pic2.zhimg.com/v2-90c0678b53f4d30335c44cbe2e86d7f3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='680'%20height='559'&gt;&lt;/svg&gt;\" data-rawwidth=\"680\" data-rawheight=\"559\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e254aa761987f3539fe38dd6892be029_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"680\" data-original=\"https://pic2.zhimg.com/v2-90c0678b53f4d30335c44cbe2e86d7f3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-90c0678b53f4d30335c44cbe2e86d7f3_720w.jpg?source=54b3c3a5\"></figure><p><b>实景地图</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-2941f9c81c4e46e8fe783fdf9a305b87_720w.jpg?source=54b3c3a5\" data-rawwidth=\"722\" data-rawheight=\"482\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7d6b4e475b289105034dbfd14933750c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"722\" data-original=\"https://pic1.zhimg.com/v2-2941f9c81c4e46e8fe783fdf9a305b87_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='722'%20height='482'&gt;&lt;/svg&gt;\" data-rawwidth=\"722\" data-rawheight=\"482\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-7d6b4e475b289105034dbfd14933750c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"722\" data-original=\"https://pic1.zhimg.com/v2-2941f9c81c4e46e8fe783fdf9a305b87_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-2941f9c81c4e46e8fe783fdf9a305b87_720w.jpg?source=54b3c3a5\"></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-0c14cf197fd62148049ba5b274b554e3_720w.jpg?source=54b3c3a5\" data-rawwidth=\"702\" data-rawheight=\"479\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-735af06b22cb75348b7763b9dcef6565_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"702\" data-original=\"https://pic1.zhimg.com/v2-0c14cf197fd62148049ba5b274b554e3_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='702'%20height='479'&gt;&lt;/svg&gt;\" data-rawwidth=\"702\" data-rawheight=\"479\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-735af06b22cb75348b7763b9dcef6565_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"702\" data-original=\"https://pic1.zhimg.com/v2-0c14cf197fd62148049ba5b274b554e3_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-0c14cf197fd62148049ba5b274b554e3_720w.jpg?source=54b3c3a5\"></figure><p>多子图地图</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-50063ff0d158647ca7585e91c4c9ecba_720w.jpg?source=54b3c3a5\" data-rawwidth=\"802\" data-rawheight=\"579\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-977ab6e3b89aea65bb4f1f458791173b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"802\" data-original=\"https://pic2.zhimg.com/v2-50063ff0d158647ca7585e91c4c9ecba_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='802'%20height='579'&gt;&lt;/svg&gt;\" data-rawwidth=\"802\" data-rawheight=\"579\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-977ab6e3b89aea65bb4f1f458791173b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"802\" data-original=\"https://pic2.zhimg.com/v2-50063ff0d158647ca7585e91c4c9ecba_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-50063ff0d158647ca7585e91c4c9ecba_720w.jpg?source=54b3c3a5\"></figure><p><b>3D地图</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-bfb5e0ac4998c9acb522fd620ca892a9_720w.jpg?source=54b3c3a5\" data-rawwidth=\"838\" data-rawheight=\"460\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-b51770d8323d9c951f020571d7e93b0e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"838\" data-original=\"https://pic4.zhimg.com/v2-bfb5e0ac4998c9acb522fd620ca892a9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='838'%20height='460'&gt;&lt;/svg&gt;\" data-rawwidth=\"838\" data-rawheight=\"460\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-b51770d8323d9c951f020571d7e93b0e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"838\" data-original=\"https://pic4.zhimg.com/v2-bfb5e0ac4998c9acb522fd620ca892a9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-bfb5e0ac4998c9acb522fd620ca892a9_720w.jpg?source=54b3c3a5\"></figure><p>注：评论里提醒，由于basemap支持py2，而py2已经停止维护，所以basemap也被matplotlib放弃了。取而代之的是cartopy ，支持py3，完美结合matplotlib。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-eca4fbca24235eb513e80b63b893a7e5_720w.jpg?source=54b3c3a5\" data-rawwidth=\"750\" data-rawheight=\"1334\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-82bf54b4647a8d7cec3ce10dc4e9748c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"750\" data-original=\"https://pic1.zhimg.com/v2-eca4fbca24235eb513e80b63b893a7e5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='750'%20height='1334'&gt;&lt;/svg&gt;\" data-rawwidth=\"750\" data-rawheight=\"1334\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-82bf54b4647a8d7cec3ce10dc4e9748c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"750\" data-original=\"https://pic1.zhimg.com/v2-eca4fbca24235eb513e80b63b893a7e5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-eca4fbca24235eb513e80b63b893a7e5_720w.jpg?source=54b3c3a5\"></figure><h2>最后说说geopandas </h2><p>geopandas，顾名思义是基于pandas的地图可视化工具，所以它对地理数据的处理非常方便。</p><p>推荐大家将geopandas作为地理信息数据处理的主要工具。</p><p>之前写过一个geopandas的入门教程，供大家参考：</p><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://zhuanlan.zhihu.com/p/80210579\" data-image=\"https://pic2.zhimg.com/v2-2188187bf77ce8935853a63b17c84f71_bh.jpg?source=54b3c3a5\" data-image-width=\"656\" data-image-height=\"379\" class=\"internal\">朱卫军：geopandas，用python分析地理空间数据原来这么简单！</a><p>配合使用matplotlib，很简单的代码就可以画出漂亮的地图：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8969d04d38523412b79524c9d5609044_720w.jpg?source=54b3c3a5\" data-rawwidth=\"815\" data-rawheight=\"505\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-63bd1cdab794b525a844c70c4cc2a9f6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"815\" data-original=\"https://pic2.zhimg.com/v2-8969d04d38523412b79524c9d5609044_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='815'%20height='505'&gt;&lt;/svg&gt;\" data-rawwidth=\"815\" data-rawheight=\"505\" data-size=\"normal\" data-caption=\"\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-63bd1cdab794b525a844c70c4cc2a9f6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"815\" data-original=\"https://pic2.zhimg.com/v2-8969d04d38523412b79524c9d5609044_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8969d04d38523412b79524c9d5609044_720w.jpg?source=54b3c3a5\"></figure><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p></p>"}{"Python 编码为什么那么蛋疼？": "<p>在备编码相关的课件时，在知乎上看到本文得票最高的大神关于Python编码的回答</p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-afd26cc6201add5c2ca477725190bb96_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1414\" data-rawheight=\"796\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-769f376909b8443817135b67581aa589_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1414\" data-original=\"https://pic4.zhimg.com/v2-afd26cc6201add5c2ca477725190bb96_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1414'%20height='796'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1414\" data-rawheight=\"796\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-769f376909b8443817135b67581aa589_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1414\" data-original=\"https://pic4.zhimg.com/v2-afd26cc6201add5c2ca477725190bb96_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-afd26cc6201add5c2ca477725190bb96_720w.jpg?source=54b3c3a5\"></figure><p>大神的这段话说的太对了，搞Python不把编码彻底搞明白，总有一天它会猝不及防坑你一把。</p><p>不过感觉这位大视的答案并没把编码问题真正写明白，所以在下再补充一些。 </p><p>折腾编码问题，有很多次，我以为自已明白了，最终发现，那只不过是自圆其说而已，这一次，终于100%确定，动笔即不再改！</p><p><br></p><p>看这篇文章前，你应该已经知道了为什么有编码，以及编码的种类情况</p><ul><li>ASCII 占1个字节，只支持英文</li><li>GB2312 占2个字节，支持6700+汉字</li><li>GBK GB2312的升级版，支持21000+汉字</li><li>Shift-JIS 日本字符</li><li>ks_c_5601-1987 韩国编码</li><li>TIS-620 泰国编码</li></ul><p>由于每个国家都有自己的字符，所以其对应关系也涵盖了自己国家的字符，但是以上编码都存在局限性，即：仅涵盖本国字符，无其他国家字符的对应关系。应运而生出现了万国码，他涵盖了全球所有的文字和二进制的对应关系，</p><ul><li>Unicode 2-4字节 已经收录136690个字符，并还在一直不断扩张中...</li></ul><p>Unicode 起到了2个作用：</p><ol><li>直接支持全球所有语言，每个国家都可以不用再使用自己之前的旧编码了，用unicode就可以了。(就跟英语是全球统一语言一样)</li><li>unicode包含了跟全球所有国家编码的映射关系，为什么呢？后面再讲</li></ol><p>Unicode解决了字符和二进制的对应关系，但是使用unicode表示一个字符，太浪费空间。例如：利用unicode表示“Python”需要12个字节才能表示，比原来ASCII表示增加了1倍。</p><p>由于计算机的内存比较大，并且字符串在内容中表示时也不会特别大，所以内容可以使用unicode来处理，但是存储和网络传输时一般数据都会非常多，那么增加1倍将是无法容忍的！！！</p><p>为了解决存储和网络传输的问题，出现了Unicode Transformation Format，学术名UTF，即：对unicode中的进行转换，以便于在存储和网络传输时可以节省空间!</p><ul><li>UTF-8： 使用1、2、3、4个字节表示所有字符；优先使用1个字符、无法满足则使增加一个字节，最多4个字节。英文占1个字节、欧洲语系占2个、东亚占3个，其它及特殊字符占4个</li><li>UTF-16： 使用2、4个字节表示所有字符；优先使用2个字节，否则使用4个字节表示。</li><li>UTF-32： 使用4个字节表示所有字符；</li></ul><p>总结：<b>UTF 是为unicode编码 设计 的一种 在存储 和传输时节省空间的编码方案。</b></p><p><br></p><h2><b>字符在硬盘上的存储 </b></h2><p>无论以什么编码在内存里显示字符，存到硬盘上都是2进制。</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"n\">ascii编码</span><span class=\"p\">(</span><span class=\"n\">美国</span><span class=\"p\">)</span><span class=\"err\">：</span>\n    <span class=\"n\">l</span>   <span class=\"mb\">0b1101100</span>\n    <span class=\"n\">o</span>   <span class=\"mb\">0b1101111</span>\n    <span class=\"n\">v</span>   <span class=\"mb\">0b1110110</span>\n    <span class=\"n\">e</span>   <span class=\"mb\">0b1100101</span>\n<span class=\"n\">GBK编码</span><span class=\"p\">(</span><span class=\"n\">中国</span><span class=\"p\">)</span><span class=\"err\">：</span>\n    <span class=\"n\">老</span>   <span class=\"mb\">0b11000000</span> <span class=\"mb\">0b11001111</span>\n    <span class=\"n\">男</span>   <span class=\"mb\">0b11000100</span> <span class=\"mb\">0b11010000</span>\n    <span class=\"n\">孩</span>   <span class=\"mb\">0b10111010</span> <span class=\"mb\">0b10100010</span>\n\n<span class=\"n\">Shift_JIS编码</span><span class=\"p\">(</span><span class=\"n\">日本</span><span class=\"p\">)</span><span class=\"err\">：</span>\n    <span class=\"n\">私</span>   <span class=\"mb\">0b10001110</span> <span class=\"mb\">0b10000100</span>\n    <span class=\"n\">は</span>   <span class=\"mb\">0b10000010</span> <span class=\"mb\">0b11001101</span>\n\n<span class=\"n\">ks_c_5601</span><span class=\"o\">-</span><span class=\"mi\">1987</span><span class=\"n\">编码</span><span class=\"p\">(</span><span class=\"n\">韩国</span><span class=\"p\">)</span><span class=\"err\">：</span>\n    <span class=\"n\">나</span>   <span class=\"mb\">0b10110011</span> <span class=\"mb\">0b10101010</span>\n    <span class=\"n\">는</span>   <span class=\"mb\">0b10110100</span> <span class=\"mb\">0b11000010</span>\n\n<span class=\"n\">TIS</span><span class=\"o\">-</span><span class=\"mi\">620</span><span class=\"n\">编码</span><span class=\"p\">(</span><span class=\"n\">泰国</span><span class=\"p\">)</span><span class=\"err\">：</span>\n    <span class=\"n\">ฉัน</span>  <span class=\"mb\">0b10101001</span> <span class=\"mb\">0b11010001</span> <span class=\"mb\">0b10111001</span>\n<span class=\"o\">...</span>\n<span class=\"n\">要注意的是</span><span class=\"err\">，</span><span class=\"n\">存到硬盘上时是以何种编码存的</span><span class=\"err\">，</span><span class=\"n\">再从硬盘上读出来时</span><span class=\"err\">，</span><span class=\"n\">就必须以何种编码读</span><span class=\"err\">，</span><span class=\"n\">要不然就乱了</span><span class=\"err\">。。</span>\n</code></pre></div><h2><b>编码的转换 </b></h2><p>虽然国际语言是英语 ，但大家在自己的国家依然说自已的语言，不过出了国， 你就得会英语<br>编码也一样，虽然有了unicode and utf-8 ， 但是由于历史问题，各个国家依然在大量使用自己的编码，比如中国的windows,默认编码依然是gbk,而不是utf-8</p><p>基于此，如果中国的软件出口到美国，在美国人的电脑上就会显示乱码，因为他们没有gbk编码。<br>若想让中国的软件可以正常的在 美国人的电脑上显示，只有以下2条路可走：</p><ol><li><b>让美国人的电脑上都装上gbk编码</b></li><li><b>把你的软件编码以utf-8编码</b></li></ol><p>第1种方法几乎不可能实现，第2种方法比较简单。 但是也只能是针对新开发的软件。 如果你之前开发的软件就是以gbk编码的，上百万行代码可能已经写出去了，重新编码成utf-8格式也会费很大力气。</p><p>so , 针对已经用gbk开发完毕的项目，以上2种方案都不能轻松的让项目在美国人电脑上正常显示，难道没有别的办法了么？<br>有， 还记得我们讲unicode其中一个功能是其包含了跟全球所有国家编码的映射关系，意思就是，你写的是gbk的“路飞学城”,但是unicode能自动知道它在unicode中的“路飞学城”的编码是什么，如果这样的话，那是不是意味着，无论你以什么编码存储的数据 ，只要你的软件在把数据从硬盘读到内存里，转成unicode来显示，就可以了。<br>由于所有的系统、编程语言都默认支持unicode，那你的gbk软件放到美国电脑 上，加载到内存里，变成了unicode,中文就可以正常展示啦。</p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-9df89f850e45bfe6600a24982cfd749f_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2112\" data-rawheight=\"1708\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-074d05c6e27470f7cc0cadb46901fb19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2112\" data-original=\"https://pic1.zhimg.com/v2-9df89f850e45bfe6600a24982cfd749f_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2112'%20height='1708'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2112\" data-rawheight=\"1708\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-074d05c6e27470f7cc0cadb46901fb19_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2112\" data-original=\"https://pic1.zhimg.com/v2-9df89f850e45bfe6600a24982cfd749f_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-9df89f850e45bfe6600a24982cfd749f_720w.jpg?source=54b3c3a5\"></figure><p>这个表你自己也可以下载下来 </p><p>unicode与gbk的映射表 <a href=\"https://link.zhihu.com/?target=http%3A//www.unicode.org/charts/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">unicode.org/charts/</span><span class=\"invisible\"></span></a> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-ed0e446e60dd3ff0d4010166287693ee_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"680\" data-rawheight=\"574\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e25c63a7f72bf182996dd34af204706d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"680\" data-original=\"https://pic4.zhimg.com/v2-ed0e446e60dd3ff0d4010166287693ee_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='680'%20height='574'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"680\" data-rawheight=\"574\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-e25c63a7f72bf182996dd34af204706d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"680\" data-original=\"https://pic4.zhimg.com/v2-ed0e446e60dd3ff0d4010166287693ee_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-ed0e446e60dd3ff0d4010166287693ee_720w.jpg?source=54b3c3a5\"></figure><h2><b>Python3的执行过程</b></h2><p>在看实际代码的例子前，我们来聊聊，python3 执行代码的过程</p><ol><li>解释器找到代码文件，把代码字符串按文件头定义的编码加载到内存，转成unicode</li><li>把代码字符串按照语法规则进行解释，</li><li>所有的变量字符都会以unicode编码声明</li></ol><p><br></p><h2><b>编码转换过程</b></h2><p>实际代码演示，在py3上 把你的代码以utf-8编写， 保存，然后在windows上执行，</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>s = '路飞学城'\nprint(s)\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8e74f4e5e7a3de6ee5e5e72b8d511863_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1592\" data-rawheight=\"1190\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-0d6c19164e54b3b54be01f14fb5b93af_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1592\" data-original=\"https://pic1.zhimg.com/v2-8e74f4e5e7a3de6ee5e5e72b8d511863_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1592'%20height='1190'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1592\" data-rawheight=\"1190\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-0d6c19164e54b3b54be01f14fb5b93af_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1592\" data-original=\"https://pic1.zhimg.com/v2-8e74f4e5e7a3de6ee5e5e72b8d511863_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8e74f4e5e7a3de6ee5e5e72b8d511863_720w.jpg?source=54b3c3a5\"></figure><p>so ,一切都很美好，到这里，我们关于编码的学习按说就可以结束了。</p><p>但是，如生活一样，美好的表面下，总是隐藏着不尽如人意，上面的utf-8编码之所以能在windows gbk的终端下显示正常，是因为到了内存里python解释器把utf-8转成了unicode , 但是这只是python3, 并不是所有的编程语言在内存里默认编码都是unicode,比如 万恶的python2 就不是， 它的默认编码是ASCII，想写中文，就必须声明文件头的coding为gbk or utf-8, 声明之后，python2解释器仅以文件头声明的编码去解释你的代码，加载到内存后，并不会主动帮你转为unicode,也就是说，你的文件编码是utf-8,加载到内存里，你的变量字符串就也是utf-8, 这意味着什么你知道么？。。。意味着，你以utf-8编码的文件，在windows是乱码。 </p><p><br></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e73f32423c3f6546e8359c64f36b3345_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1470\" data-rawheight=\"1098\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-2def39d8fb51a924beee95d98b604193_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1470\" data-original=\"https://pic1.zhimg.com/v2-e73f32423c3f6546e8359c64f36b3345_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1470'%20height='1098'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1470\" data-rawheight=\"1098\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-2def39d8fb51a924beee95d98b604193_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1470\" data-original=\"https://pic1.zhimg.com/v2-e73f32423c3f6546e8359c64f36b3345_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e73f32423c3f6546e8359c64f36b3345_720w.jpg?source=54b3c3a5\"></figure><p>乱是正常的，不乱才不正常，因为只有2种情况 ，你的windows上显示才不会乱</p><ol><li><b>字符串以GBK格式显示</b></li><li><b>字符串是unicode编码</b></li></ol><p>既然Python2并不会自动的把文件编码转为unicode存在内存里， 那就只能使出最后一招了，你自己人肉转。Py3 自动把文件编码转为unicode必定是调用了什么方法，这个方法就是，decode(解码) 和encode(编码)</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>UTF-8 --&gt; decode 解码 --&gt; Unicode\nUnicode --&gt; encode 编码 --&gt; GBK / UTF-8 ..\n</code></pre></div><p><b>decode示例</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-72a3622968d25e446ffa37ad88049865_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1924\" data-rawheight=\"1160\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-02bbaa24a711c1ca0b670b4106dee426_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1924\" data-original=\"https://pic1.zhimg.com/v2-72a3622968d25e446ffa37ad88049865_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1924'%20height='1160'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1924\" data-rawheight=\"1160\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-02bbaa24a711c1ca0b670b4106dee426_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1924\" data-original=\"https://pic1.zhimg.com/v2-72a3622968d25e446ffa37ad88049865_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-72a3622968d25e446ffa37ad88049865_720w.jpg?source=54b3c3a5\"></figure><p><b>encode 示例</b></p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-9be106a14d7146c7a08ab84a85998864_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2510\" data-rawheight=\"1260\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-0f8fe50e75a4b0345d451a867fef9ad0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2510\" data-original=\"https://pic3.zhimg.com/v2-9be106a14d7146c7a08ab84a85998864_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2510'%20height='1260'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2510\" data-rawheight=\"1260\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-0f8fe50e75a4b0345d451a867fef9ad0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2510\" data-original=\"https://pic3.zhimg.com/v2-9be106a14d7146c7a08ab84a85998864_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-9be106a14d7146c7a08ab84a85998864_720w.jpg?source=54b3c3a5\"></figure><p>记住下图规则</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-8222d78655d3b00c676c48641df8e8a7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1838\" data-rawheight=\"1078\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-417b15942a67a6a4bb1c7df2ac762253_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1838\" data-original=\"https://pic2.zhimg.com/v2-8222d78655d3b00c676c48641df8e8a7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1838'%20height='1078'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1838\" data-rawheight=\"1078\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-417b15942a67a6a4bb1c7df2ac762253_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1838\" data-original=\"https://pic2.zhimg.com/v2-8222d78655d3b00c676c48641df8e8a7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-8222d78655d3b00c676c48641df8e8a7_720w.jpg?source=54b3c3a5\"></figure><h2><b>如何验证编码转对了呢？</b></h2><ol><li>查看数据类型，python 2 里有专门的unicode 类型</li><li>查看unicode编码映射表</li></ol><p>　　unicode字符是有专门的unicode类型来判断的，但是utf-8,gbk编码的字符都是str,你如果分辨出来的当前的字符串数据是何种编码的呢？ 有人说可以通过字节长度判断，因为utf-8一个中文占3字节，gbk一个占2字节</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-473680e654e89e75e46a0f2d20d36bd9_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1860\" data-rawheight=\"1340\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-851c973464ed9341a8e0a2dac4552d64_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1860\" data-original=\"https://pic1.zhimg.com/v2-473680e654e89e75e46a0f2d20d36bd9_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1860'%20height='1340'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1860\" data-rawheight=\"1340\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-851c973464ed9341a8e0a2dac4552d64_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1860\" data-original=\"https://pic1.zhimg.com/v2-473680e654e89e75e46a0f2d20d36bd9_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-473680e654e89e75e46a0f2d20d36bd9_720w.jpg?source=54b3c3a5\"></figure><p>靠上面字节个数，虽然也能大体判断是什么类型，但总觉得不是很专业。</p><p>怎么才能精确的验证一个字符的编码呢，就是拿这些16进制的数跟编码表里去匹配。</p><p>“路飞学城”的unicode编码的映射位置是\tu'\\u8def\\u98de\\u5b66\\u57ce' ，‘\\u8def’ 就是‘路’，到表里搜一下。<br>“路飞学城”对应的GBK编码是'\\xc2\\xb7\\xb7\\xc9\\xd1\\xa7\\xb3\\xc7' ，2个字节一个中文，\"路\" 的二进制 \"\\xc2\\xb7\"是4个16进制，正好2字节，拿它到unicode映射表里对一下， 发现是G0-4237，并不是\\xc2\\xb7呀。。。擦。演砸了吧。。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-eaf4bd1d9f5b8848189c9ee5427a4edc_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1092\" data-rawheight=\"234\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-555e8c118b3b75c8836bf8d58216e641_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1092\" data-original=\"https://pic1.zhimg.com/v2-eaf4bd1d9f5b8848189c9ee5427a4edc_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1092'%20height='234'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1092\" data-rawheight=\"234\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-555e8c118b3b75c8836bf8d58216e641_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1092\" data-original=\"https://pic1.zhimg.com/v2-eaf4bd1d9f5b8848189c9ee5427a4edc_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-eaf4bd1d9f5b8848189c9ee5427a4edc_720w.jpg?source=54b3c3a5\"></figure><p>再查下“飞” \\u98de ，对应的是G0-3749， 跟\\xb7\\xc9也对不上。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-5b4826b5a9cba5ddb24f7fade394e5b4_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"766\" data-rawheight=\"208\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8fcbf21ff7bef14481af968ece5bdf8d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"766\" data-original=\"https://pic4.zhimg.com/v2-5b4826b5a9cba5ddb24f7fade394e5b4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='766'%20height='208'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"766\" data-rawheight=\"208\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-8fcbf21ff7bef14481af968ece5bdf8d_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"766\" data-original=\"https://pic4.zhimg.com/v2-5b4826b5a9cba5ddb24f7fade394e5b4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-5b4826b5a9cba5ddb24f7fade394e5b4_720w.jpg?source=54b3c3a5\"></figure><p>虽然对不上， 但好\\xc2\\xb7 和G0-4237中的第2位的2和第4位的7对上了，“飞”字也是一样，莫非巧合？ </p><p>把他们都转成2进制显示试试 </p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>路\nC               2\n8   4   2   1   8   4   2   1\n1   1   0   0   0   0   1   0\n\nB               7\n8   4   2   1   8   4   2   1\n1   0   1   1   0   1   1   1\n\n\n飞\nB               7\n8   4   2   1   8   4   2   1\n1   0   1   1   0   1   1   1\n\nC               9\n8   4   2   1   8   4   2   1\n1   1   0   0   1   0   0   1\n</code></pre></div><p>这个“路”还是跟G0-4237对不上呀，没错， 但如果你把路\\xc2\\xb7的每个二进制字节的左边第一个bit变成0试试呢， 我擦，加起来就真的是4237了呀。。难道又是巧合？？？ 　</p><p>必然不是，是因为，GBK的编码表示形式决定的。。因为GBK编码在设计初期就考虑到了要兼容ASCII,即如果是英文，就用一个字节表示，2个字节就是中文，但如何区别连在一起的2个字节是代表2个英文字母，还是一个中文汉字呢？ 中国人如此聪明，决定，2个字节连在一起，如果每个字节的第1位(也就是相当于128的那个2进制位)如果是1，就代表这是个中文，这个首位是128的字节被称为高字节。 也就是2个高字节连在一起，必然就是一个中文。 你怎么如此笃定？因为0-127已经表示了英文的绝大部分字符，128-255是ASCII的扩展表，表示的都是极特殊的字符，一般没什么用。所以中国人就直接拿来用了。 </p><p>问：那为什么上面 \"\\xc2\\xb7\"的2进制要把128所在的位去掉才能与unicode编码表里的G0-4237匹配上呢？</p><p>这只能说是unicode在映射表的表达上直接忽略了高字节，但真正映射的时候 ，肯定还是需要用高字节的哈。</p><p><br></p><h2><b>Python bytes类型</b></h2><p>在python 2 上写字符串</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; s = \"路飞\"\n&gt;&gt;&gt; print s\n路飞\n&gt;&gt;&gt; s\n'\\xe8\\xb7\\xaf\\xe9\\xa3\\x9e'\n</code></pre></div><p>虽说打印的是路飞，但直接调用变量s，看到的却是一个个的16进制表示的二进制字节，我们怎么称呼这样的数据呢？直接叫二进制么？也可以， 但相比于010101，这个数据串在表示形式上又把2进制转成了16进制来表示，这是为什么呢？ 哈，为的就是让人们看起来更可读。我们称之为bytes类型，即字节类型， 它把8个二进制一组称为一个byte,用16进制来表示。 　</p><p><br></p><p>说这个有什么意思呢？</p><p>想告诉你一个事实， 就是，python2的字符串其实更应该称为字节串。 通过存储方式就能看出来， 但python2里还有一个类型是bytes呀，难道又叫bytes又叫字符串？ 嗯 ，是的，在python2里，bytes == str ， 其实就是一回事　</p><p>除此之外呢， python2里还有个单独的类型是unicode , 把字符串解码后，就会变成unicode</p><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s</span>\n<span class=\"s1\">'</span><span class=\"se\">\\xe8\\xb7\\xaf\\xe9\\xa3\\x9e</span><span class=\"s1\">'</span> <span class=\"c1\">#utf-8</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">)</span>\n<span class=\"sa\">u</span><span class=\"s1\">'</span><span class=\"se\">\\u8def\\u98de</span><span class=\"s1\">'</span> <span class=\"c1\">#unicode 在unicode编码表里对应的位置</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n<span class=\"n\">路飞</span> <span class=\"c1\">#unicode 格式的字符</span>\n</code></pre></div><p><br></p><p>由于Python创始人在开发初期认知的局限性，其并未预料到python能发展成一个全球流行的语言，导致其开发初期并没有把支持全球各国语言当做重要的事情来做，所以就轻佻的把ASCII当做了默认编码。 当后来大家对支持汉字、日文、法语等语言的呼声越来越高时，Python于是准备引入unicode,但若直接把默认编码改成unicode的话是不现实的， 因为很多软件就是基于之前的默认编码ASCII开发的，编码一换，那些软件的编码就都乱了。所以Python 2 就直接 搞了一个新的字符类型，就叫unicode类型，比如你想让你的中文在全球所有电脑上正常显示，在内存里就得把字符串存成unicode类型</p><div class=\"highlight\"><pre><code class=\"language-text\"><span></span>&gt;&gt;&gt; s = \"路飞\"\n&gt;&gt;&gt; s\n'\\xe8\\xb7\\xaf\\xe9\\xa3\\x9e'\n&gt;&gt;&gt; s2 = s.decode(\"utf-8\")\n&gt;&gt;&gt; s2\nu'\\u8def\\u98de'\n&gt;&gt;&gt; type(s2)\n&lt;type 'unicode'&gt;\n</code></pre></div><p><br></p><p>时间来到2008年，python发展已近20年，创始人龟叔越来越觉得python里的好多东西已发展的不像他的初衷那样，开始变得臃肿、不简洁、且有些设计让人摸不到头脑，比如unicode 与str类型，str 与bytes类型的关系，这给很多python程序员造成了困扰。<br>龟叔再也忍不了，像之前一样的修修补补已不能让Python变的更好，于是来了个大变革，Python3横空出世，不兼容python2,python3比python2做了非常多的改进，其中一个就是终于把字符串变成了unicode,文件默认编码变成了utf-8,这意味着，只要用python3,无论你的程序是以哪种编码开发的，都可以在全球各国电脑上正常显示，真是太棒啦！</p><p>PY3 除了把字符串的编码改成了unicode, 还把str 和bytes 做了明确区分， str 就是unicode格式的字符， bytes就是单纯二进制啦。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-2c06bd4a30d0a545e26d609de2a51839_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1488\" data-rawheight=\"734\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-963913fd1919a057a87de3f70a5681fd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1488\" data-original=\"https://pic1.zhimg.com/v2-2c06bd4a30d0a545e26d609de2a51839_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1488'%20height='734'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1488\" data-rawheight=\"734\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-963913fd1919a057a87de3f70a5681fd_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1488\" data-original=\"https://pic1.zhimg.com/v2-2c06bd4a30d0a545e26d609de2a51839_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-2c06bd4a30d0a545e26d609de2a51839_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p>最后一个问题，为什么在py3里，把unicode编码后，字符串就变成了bytes格式？ 你直接给我直接打印成gbk的字符展示不好么？我想其实py3的设计真是煞费苦心，就是想通过这样的方式明确的告诉你，想在py3里看字符，必须得是unicode编码，其它编码一律按bytes格式展示。 </p><p>好吧，就说这么多吧。 </p><p><br></p><p>最后再提示一下，Python只要出现各种编码问题，无非是哪里的编码设置出错了<br>常见编码错误的原因有：</p><ul><ul><li>Python解释器的默认编码</li><li>Python源文件文件编码</li><li>Terminal使用的编码</li><li>操作系统的语言设置</li></ul></ul><p>掌握了编码之前的关系后，挨个排错就好啦　　</p><p><br></p><p><br></p><p>看这个文章如果有不明白的地方的话，可以看这个视频，是配合这个文章讲的，100%搞明白。</p><p><a href=\"https://link.zhihu.com/?target=http%3A//study.163.com/course/introduction/1004526016.htm\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python开发21天入门必备 - 网易云课堂</a> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-e426d79e74f2c211eb1a8606ad9460ca_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"942\" data-rawheight=\"724\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-72b5e58299db878e59a013ae7a932406_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"942\" data-original=\"https://pic1.zhimg.com/v2-e426d79e74f2c211eb1a8606ad9460ca_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='942'%20height='724'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"942\" data-rawheight=\"724\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-72b5e58299db878e59a013ae7a932406_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"942\" data-original=\"https://pic1.zhimg.com/v2-e426d79e74f2c211eb1a8606ad9460ca_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-e426d79e74f2c211eb1a8606ad9460ca_720w.jpg?source=54b3c3a5\"></figure>", "用python进行办公自动化都需要学习什么知识呢？": "<h2>自动化办公无非是excel、ppt、word、邮件、文件处理、数据分析处理、爬虫这些。我来一一介绍如何学习，找资料！</h2><p>最近做了个Python办公自动化的Live讲座，不要脸的推一波~</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><h2>python基础</h2><p>能做这些的前提是会使用Python，最起码要熟悉基本语法，可以编写小脚本。</p><p>对于python语法的要求，你可以对照<a href=\"https://link.zhihu.com/?target=https%3A//www.runoob.com/python3/python3-tutorial.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python基础</a> 的部分查看需要学那些，找个免费视频教程跟着学，然后多敲代码练习。如果喜欢看书的话，可以买本python入门书备查。</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p>语法是关键，一定要理解python编程的基本概念，再去学其他的工具库。</p><p>不然会很痛苦的。</p><h2>excel自动化</h2><p>office家族其实都可以用VBA解决自动化的问题，但可能很多人不会用。</p><p>python针对excel有很多的第三方库可以用，比如xlwings、xlsxwriter、xlrd、xlwt、pandas、xlsxwriter、win32com、xlutils等等。</p><p>这些库可以很方便地实现对excel文件的增删改写、格式修改等，当然并不推荐你全部都去尝试一下，这样时间成本太大了。使用xlwings和pandas这两个就够了，基本能解决excel自动化的所有问题。</p><p>xlwing不光可以读写excel，还能进行格式调整、VBA操作，非常强大且易于使用。</p><p>之前写过一个xlwings的入门教程：</p><a href=\"https://zhuanlan.zhihu.com/p/82783751\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-ebc8e030d2cc941a6d54bbec300e8ca1_bh.jpg?source=54b3c3a5\" data-image-width=\"1200\" data-image-height=\"500\" class=\"internal\">朱卫军：xlwings，让excel飞起来！</a><p>你也可以查询具体用法（中文总结）：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/e21894fc5501\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">jianshu.com/p/e21894fc5</span><span class=\"invisible\">501</span><span class=\"ellipsis\"></span></a> </p><p>当然最好是看官网教程：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.xlwings.org/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">xlwings.org/</span><span class=\"invisible\"></span></a> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-68a75ad24f29b1a6044db63d5839514a_720w.jpg?source=54b3c3a5\" data-size=\"normal\" data-rawwidth=\"1005\" data-rawheight=\"942\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-44a229345df966d233d55e1ec61a6a8b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1005\" data-original=\"https://pic4.zhimg.com/v2-68a75ad24f29b1a6044db63d5839514a_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1005'%20height='942'&gt;&lt;/svg&gt;\" data-size=\"normal\" data-rawwidth=\"1005\" data-rawheight=\"942\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-44a229345df966d233d55e1ec61a6a8b_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1005\" data-original=\"https://pic4.zhimg.com/v2-68a75ad24f29b1a6044db63d5839514a_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-68a75ad24f29b1a6044db63d5839514a_720w.jpg?source=54b3c3a5\"><figcaption>xlwings处理excel</figcaption></figure><p>pandas是大家都熟悉的数据处理利器，它也支持excel的读写，接口友好。这个后面会讲到。</p><p>如果你对python自动化处理excel很有兴趣，也可以买一本专门的教材来看。</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><h2>ppt</h2><p>python当然是支持ppt的自动化处理，主要的库有pywin32com、pptx，可以创建、修改ppt文件。</p><p>学习网站：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//python-pptx.readthedocs.io/en/latest/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">python-pptx.readthedocs.io</span><span class=\"invisible\">/en/latest/</span><span class=\"ellipsis\"></span></a> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-f0172282dfe375cf4e5aa2e64aa8e858_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"722\" data-rawheight=\"718\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-785b1025b84ec57900e9f735055886b7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"722\" data-original=\"https://pic1.zhimg.com/v2-f0172282dfe375cf4e5aa2e64aa8e858_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='722'%20height='718'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"722\" data-rawheight=\"718\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-785b1025b84ec57900e9f735055886b7_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"722\" data-original=\"https://pic1.zhimg.com/v2-f0172282dfe375cf4e5aa2e64aa8e858_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-f0172282dfe375cf4e5aa2e64aa8e858_720w.jpg?source=54b3c3a5\"></figure><h2>word </h2><p>python操作Word的库：</p><ul><li> python-docx、import docx：只对windows平台有效</li><li>pypiwin32、import win32com：跨平台，但无法处理doc格式的word文本，doc格式不是基于xml的</li><li> textract、import textract：它同时兼顾“doc”和“docx”，但安装过程需要一些依赖。</li></ul><p>你可以批量的用python生成word文件，推荐使用docx，不需要会太多。</p><p>学习网站：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//python-docx.readthedocs.io/en/latest/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">python-docx.readthedocs.io</span><span class=\"invisible\">/en/latest/</span><span class=\"ellipsis\"></span></a> </p><h2>邮件 </h2><p>python处理邮件也是极其便利的，smtplib、imaplib、email三个库配合使用，实现邮件编写、发送、接收、读取等一系列自动化操作，省时省力。</p><p>写过一个发送邮件教程，亲测可用：</p><a href=\"https://zhuanlan.zhihu.com/p/89868804\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-e28b0d5c3ff2dd167cc10426897c81d2_bh.jpg?source=54b3c3a5\" data-image-width=\"1280\" data-image-height=\"716\" class=\"internal\">朱卫军：干货 | 解放双手,用Python实现自动发送邮件</a><p>看了其他很多教程都有问题，所以这个大家可以跑跑上面的代码。</p><h2>文件处理</h2><p>文件处理包括批量修改或创建文件名、批量生成文档、批量修改路径等等重复性操作。如果一个个手工操作，那真的心累。</p><p>python在处理批量操作有得天独厚的优势，成千上万的文件修改可能只需几秒的时间。</p><p>os是python文件操作的库，可以实现对电脑上文件的增删改查。</p><p>学习网站：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.runoob.com/python3/python3-os-file-methods.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">runoob.com/python3/pyth</span><span class=\"invisible\">on3-os-file-methods.html</span><span class=\"ellipsis\"></span></a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.liaoxuefeng.com/wiki/1016959663602400/1017606916795776\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">liaoxuefeng.com/wiki/10</span><span class=\"invisible\">16959663602400/1017606916795776</span><span class=\"ellipsis\"></span></a> </p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-1240a8be221264520b95f0396266b140_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2062\" data-rawheight=\"900\" class=\"origin_image zh-lightbox-thumb\" width=\"2062\" data-original=\"https://pic2.zhimg.com/v2-1240a8be221264520b95f0396266b140_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2062'%20height='900'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2062\" data-rawheight=\"900\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2062\" data-original=\"https://pic2.zhimg.com/v2-1240a8be221264520b95f0396266b140_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-1240a8be221264520b95f0396266b140_720w.jpg?source=54b3c3a5\"></figure><h2>数据处理和分析</h2><p>我就是做数据分析工作的，基本也是python作为主要工具，所以这一块毋庸置疑是python自动化办公最有价值的部分。</p><p>数据处理的库主要有：pandas、numpy、matplotlib、sklearn...</p><p>这些是大家耳熟能详的神库，非常推荐去学习。</p><p>之前写过很多关于python数据分析处理的回答和文章，这里不再啰嗦了。</p><a href=\"https://www.zhihu.com/question/19755921/answer/842390681\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-0e9fe26fa86713a38be62b10117c710a_bh.jpg?source=54b3c3a5\" data-image-width=\"1323\" data-image-height=\"753\" class=\"internal\">超级菜鸟怎么学习数据分析？</a><a href=\"https://www.zhihu.com/question/37180159/answer/761102349\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-d5c7e46dd43e9bcfb11cca04dbac0825_200x0.jpg?source=54b3c3a5\" data-image-width=\"386\" data-image-height=\"508\" class=\"internal\">如何系统地学习Python 中 matplotlib, numpy, scipy, pandas？</a><p>推荐两本python数据分析的入门书，也是我一开始用的：</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><h2>爬虫</h2><p>相信爬虫是大家最感兴趣的，python爬虫有很多的实现库，比如：urllib、requests、scrapy等</p><p>爬虫入门容易，但学精难，所以初学者可以尝试写点简单的爬虫，比如豆瓣、知乎、微博呀。</p><p>这个也不多说，直接上之前的干货：</p><a href=\"https://www.zhihu.com/question/20899988/answer/783269460\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-f2b4bed5732a48575e5b9b01c6c4fff2_bh.jpg?source=54b3c3a5\" data-image-width=\"1213\" data-image-height=\"652\" class=\"internal\">如何入门 Python 爬虫？</a><a href=\"https://zhuanlan.zhihu.com/p/75036835\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-6f0888686a98167bdd00a527075cd51d_bh.jpg?source=54b3c3a5\" data-image-width=\"518\" data-image-height=\"300\" class=\"internal\">朱卫军：干货！python爬虫100个入门项目 续</a><p>推荐大家去学习requests、bs4来入门爬虫，提供对应中文学习网站：</p><p><a href=\"https://link.zhihu.com/?target=https%3A//2.python-requests.org//zh_CN/latest/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">2.python-requests.org//</span><span class=\"invisible\">zh_CN/latest/</span><span class=\"ellipsis\"></span></a> </p><p><a href=\"https://link.zhihu.com/?target=https%3A//www.crummy.com/software/BeautifulSoup/bs4/doc.zh/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">crummy.com/software/Bea</span><span class=\"invisible\">utifulSoup/bs4/doc.zh/</span><span class=\"ellipsis\"></span></a></p><p>也可以买两本教程书作为补充：</p><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\"></a><p>最后给一个福利：</p><a href=\"https://zhuanlan.zhihu.com/p/69869004\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-ac39235b2c14052f9c4038b426168354_bh.jpg?source=54b3c3a5\" data-image-width=\"500\" data-image-height=\"300\" class=\"internal\">朱卫军：最全数据分析资料汇总（含python、爬虫、数据库、大数据、tableau、统计学等）</a><p></p>", "为什么很多程序员不用 switch，而是大量的 if...else if ...？": "<p>下面几乎所有人都没有维护代码的经历。</p><p>比如，今天写代码，需求是：</p><p><b>按照颜色分类</b></p><p>于是你很开心的写了switch case</p><p>一个月后</p><p>老板和你说，需求改一下</p><p>判断完黑色之后，先看下这个东西是不是圆的，然后再去按颜色分类</p><p>于是你看着你的switch case，陷入沉思</p><p>后来，你把你的黑色判断拿出来，然后把case放在了else的最后。</p><p>tmd很麻烦啊</p><p>你这么想着。</p><hr><p>很多时候，代码用switch case写，确实好看，但是，一旦要修改这个内部的东西，你就会发现，这个sb东西tmd很难维护，而且你还要关系这里面的break问题。如果你看过google的代码规范，你会发现，google对switch的要求非常多，比如case后面必须跟break，switch里面必须有default。但是ifelse就是一条，所有的选项都必须有{}。</p><p>工程向的代码，第一要义是快速实现，第二要义是方便维护，两个条件，switch都不符合</p>", "为什么网上Python爬虫教程这么多，但是做爬虫的这么少呢？爬虫发展又该是如何呢？": "<p><b>网上教程多，是因为入门简单，容易获得成就感，容易忽悠小白</b></p><p>爬虫就是因为<b>太有技术含量</b>，所以会的人少，可能看起来做的人就少了</p><p><br></p><p><br></p><p><b>爬虫远比我们想的复杂</b></p><p>大多数人会的，只是造一颗<b>螺丝钉，</b>而整个爬虫系统，就好比造<b>火箭</b></p><p>大多数人，只掌握了入门级的水品，也就是最多能造个螺丝钉，造不出火箭</p><p><br></p><p><b>为什么我说爬虫远比我们想的复杂呢？</b></p><p>爬虫绝不是表面的 用<i>requests</i>、urllib，发个http请求那么简单</p><p>就如同 楼上的几位回答者所说，如果只是发个http请求，根本用不着专门来学，随便找个火车头之类的工具，拖几下鼠标就搞定了</p><p><br></p><p>实际情况中，你要抓人家的数据， <b>会有很多门槛</b>：</p><p>1.人家检测出你是爬虫，拉黑你IP （人家究竟是通过你的ua、行为特则 还是别的检测出你是爬虫的？你怎么规避？）</p><p>2.人家给你返回脏数据，你怎么辨认？</p><p>3.对方被你爬死，你怎么设计调度规则？</p><p>4.要求你一天爬完10000w数据，你一台机器带宽有限，你如何用分布式的方式来提高效率？</p><p>5.数据爬回来，要不要清洗？对方的脏数据会不会把原有的数据弄脏？</p><p>6.对方的部分数据没有更新，这些未更新的你也要重新下载吗？怎么识别？怎么优化你的规则？</p><p>7.数据太多，一个数据库放不下，要不要分库？</p><p>8.对方数据是JavaScript渲染，那你怎么抓？要不要上PhantomJS？</p><p>9.对方返回的数据是加密的，你怎么解密？</p><p>10.对方有验证码，你怎么破解？</p><p>11.对方有个APP，你怎么去得到人家的数据接口？</p><p>12.数据爬回来，你怎么展示？怎么可视化？怎么利用？怎么发挥价值？</p><p>13. 等等 ......</p><p><br></p><p>你看，一个强大的爬虫，<b>涉及很多学科的知识</b>，是一门很大的学问</p><p><b>你要：</b></p><ul><li>学http协议，知道哪个协议可以帮你省带宽和时间</li><li>学数据库，不然咋存数据，咋优化？数据库分布式也要了解一点吧？</li><li>学算法，基本的调度算法，爬虫调度也要了解吧？</li><li>学分布式、学redis，分布式总要懂一点，不然爬虫怎么协作呢？</li><li>学JavaScript，不然你怎么看懂人家的数据是怎么处理的，不然你怎么反向解析？</li><li>基本的解密破解知识要懂吧？</li><li>验证码破解要懂吧？机器学习要懂吧？现在破解验证码都上机器学习了！</li><li>ios开发要学吧？安卓开发也要学吧？不然怎么反编译人家的app去拿人家隐藏的接口加密算法？</li><li>等等 ......</li></ul><p><br></p><p>你看，这设计多少知识了，每一个知识点，基本都是一个学科，都不是几本书能解决的</p><p><br></p><p>一个人，想精通这些，是十分困难的，所以一般是团伙协作作案</p><p>你负责端茶递水、我负责解密他的接口、另外的同事负责写代码，搞数据库，破解验证码 等等</p><p><br></p><p>你问一个人能做出这么强大的东西吗？</p><p>可以，在有一定知识储备的情况下，用人家的轮子，是完全可以搭建起来的</p><p><br></p><p>所以，网上的爬虫教程，无法把这些系统的讲给你听，就好比你想学赚钱，谁又能给你一个系统的教程呢？</p><p>你想上班赚钱，还是想卖豆腐赚钱？ </p><p>卖什么豆腐？</p><p>什么价格？</p><p>店铺开哪里？</p><p>要不要请人？</p><p>不知道！</p><p><br></p><p>其实我上面列出的每个知识块，网上都有，零零散散的而已</p><p>你需要自己去辨别，整合这些知识，然后为你所用</p><p><br></p><p>现在你明白为什么网上的教程，都不够系统，不够深入了吧</p><p>因为这很难，涉及到的学科知识太多了</p><p><br></p><p>如果你希望你的python水平提高，可以关注我呀，我的所有回答可都是高质量的，绝不废话</p>", "如何系统地学习Python 中 matplotlib, numpy, scipy, pandas？": "<p>Update: 17/3/29:</p><p>网站下线，之后以离线版HTML格式提供下载，见<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jayleicn/scipy-lecture-notes-zh-CN/releases\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub-release</a>。</p><p><br>Update: 16/2/20:<br>这些天在和<a class=\"member_mention\" href=\"https://www.zhihu.com/people/9a3c8f80aaafc18943e044ba81bf21d4\" data-hash=\"9a3c8f80aaafc18943e044ba81bf21d4\" data-hovercard=\"p$b$9a3c8f80aaafc18943e044ba81bf21d4\">@万隽舒</a>一起翻译这份文档，水平有限，不足之处还望指正。有兴趣的朋友可以一起来，详情见<a href=\"https://link.zhihu.com/?target=https%3A//github.com/jayleicn/scipy-lecture-notes-zh-CN\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub - jayleicn/scipy-lecture-notes-zh-CN: 中文版scipy-lecture-notes.</a></p><p>当然，还是推荐大家阅读英文原版。</p><p><br></p><p>--------------------<br>以下原文<br>--------------------<br>推荐一个很用心的教程 <a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Scipy Lecture Notes</a></p><blockquote>One document to learn numerics, science, and data with Python<br></blockquote><p>----------------------------------------------<br>这份教程由易到难分为三个层次 </p><ol><li>Numpy, Matplotlib, Scipy的入门以及如何利用官方的doc查询函数的用法；</li><li>Numpy, Scipy的高级用法，常用的几个数据处理方法，以及Python和C/C++的混合编程；</li><li>其它常用数据处理/机器学习库Sympy, Scikit-image, Mayavi, Scikit-learn的入门及应用。</li></ol><p>从内容上来说与题主要求完美契合，同时也涉及到了许多相关的库和技巧。</p><p><br></p><p><br></p><p>----------------------------------------------<br>什么？ 嫌在线看教程不方便？ </p><p>在网站主页的右上角，提供了离线教程的下载链接。 不仅有和在线版完全一致HTML版的离线教程，也有两个PDF版本可以选择! 不得不说是业界良心。 另外所有教程的源码都是可以在GitHub下载到的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/44f10985dd15b0909f5d849cd359c509_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"779\" data-rawheight=\"409\" class=\"origin_image zh-lightbox-thumb\" width=\"779\" data-original=\"https://pic1.zhimg.com/44f10985dd15b0909f5d849cd359c509_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='779'%20height='409'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"779\" data-rawheight=\"409\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"779\" data-original=\"https://pic1.zhimg.com/44f10985dd15b0909f5d849cd359c509_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/44f10985dd15b0909f5d849cd359c509_720w.jpg?source=54b3c3a5\"></figure><p><br></p><p><br></p><p>最后，答主也同样是本科生，目前在漫漫的数据处理入门阶段。即为同行者,望共勉之！ 希望对题主有帮助。</p><p>----------------------------------------------</p><p>附上教程目录</p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/intro/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">1. Getting started with Python for science</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/intro/intro.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">1.1. Scientific computing with tools and workflow</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/intro/language/python_language.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">1.2. The Python language</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/intro/numpy/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">1.3. NumPy: creating and manipulating numerical data</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/intro/matplotlib/matplotlib.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">1.4. Matplotlib: plotting</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/intro/scipy.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">1.5. Scipy : high-level scientific computing</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/intro/help/help.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">1.6. Getting help and finding documentation</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/advanced/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2. Advanced topics</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/advanced/advanced_python/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2.1. Advanced Python Constructs</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/advanced/advanced_numpy/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2.2. Advanced Numpy</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/advanced/debugging/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2.3. Debugging code</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/advanced/optimizing/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2.4. Optimizing code</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/advanced/scipy_sparse/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2.5. Sparse Matrices in SciPy</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/advanced/image_processing/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2.6. Image manipulation and processing using Numpy and Scipy</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/advanced/mathematical_optimization/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2.7. Mathematical optimization: finding minima of functions</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/advanced/interfacing_with_c/interfacing_with_c.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2.8. Interfacing with C</a></p><p><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/packages/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">3. Packages and applications</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/packages/statistics/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">3.1. Statistics in Python</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/packages/sympy.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">3.2. Sympy : Symbolic Mathematics in Python</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/packages/scikit-image/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">3.3. Scikit-image: image processing</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/packages/traits/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">3.4. Traits: building interactive dialogs</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/packages/3d_plotting/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">3.5. 3D plotting with Mayavi</a><a href=\"https://link.zhihu.com/?target=http%3A//www.scipy-lectures.org/packages/scikit-learn/index.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">3.6. scikit-learn: machine learning in Python</a></p>", "为什么看不懂廖雪峰的Python学习教程？": "<p>因为你试图用一劳永逸。</p><p>你试图使用一种教材弄懂所有问题，那是不行的。</p><p>虽然我们通常推荐新人学python，我也会推荐廖雪峰的新手引导做得很赞……</p><p>但是……</p><p>写代码不是这样子的事情……</p><p><b>每个人基础不一样，认知不一样，脑力不一样，学习习惯不一样，</b></p><p><b>你怎么可能通过一份引导，让所有人都可以完全从零到一？</b></p><p><b>那不现实！不管什么事情，都不现实，不要说写代码了。</b></p><p><br></p><p>我举个例子啊。你学windows的时候，新手教程有教你什么是鼠标吗？</p><p>你学鼠标的时候，有教你什么是ps/2串口吗？</p><p>你学ps/2串口的时候，有教你驱动怎么写吗？</p><p>这样下去，最后windows使用手册上是不是要把怎么生产cpu写进去？</p><p>所有的教程图书都会替你分割好知识的边界，但是这个边界不一定适合你。</p><p><b>遇到你想要的边界外的知识你要发挥主观能动性，</b></p><p><b>遇到你不想要的边界内的知识你要把书页翻过去。</b></p><p><br></p><p>你没有系统性地学习了解一样东西之前，</p><p>你当然会看不懂教程当中的一部分内容。</p><p>那么你怎么系统性地去了解呢？</p><p>我不知道。</p><p>这个问题值很多钱。</p><p>我只能跟你讲，你要一边写一边学一边google一边百度。</p><p>这很难我是知道的。</p><p>但我要反过来问你，</p><p><b>要是写代码是你可以用一个人的教材一劳永逸的事情，你觉得还会那么“高薪”吗？</b></p><p><b>当年我照着用户手册啃gvbasic的时候，和你不一样的是，越觉得自己不懂，我越开心。</b></p><p><b>为什么呐？因为我越是弄不懂的事情，将来等我弄懂了，我就越可以用它来让自己牛逼。</b></p><p>当年我还是读寄宿制的，乔布斯还不知道在哪个犄角旮旯里呆着，上网没有的，资料要付钱买的，还不是读者用户手册，别人的代码啃着啃着入了门？不懂？不懂是好事啊，自己多试试，多改改，然后不就能弄懂了嘛。</p>"}{"应该学习最新版本的 Python 3 还是旧版本的 Python 2？": "看到现在，我一直很好奇为什么会有人因为纠结学Py 3还是Py 2而浪费大量时间。<br>编程的话最重要的是编程思想，Python 3和Python 2虽然是两门完全不同的语言（故意黑），但是它的思想基本是共通的，只有少量的语法差异。<b><u>而编程中，语法只是细枝末节的东西。</u></b><br><br>那么无论你学2还是3，都没有区别。<u>会Python的人，一般2和3都会。</u>当你学会了3，你只要稍微花上一点时间学习Python 2的语法，那么Python 2和Python 3这两门语言你也就都学会了——而认识语法差距花的时间，一般也不会比你纠结学哪个花的时间更多。<br><br>不要纠结学什么了，想到就去学，不要在这方面纠结太多时间，选Py 2或者Py 3并没有什么差异。<br>——————————————————————————————————<br>最后给大家看一个从8月份开始，就在各大Q群进行调研，进行技术选型的人。<br>评论里看来，应该也有非常多的知友见过这个人了，我所在的不少群也都曾私下讨论过这个人是个什么心态。这里涂去个人信息。<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/750eadfa580cb0ed6a2b845f9d8295e8_720w.png?source=54b3c3a5\" data-rawwidth=\"334\" data-rawheight=\"235\" class=\"content_image\" width=\"334\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='334'%20height='235'&gt;&lt;/svg&gt;\" data-rawwidth=\"334\" data-rawheight=\"235\" class=\"content_image lazy\" width=\"334\" data-actualsrc=\"https://pic1.zhimg.com/50/750eadfa580cb0ed6a2b845f9d8295e8_720w.png?source=54b3c3a5\"></figure>（九月份，上面那些框架是他从各大Q群听别人推荐的，这个人不会编程，他要学的语言，是十年内不会落伍，不会没饭吃的语言。<u>一开始他听人推荐，是打算用Laravel的</u>，因为听说很好用）<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/d1a43fa98706a207c9b00218f4bbe981_720w.png?source=54b3c3a5\" data-rawwidth=\"330\" data-rawheight=\"118\" class=\"content_image\" width=\"330\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='330'%20height='118'&gt;&lt;/svg&gt;\" data-rawwidth=\"330\" data-rawheight=\"118\" class=\"content_image lazy\" width=\"330\" data-actualsrc=\"https://pic4.zhimg.com/50/d1a43fa98706a207c9b00218f4bbe981_720w.png?source=54b3c3a5\"></figure>（十月上旬，还在纠结要学什么。做Web我当然给他推荐PHP，他说听别人说<u>PHP性能不行</u>。我就说那你学C++吧，腾讯和新浪不少网站就是C++写的，他说听人说C++太难，学不了。）<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/0e4bba0487fd1a5d75223fccf73f2628_720w.png?source=54b3c3a5\" data-rawwidth=\"329\" data-rawheight=\"139\" class=\"content_image\" width=\"329\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='329'%20height='139'&gt;&lt;/svg&gt;\" data-rawwidth=\"329\" data-rawheight=\"139\" class=\"content_image lazy\" width=\"329\" data-actualsrc=\"https://pic1.zhimg.com/50/0e4bba0487fd1a5d75223fccf73f2628_720w.png?source=54b3c3a5\"></figure>（十月下旬，同样还在问要学哪些语言和技术，要实用还要简单，可以让他在<u>三到六个月从零基础成为全栈工程师</u>，全栈工程师真是大白菜。）<br><figure><noscript><img src=\"https://pic4.zhimg.com/50/a5ed81ec1f59d6be0ef4d686a0635b4d_720w.png?source=54b3c3a5\" data-rawwidth=\"327\" data-rawheight=\"333\" class=\"content_image\" width=\"327\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='327'%20height='333'&gt;&lt;/svg&gt;\" data-rawwidth=\"327\" data-rawheight=\"333\" class=\"content_image lazy\" width=\"327\" data-actualsrc=\"https://pic4.zhimg.com/50/a5ed81ec1f59d6be0ef4d686a0635b4d_720w.png?source=54b3c3a5\"></figure>（十一月中旬，技术选型还未完成，还不知道学什么。但是前几天不知道从哪里听来了Go Lang，这门语言也加入了他的选型列表。因为前沿，<u>他开始倾向于Go Lang。</u>）<br><figure><noscript><img src=\"https://pic1.zhimg.com/50/cc0c2c59449bf8ae8721bca3a8994147_720w.png?source=54b3c3a5\" data-rawwidth=\"332\" data-rawheight=\"458\" class=\"content_image\" width=\"332\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='332'%20height='458'&gt;&lt;/svg&gt;\" data-rawwidth=\"332\" data-rawheight=\"458\" class=\"content_image lazy\" width=\"332\" data-actualsrc=\"https://pic1.zhimg.com/50/cc0c2c59449bf8ae8721bca3a8994147_720w.png?source=54b3c3a5\"></figure>昨天，他还拿着关于缩进的示例代码，开始纠结PHP、Node.js、Python哪个好，<u>这次开始倾向于Python</u>，然而还是没有进行编程的学习。<br>（不要吐槽Node.js版本中的语法错误，或者是代码风格。）<br>——————————————————————————————————<br>我不希望题主成为上面这样的人。", "怎么样才算是精通 Python？": "这个回答可能有点长，我会先给出我对精通Python的理解，然后给出一些Python中有难度的知识点。如果大家在看完我这篇回答之前，已经充分理解了我列出的各个知识点，那么，我相信你已经算是精通Python了。如果不能，我希望这篇回答能让你意识到自己Python知识还存在哪些不足，在之后的学习中，从哪些方面去改进。<br><br><b>精通是个伪命题</b><br><br>怎样才算精通Python，这是一个非常有趣的问题。<br><br>很少有人会说自己精通Python，因为，这年头敢说精通的人都会被人摁在地上摩擦。其次，我们真的不应该纠结于编程语言，而应该专注于领域知识。比如，你可以说你精通数据库，精通分布式，精通机器学习，那都算你厉害。但是，你说你精通Python，这一点都不酷，在业界的认可度也不高。<br><br>再者，Python使用范围如此广泛，一个人精力有限，不可能精通所有的领域。就拿Python官网的Python应用领域来说，Python有以下几个方面的应用:<br><br><ul><li>Web Programming: Django, Pyramid, Bottle, Tornado, Flask, web2py<br></li><li>GUI Development: wxPython, tkInter, PyGtk, PyGObject, PyQt<br></li><li>Scientific and Numeric: SciPy, Pandas, IPython<br></li><li>Software Development: Buildbot, Trac, Roundup<br></li><li>System Administration: Ansible, Salt, OpenStack<br></li></ul><br>如果有人声称精通上面所有领域，那么，请收下我的膝盖，并且，请收我为徒。<br><br>既然精通Python是不可能也是没有意义的事情，那么，为什么各个招聘要求里面，都要求精通Python呢？我觉得这都是被逼的。为什么这么说呢，且听我慢慢说来。<br><br><b>为什么招聘要求精通Python</b><br><br>绝大部分人对Python的认识都有偏差，认为Python比较简单。相对于C、C++和Java来说，Python是比较容易学习一些，所以，才会有这么多只是简单地了解了一点语法，就声称自己会Python的工程师。<br><br>打个比方，如果一个工程师，要去面试一个C++的岗位，他至少会找一本C++的书认真学习，然后再去应聘。Python则不然，很多同学只花了一点点时间，了解了一下Python的语法，就说自己熟悉Python。这也导致Python的面试官相对于其他方向的面试官，更加容易遇到不合格的求职者，浪费了大家的时间。Python面试官为了不给自己找麻烦，只能提高要求，要求求职者精通Python。<br><br><b>怎样才算精通Python</b><br><br>既然精通Python本身是一件不可能的事情，而面试官又要求精通Python，作为求职者，应该达到怎样的水平，才敢去应聘呢？我的观点是，要求精通Python的岗位都是全职的Python开发，Python是他们的主要使用语言，要想和他们成为同事，你至少需要:<br><br>1. 能够写出Pythonic的代码(什么是Pythonic的代码，请看我在另一个问题下的回答：<a href=\"https://www.zhihu.com/question/21408921/answer/129036707\" class=\"internal\">怎样才能写出pythonic的代码？ - 知乎用户的回答</a>)<br>2. 对Python的一些高级特性比较熟悉<br>3. 对Python的优缺点比较了解<br><br>这样说可能比较抽象，不太好理解。我们来看几个例子，如果能够充分理解这里的每一个例子，那么，你完全能够顺利通过\"精通Python\"的岗位面试。<br><br><b><i><u>敢来挑战吗</u></i></b><br><figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-54129fa9354f11e6ed5bdebb4d394625_720w.jpg?source=54b3c3a5\" data-rawwidth=\"360\" data-rawheight=\"270\" class=\"content_image\" width=\"360\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='360'%20height='270'&gt;&lt;/svg&gt;\" data-rawwidth=\"360\" data-rawheight=\"270\" class=\"content_image lazy\" width=\"360\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-54129fa9354f11e6ed5bdebb4d394625_720w.jpg?source=54b3c3a5\"></figure><br><b>1.上下文管理器</b><br><br>大家在编程的时候，经常会遇到这样的场景：先执行一些准备操作，然后执行自己的业务逻辑，等业务逻辑完成以后，再执行一些清理操作。<br><br>比如，打开文件，处理文件内容，最后关闭文件。又如，当多线程程序需要访问临界资源的时候，线程首先需要获取互斥锁，当执行完成并准备退出临界区的时候，需要释放互斥锁。对于这些情况，Python中提供了上下文管理器（Context Manager）的概念，可以通过上下文管理器来控制代码块执行前的准备动作以及执行后的收尾动作。<br><br>我们以处理文件为例来看一下在其他语言中，是如何处理这种情况的。 Java风格/C++风格的Python代码：<br><br><div class=\"highlight\"><pre><code class=\"language-python\"><span></span>    <span class=\"n\">myfile</span><span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'C:\\misc\\data.txt'</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">myfile</span><span class=\"p\">:</span>\n            <span class=\"o\">...</span><span class=\"n\">use</span> <span class=\"n\">line</span> <span class=\"n\">here</span><span class=\"o\">...</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"n\">myfile</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</code></pre></div><br>Pythonic的代码：<br><br><div class=\"highlight\"><pre><code class=\"language-python\"><span></span>    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'C:\\misc\\data.txt'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">myfile</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">myfile</span><span class=\"p\">:</span>\n            <span class=\"o\">...</span><span class=\"n\">use</span> <span class=\"n\">line</span> <span class=\"n\">here</span><span class=\"o\">...</span>\n</code></pre></div><br>我们这个问题讨论的是精通Python，显然，仅仅是知道上下文管理器是不够的，你还需要知道:<br><br>1. 上下文管理器的其他使用场景（如数据库cursor，锁）<br><br><ul><ul><li>上下文管理器管理锁</li></ul></ul><br><div class=\"highlight\"><pre><code class=\"language-python\"><span></span>        <span class=\"k\">class</span> <span class=\"nc\">FetchUrls</span><span class=\"p\">(</span><span class=\"n\">threading</span><span class=\"o\">.</span><span class=\"n\">Thread</span><span class=\"p\">):</span>\n            <span class=\"o\">...</span>\n            <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n                <span class=\"o\">...</span>\n                <span class=\"k\">with</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lock</span><span class=\"p\">:</span>   <span class=\"c1\">#使用\"with\"语句管理锁的获取和释放</span>\n                  <span class=\"k\">print</span> <span class=\"s1\">'lock acquired by </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n                  <span class=\"k\">print</span> <span class=\"s1\">'lock released by </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n</code></pre></div><br><ul><ul><li>上下文管理器管理数据库cursor</li></ul></ul><br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span>        <span class=\"kn\">import</span> <span class=\"nn\">pymysql</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">get_conn</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">pymysql</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'host'</span><span class=\"p\">,</span> <span class=\"s1\">'localhost'</span><span class=\"p\">),</span>\n                    <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'port'</span><span class=\"p\">,</span> <span class=\"mi\">3306</span><span class=\"p\">),</span>\n                    <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'user'</span><span class=\"p\">),</span>\n                    <span class=\"n\">passwd</span><span class=\"o\">=</span><span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'passwd'</span><span class=\"p\">))</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n            <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"n\">get_conn</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"s1\">'laimingxing'</span><span class=\"p\">,</span> <span class=\"n\">passwd</span><span class=\"o\">=</span><span class=\"s1\">'laimingxing'</span><span class=\"p\">)</span>\n            <span class=\"k\">with</span> <span class=\"n\">conn</span> <span class=\"k\">as</span> <span class=\"n\">cur</span><span class=\"p\">:</span>\n                <span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s1\">'show databases'</span><span class=\"p\">)</span>\n                <span class=\"nb\">print</span> <span class=\"n\">cur</span><span class=\"o\">.</span><span class=\"n\">fetchall</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n            <span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div><br><ul><ul><li>上下文管理器控制运算精度</li></ul></ul><br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span>        <span class=\"k\">with</span> <span class=\"n\">decimal</span><span class=\"o\">.</span><span class=\"n\">localcontext</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">ctx</span><span class=\"p\">:</span>\n            <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">prec</span> <span class=\"o\">=</span> <span class=\"mi\">22</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">decimal</span><span class=\"o\">.</span><span class=\"n\">getcontext</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">prec</span><span class=\"p\">)</span>\n</code></pre></div><br>2. 上下文管理器可以同时管理多个资源<br><br>     假设你需要读取一个文件的内容，经过处理以后，写入到另外一个文件中。你能写出Pythonic的代码，所以你使用了上下文管理器，满意地写出了下面这样的代码：<br><br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span>        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'data.txt'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">source</span><span class=\"p\">:</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'target.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">target</span><span class=\"p\">:</span>\n                <span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n</code></pre></div><br>    你已经做得很好了，但是，你时刻要记住，你是精通Python的人啊！精通Python的人应该知道，上面这段代码还可以这么写：<br><br><div class=\"highlight\"><pre><code class=\"language-python\"><span></span>        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'data.txt'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'target.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">target</span><span class=\"p\">:</span>\n            <span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n</code></pre></div><br>3. 在自己的代码中，实现上下文管理协议<br><br>    你知道上下文管理器的语法简洁优美，写出来的代码不但短小，而且可读性强。所以，作为精通Python的人，你应该能够轻易地实现上下文管理协议。在Python中，我们就是要自己实现下面两个协议：<br><br><ul><ul><li>__enter__(self) Defines what the context manager should do at the beginning of the block created by the with statement. Note that the return value of __enter__ is bound to the target of the with statement, or the name after the as.</li><li>__exit__(self, exception_type, exception_value, traceback) Defines what the context manager should do after its block has been executed (or terminates). It can be used to handle exceptions, perform cleanup, or do something always done immediately after the action in the block. If the block executes successfully, exception_type, exception_value, and traceback will be None. Otherwise, you can choose to handle the exception or let the user handle it; if you want to handle it, make sure __exit__ returns True after all is said and done. If you don't want the exception to be handled by the context manager, just let it happen.</li></ul></ul><br><b>2. 装饰器</b><br><br>由于我们这个问题的题目是精通Python，所以，我假设大家已经知道装饰器是什么，并且能够写简单的装饰器。那么，你是否知道，写装饰器也有一些注意事项呢。<br><br>我们来看一个例子：<br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span>    <span class=\"k\">def</span> <span class=\"nf\">is_admin</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">):</span>\n        <span class=\"k\">def</span> <span class=\"nf\">wrapper</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"username\"</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"s1\">'admin'</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">\"This user is not allowed to get food\"</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">wrapper</span>\n\n\n    <span class=\"nd\">@is_admin</span>\n    <span class=\"k\">def</span> <span class=\"nf\">barfoo</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'someone'</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Do crazy stuff\"\"\"</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nb\">print</span> <span class=\"n\">barfoo</span><span class=\"o\">.</span><span class=\"n\">func_doc</span>\n    <span class=\"nb\">print</span> <span class=\"n\">barfoo</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>\n\n    <span class=\"kc\">None</span>\n    <span class=\"n\">wrapper</span>\n</code></pre></div><br>我们用装饰器装饰完函数以后，无法正确地获取到原函数的函数名称和帮助信息，为了获取这些信息，我们需要使用@functool.wraps。 如下所示：<br><br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span>    <span class=\"kn\">import</span> <span class=\"nn\">functools</span>\n    \n    <span class=\"k\">def</span> <span class=\"nf\">is_admin</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">):</span>\n        <span class=\"nd\">@functools</span><span class=\"o\">.</span><span class=\"n\">wraps</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n        <span class=\"k\">def</span> <span class=\"nf\">wrapper</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"username\"</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"s1\">'admin'</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">\"This user is not allowed to get food\"</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">wrapper</span>\n</code></pre></div><br>再比如，我们要获取被装饰的函数的参数，以进行判断，如下所示：<br><br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span>    <span class=\"kn\">import</span> <span class=\"nn\">functools</span>\n    <span class=\"k\">def</span> <span class=\"nf\">check_is_admin</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">):</span>\n        <span class=\"nd\">@functools</span><span class=\"o\">.</span><span class=\"n\">wraps</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n        <span class=\"k\">def</span> <span class=\"nf\">wrapper</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'username'</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"s1\">'admin'</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">\"This user is not allowed to get food\"</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">wrapper</span>\n    \n    <span class=\"nd\">@check_is_admin</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_food</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">food</span><span class=\"o\">=</span><span class=\"s1\">'chocolate'</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"</span><span class=\"si\">{0}</span><span class=\"s2\"> get food: </span><span class=\"si\">{1}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">food</span><span class=\"p\">)</span>\n    \n    <span class=\"nb\">print</span> <span class=\"n\">get_food</span><span class=\"p\">(</span><span class=\"s1\">'admin'</span><span class=\"p\">)</span>\n</code></pre></div><br>这段代码看起来没有任何问题，但是，执行将会出错，因为，username是一个位置参数，而不是一个关键字参数，我们在装饰器里面，通过kwargs.get('username')是获取不到username这个变量的。为了保证灵活性，我们可以通过inspect来修改装饰器的代码，如下所示：<br><br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span>    <span class=\"kn\">import</span> <span class=\"nn\">inspect</span>\n    <span class=\"k\">def</span> <span class=\"nf\">check_is_admin</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">):</span>\n        <span class=\"nd\">@functools</span><span class=\"o\">.</span><span class=\"n\">wraps</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n        <span class=\"k\">def</span> <span class=\"nf\">wrapper</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"n\">func_args</span> <span class=\"o\">=</span> <span class=\"n\">inspect</span><span class=\"o\">.</span><span class=\"n\">getcallargs</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span> <span class=\"n\">func_args</span>\n            <span class=\"k\">if</span> <span class=\"n\">func_args</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'username'</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"s1\">'admin'</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">\"This user is not allowed to get food\"</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">wrapper</span>\n</code></pre></div><br>装饰器还有很多知识，比如装饰器怎么装饰一个类，装饰器的使用场景，装饰器有哪些缺点，这些，你们都知道吗？感兴趣的同学 可以看我以前的一篇博客(<a href=\"https://link.zhihu.com/?target=http%3A//mingxinglai.com/cn/2015/08/python-decorator/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">python装饰器入门与提高</a>)<br><br><b>3. 全局变量</b><br><br>关于Python的全局变量，我们先从一个问题开始：Python有没有全局变量？可能你看到这个问题的时候就蒙圈了，没关系，我来解释一下。<br><br>从Python自己的角度来说，Python是有全局变量的，所以，Python为我们提供了global关键字，我们能够在函数里面修改全局变量。但是，从C/C++/Java程序员的角度来说，Python是没有全局变量的。因为，Python的全局变量并不是程序级别的（即全局唯一），而是模块级别的。模块就是一个Python文件，是一个独立的、顶层的命名空间。模块内定义的变量，都属于该命名空间下，Python并没有真正的全局变量，变量必然属于某一个模块。<br><br>我们来看一个例子，就能够充分理解上面的概念。三种不同的修改全局变量的方法：<br><br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span>    <span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n    \n    <span class=\"kn\">import</span> <span class=\"nn\">test</span>\n    \n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    \n    <span class=\"k\">def</span> <span class=\"nf\">func1</span><span class=\"p\">():</span>\n        <span class=\"k\">global</span> <span class=\"n\">a</span>\n        <span class=\"n\">a</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    \n    <span class=\"k\">def</span> <span class=\"nf\">func2</span><span class=\"p\">():</span>\n        <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">a</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    \n    <span class=\"k\">def</span> <span class=\"nf\">func3</span><span class=\"p\">():</span>\n        <span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"p\">[</span><span class=\"s1\">'test'</span><span class=\"p\">]</span>\n        <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">a</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    \n    <span class=\"n\">func1</span><span class=\"p\">()</span>\n    <span class=\"n\">func2</span><span class=\"p\">()</span>\n    <span class=\"n\">func3</span><span class=\"p\">()</span>\n</code></pre></div><br>这段代码虽然看起来都是在对全局变量操作，其实，还涉及到命名空间和模块的工作原理，如果不能很清楚的知道发生了什么，可能需要补充一下自己的知识了。<br><br><b>4. 时间复杂度</b><br><br>我们都知道，在Python里面list是异构元素的集合，并且能够动态增长或收缩，可以通过索引和切片访问。那么，又有多少人知道，<i>list是一个数组而不是一个链表</i>。<br><br>关于数组和链表的知识，我想大家都知道了，这里就不再赘述。如果我们在写代码的过程中，对于自己最常用的数据结构，连它的时间复杂度都不知道，我们又怎么能够写出高效的代码呢。写不出高效的代码，那我们又怎么能够声称自己精通这门编程语言呢。<br><br>既然list是一个数组，那么，我们要使用链表的时候，应该使用什么数据结构呢？在写Python代码的时候，如果你需要一个链表，你应该使用标准库collections中的deque, deque是双向链表。标准库里面有一个queue，看起来和deque有点像，它们是什么关系？这个问题留着读者自己回答。<br><br>我们再来看一个很实际的例子：有两个目录，每个目录都有大量文件，求两个目录中都有的文件，此时，用Set比List快很多。因为，Set的底层实现是一个hash表，判断一个元素是否存在于某个集合中，List的时间复杂度为O(n)，Set的时间复杂度为O(1)，所以这里应该使用Set。我们应该非常清楚Python中各个常用数据结构的时间复杂度，并在实际写代码的过程中，充分利用不同数据结构的优势。<br><br><b>5. Python中的else</b><br><br>最后我们来看一个对<u>Python语言优缺点</u>理解的例子，即Python中增加的两个else。相对于C++语言或者Java语言，Python语法中多了两个else。<br><br>一个在while循环或for循环中:<br><br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span>    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"o\">....</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"o\">....</span>\n</code></pre></div><br>另一个在try...except语句中:<br><br><div class=\"highlight\"><pre><code class=\"language-python3\"><span></span>    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"o\">....</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"o\">....</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"o\">....</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n       <span class=\"o\">....</span>\n</code></pre></div><br><u>那么，哪一个是好的设计，哪一个是不好的设计呢？</u>要回答这个问题，我们先来看一下在大家固有的观念中，else语句起到什么作用。在所有语言中，else都是和if语句一起出现的:<br><br><div class=\"highlight\"><pre><code class=\"language-c\"><span></span>    <span class=\"k\">if</span> <span class=\"o\">&lt;</span><span class=\"n\">condition</span><span class=\"o\">&gt;</span>\n        <span class=\"n\">statement1</span>\n    <span class=\"k\">else</span>\n        <span class=\"n\">statement2</span>\n</code></pre></div><br>翻译成自然语言就是，<i>如果条件满足，则执行语句1，<b>否则</b>，执行语句2</i>。注意我们前面的用语，是否则，也就是说，else语句在我们固有的观念中，起到的作用是“否则”，是不满足条件的情况下才执行的。<br><br>我们来看Python中，while循环后面的else语句。这个else语句是在while语句正常结束的时候执行的。所以，按照语意来说，while循环的else起到的作用是and。也就是说，在Python中，while循环末尾的else换做and才是更加合适的。<br><br>你可能觉得我有点钻牛角尖，那好，我再强调一遍，while循环中的else语句是在循环正常结束的时候执行的，那么请问：<br>1. 如果while循环里面遇到了break语句，else语句会执行吗<br>2. 如果while循环最后，遇到了continue语句，else语句还会执行吗<br>3. 如果while循环内部出现异常，else语句还会执行吗<br><br>这里的几个问题，大多数人都不能够很快的正确回答出来。而我们的代码是写给人看的，不应该将大多数人排除在能够读懂这段代码之外。所以我认为，<b>Python语言中循环语句末尾的else语句是一个糟糕的设计</b>。<br><br>现在，我们再来看try...except语句中的else，这个else设计得特别好，其他语言也应该吸取这个设计。这个设计的语义是，执行try里面的语句，这里面的语句可能会出现异常，如果出现了异常，就执行except里面的语句，如果没有出现异常，就执行else里面的语句，最后，无论是否出现异常，都要执行finally语句。这个设计好就好在，else的语句完全和我们的直观感受是一样的，是在没有出现异常的情况下执行。并且，有else比没有else好，有了else以后，正确地将程序员认为可能出现异常的代码和不可能出现异常的代码分开，这样，更加清楚的表明了是哪一条语句可能会出现异常，更多的暴露了程序员的意图，使得代码维护和修改更加容易。<br><br><b>结论：</b>我这篇回答很长，但是，我相信对很多人都会有帮助。这里想说的是，Python是一门编程语言，使用范围非常广泛，大家不要去追求精通Python程序语言自身，而应该将精力放在自己需要解决的实际问题上。其次，绝大多数人对Python的认识都存在误区，认为Python很简单，只是简单地了解一下就开始写Python代码，写出了一堆很不好维护的代码，我希望这一部分人看到我的回答以后，能够回去重新学习Python。最后，对于一些同学的疑虑——招聘职位要求精通Python，我的回答是，他们并不奢望招到一个精通Python的人，他们只是想招到一个合格的工程师，而大部分的Python工程师，都，不，合，格！<br><br>如果你喜欢我这篇回答（那就点赞以示鼓励），可能对我这篇回答也会感兴趣：<br><a href=\"https://www.zhihu.com/question/21408921/answer/129036707\" class=\"internal\">怎样才能写出pythonic的代码？ - 知乎用户的回答</a><br><a href=\"https://www.zhihu.com/question/37751951/answer/73425339\" class=\"internal\">Python 有哪些优雅的代码实现？让自己的代码更pythonic - 知乎用户的回答</a>", "2016 年有哪些好的 Python 机器学习开源项目？": "谢谢邀请。下面是 KDnuggets 的2016 年排名前20 的 Python 机器学习开源项目，令人吃惊的是，去年一些最活跃的项目已经停滞不前了，一些项目跌出了前 20 名（在 contribution 和 commit 方面），有 13 个新项目进入了前 20。<br><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/v2-2da0dc5a8ccc7ec74eeaf629b8d8dcf0_720w.png?source=54b3c3a5\" data-rawwidth=\"1328\" data-rawheight=\"969\" class=\"origin_image zh-lightbox-thumb\" width=\"1328\" data-original=\"https://pic4.zhimg.com/v2-2da0dc5a8ccc7ec74eeaf629b8d8dcf0_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1328'%20height='969'&gt;&lt;/svg&gt;\" data-rawwidth=\"1328\" data-rawheight=\"969\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1328\" data-original=\"https://pic4.zhimg.com/v2-2da0dc5a8ccc7ec74eeaf629b8d8dcf0_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-2da0dc5a8ccc7ec74eeaf629b8d8dcf0_720w.png?source=54b3c3a5\"></figure><em>2016 年排名前 20 的 Python 机器学习开源项目</em><br><br><p><strong>1.Scikit-learn</strong> 是一种基于 NumPy、SciPy 和 matplotlib 的用于数据挖掘和数据分析的工具，其不仅使用起来简单高效，而且还是开源的，可供所有人使用，并且拥有商业可用的 BSD 许可证，在不同的环境下都能很好的被使用。</p><p>提交：21486，贡献者：736<br></p><p>链接：<a href=\"https://link.zhihu.com/?target=http%3A//scikit-learn.org/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">scikit-learn.org/</span><span class=\"invisible\"></span></a><br></p><br><p><strong>2.TensorFlow </strong>最初由 Google 机器智能研究机构的 Google Brain 团队的研究人员和工程师开发。该系统旨在促进对机器学习的研究，同时也让机器学习研究原型过渡到生产系统更加高效容易。</p><p>提交：10466，贡献者：493</p><p>链接：<a href=\"https://link.zhihu.com/?target=https%3A//www.tensorflow.org/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">tensorflow.org/</span><span class=\"invisible\"></span></a></p><br><p><strong>3.Theano </strong>能让您更加高效地定义、优化和评估涉及多维数组的数学表达式。</p><p>提交：24108，贡献者：263</p><p>链接：<a href=\"https://link.zhihu.com/?target=http%3A//deeplearning.net/software/theano/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Welcome - Theano 0.8.2 documentation</a></p><br><p><strong>4.Caffe</strong> 是一个由伯克利视觉与学习中心（BVLC）和社区贡献者开发的深度学习框架，它兼具表现力和速度，还有模块化的优点。</p><p>提交：3801，贡献者：215</p><p>链接：<a href=\"https://link.zhihu.com/?target=http%3A//caffe.berkeleyvision.org/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Caffe | Deep Learning Framework</a></p><br><p><strong>5.Gensim </strong>是一个免费的 Python 库，它具有诸如可扩展的统计语义等特征，它可用于分析纯文本文档的语义结构和检索语义相似的文档。</p><p>提交：2702，贡献者：145</p><p>链接：<a href=\"https://link.zhihu.com/?target=https%3A//radimrehurek.com/gensim/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">gensim: topic modelling for humans</a><br></p><br><p><strong>6.Pylearn2 </strong>是一个机器学习库。它的大部分功能都是建立在 Theano 的基础之上。这意味着你可以使用数学表达式编写 Pylearn2 插件（新模型、算法等），然后 Theano 将为你优化这些表达式让其更加稳定，并将根据你的选择把它编译适配相应的后端（CPU 或 GPU）。</p><p>提交：7100，贡献者：115</p><p>链接：<a href=\"https://link.zhihu.com/?target=http%3A//github.com/lisa-lab/pylearn2\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">lisa-lab/pylearn2</a></p><br><p><strong>7.Statsmodels </strong>是一个允许用户挖掘数据、估计统计模型和执行统计测试的 Python 模块。描述性统计、统计测试、绘图函数和结果统计的详细列表可用于不同类型的数据和估计器。</p><p>提交：8664，贡献者：108</p><p>链接：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/statsmodels/statsmodels/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">statsmodels/statsmodels</a></p><br><p><strong>8.Shogun</strong> 是一种提供大量高效且统一的机器学习（ML）方法的机器学习工具箱。它能容易地把多种数据表示，算法类和通用工具紧密地联系起来。</p><p>提交：15172，贡献者：105</p><p>链接：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/shogun-toolbox/shogun\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">shogun-toolbox/shogun</a></p><br><p><strong>9.Chainer </strong>是一个基于 Python 并且独立的深度学习模型开源框架。Chainer 提供一种灵活、直观且高效的方法来实现整个深度学习模型，包括如循环神经网络和变分自动编码器等最先进的模型。</p><p>提交：6298，贡献者：84</p><p>链接：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/pfnet/chainer\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">pfnet/chainer</a></p><br><p><strong>10.NuPIC</strong> 是一个基于一种被称为分层式即时记忆（HTM/ Hierarchical Temporal Memory）的新皮质理论的开源项目。HTM 理论中的一部分已经在应用中被实现、测试和使用了，而其他部分仍在开发中。</p><p>提交：6088，贡献者：76</p><p>链接：<a href=\"https://link.zhihu.com/?target=http%3A//github.com/numenta/nupic\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">numenta/nupic</a></p><br><p><strong>11.Neon </strong>是 Nervana (<a href=\"https://link.zhihu.com/?target=http%3A//nervanasys.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Nervana - AI on demand - Making machines smarter.</a>) 公司的一个基于 Python 的深度学习库。它提供易用性的同时也提供了最高的性能。</p><p>提交：875，贡献者：47</p><p>链接：<a href=\"https://link.zhihu.com/?target=http%3A//neon.nervanasys.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">neon - neon 1.7.0+d8ae0ee documentation</a></p><br><p><strong>12.Nilearn </strong>是一个用于在 NeuroImaging 数据上快速轻松地进行统计学习的 Python 模块。它利用 scikit-learn Python 工具箱来处理如预测建模、分类、解码或连接分析等多变量统计信息。</p><p>提交：5254，贡献者：46</p><p>链接：<a href=\"https://link.zhihu.com/?target=http%3A//github.com/nilearn/nilearn\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">nilearn/nilearn</a></p><br><p><strong>13.Orange3</strong> 是一个新手和专家都可以使用的开源机器学习和数据可视化工具。在交互式数据分析工作流程中拥有大型的工具箱。</p><p>提交：6356，贡献者：40</p><p>链接：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/biolab/orange3\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">biolab/orange3</a></p><br><p><strong>14.Pymc </strong>是一个实现贝叶斯统计模型和拟合算法的 Python 模块，其中包括马尔可夫链和蒙特卡罗方法。其灵活性和可扩展性使其适用于大量问题。</p><p>提交：2701，贡献者：37</p><p>链接：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/pymc-devs/pymc\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">pymc-devs/pymc</a></p><br><p><strong>15.PyBrain</strong> 是 Python 的一个模块化机器学习库。它的目标是为机器学习任务提供灵活且易于使用但仍然强大的算法，以及各种预定义环境来对你的算法进行测试和比较。</p><p>提交：984，贡献者：31</p><p>链接：<a href=\"https://link.zhihu.com/?target=http%3A//github.com/pybrain/pybrain\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">pybrain/pybrain</a></p><br><p><strong>16.Fuel</strong> 是一个数据管道框架（data pipeline framework），它为你的机器学习模型提供所需的数据。它将被 Blocks 和 Pylearn2 神经网络库使用。</p><p>提交：1053，贡献者：29</p><p>链接：<a href=\"https://link.zhihu.com/?target=http%3A//github.com/mila-udem/fuel\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">mila-udem/fuel</a></p><br><p><strong>17.PyMVPA </strong>是一个用于简化大型数据集的统计学习分析 Python 包。它提供了一个可扩展的框架，具有大量用于分类、回归、特征选择、数据导入和导出等算法的高级接口。</p><p>提交：9258，贡献者：26</p><p>链接：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/PyMVPA/PyMVPA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">PyMVPA/PyMVPA</a></p><br><p><strong>18.Annoy</strong>（Approximate Nearest Neighbors Oh Yeah）是一个绑定 Python 的 C ++库，用来搜索在空间中距离给定查询点较近的点。它还创建了基于大型只读文件的数据结构，这些数据结构被映射到内存中，以便许多进程可以共享相同的数据。</p><p>提交：365，贡献者：24</p><p>链接：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/spotify/annoy\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">spotify/annoy</a><br></p><br><p><strong>19.Deap </strong>是一个用于快速原型和测试思想的新颖的进化计算框架。它试图使算法更加浅显易懂，数据结构更加透明。它与并行机制（例如 multiprocessing 和 SCOOP）能完美协调。</p><p>提交：1854，贡献者：21</p><p>链接：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/deap/deap\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">DEAP/deap</a></p><br><p><strong>12.Pattern </strong>是 Python 编程语言的 Web 挖掘模块。它捆绑了数据挖掘（Google + Twitter +维基百科 API、网络爬虫、HTML DOM 解析器）、自然语言处理（词性标记、n-gram 搜索、情感分析、WordNet）、机器学习（向量空间模型、k-means 聚类、朴素贝叶斯+ k-NN + SVM 分类器）和网络分析（图形中心性和可视化）等工具。</p><p>提交：943，贡献者：20</p><p>链接：<a href=\"https://link.zhihu.com/?target=https%3A//pypi.python.org/pypi/Pattern\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Python Package Index</a><br></p><br><p>从下面的图表中可以得知，与其它项目相比，PyMVPA 具有最高的贡献率。令人吃惊的是，相比于其它项目，尽管 Scikit-learn 的贡献者最多，但是它的贡献率比较低。这背后的原因可能是因为 PyMVPA 是一个新的项目，经历了早期的发展阶段，由于新的想法/功能开发，缺陷修复，重构等原因导致了许多提交。而 Scikit-learn 是一个早期的并且比较稳定的项目，所以拥有较少的改进或缺陷修复等提交。</p><br><figure><noscript><img src=\"https://pic2.zhimg.com/50/v2-e33f1109aee1f9bb3d2231d746878d5b_720w.png?source=54b3c3a5\" data-rawwidth=\"1341\" data-rawheight=\"829\" class=\"origin_image zh-lightbox-thumb\" width=\"1341\" data-original=\"https://pic1.zhimg.com/v2-e33f1109aee1f9bb3d2231d746878d5b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1341'%20height='829'&gt;&lt;/svg&gt;\" data-rawwidth=\"1341\" data-rawheight=\"829\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1341\" data-original=\"https://pic1.zhimg.com/v2-e33f1109aee1f9bb3d2231d746878d5b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-e33f1109aee1f9bb3d2231d746878d5b_720w.png?source=54b3c3a5\"></figure><br><br><p>此外还比较了 2015 年和 2016 年的前20的项目。可以看到 Pattern、PyBrain 和 Pylearn2 的贡献率没有明显的改变，也没有新的贡献者。此外，我们可以在贡献者的数量和提交的数量中看到一个显著的相关性。贡献者的增加可能会导致提交的增加，这也是我认为开源项目和社区神奇的地方；它可以导致头脑风暴，产生新想法以及创造更好的软件工具。</p><br><figure><noscript><img src=\"https://pic1.zhimg.com/50/v2-078e13a8abce2f3aff3a4d999ea5dbb2_720w.png?source=54b3c3a5\" data-rawwidth=\"1264\" data-rawheight=\"1019\" class=\"origin_image zh-lightbox-thumb\" width=\"1264\" data-original=\"https://pic1.zhimg.com/v2-078e13a8abce2f3aff3a4d999ea5dbb2_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1264'%20height='1019'&gt;&lt;/svg&gt;\" data-rawwidth=\"1264\" data-rawheight=\"1019\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1264\" data-original=\"https://pic1.zhimg.com/v2-078e13a8abce2f3aff3a4d999ea5dbb2_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-078e13a8abce2f3aff3a4d999ea5dbb2_720w.png?source=54b3c3a5\"></figure>"}{"Python 科学计算有哪些提高运算速度的技巧？": "<p>说到矩阵运算，最简单的粗暴的就是三重循环直接遍历：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"k\">def</span> <span class=\"nf\">matrix_multiplication_loop</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"n\">B</span><span class=\"p\">):</span>\n    <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"n\">B</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">([</span><span class=\"n\">m</span><span class=\"p\">,</span><span class=\"n\">l</span><span class=\"p\">])</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">xrange</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">xrange</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"nb\">xrange</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n                <span class=\"n\">C</span> <span class=\"o\">+=</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">k</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"n\">B</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">C</span>\n<span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">([</span><span class=\"mi\">300</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">])</span>\n<span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">([</span><span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"mi\">256</span><span class=\"p\">])</span>\n<span class=\"o\">%</span><span class=\"n\">timeit</span> <span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">matrix_multiplication_loop</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"n\">B</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span> <span class=\"n\">loop</span><span class=\"p\">,</span> <span class=\"n\">best</span> <span class=\"n\">of</span> <span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"mf\">2.22</span> <span class=\"n\">s</span> <span class=\"n\">per</span> <span class=\"n\">loop</span>\n</code></pre></div><p>简直龟速了，可不可再快一点？当然，上numpy</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">%</span><span class=\"n\">timeit</span> <span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"n\">B</span><span class=\"p\">)</span>\n<span class=\"mi\">10000</span> <span class=\"n\">loops</span><span class=\"p\">,</span> <span class=\"n\">best</span> <span class=\"n\">of</span> <span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"mi\">105</span> <span class=\"err\">µ</span><span class=\"n\">s</span> <span class=\"n\">per</span> <span class=\"n\">loop</span>\n</code></pre></div><p>numpy还是牛牛哒，一下子快了2万倍～</p><p>可不可再快一点？当然，JIT听过吗？just in time-即时编译。我第一次听到这个词是在工业工程的精益制造里，它的含义是生产线上即时生产，需要什么马上预定什么，没有库存。numba就是just in time的一个编译器，让我们来试试：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"kn\">import</span> <span class=\"nn\">numba</span>\n<span class=\"nd\">@numba.autojit</span>\n<span class=\"k\">def</span> <span class=\"nf\">matrix_multiplication_numba</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"n\">B</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"n\">B</span><span class=\"p\">)</span>\n<span class=\"o\">%</span><span class=\"n\">timeit</span> <span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">matrix_multiplication_numba</span><span class=\"p\">(</span><span class=\"n\">D</span><span class=\"p\">,</span><span class=\"n\">E</span><span class=\"p\">)</span>\n<span class=\"mi\">10000</span> <span class=\"n\">loops</span><span class=\"p\">,</span> <span class=\"n\">best</span> <span class=\"n\">of</span> <span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"mi\">55</span> <span class=\"err\">µ</span><span class=\"n\">s</span> <span class=\"n\">per</span> <span class=\"n\">loop</span>\n</code></pre></div><p>又快了将近一倍～</p><p>可不可再快一点？当然，只是今天没时间了，未完待续。</p><hr><p>numpy本身是非常优秀的，把速度优化就极佳了，要打败它并不容易，我们需要借助上古的力量C语言和blas库。cython是python里实现C语言的一座桥梁，下面是用cython实现的矩阵乘法：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">%</span><span class=\"n\">load_ext</span> <span class=\"n\">Cython</span>\n<span class=\"o\">%%</span><span class=\"n\">cython</span>\n<span class=\"c1\">#!python</span>\n<span class=\"c1\">#cython: boundscheck=False, wraparound=False, nonecheck=False</span>\n<span class=\"c1\">#cython: cdivision=True</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scipy.linalg.cython_blas</span> <span class=\"nn\">cimport</span> <span class=\"nn\">dgemm</span>\n\n<span class=\"n\">cpdef</span> <span class=\"n\">void</span> <span class=\"n\">cython_blas_MatrixMul</span><span class=\"p\">(</span><span class=\"n\">double</span><span class=\"p\">[::</span><span class=\"mi\">1</span><span class=\"p\">,:]</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">double</span><span class=\"p\">[::</span><span class=\"mi\">1</span><span class=\"p\">,:]</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">double</span><span class=\"p\">[::</span><span class=\"mi\">1</span><span class=\"p\">,:]</span> <span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">char</span><span class=\"o\">*</span> <span class=\"n\">TransA</span><span class=\"p\">,</span> <span class=\"n\">char</span><span class=\"o\">*</span> <span class=\"n\">TransB</span><span class=\"p\">)</span> <span class=\"n\">nogil</span><span class=\"p\">:</span>\n\n    <span class=\"n\">cdef</span><span class=\"p\">:</span>\n        <span class=\"n\">char</span><span class=\"o\">*</span> <span class=\"n\">Trans</span><span class=\"o\">=</span><span class=\"s1\">'T'</span>\n        <span class=\"n\">char</span><span class=\"o\">*</span> <span class=\"n\">No_Trans</span><span class=\"o\">=</span><span class=\"s1\">'N'</span>\n        <span class=\"nb\">int</span> <span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">lda</span><span class=\"p\">,</span> <span class=\"n\">ldb</span><span class=\"p\">,</span> <span class=\"n\">ldc</span>\n        <span class=\"nb\">int</span> <span class=\"n\">col_a</span><span class=\"p\">,</span> <span class=\"n\">col_b</span>\n        <span class=\"n\">double</span> <span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"n\">beta</span>\n\n    <span class=\"c1\">#dimensions of input arrays</span>\n    <span class=\"n\">lda</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">col_a</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">ldb</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">col_b</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>  \n    <span class=\"n\">ldc</span> <span class=\"o\">=</span> <span class=\"n\">m</span>\n\n    <span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n    <span class=\"n\">beta</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n    <span class=\"n\">dgemm</span><span class=\"p\">(</span><span class=\"n\">TransA</span><span class=\"p\">,</span> <span class=\"n\">TransB</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"o\">&amp;</span><span class=\"n\">lda</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"o\">&amp;</span><span class=\"n\">ldb</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">beta</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"o\">&amp;</span><span class=\"n\">ldc</span><span class=\"p\">)</span>\n\n<span class=\"o\">%</span><span class=\"n\">timeit</span> <span class=\"n\">cython_blas_MatrixMul</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"n\">B</span><span class=\"p\">,</span><span class=\"n\">C</span><span class=\"p\">,</span><span class=\"sa\">b</span><span class=\"s2\">\"T\"</span><span class=\"p\">,</span><span class=\"sa\">b</span><span class=\"s2\">\"T\"</span><span class=\"p\">)</span>\n<span class=\"mi\">100000</span> <span class=\"n\">loops</span><span class=\"p\">,</span> <span class=\"n\">best</span> <span class=\"n\">of</span> <span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"mf\">9.34</span> <span class=\"err\">µ</span><span class=\"n\">s</span> <span class=\"n\">per</span> <span class=\"n\">loop</span>\n</code></pre></div><p>厉害吧！又快了五倍，比最开始的实现方法已经快了20万倍！这性能也已经逼近C语言了。</p><p>可不可以再快一点？嘿嘿，当然！现在已经接近CPU的极限了，要更快我们就要买入GPU的世界了～</p><p>你们感兴趣，超过一百赞，我就写怎么使用python做GPU计算，让计算速度快破天际</p><hr><p>谢谢大家捧场，这么快就过100赞了。来来来，让我们继续飙车～</p><p>GPU相比CPU并非在所有情况下都更快，小矩阵时，矩阵可以直接存储在CPU的cache里，CPU可以快速访问，这个时候CPU会比GPU快。但是当遇到大矩阵时，GPU的威力就显示出来了。让我们先把矩阵扩大一千倍来看看：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">([</span><span class=\"mi\">3000</span><span class=\"p\">,</span><span class=\"mi\">1280</span><span class=\"p\">])</span>\n<span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">([</span><span class=\"mi\">1280</span><span class=\"p\">,</span><span class=\"mi\">2560</span><span class=\"p\">])</span>\n<span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">([</span><span class=\"mi\">3000</span><span class=\"p\">,</span><span class=\"mi\">2560</span><span class=\"p\">])</span>\n</code></pre></div><p>先用numpy做baseline：</p><div class=\"highlight\"><pre><code class=\"language-bro\"><span></span><span class=\"o\">%</span><span class=\"n\">timeit</span> <span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"s\">np.dot</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"n\">B</span><span class=\"p\">)</span>\n<span class=\"mf\">1</span> <span class=\"n\">loop</span><span class=\"p\">,</span> <span class=\"n\">best</span> <span class=\"k\">of</span> <span class=\"mf\">3</span><span class=\"o\">:</span> <span class=\"mf\">582</span> <span class=\"n\">ms</span> <span class=\"n\">per</span> <span class=\"n\">loop</span>\n</code></pre></div><p>可怕，一下子慢了5000倍。来试试，cython:</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"o\">%</span><span class=\"n\">timeit</span> <span class=\"n\">cython_blas_MatrixMul</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"n\">B</span><span class=\"p\">,</span><span class=\"n\">C</span><span class=\"p\">,</span><span class=\"sa\">b</span><span class=\"s2\">\"T\"</span><span class=\"p\">,</span><span class=\"sa\">b</span><span class=\"s2\">\"T\"</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span> <span class=\"n\">loop</span><span class=\"p\">,</span> <span class=\"n\">best</span> <span class=\"n\">of</span> <span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"mi\">280</span> <span class=\"n\">ms</span> <span class=\"n\">per</span> <span class=\"n\">loop</span>\n</code></pre></div><p>快了一倍，可是还要280ms。让我们来试试GPU吧。先用pyculib走一波，pyculib是cuda在Python里的一个开源库，集成了cudablas一系列算法，非常好用：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"kn\">from</span> <span class=\"nn\">pyculib</span> <span class=\"kn\">import</span> <span class=\"n\">blas</span>\n<span class=\"o\">%</span><span class=\"n\">timeit</span> <span class=\"n\">Cres</span> <span class=\"o\">=</span> <span class=\"n\">blas</span><span class=\"o\">.</span><span class=\"n\">gemm</span><span class=\"p\">(</span><span class=\"s1\">'N'</span><span class=\"p\">,</span> <span class=\"s1\">'N'</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span> <span class=\"n\">loop</span><span class=\"p\">,</span> <span class=\"n\">best</span> <span class=\"n\">of</span> <span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"mi\">140</span> <span class=\"n\">ms</span> <span class=\"n\">per</span> <span class=\"n\">loop</span>\n</code></pre></div><p>哇塞，一下快了一倍，GPU果然厉害～</p><p>可不可以再快一点？那是必须的。tensorflow是Google开源的深度学习框架，矩阵方面内部优化很多：</p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"kn\">as</span> <span class=\"nn\">tf</span>\n<span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">random_normal</span><span class=\"p\">([</span><span class=\"mi\">3000</span><span class=\"p\">,</span><span class=\"mi\">1280</span><span class=\"p\">])</span>\n<span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">random_normal</span><span class=\"p\">([</span><span class=\"mi\">1280</span><span class=\"p\">,</span><span class=\"mi\">2560</span><span class=\"p\">])</span>\n<span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span><span class=\"n\">B</span><span class=\"p\">)</span>\n<span class=\"k\">with</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">sess</span><span class=\"p\">:</span>\n    <span class=\"o\">%</span><span class=\"n\">timeit</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">C</span><span class=\"p\">)</span>\n<span class=\"mi\">100</span> <span class=\"n\">loops</span><span class=\"p\">,</span> <span class=\"n\">best</span> <span class=\"n\">of</span> <span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"mf\">4.83</span> <span class=\"n\">ms</span> <span class=\"n\">per</span> <span class=\"n\">loop</span>\n</code></pre></div><p>哇咔咔，比numpy快了100倍！tensorflow果然是Google的技术名不虚传！</p><p>这就是终点了吗？还能更快吗？答案是肯定的，我听NVIDIA的工程师说，如果你用C语言编写的cuDNN直接操作GPU指针还能比tensorflow快３倍～但那就脱离python的范畴了。看了这么多，有木有觉得计算机真是博大精深！勇敢的少年们，快来拥抱CS吧～</p>", "学好深度学习，Python 得达到什么程度？": "<p>个人觉得如果是纯python，不加任何外部的库，那你就需要做好准备半年时间去自己开发深度学习框架了。不过好在有很多大牛人或者机构已经给你开发好了很多可以拿来直接用的库，模块。这些都是大大的好啊。真心感谢他们的贡献。</p><p>具体来说说用python开发或学习机器学习，深度学习的重要模块！应该说是必不可少的模块！</p><p>1. 前期准备， 你多多少少需要懂python科学运算，数据整理还有出图像结果的模块，这三个必不可少：numpy [<a href=\"https://link.zhihu.com/?target=https%3A//mofanpy.com/tutorials/data-manipulation/np-pd/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">教程</a>], pandas [<a href=\"https://link.zhihu.com/?target=https%3A//mofanpy.com/tutorials/data-manipulation/np-pd/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">教程</a>], matplotlib [<a href=\"https://link.zhihu.com/?target=https%3A//mofanpy.com/tutorials/data-manipulation/plt/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">教程</a>].</p><p>2. 进阶准备，在机器学习方面，scikit-learn [<a href=\"https://link.zhihu.com/?target=https%3A//mofanpy.com/tutorials/machine-learning/sklearn/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">教程</a>] 是汇集了众多机器学习方法的模块，它支持各种各样的机器学习方法。你总能找到适合你项目的。</p><p>3. 同样是进阶的，在神经网络方面有着巨大贡献的 Tensorflow [<a href=\"https://link.zhihu.com/?target=https%3A//mofanpy.com/tutorials/machine-learning/tensorflow/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">教程</a>]，这个是Google开发，而且挖了挺多theano的开发人员。我觉得神经网络的开发没有比tensorflow更牛的了。而且你想Google这大公司，更新推进的速度肯定也不会慢。看好它。同时 Pytorch [<a href=\"https://link.zhihu.com/?target=https%3A//mofanpy.com/tutorials/machine-learning/torch/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">教程</a>] 也是值得推荐的神经网络库.</p><p>4. 现在强化学习 [<a href=\"https://link.zhihu.com/?target=https%3A//mofanpy.com/tutorials/machine-learning/reinforcement-learning/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">教程</a>] 也非常的热门, 让机器人自动学习, 帮你完成事情是不错的想法. 比如AlphaGo, 都是强化学习做出来的.</p><p>5. 遗传算法 [<a href=\"https://link.zhihu.com/?target=https%3A//mofanpy.com/tutorials/machine-learning/evolutionary-algorithm/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">教程</a>] 这种类型, 在工业界是使用得比较多的, 但是未来可能大部分用遗传算法的工程会被深度学习替代, 但是遗传算法这种进化形势的算法, 还是在机器学习有一席之地的.</p><p>6. 如果想方便快捷地搭建神经网络, Keras 这个模块很不错, 他的底层是 Tensorflow 和 Theano, 所以在 Windows, MacOS, Linux上都能用得到.</p><p>7. 的确是还有很多其他的模块可以运用，不过在我个人的机器学习生涯中，主要就是运用这些了。</p><p>为了方便大家的学习，推广华人在机器学习领域的力量，我有自己做一套的scikit learn，Theano,  Keras, 还有 Tensorflow 等中文教学视频, 机器学习的简介系列。国内的反响还不怎么样，不过在YouTube上已经很多人观看了。希望大家支持华人的力量。</p><p>最近也在学习并制作网页, 汇总所有内容: </p><a href=\"https://link.zhihu.com/?target=https%3A//mofanpy.com\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-87375b53c621c23ba89a0627d1a83f3d_bh.jpg?source=54b3c3a5\" data-image-width=\"825\" data-image-height=\"464\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">莫烦Python</a><p>网易云课堂也能找到这些 : <a href=\"https://link.zhihu.com/?target=http%3A//study.163.com/u/2635988091%23/center/lectorCenterCourse\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Morvan个人主页</a></p>", "如何设计制度，才能使程序员职位被程序员世家垄断？": "<p>其实这个事情也蛮简单，要垄断一个行业，最高明和优雅的方式就是提高入行的门槛。这个套路已经在美帝的医生和法律行业成功实现了。而程序员这个行业门槛始终无法抬高的主要障碍是一个大家天天打交道却又忽视的大佬玩家。</p><br><br><p><b>没错！正是微软！</b></p><br><p>其实为什么微软总是被业界不待见，重要原因就是这货一直在降低业界的门槛，这伤害到了整个行业每一个人的切身利益，所以很多人对微软恨之入骨。</p><p>试想一下，如果没有VS这样的开发套装，Windows这种平民操作系统根本就不支持软件开发，没有wintel联盟搞的这种uefi，bios，每个人必须从引导程序开始自己编译一个Linux发行版本出来，用vim什么的东西敲代码。本科学了四年估计才能正确的编译某几个Linux发行版，能写程序至少要博士毕业，这样一来，就只有从小家里电脑就有Linux的程序员世家才能胜任这种工作了……</p><br><p>-------------------------------------------------------------------------------------------------</p><p>所以要怎么做，这已经是明摆着的了：</p><p>首先，在行业和社区里面散播如下言论：</p><blockquote>用VS会降低你的编程能力，高手都不用IDE的，必须用vim什么的。\nWindows根本就不适合开发，有各种各样的问题，只有Linux才是适合开发的环境。\nGUI只会劣化程序员，真正的程序员都用命令行。\n跟着微软走，路只会越走越窄。\n用微软的技术人会傻掉。</blockquote><br><p>然后……</p><blockquote>公司采购开发人员电脑只允许采购Mac的，不允许许装Windows。\n开发语言一定要选择那种坑多的，例如Java和JavaScript，因为坑多的语言门槛高，要记住那些坑就要花很多时间……\n只会C#、VB什么的一律不招，必须会Java/JavaScript和另外一种小众语言，例如lisp、perl、ruby、go什么的。</blockquote><br><p>最后，你看看业界……</p><br><p>====================================================</p><p>写在最后：</p><p>我这个答案主要以调侃为主，并不说明目前业界正在尝试抬高入行门槛达成世袭垄断，只是给大家另一个看问题的角度，总的来说，软件开发目前仍然是阶层上升的一个通道。</p><br><p>最后，Bill这个人，我觉得还是有情怀的，和乔帮主在车库里面焊电脑不同。这个富二代从哈佛辍学是给IBM的兼容机写BASIC的解释器的。</p>", "仅就作图而言，Python 和 MATLAB 有可比性吗？": "<p>个人认为：仅作图而言，MATLAB 代码更简单，且比 Python 好看。</p><blockquote>Take is cheap, show me the code.</blockquote><p>我们绘制两条曲线： <img src=\"https://www.zhihu.com/equation?tex=%5Csin+%28x%29\" alt=\"\\sin (x)\" eeimg=\"1\"> 和 <img src=\"https://www.zhihu.com/equation?tex=%5Ccos%28x%5E2%29\" alt=\"\\cos(x^2)\" eeimg=\"1\"> ，并在图中插入一个公式 <img src=\"https://www.zhihu.com/equation?tex=%5Cint_a%5Eb+f%28x%29%5Cmathrm%7Bd%7Dx\" alt=\"\\int_a^b f(x)\\mathrm{d}x\" eeimg=\"1\"></p><p>Python 代码如下：<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\" data-text=\"张若愚. Python 科学计算[M]. 清华大学出版社, 2016.\" data-url=\"http://bigsec.net/b52/scipydoc/\">[1]</sup></p><div class=\"highlight\"><pre><code class=\"language-python\"><span></span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotlib</span> <span class=\"kn\">import</span> <span class=\"n\">pyplot</span> <span class=\"k\">as</span> <span class=\"n\">plt</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"n\">z</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"sa\">r</span><span class=\"s2\">\"$\\sin(x)$\"</span><span class=\"p\">,</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s2\">\"red\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">,</span><span class=\"s2\">\"b--\"</span><span class=\"p\">,</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"sa\">r</span><span class=\"s2\">\"$\\cos(x^2)$\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"sa\">r</span><span class=\"s2\">\"$\\int_a^b f(x)\\mathrm{d}x$\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"s2\">\"Time(s)\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"s2\">\"Volt\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s2\">\"PyPlot Example\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylim</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">1.2</span><span class=\"p\">,</span><span class=\"mf\">1.2</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-67fc18f7d17e84c29de7839ad7750795_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1627\" data-rawheight=\"1232\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-17fcb9791bf37aa7e4e167a1c0ac504e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1627\" data-original=\"https://pic3.zhimg.com/v2-67fc18f7d17e84c29de7839ad7750795_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1627'%20height='1232'&gt;&lt;/svg&gt;\" data-rawwidth=\"1627\" data-rawheight=\"1232\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-17fcb9791bf37aa7e4e167a1c0ac504e_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1627\" data-original=\"https://pic3.zhimg.com/v2-67fc18f7d17e84c29de7839ad7750795_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-67fc18f7d17e84c29de7839ad7750795_720w.jpg?source=54b3c3a5\"><figcaption>Python 绘制结果</figcaption></figure><p>接下来是高度相同的 MATLAB 代码：<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\" data-text=\"MATLAB plot 函数说明\" data-url=\"https://ww2.mathworks.cn/help/matlab/ref/plot.html?requestedDomain=cn\">[2]</sup></p><div class=\"highlight\"><pre><code class=\"language-matlab\"><span></span><span class=\"n\">x</span><span class=\"p\">=</span><span class=\"nb\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">1000</span><span class=\"p\">);</span>\n<span class=\"n\">y</span><span class=\"p\">=</span><span class=\"nb\">sin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"n\">z</span><span class=\"p\">=</span><span class=\"nb\">cos</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.^</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n\n<span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"s\">'Color'</span><span class=\"p\">,</span><span class=\"s\">'r'</span><span class=\"p\">)</span>\n<span class=\"n\">hold</span> <span class=\"n\">on</span>\n<span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">z</span><span class=\"p\">,</span>\"<span class=\"n\">b</span><span class=\"o\">--</span>\"<span class=\"p\">)</span>\n<span class=\"n\">text</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"s\">'$\\int_a^b f(x)\\mathrm{d}x$'</span><span class=\"p\">,</span><span class=\"s\">'Interpreter'</span><span class=\"p\">,</span><span class=\"s\">'latex'</span><span class=\"p\">)</span>\n<span class=\"n\">xlabel</span><span class=\"p\">(</span>\"<span class=\"n\">Time</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\"<span class=\"p\">)</span>\n<span class=\"n\">ylabel</span><span class=\"p\">(</span>\"<span class=\"n\">Volt</span>\"<span class=\"p\">)</span>\n<span class=\"n\">title</span><span class=\"p\">(</span>\"<span class=\"n\">MatlabPlot</span> <span class=\"n\">Example</span>\"<span class=\"p\">)</span>\n<span class=\"n\">ylim</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mf\">1.2</span> <span class=\"mf\">1.2</span><span class=\"p\">])</span>\n<span class=\"n\">legend</span><span class=\"p\">(</span><span class=\"s\">'$\\sin(x)$'</span><span class=\"p\">,</span><span class=\"s\">'$\\cos(x^2)$'</span><span class=\"p\">,</span><span class=\"s\">'Interpreter'</span><span class=\"p\">,</span><span class=\"s\">'latex'</span><span class=\"p\">)</span>\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-3c7afa3b6487c8712403acb1ecaaaaa4_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1552\" data-rawheight=\"1233\" data-size=\"normal\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-6aa9680fe816bb252fbc2136a21332e0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1552\" data-original=\"https://pic2.zhimg.com/v2-3c7afa3b6487c8712403acb1ecaaaaa4_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1552'%20height='1233'&gt;&lt;/svg&gt;\" data-rawwidth=\"1552\" data-rawheight=\"1233\" data-size=\"normal\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-6aa9680fe816bb252fbc2136a21332e0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1552\" data-original=\"https://pic2.zhimg.com/v2-3c7afa3b6487c8712403acb1ecaaaaa4_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-3c7afa3b6487c8712403acb1ecaaaaa4_720w.jpg?source=54b3c3a5\"><figcaption>MATLAB 绘制结果</figcaption></figure><p>如果你是 <b>究极排版狂魔</b> ，那么这个神级工具包你一定不会错过—— <code>matlab2tikz</code>，能将 MATLAB 当前窗口中的的图像转化为 LaTeX 源代码：<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\" data-text=\"matlab2tikz\" data-url=\"https://github.com/matlab2tikz/matlab2tikz\">[3]</sup></p><div class=\"highlight\"><pre><code class=\"language-tex\"><span></span><span class=\"k\">\\begin</span><span class=\"nb\">{</span>tikzpicture<span class=\"nb\">}</span>\n\n<span class=\"k\">\\begin</span><span class=\"nb\">{</span>axis<span class=\"nb\">}</span>[<span class=\"c\">%</span>\nwidth=4.525in,\nheight=3.568in,\nat=<span class=\"nb\">{</span>(0.759in,0.482in)<span class=\"nb\">}</span>,\nscale only axis,\nxmin=0,\nxmax=10,\nxlabel style=<span class=\"nb\">{</span>font=<span class=\"k\">\\color</span><span class=\"nb\">{</span>white!15!black<span class=\"nb\">}}</span>,\nxlabel=<span class=\"nb\">{</span>Time(s)<span class=\"nb\">}</span>,\nymin=-1.2,\nymax=1.2,\nylabel style=<span class=\"nb\">{</span>font=<span class=\"k\">\\color</span><span class=\"nb\">{</span>white!15!black<span class=\"nb\">}}</span>,\nylabel=<span class=\"nb\">{</span>Volt<span class=\"nb\">}</span>,\naxis background/.style=<span class=\"nb\">{</span>fill=white<span class=\"nb\">}</span>,\ntitle=<span class=\"nb\">{</span><span class=\"k\">\\LaTeX</span> Plot Example<span class=\"nb\">}</span>,\nlegend style=<span class=\"nb\">{</span>legend cell align=left, align=left, draw=white!15!black<span class=\"nb\">}</span>\n]\n<span class=\"k\">\\addplot</span> [color=red]\n  table[row sep=crcr]<span class=\"nb\">{</span><span class=\"c\">%</span>\n0\t0<span class=\"k\">\\\\</span>\n0.01001001001001\t0.0100098428431792<span class=\"k\">\\\\</span>\n0.02002002002002\t0.0200186827054735<span class=\"k\">\\\\</span>\n0.03003003003003\t0.0300255167064961<span class=\"k\">\\\\</span>\n...\n9.96996996996997\t0.426059444079512<span class=\"k\">\\\\</span>\n9.97997997997998\t0.59706053061497<span class=\"k\">\\\\</span>\n9.98998998998999\t0.744463820622945<span class=\"k\">\\\\</span>\n10\t0.862318872287684<span class=\"k\">\\\\</span>\n<span class=\"nb\">}</span>;\n<span class=\"k\">\\addlegendentry</span><span class=\"nb\">{</span><span class=\"s\">$</span><span class=\"nv\">\\cos</span><span class=\"o\">(</span><span class=\"nb\">x^</span><span class=\"m\">2</span><span class=\"o\">)</span><span class=\"s\">$</span><span class=\"nb\">}</span>\n\n<span class=\"k\">\\node</span><span class=\"na\">[right, align=left]</span>\nat (axis cs:0,0) <span class=\"nb\">{</span><span class=\"s\">$</span><span class=\"nv\">\\int</span><span class=\"nb\">_a^b f</span><span class=\"o\">(</span><span class=\"nb\">x</span><span class=\"o\">)</span><span class=\"nv\">\\mathrm</span><span class=\"nb\">{d}x</span><span class=\"s\">$</span><span class=\"nb\">}</span>;\n<span class=\"k\">\\end</span><span class=\"nb\">{</span>axis<span class=\"nb\">}</span>\n\n<span class=\"k\">\\begin</span><span class=\"nb\">{</span>axis<span class=\"nb\">}</span>[<span class=\"c\">%</span>\nwidth=5.839in,\nheight=4.378in,\nat=<span class=\"nb\">{</span>(0in,0in)<span class=\"nb\">}</span>,\nscale only axis,\nxmin=0,\nxmax=1,\nymin=0,\nymax=1,\naxis line style=<span class=\"nb\">{</span>draw=none<span class=\"nb\">}</span>,\nticks=none,\naxis x line*=bottom,\naxis y line*=left,\nlegend style=<span class=\"nb\">{</span>legend cell align=left, align=left, draw=white!15!black<span class=\"nb\">}</span>\n]\n<span class=\"k\">\\end</span><span class=\"nb\">{</span>axis<span class=\"nb\">}</span>\n<span class=\"k\">\\end</span><span class=\"nb\">{</span>tikzpicture<span class=\"nb\">}</span><span class=\"c\">% </span>\n</code></pre></div><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-7952c7f11da2eb75f849a487b9fa4a9b_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1367\" data-rawheight=\"1155\" data-size=\"normal\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d8a6bf65b01ea7706d8c1e78a8d24dc8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1367\" data-original=\"https://pic3.zhimg.com/v2-7952c7f11da2eb75f849a487b9fa4a9b_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1367'%20height='1155'&gt;&lt;/svg&gt;\" data-rawwidth=\"1367\" data-rawheight=\"1155\" data-size=\"normal\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-d8a6bf65b01ea7706d8c1e78a8d24dc8_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1367\" data-original=\"https://pic3.zhimg.com/v2-7952c7f11da2eb75f849a487b9fa4a9b_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-7952c7f11da2eb75f849a487b9fa4a9b_720w.jpg?source=54b3c3a5\"><figcaption>LaTeX 绘制结果</figcaption></figure><p>这样比较下来，MATLAB 在代码简洁方面略胜，在图像精美程度方面完胜。</p><p>个人还是非常喜欢用 MATLAB 来绘图的，摆几张平时作业画的图：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-9d555d9d676807476a772566aae809b8_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1362\" data-rawheight=\"1482\" data-size=\"normal\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-6da1e7b9d932f308430d37b1d0ad327a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1362\" data-original=\"https://pic3.zhimg.com/v2-9d555d9d676807476a772566aae809b8_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1362'%20height='1482'&gt;&lt;/svg&gt;\" data-rawwidth=\"1362\" data-rawheight=\"1482\" data-size=\"normal\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-6da1e7b9d932f308430d37b1d0ad327a_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1362\" data-original=\"https://pic3.zhimg.com/v2-9d555d9d676807476a772566aae809b8_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-9d555d9d676807476a772566aae809b8_720w.jpg?source=54b3c3a5\"><figcaption>这是梯度下降法，右边是相对收敛速度</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-bde2cc8e4af616cd022dab16682c056c_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1579\" data-rawheight=\"1489\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a1a9d6cb7bee4c9c2a52570dae9b43b1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1579\" data-original=\"https://pic1.zhimg.com/v2-bde2cc8e4af616cd022dab16682c056c_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1579'%20height='1489'&gt;&lt;/svg&gt;\" data-rawwidth=\"1579\" data-rawheight=\"1489\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-a1a9d6cb7bee4c9c2a52570dae9b43b1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1579\" data-original=\"https://pic1.zhimg.com/v2-bde2cc8e4af616cd022dab16682c056c_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-bde2cc8e4af616cd022dab16682c056c_720w.jpg?source=54b3c3a5\"><figcaption>Rosenbrock 函数，也称香蕉函数</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-06973dee99ae37d5e21ddb9a155fc1cf_720w.jpg?source=54b3c3a5\" data-rawwidth=\"2048\" data-rawheight=\"1536\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-ac4d862d14fb928cacc14b16e07e530f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"2048\" data-original=\"https://pic4.zhimg.com/v2-06973dee99ae37d5e21ddb9a155fc1cf_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='2048'%20height='1536'&gt;&lt;/svg&gt;\" data-rawwidth=\"2048\" data-rawheight=\"1536\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-ac4d862d14fb928cacc14b16e07e530f_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"2048\" data-original=\"https://pic4.zhimg.com/v2-06973dee99ae37d5e21ddb9a155fc1cf_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-06973dee99ae37d5e21ddb9a155fc1cf_720w.jpg?source=54b3c3a5\"><figcaption>该函数形状鬼畜陡峭，一般的算法很难收敛到最优点</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-6582c8a75411a45bd80799198e2c0920_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1234\" data-rawheight=\"1989\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-705020c0cee9c27e2a51564a8432f082_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1234\" data-original=\"https://pic2.zhimg.com/v2-6582c8a75411a45bd80799198e2c0920_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1234'%20height='1989'&gt;&lt;/svg&gt;\" data-rawwidth=\"1234\" data-rawheight=\"1989\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-705020c0cee9c27e2a51564a8432f082_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1234\" data-original=\"https://pic2.zhimg.com/v2-6582c8a75411a45bd80799198e2c0920_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-6582c8a75411a45bd80799198e2c0920_720w.jpg?source=54b3c3a5\"><figcaption>比较共轭梯度法的预处理效果</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic3.zhimg.com/50/v2-a4f369f27707993790074443dfa31b21_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1163\" data-rawheight=\"1907\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c0280a615614863962112b65e19b9ca0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1163\" data-original=\"https://pic2.zhimg.com/v2-a4f369f27707993790074443dfa31b21_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1163'%20height='1907'&gt;&lt;/svg&gt;\" data-rawwidth=\"1163\" data-rawheight=\"1907\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-c0280a615614863962112b65e19b9ca0_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1163\" data-original=\"https://pic2.zhimg.com/v2-a4f369f27707993790074443dfa31b21_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic3.zhimg.com/50/v2-a4f369f27707993790074443dfa31b21_720w.jpg?source=54b3c3a5\"><figcaption>比较不同数据集下两个聚类算法的效果</figcaption></figure><figure data-size=\"normal\"><noscript><img src=\"https://pic4.zhimg.com/50/v2-c3c705ca6e957668c959eb9e3c211e28_720w.jpg?source=54b3c3a5\" data-rawwidth=\"1208\" data-rawheight=\"2040\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f5f8d0ab63688cba1cacb13670055f41_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1208\" data-original=\"https://pic1.zhimg.com/v2-c3c705ca6e957668c959eb9e3c211e28_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1208'%20height='2040'&gt;&lt;/svg&gt;\" data-rawwidth=\"1208\" data-rawheight=\"2040\" data-size=\"normal\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-f5f8d0ab63688cba1cacb13670055f41_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1208\" data-original=\"https://pic1.zhimg.com/v2-c3c705ca6e957668c959eb9e3c211e28_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic4.zhimg.com/50/v2-c3c705ca6e957668c959eb9e3c211e28_720w.jpg?source=54b3c3a5\"><figcaption>k-mean 日常被吊打</figcaption></figure><p><br></p><hr><p>PS：知乎压图压得颜色都变了，服气 </p>", "请问自学 Python 有必要买课程吗？": "<p>有了免费好用的入门资源，自学Python其实没有那么难。给大家推荐一个口碑不错的学习资源：</p><p>有位名叫骆昊 (jackfrued) 的资深程序员，为大家规划了一条从“<b>从新手到大师</b>”的百天之路。</p><p>从全方位熟悉语言，到Python的进阶用法，再到天南地北的实战攻略：只要沿着这条路走下去，就都会遇到的。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-91837daf6667d3302199c2fb7387e094_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"508\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-87d3b0a97c15a4ae437320704d0ad225_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-91837daf6667d3302199c2fb7387e094_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='508'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"508\" data-default-watermark-src=\"https://pic2.zhimg.com/50/v2-87d3b0a97c15a4ae437320704d0ad225_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-91837daf6667d3302199c2fb7387e094_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-91837daf6667d3302199c2fb7387e094_720w.jpg?source=54b3c3a5\"></figure><p>这个项目已经在GitHub摘下<b>7700星</b>。</p><p>骆先生还在日程表的上方，温柔地鼓励了大家：</p><blockquote>Python是一个“优雅”、“明确”、“简单”的编程语言。<br>学习曲线低，非专业人士也能上手。</blockquote><p>你一定也想知道，这100天都会经历些什么。</p><h2><b>开始是萌新</b></h2><p>最初的15天，都是<b>Python语言基础</b>的修炼。基本功很重要，每日内容也很丰满：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"381\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='600'%20height='381'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"381\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-76d4a688ecc67f5255c6c9af136d8a52_720w.gif?source=54b3c3a5\"></figure><p>第一天，按照教程的步骤，搭好编程环境，充实的生活就可以展开了。</p><p>第二天是<b>语言元素</b>，第三天<b>分支结构</b>，第四天<b>循环结构</b>。比如，打开循环结构这一小节，会看到这类结构的用途讲解，各种语句的有毒基础用法，以及小练习：</p><blockquote>while循环<br></blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-4fbcb83552a634cd678e4a1c3d32b7be_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"770\" data-rawheight=\"1024\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-108b58e0c23dae2f0d222559006a633c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"770\" data-original=\"https://pic4.zhimg.com/v2-4fbcb83552a634cd678e4a1c3d32b7be_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='770'%20height='1024'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"770\" data-rawheight=\"1024\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-108b58e0c23dae2f0d222559006a633c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"770\" data-original=\"https://pic4.zhimg.com/v2-4fbcb83552a634cd678e4a1c3d32b7be_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-4fbcb83552a634cd678e4a1c3d32b7be_720w.jpg?source=54b3c3a5\"></figure><p><br><b>△</b>智商余额不足</p><p>第五天，就是初步总结和小测的日子了。看上去，测试题还很生动：</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-c4bfeb13eb6e31f343ef3e2fbb033914_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"215\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-0c8d1cd5951d3b4e2c8c18d1e231caa1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-c4bfeb13eb6e31f343ef3e2fbb033914_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1080'%20height='215'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"215\" data-default-watermark-src=\"https://pic3.zhimg.com/50/v2-0c8d1cd5951d3b4e2c8c18d1e231caa1_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-c4bfeb13eb6e31f343ef3e2fbb033914_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-c4bfeb13eb6e31f343ef3e2fbb033914_720w.jpg?source=54b3c3a5\"></figure><p>后面的10天，大致是这样：</p><blockquote>第六天：函数和模块的使用<br>第七天：字符串和常用数据结构<br>第八天：面向对象编程基础<br>第九天：面向对象进阶<br>第十天：图形用户界面和游戏开发<br>第十一天：文件和异常<br>第十二天：字符串和正则表达式<br>第十三天：进程和线程<br>第十四天A：网络编程入门<br>第十四天B：网络应用开发<br>第十五天：图像和文档处理</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-45d5ffa62ffb9ea8cf9014d85d405a1f_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"285\" data-rawheight=\"249\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-45d5ffa62ffb9ea8cf9014d85d405a1f_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"285\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='285'%20height='249'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"285\" data-rawheight=\"249\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-45d5ffa62ffb9ea8cf9014d85d405a1f_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"285\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-45d5ffa62ffb9ea8cf9014d85d405a1f_720w.gif?source=54b3c3a5\"></figure><p>其中，第十章是真·游戏课，会讲到“炮弹打中了飞机”“箱子摔在了地面上”这样的<b>碰撞</b>该怎么写，还要写个“<b>大球吃小球</b>”的游戏。</p><p>节奏这样欢快，这样治愈，你就不会放弃了吧。</p><p>至少，过了这15天，就不是个纯纯的萌新了。</p><h2><b>进阶与实践</b></h2><p>基础打好之后，第16-20天，是<b>Python语言进阶</b>修炼。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-932e2026bcc7057baf22863d95fbaed5_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"396\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-d26fb664fb06d9bb6765ca4fb398587c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"654\" data-original=\"https://pic1.zhimg.com/v2-932e2026bcc7057baf22863d95fbaed5_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='654'%20height='396'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"396\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-d26fb664fb06d9bb6765ca4fb398587c_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"654\" data-original=\"https://pic1.zhimg.com/v2-932e2026bcc7057baf22863d95fbaed5_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-932e2026bcc7057baf22863d95fbaed5_720w.jpg?source=54b3c3a5\"></figure><p>你会把前面15天的修炼成果升级一波：用上不同的数据结构、算法，熟悉各种高级的操作。</p><p>这5天里，依然有许多有趣又经典的例子，比如在讲<b>贪心算法</b>的时候：</p><blockquote>假设小偷有一个背包，最多能装20公斤赃物，他闯入一户人家，发现如下表所示的物品。显然，他不能把所有物品都装进背包，所以必须确定拿走哪些物品，留下哪些物品。</blockquote><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-cba79c08b9b29a5b54f76d4b35488582_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"548\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0f34c424cd5b8b3f502800ac6acc1fd6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"654\" data-original=\"https://pic4.zhimg.com/v2-cba79c08b9b29a5b54f76d4b35488582_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='654'%20height='548'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"654\" data-rawheight=\"548\" data-default-watermark-src=\"https://pic1.zhimg.com/50/v2-0f34c424cd5b8b3f502800ac6acc1fd6_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"654\" data-original=\"https://pic4.zhimg.com/v2-cba79c08b9b29a5b54f76d4b35488582_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-cba79c08b9b29a5b54f76d4b35488582_720w.jpg?source=54b3c3a5\"></figure><p>当然，游戏还是不能少，本章有纸牌游戏可以写着玩。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic2.zhimg.com/50/v2-0998d7e78527e676fe6e4827496da869_720w.gif?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"169\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-0998d7e78527e676fe6e4827496da869_720w.jpg?source=54b3c3a5\" class=\"content_image\" width=\"300\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='300'%20height='169'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"169\" data-thumbnail=\"https://pic2.zhimg.com/50/v2-0998d7e78527e676fe6e4827496da869_720w.jpg?source=54b3c3a5\" class=\"content_image lazy\" width=\"300\" data-actualsrc=\"https://pic2.zhimg.com/50/v2-0998d7e78527e676fe6e4827496da869_720w.gif?source=54b3c3a5\"></figure><p>完成前20天的任务，你就是个小有经验的Python程序猿了。</p><p>再经过20天的姿势补充，就变得更加丰盈：</p><blockquote>第21-30天：Web前端入门<br>第31-35天：玩转Linux操作系统<br>第36-40天：数据库基础和进阶</blockquote><p>这时，可以走出家门，去广阔的天地里实践了：</p><blockquote>第41-55天：Django实战<br>第55-65天：Flask实战<br>第66-75天：爬虫开发<br>第76-90天：<b>数据处理和机器学习</b><br>第90-100天：团队项目开发</blockquote><p>你可能已经发现了，“数据处理和机器学习”是最持久的一章，<b>历时15天</b>。</p><figure data-size=\"normal\"><noscript><img src=\"https://pic1.zhimg.com/50/v2-b3ae73c4aaa6c62ea332161d00e17cc7_720w.jpg?source=54b3c3a5\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"674\" data-rawheight=\"1408\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-f291fb073fa549c3d54c3845e2f4e3ef_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb\" width=\"674\" data-original=\"https://pic1.zhimg.com/v2-b3ae73c4aaa6c62ea332161d00e17cc7_720w.jpg?source=54b3c3a5\"></noscript><img src=\"data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='674'%20height='1408'&gt;&lt;/svg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"674\" data-rawheight=\"1408\" data-default-watermark-src=\"https://pic4.zhimg.com/50/v2-f291fb073fa549c3d54c3845e2f4e3ef_720w.jpg?source=54b3c3a5\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"674\" data-original=\"https://pic1.zhimg.com/v2-b3ae73c4aaa6c62ea332161d00e17cc7_720w.jpg?source=54b3c3a5\" data-actualsrc=\"https://pic1.zhimg.com/50/v2-b3ae73c4aaa6c62ea332161d00e17cc7_720w.jpg?source=54b3c3a5\"></figure><p>从各类Python库的用法，到决策树、贝叶斯分类、支持向量机这些常用方法，再到机器学习实战，这个章节都覆盖了。</p><p>美中不足，这章的教程似乎还没有更新完全。不过，但前面的75天，已经可以尽情探索了。</p><p>就算你已经不是纯纯的萌新，还是可以找到自己需要的章节，定点修炼。</p><p>那么，快开始吧：</p><p>项目传送门：<br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/jackfrued/Python-100-Days\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/jackfrued/Py</span><span class=\"invisible\">thon-100-Days</span><span class=\"ellipsis\"></span></a></p><p>— <b>完</b> —</p><p>量子位 · QbitAI</p><p>վ'ᴗ' ի 追踪AI技术和产品新动态</p><p>戳右上角「+关注」获取最新资讯↗↗</p><p>如果喜欢，请分享or点赞吧~比心❤</p>"}